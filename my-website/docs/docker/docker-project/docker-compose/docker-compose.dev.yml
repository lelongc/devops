version: '3.8'

services:
  # Frontend Development
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      target: builder
    environment:
      - NODE_ENV=development
      - API_URL=http://localhost:8080
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - dev-network
    command: npm run dev

  # Backend Development
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://appuser:dev123@postgres:5432/myapp
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - ../env/.env.development
    ports:
      - "8080:8080"
    volumes:
      - ../backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - dev-network
    command: flask run --host=0.0.0.0 --port=8080 --debug

  # Database Development
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=myapp
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=dev123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ../database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - dev-network

  # Redis Development
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - dev-network

  # Database Admin Tool
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - dev-network

  # Redis Admin Tool
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - dev-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  dev-network:
    driver: bridge

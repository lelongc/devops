{"config":{"lang":["vi"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to DraDoc","text":"<p>c\u00e1c file li\u00ean quan devops ,aws t\u00f9m lum , ch\u1ee9a c\u00e1c file ch\u1ee7 y\u1ebfu do copilot t\u1ea1o ra theo roadmap ph\u00eda d\u01b0\u1edbi  m\u1ee5c \u0111\u00edch \u0111\u1ec3 b\u1ea3n th\u00e2n h\u1ecdc , m\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 tham kh\u1ea3o  https://roadmap.sh/r/devsecops-88a05https://roadmap.sh/r/devsecops-88a05   ## L\u01b0u \u00fd t\u00ean t\u1ea3i extension office viewer ho\u1eb7c v\u00f4 web \u0111\u1ec3 xem theo m\u1ee5c l\u1ee5c \u0111\u1ecbnh d\u1ea1ng md cho \u0111\u1eb9p m\u1eaft , v\u00ec file r\u1ea5t d\u00e0i </p>"},{"location":"docker/roadmap/","title":"Docker Mastery Roadmap - L\u1ed9 tr\u00ecnh Master Docker \u0111i l\u00e0m","text":""},{"location":"docker/roadmap/#muc-tieu","title":"\ud83c\udfaf M\u1ee5c ti\u00eau","text":"<p>Tr\u1edf th\u00e0nh Docker expert trong 6-12 th\u00e1ng v\u1edbi k\u1ef9 n\u0103ng th\u1ef1c t\u1ebf \u0111\u1ec3 \u0111i l\u00e0m</p>"},{"location":"docker/roadmap/#giai-oan-1-foundation-thang-1-2","title":"\ud83d\udcda Giai \u0111o\u1ea1n 1: Foundation (Th\u00e1ng 1-2)","text":""},{"location":"docker/roadmap/#week-1-2-docker-basics","title":"Week 1-2: Docker Basics","text":"<ul> <li>[ ] Hi\u1ec3u Container vs Virtual Machine</li> <li>[ ] C\u00e0i \u0111\u1eb7t Docker Desktop/Engine</li> <li>[ ] Docker architecture (Client-Server)</li> <li>[ ] Basic commands: <code>run</code>, <code>ps</code>, <code>images</code>, <code>pull</code>, <code>stop</code></li> <li>[ ] Project: Ch\u1ea1y first container (nginx, mysql)</li> </ul>"},{"location":"docker/roadmap/#week-3-4-images-containers-deep-dive","title":"Week 3-4: Images &amp; Containers Deep Dive","text":"<ul> <li>[ ] Dockerfile fundamentals</li> <li>[ ] Image layers v\u00e0 caching</li> <li>[ ] Container lifecycle</li> <li>[ ] Port mapping v\u00e0 networking basics</li> <li>[ ] Volume basics</li> <li>[ ] Project: Build custom web app image</li> </ul>"},{"location":"docker/roadmap/#week-5-6-dockerfile-best-practices","title":"Week 5-6: Dockerfile Best Practices","text":"<ul> <li>[ ] Multi-stage builds</li> <li>[ ] Optimize image size</li> <li>[ ] Security best practices</li> <li>[ ] .dockerignore</li> <li>[ ] Project: Optimize existing app Dockerfile</li> </ul>"},{"location":"docker/roadmap/#week-7-8-docker-compose","title":"Week 7-8: Docker Compose","text":"<ul> <li>[ ] YAML syntax</li> <li>[ ] Multi-container applications</li> <li>[ ] Environment variables</li> <li>[ ] Networks trong Compose</li> <li>[ ] Project: Full-stack app (Frontend + Backend + Database)</li> </ul>"},{"location":"docker/roadmap/#giai-oan-2-intermediate-thang-3-4","title":"\ud83d\udd27 Giai \u0111o\u1ea1n 2: Intermediate (Th\u00e1ng 3-4)","text":""},{"location":"docker/roadmap/#week-9-10-networking","title":"Week 9-10: Networking","text":"<ul> <li>[ ] Bridge, Host, None networks</li> <li>[ ] Custom networks</li> <li>[ ] Container communication</li> <li>[ ] Load balancing basics</li> <li>[ ] Project: Microservices v\u1edbi custom network</li> </ul>"},{"location":"docker/roadmap/#week-11-12-storage-volumes","title":"Week 11-12: Storage &amp; Volumes","text":"<ul> <li>[ ] Bind mounts vs Volumes vs tmpfs</li> <li>[ ] Volume drivers</li> <li>[ ] Backup v\u00e0 restore data</li> <li>[ ] Project: Persistent database setup</li> </ul>"},{"location":"docker/roadmap/#week-13-14-docker-registry","title":"Week 13-14: Docker Registry","text":"<ul> <li>[ ] Docker Hub</li> <li>[ ] Private registry setup</li> <li>[ ] Image tagging strategies</li> <li>[ ] Security scanning</li> <li>[ ] Project: Setup private registry</li> </ul>"},{"location":"docker/roadmap/#week-15-16-development-workflow","title":"Week 15-16: Development Workflow","text":"<ul> <li>[ ] Docker for development</li> <li>[ ] Live reload setup</li> <li>[ ] Debugging containers</li> <li>[ ] IDE integration</li> <li>[ ] Project: Complete dev environment</li> </ul>"},{"location":"docker/roadmap/#giai-oan-3-advanced-thang-5-6","title":"\ud83d\ude80 Giai \u0111o\u1ea1n 3: Advanced (Th\u00e1ng 5-6)","text":""},{"location":"docker/roadmap/#week-17-18-production-deployment","title":"Week 17-18: Production Deployment","text":"<ul> <li>[ ] Docker Swarm basics</li> <li>[ ] Services v\u00e0 stacks</li> <li>[ ] Rolling updates</li> <li>[ ] Health checks</li> <li>[ ] Project: Deploy production app with Swarm</li> </ul>"},{"location":"docker/roadmap/#week-19-20-kubernetes-integration","title":"Week 19-20: Kubernetes Integration","text":"<ul> <li>[ ] Docker vs Kubernetes</li> <li>[ ] Pod concepts</li> <li>[ ] Deployments v\u00e0 Services</li> <li>[ ] Project: Migrate Docker Compose to K8s</li> </ul>"},{"location":"docker/roadmap/#week-21-22-security","title":"Week 21-22: Security","text":"<ul> <li>[ ] Container security best practices</li> <li>[ ] Image vulnerability scanning</li> <li>[ ] Runtime security</li> <li>[ ] Secrets management</li> <li>[ ] Project: Secure production deployment</li> </ul>"},{"location":"docker/roadmap/#week-23-24-monitoring-logging","title":"Week 23-24: Monitoring &amp; Logging","text":"<ul> <li>[ ] Container logs</li> <li>[ ] Monitoring tools (Prometheus, Grafana)</li> <li>[ ] Log aggregation</li> <li>[ ] Project: Complete monitoring stack</li> </ul>"},{"location":"docker/roadmap/#giai-oan-4-professional-skills-thang-7-8","title":"\ud83d\udcbc Giai \u0111o\u1ea1n 4: Professional Skills (Th\u00e1ng 7-8)","text":""},{"location":"docker/roadmap/#week-25-26-cicd-integration","title":"Week 25-26: CI/CD Integration","text":"<ul> <li>[ ] Docker trong CI/CD pipeline</li> <li>[ ] GitHub Actions v\u1edbi Docker</li> <li>[ ] Jenkins integration</li> <li>[ ] Automated testing</li> <li>[ ] Project: Complete CI/CD pipeline</li> </ul>"},{"location":"docker/roadmap/#week-27-28-cloud-platforms","title":"Week 27-28: Cloud Platforms","text":"<ul> <li>[ ] AWS ECS/EKS</li> <li>[ ] Azure Container Instances</li> <li>[ ] Google Cloud Run</li> <li>[ ] Project: Deploy tr\u00ean cloud platform</li> </ul>"},{"location":"docker/roadmap/#week-29-30-performance-optimization","title":"Week 29-30: Performance Optimization","text":"<ul> <li>[ ] Resource limits</li> <li>[ ] Performance monitoring</li> <li>[ ] Troubleshooting containers</li> <li>[ ] Project: Optimize production workload</li> </ul>"},{"location":"docker/roadmap/#week-31-32-enterprise-patterns","title":"Week 31-32: Enterprise Patterns","text":"<ul> <li>[ ] Microservices patterns</li> <li>[ ] Service mesh basics</li> <li>[ ] API Gateway integration</li> <li>[ ] Project: Enterprise microservices setup</li> </ul>"},{"location":"docker/roadmap/#giai-oan-5-mastery-thang-9-12","title":"\ud83c\udfc6 Giai \u0111o\u1ea1n 5: Mastery (Th\u00e1ng 9-12)","text":""},{"location":"docker/roadmap/#advanced-topics","title":"Advanced Topics","text":"<ul> <li>[ ] Custom Docker plugins</li> <li>[ ] Container runtime (containerd, CRI-O)</li> <li>[ ] Advanced networking (CNI)</li> <li>[ ] Multi-architecture builds</li> <li>[ ] GitOps v\u1edbi Docker</li> </ul>"},{"location":"docker/roadmap/#real-world-projects","title":"Real-world Projects","text":"<ol> <li>E-commerce Platform: Full microservices v\u1edbi Docker</li> <li>CI/CD Pipeline: Complete automation</li> <li>Monitoring Stack: Production-ready monitoring</li> <li>Multi-cloud Deployment: Cross-platform deployment</li> </ol>"},{"location":"docker/roadmap/#ky-nang-can-thiet-cho-i-lam","title":"\ud83d\udccb K\u1ef9 n\u0103ng c\u1ea7n thi\u1ebft cho \u0111i l\u00e0m","text":""},{"location":"docker/roadmap/#must-have-skills","title":"Must-have Skills","text":"<ul> <li>[ ] Docker fundamentals</li> <li>[ ] Dockerfile optimization</li> <li>[ ] Docker Compose</li> <li>[ ] Basic networking</li> <li>[ ] CI/CD integration</li> <li>[ ] Troubleshooting</li> <li>[ ] Security basics</li> </ul>"},{"location":"docker/roadmap/#nice-to-have-skills","title":"Nice-to-have Skills","text":"<ul> <li>[ ] Kubernetes</li> <li>[ ] Cloud platforms</li> <li>[ ] Monitoring tools</li> <li>[ ] Infrastructure as Code</li> <li>[ ] GitOps</li> </ul>"},{"location":"docker/roadmap/#certifications","title":"\ud83c\udf93 Certifications","text":""},{"location":"docker/roadmap/#recommended-order","title":"Recommended Order","text":"<ol> <li>Docker Certified Associate (DCA) - After month 4</li> <li>Kubernetes certifications - After month 8</li> <li>Cloud platform certifications - After month 10</li> </ol>"},{"location":"docker/roadmap/#resources","title":"\ud83d\udcda Resources","text":""},{"location":"docker/roadmap/#books","title":"Books","text":"<ul> <li>\"Docker Deep Dive\" - Nigel Poulton</li> <li>\"Docker in Action\" - Jeff Nickoloff</li> <li>\"Kubernetes in Action\" - Marko Luk\u0161a</li> </ul>"},{"location":"docker/roadmap/#online-courses","title":"Online Courses","text":"<ul> <li>Docker Mastery (Udemy) - Bret Fisher</li> <li>Kubernetes for Developers (Pluralsight)</li> <li>AWS/Azure Container courses</li> </ul>"},{"location":"docker/roadmap/#practice-platforms","title":"Practice Platforms","text":"<ul> <li>Play with Docker</li> <li>Katacoda Docker scenarios</li> <li>GitHub Codespaces</li> </ul>"},{"location":"docker/roadmap/#tips-for-success","title":"\ud83d\udca1 Tips for Success","text":""},{"location":"docker/roadmap/#daily-practice-30-60-mins","title":"Daily Practice (30-60 mins)","text":"<ul> <li>Hands-on lab exercises</li> <li>Read documentation</li> <li>Follow Docker blog</li> <li>Join communities (Reddit, Discord)</li> </ul>"},{"location":"docker/roadmap/#weekly-goals","title":"Weekly Goals","text":"<ul> <li>Complete 1-2 projects</li> <li>Write blog posts v\u1ec1 learning</li> <li>Contribute to open source</li> </ul>"},{"location":"docker/roadmap/#monthly-review","title":"Monthly Review","text":"<ul> <li>Assess progress</li> <li>Update resume</li> <li>Practice interview questions</li> <li>Build portfolio projects</li> </ul>"},{"location":"docker/roadmap/#job-ready-checklist","title":"\ud83c\udfaf Job-Ready Checklist","text":""},{"location":"docker/roadmap/#technical-skills","title":"Technical Skills","text":"<ul> <li>[ ] Can containerize any application</li> <li>[ ] Optimize Docker images &lt; 100MB</li> <li>[ ] Setup production-ready Compose files</li> <li>[ ] Implement CI/CD with Docker</li> <li>[ ] Debug container issues</li> <li>[ ] Implement security best practices</li> </ul>"},{"location":"docker/roadmap/#portfolio-projects","title":"Portfolio Projects","text":"<ul> <li>[ ] 3-5 diverse Docker projects</li> <li>[ ] GitHub with good documentation</li> <li>[ ] Live demos available</li> <li>[ ] Blog posts v\u1ec1 technical solutions</li> </ul>"},{"location":"docker/roadmap/#interview-preparation","title":"Interview Preparation","text":"<ul> <li>[ ] Docker architecture questions</li> <li>[ ] Hands-on technical tests</li> <li>[ ] Scenario-based problem solving</li> <li>[ ] Best practices discussions</li> </ul>"},{"location":"docker/roadmap/#timeline-summary","title":"\ud83d\udcc5 Timeline Summary","text":"Month Focus Key Deliverables 1-2 Foundation Basic containerization skills 3-4 Intermediate Production-ready skills 5-6 Advanced Enterprise deployment 7-8 Professional CI/CD &amp; Cloud integration 9-12 Mastery Leadership &amp; architecture"},{"location":"docker/roadmap/#next-steps","title":"\ud83d\ude80 Next Steps","text":"<ol> <li>Start v\u1edbi Week 1 exercises</li> <li>Setup learning environment</li> <li>Join Docker community</li> <li>Begin first project</li> <li>Track progress weekly</li> </ol> <p>Remember: Consistency beats intensity. 30 minutes daily practice &gt; 3 hours weekly cramming!</p>"},{"location":"k8s/roadmap/","title":"Roadmap","text":"<p>https://github.com/kodekloudhub/certified-kubernetes-administrator-course</p>"},{"location":"k8s/01.core/01.cluster-architecture/","title":"01.cluster architecture","text":""},{"location":"k8s/01.core/01.cluster-architecture/#kien-truc-kubernetes-qua-phep-so-sanh-tau-thuyen","title":"Ki\u1ebfn tr\u00fac Kubernetes qua ph\u00e9p so s\u00e1nh T\u00e0u Thuy\u1ec1n","text":"<p>M\u1ee5c \u0111\u00edch c\u1ee7a Kubernetes l\u00e0 t\u1ef1 \u0111\u1ed9ng h\u00f3a vi\u1ec7c tri\u1ec3n khai v\u00e0 qu\u1ea3n l\u00fd c\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n d\u01b0\u1edbi d\u1ea1ng container. H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng b\u1ea1n \u0111ang qu\u1ea3n l\u00fd m\u1ed9t h\u1ea1m \u0111\u1ed9i t\u00e0u bi\u1ec3n kh\u1ed5ng l\u1ed3:</p> <ul> <li>T\u00e0u H\u00e0ng (Cargo Ships) \ud83d\udea2: \u0110\u00e2y l\u00e0 nh\u1eefng con t\u00e0u l\u00e0m c\u00f4ng vi\u1ec7c th\u1ef1c t\u1ebf - chuy\u00ean ch\u1edf c\u00e1c container (\u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n). Trong Kubernetes, ch\u00fang ch\u00ednh l\u00e0 c\u00e1c Worker Node.</li> <li>T\u00e0u Ch\u1ec9 Huy (Control Ships) \u0110\u00e2y l\u00e0 nh\u1eefng con t\u00e0u \u0111\u1ea7u n\u00e3o, kh\u00f4ng ch\u1edf h\u00e0ng m\u00e0 l\u00e0m nhi\u1ec7m v\u1ee5 qu\u1ea3n l\u00fd, gi\u00e1m s\u00e1t, v\u00e0 \u0111i\u1ec1u ph\u1ed1i to\u00e0n b\u1ed9 h\u1ea1m \u0111\u1ed9i t\u00e0u h\u00e0ng. Trong Kubernetes, \u0111\u00e2y ch\u00ednh l\u00e0 Master Node.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#mot-cum-kubernetes-kubernetes-cluster-bao-gom-mot-hoac-nhieu-master-node-va-nhieu-worker-node","title":"M\u1ed9t c\u1ee5m Kubernetes (Kubernetes cluster) bao g\u1ed3m m\u1ed9t ho\u1eb7c nhi\u1ec1u Master Node v\u00e0 nhi\u1ec1u Worker Node.","text":""},{"location":"k8s/01.core/01.cluster-architecture/#ben-trong-tau-chi-huy-master-node-control-plane","title":"B\u00ean trong \"T\u00e0u Ch\u1ec9 Huy\" (Master Node Control Plane)","text":"<p>Master Node l\u00e0 b\u1ed9 n\u00e3o c\u1ee7a c\u1ea3 c\u1ee5m, n\u00f3 \u0111i\u1ec1u h\u00e0nh m\u1ecdi th\u1ee9 th\u00f4ng qua m\u1ed9t b\u1ed9 c\u00e1c th\u00e0nh ph\u1ea7n g\u1ecdi l\u00e0 Control Plane.</p>"},{"location":"k8s/01.core/01.cluster-architecture/#etcd-kho-du-lieu-cua-ham-oi","title":"<code>etcd</code> - Kho D\u1eef li\u1ec7u c\u1ee7a H\u1ea1m \u0111\u1ed9i","text":"<ul> <li>So s\u00e1nh: Gi\u1ed1ng nh\u01b0 cu\u1ed1n s\u1ed5 nh\u1eadt k\u00fd kh\u1ed5ng l\u1ed3 c\u1ee7a h\u1ea1m \u0111\u1ed9i, l\u01b0u tr\u1eef m\u1ecdi th\u00f4ng tin: c\u00f3 bao nhi\u00eau con t\u00e0u, t\u00e0u n\u00e0o \u0111ang ch\u1edf container g\u00ec, container \u0111\u01b0\u1ee3c x\u1ebfp l\u00ean l\u00fac n\u00e0o, v.v.</li> <li>Th\u1ef1c t\u1ebf: <code>etcd</code> l\u00e0 m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u d\u1ea1ng key-value c\u00f3 t\u00ednh s\u1eb5n s\u00e0ng cao (highly available). N\u00f3 l\u01b0u tr\u1eef to\u00e0n b\u1ed9 tr\u1ea1ng th\u00e1i v\u00e0 c\u1ea5u h\u00ecnh c\u1ee7a c\u1ee5m Kubernetes. M\u1ecdi th\u00f4ng tin v\u1ec1 nodes, pods (containers), services,... \u0111\u1ec1u n\u1eb1m trong <code>etcd</code>.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-scheduler-nguoi-ieu-phoi-xep-do","title":"<code>kube-scheduler</code> - Ng\u01b0\u1eddi \u0110i\u1ec1u Ph\u1ed1i X\u1ebfp D\u1ee1","text":"<ul> <li>So s\u00e1nh: Gi\u1ed1ng nh\u01b0 nh\u1eefng chi\u1ebfc c\u1ea7n c\u1ea9u th\u00f4ng minh \u1edf b\u1ebfn c\u1ea3ng. Khi c\u00f3 m\u1ed9t container c\u1ea7n x\u1ebfp l\u00ean t\u00e0u, c\u1ea7n c\u1ea9u s\u1ebd x\u00e1c \u0111\u1ecbnh con t\u00e0u n\u00e0o l\u00e0 ph\u00f9 h\u1ee3p nh\u1ea5t d\u1ef1a tr\u00ean k\u00edch th\u01b0\u1edbc, s\u1ee9c ch\u1ee9a c\u00f2n l\u1ea1i, lo\u1ea1i h\u00e0ng \u0111\u01b0\u1ee3c ph\u00e9p ch\u1edf, v.v.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-scheduler</code> c\u00f3 nhi\u1ec7m v\u1ee5 t\u00ecm m\u1ed9t Worker Node ph\u00f9 h\u1ee3p nh\u1ea5t \u0111\u1ec3 ch\u1ea1y m\u1ed9t Pod (m\u1ed9t ho\u1eb7c nhi\u1ec1u container) m\u1edbi \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u. N\u00f3 xem x\u00e9t c\u00e1c y\u1ebfu t\u1ed1 nh\u01b0 t\u00e0i nguy\u00ean y\u00eau c\u1ea7u c\u1ee7a Pod (CPU, memory) v\u00e0 t\u00e0i nguy\u00ean c\u00f2n tr\u1ed1ng c\u1ee7a c\u00e1c Node.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-controller-manager-ban-quan-ly-cac-phong-ban","title":"<code>kube-controller-manager</code> - Ban Qu\u1ea3n l\u00fd c\u00e1c Ph\u00f2ng ban","text":"<ul> <li>So s\u00e1nh: T\u00e0u ch\u1ec9 huy c\u00f3 nhi\u1ec1u ph\u00f2ng ban chuy\u00ean tr\u00e1ch: ph\u00f2ng \u0111i\u1ec1u h\u00e0nh lo vi\u1ec7c v\u1eadn t\u1ea3i, ph\u00f2ng h\u00e0ng h\u00f3a lo c\u00e1c container, ph\u00f2ng IT lo vi\u1ec7c li\u00ean l\u1ea1c.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-controller-manager</code> qu\u1ea3n l\u00fd nhi\u1ec1u \"b\u1ed9 \u0111i\u1ec1u khi\u1ec3n\" (controllers) kh\u00e1c nhau, m\u1ed7i controller l\u00e0 m\u1ed9t v\u00f2ng l\u1eb7p theo d\u00f5i tr\u1ea1ng th\u00e1i c\u1ee7a c\u1ee5m v\u00e0 c\u1ed1 g\u1eafng \u0111\u01b0a n\u00f3 v\u1ec1 tr\u1ea1ng th\u00e1i mong mu\u1ed1n.</li> <li>Node Controller: Ch\u0103m s\u00f3c c\u00e1c Node. N\u00f3 ch\u1ecbu tr\u00e1ch nhi\u1ec7m khi m\u1ed9t Node m\u1edbi tham gia v\u00e0o c\u1ee5m, ho\u1eb7c khi m\u1ed9t Node \"ch\u1ebft\" ho\u1eb7c kh\u00f4ng th\u1ec3 truy c\u1eadp.</li> <li>Replication Controller: \u0110\u1ea3m b\u1ea3o s\u1ed1 l\u01b0\u1ee3ng b\u1ea3n sao (replicas) c\u1ee7a m\u1ed9t \u1ee9ng d\u1ee5ng lu\u00f4n \u0111\u00fang nh\u01b0 b\u1ea1n \u0111\u00e3 khai b\u00e1o.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-api-server-tong-ai-giao-tiep-trung-tam","title":"<code>kube-api-server</code> - \"T\u1ed5ng \u0110\u00e0i\" Giao ti\u1ebfp Trung t\u00e2m","text":"<ul> <li>So s\u00e1nh: \u0110\u00e2y l\u00e0 trung t\u00e2m ch\u1ec9 huy, n\u01a1i t\u1ea5t c\u1ea3 c\u00e1c ph\u00f2ng ban, c\u00e1c t\u00e0u h\u00e0ng, v\u00e0 c\u1ea3 ng\u01b0\u1eddi qu\u1ea3n l\u00fd t\u1eeb b\u00ean ngo\u00e0i li\u00ean l\u1ea1c v\u1edbi nhau. M\u1ecdi m\u1ec7nh l\u1ec7nh \u0111\u1ec1u \u0111i qua \u0111\u00e2y.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-api-server</code> l\u00e0 th\u00e0nh ph\u1ea7n trung t\u00e2m v\u00e0 quan tr\u1ecdng nh\u1ea5t. N\u00f3 ph\u01a1i b\u00e0y ra Kubernetes API. M\u1ecdi t\u01b0\u01a1ng t\u00e1c v\u1edbi c\u1ee5m Kubernetes \u0111\u1ec1u ph\u1ea3i th\u00f4ng qua API Server.</li> <li>Ng\u01b0\u1eddi d\u00f9ng (d\u00f9ng <code>kubectl</code>), c\u00e1c controller, v\u00e0 c\u1ea3 c\u00e1c worker node \u0111\u1ec1u n\u00f3i chuy\u1ec7n v\u1edbi nhau th\u00f4ng qua <code>kube-api-server</code>.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#tren-tau-hang-worker-node","title":"Tr\u00ean \"T\u00e0u H\u00e0ng\" (Worker Node)","text":"<p>\u0110\u00e2y l\u00e0 n\u01a1i c\u00e1c container \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\u1ef1c s\u1ef1 ch\u1ea1y. M\u1ed7i Worker Node c\u0169ng c\u00f3 c\u00e1c th\u00e0nh ph\u1ea7n quan tr\u1ecdng ri\u00eang.</p>"},{"location":"k8s/01.core/01.cluster-architecture/#container-runtime-engine-vi-du-docker-ong-co-chay-container","title":"Container Runtime Engine (v\u00ed d\u1ee5: Docker) - \u0110\u1ed9ng c\u01a1 Ch\u1ea1y Container","text":"<ul> <li>So s\u00e1nh: \u0110\u1ec3 ch\u1edf \u0111\u01b0\u1ee3c container, con t\u00e0u ph\u1ea3i \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 t\u01b0\u01a1ng th\u00edch v\u1edbi container.</li> <li>Th\u1ef1c t\u1ebf: \u0110\u00e2y l\u00e0 ph\u1ea7n m\u1ec1m ch\u1ecbu tr\u00e1ch nhi\u1ec7m ch\u1ea1y c\u00e1c container. Docker l\u00e0 m\u1ed9t l\u1ef1a ch\u1ecdn ph\u1ed5 bi\u1ebfn, nh\u01b0ng Kubernetes c\u0169ng h\u1ed7 tr\u1ee3 c\u00e1c runtime kh\u00e1c nh\u01b0 ContainerD, Rocket (rkt). N\u00f3 ph\u1ea3i \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c node trong c\u1ee5m.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kubelet-thuyen-truong-cua-tau-hang","title":"<code>kubelet</code> - Thuy\u1ec1n tr\u01b0\u1edfng c\u1ee7a T\u00e0u H\u00e0ng","text":"<ul> <li>So s\u00e1nh: M\u1ed7i t\u00e0u h\u00e0ng c\u00f3 m\u1ed9t thuy\u1ec1n tr\u01b0\u1edfng, ch\u1ecbu tr\u00e1ch nhi\u1ec7m qu\u1ea3n l\u00fd m\u1ecdi ho\u1ea1t \u0111\u1ed9ng tr\u00ean t\u00e0u m\u00ecnh. Thuy\u1ec1n tr\u01b0\u1edfng nh\u1eadn l\u1ec7nh t\u1eeb t\u00e0u ch\u1ec9 huy, x\u1ebfp d\u1ee1 container theo y\u00eau c\u1ea7u, v\u00e0 b\u00e1o c\u00e1o t\u00ecnh tr\u1ea1ng c\u1ee7a t\u00e0u v\u00e0 h\u00e0ng h\u00f3a v\u1ec1 trung t\u00e2m.</li> <li>Th\u1ef1c t\u1ebf: <code>kubelet</code> l\u00e0 m\u1ed9t agent ch\u1ea1y tr\u00ean m\u1ed7i Worker Node. N\u00f3 l\u1eafng nghe ch\u1ec9 th\u1ecb t\u1eeb <code>kube-api-server</code> v\u00e0 \u0111\u1ea3m b\u1ea3o r\u1eb1ng c\u00e1c container \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 trong c\u00e1c Pod \u0111ang ch\u1ea1y v\u00e0 kh\u1ecfe m\u1ea1nh tr\u00ean node c\u1ee7a n\u00f3. N\u00f3 c\u0169ng g\u1eedi b\u00e1o c\u00e1o tr\u1ea1ng th\u00e1i c\u1ee7a node v\u00e0 c\u00e1c container v\u1ec1 cho Master Node.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-proxy-nguoi-dan-loi-mang","title":"<code>kube-proxy</code> - Ng\u01b0\u1eddi D\u1eabn L\u1ed1i M\u1ea1ng","text":"<ul> <li>So s\u00e1nh: C\u00e1c \u1ee9ng d\u1ee5ng tr\u00ean c\u00e1c t\u00e0u h\u00e0ng kh\u00e1c nhau c\u1ea7n n\u00f3i chuy\u1ec7n \u0111\u01b0\u1ee3c v\u1edbi nhau (v\u00ed d\u1ee5: web server tr\u00ean t\u00e0u A c\u1ea7n g\u1ecdi \u0111\u1ebfn database tr\u00ean t\u00e0u B). <code>kube-proxy</code> t\u1ea1o ra c\u00e1c tuy\u1ebfn \u0111\u01b0\u1eddng li\u00ean l\u1ea1c \u0111\u00f3.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-proxy</code> l\u00e0 m\u1ed9t network proxy ch\u1ea1y tr\u00ean m\u1ed7i node. N\u00f3 duy tr\u00ec c\u00e1c quy t\u1eafc m\u1ea1ng (network rules) tr\u00ean c\u00e1c node, cho ph\u00e9p giao ti\u1ebfp m\u1ea1ng \u0111\u1ebfn c\u00e1c Pod t\u1eeb b\u00ean trong ho\u1eb7c b\u00ean ngo\u00e0i c\u1ee5m. N\u00f3 l\u00e0 th\u00e0nh ph\u1ea7n ch\u00ednh gi\u00fap th\u1ef1c hi\u1ec7n c\u01a1 ch\u1ebf Service Discovery trong Kubernetes.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#tom-tat-kien-truc","title":"T\u00f3m t\u1eaft Ki\u1ebfn tr\u00fac","text":"<ul> <li>Master Node (Control Plane):</li> <li><code>etcd</code> (L\u01b0u tr\u1eef tr\u1ea1ng th\u00e1i)</li> <li><code>kube-scheduler</code> (Ch\u1ecdn Node cho Pod)</li> <li><code>kube-controller-manager</code> (Qu\u1ea3n l\u00fd c\u00e1c controller)</li> <li><code>kube-api-server</code> (C\u1ed5ng giao ti\u1ebfp ch\u00ednh)</li> <li>Worker Node:</li> <li><code>kubelet</code> (Agent qu\u1ea3n l\u00fd container tr\u00ean Node)</li> <li><code>kube-proxy</code> (Qu\u1ea3n l\u00fd m\u1ea1ng cho Node)</li> <li><code>Container Runtime</code> (Ph\u1ea7n m\u1ec1m ch\u1ea1y container)</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#chot-ha-cho-ky-thi","title":"\"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li>N\u1eafm v\u1eefng s\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa Master Node v\u00e0 Worker Node.</li> <li>Hi\u1ec3u r\u00f5 vai tr\u00f2 v\u00e0 tr\u00e1ch nhi\u1ec7m c\u1ee7a t\u1eebng th\u00e0nh ph\u1ea7n c\u1ed1t l\u00f5i: <code>etcd</code>, <code>api-server</code>, <code>scheduler</code>, <code>controller-manager</code>, <code>kubelet</code>, <code>kube-proxy</code>.</li> <li>H\u00e3y nh\u1edb r\u1eb1ng m\u1ecdi giao ti\u1ebfp \u0111\u1ec1u \u0111i qua <code>kube-api-server</code>.</li> <li><code>kubelet</code> l\u00e0 \"tay ch\u00e2n\" c\u1ee7a Master tr\u00ean m\u1ed7i Worker Node.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/","title":"02 03.docker containerd","text":""},{"location":"k8s/01.core/02-03.docker-containerd/#1-cau-chuyen-lich-su-docker-kubernetes-va-su-ra-oi-cua-cri","title":"1. C\u00e2u chuy\u1ec7n L\u1ecbch s\u1eed: Docker, Kubernetes v\u00e0 s\u1ef1 ra \u0111\u1eddi c\u1ee7a CRI","text":"<ul> <li>Thu\u1edf s\u01a1 khai: Docker l\u00e0 \"vua\" c\u1ee7a th\u1ebf gi\u1edbi container. Kubernetes ban \u0111\u1ea7u \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng \u0111\u1ec3 d\u00e0n d\u1ef1ng (orchestrate) chuy\u00ean bi\u1ec7t cho Docker. L\u00fac n\u00e0y, ch\u00fang \"d\u00ednh li\u1ec1n\" v\u1edbi nhau.</li> <li>S\u1ef1 tr\u1ed7i d\u1eady: Kubernetes ng\u00e0y c\u00e0ng ph\u1ed5 bi\u1ebfn, v\u00e0 c\u00e1c container runtime kh\u00e1c (nh\u01b0 <code>rkt</code>) c\u0169ng mu\u1ed1n \u0111\u01b0\u1ee3c Kubernetes h\u1ed7 tr\u1ee3. C\u1ed9ng \u0111\u1ed3ng c\u1ea7n Kubernetes ph\u1ea3i l\u00e0m vi\u1ec7c \u0111\u01b0\u1ee3c v\u1edbi nhi\u1ec1u runtime ch\u1ee9 kh\u00f4ng ch\u1ec9 ri\u00eang Docker.</li> <li> <p>Gi\u1ea3i ph\u00e1p: CRI (Container Runtime Interface): Kubernetes gi\u1edbi thi\u1ec7u CRI - m\u1ed9t giao di\u1ec7n chu\u1ea9n. B\u1ea5t k\u1ef3 container runtime n\u00e0o tu\u00e2n th\u1ee7 ti\u00eau chu\u1ea9n OCI (Open Container Initiative) \u0111\u1ec1u c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c v\u1edbi Kubernetes th\u00f4ng qua CRI.</p> </li> <li> <p>OCI \u0111\u1ecbnh ngh\u0129a ti\u00eau chu\u1ea9n v\u1ec1 c\u00e1ch build m\u1ed9t image (<code>imagespec</code>) v\u00e0 c\u00e1ch m\u1ed9t runtime ho\u1ea1t \u0111\u1ed9ng (<code>runtimespec</code>).</p> </li> <li> <p>V\u1ea5n \u0111\u1ec1 c\u1ee7a Docker: Docker ra \u0111\u1eddi tr\u01b0\u1edbc khi c\u00f3 CRI, n\u00ean n\u00f3 kh\u00f4ng t\u01b0\u01a1ng th\u00edch tr\u1ef1c ti\u1ebfp v\u1edbi chu\u1ea9n n\u00e0y.</p> </li> <li>Mi\u1ebfng v\u00e1 \"t\u1ea1m b\u1ee3\": <code>dockershim</code>: V\u00ec Docker qu\u00e1 ph\u1ed5 bi\u1ebfn, Kubernetes \u0111\u00e3 t\u1ea1o ra m\u1ed9t \"mi\u1ebfng v\u00e1\" t\u00ean l\u00e0 <code>dockershim</code>. \u0110\u00e2y l\u00e0 m\u1ed9t c\u1ea7u n\u1ed1i t\u1ea1m th\u1eddi \u0111\u1ec3 Kubernetes c\u00f3 th\u1ec3 ti\u1ebfp t\u1ee5c h\u1ed7 tr\u1ee3 Docker engine.</li> <li>Cu\u1ed9c chia ly \u0111\u1ecbnh m\u1ec7nh (Kubernetes v1.24): Vi\u1ec7c duy tr\u00ec <code>dockershim</code> ng\u00e0y c\u00e0ng tr\u1edf th\u00e0nh g\u00e1nh n\u1eb7ng. Do \u0111\u00f3, t\u1eeb phi\u00ean b\u1ea3n 1.24, Kubernetes \u0111\u00e3 lo\u1ea1i b\u1ecf ho\u00e0n to\u00e0n <code>dockershim</code>, \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c ch\u1ea5m d\u1ee9t h\u1ed7 tr\u1ee3 tr\u1ef1c ti\u1ebfp Docker engine nh\u01b0 m\u1ed9t container runtime.</li> </ul> <p>L\u01b0u \u00fd c\u1ef1c k\u1ef3 quan tr\u1ecdng: C\u00e1c Docker image m\u00e0 b\u1ea1n \u0111\u00e3 build v\u1eabn ho\u1ea1t \u0111\u1ed9ng b\u00ecnh th\u01b0\u1eddng! V\u00ec Docker build image theo chu\u1ea9n OCI <code>imagespec</code>, n\u00ean c\u00e1c runtime t\u01b0\u01a1ng th\u00edch CRI kh\u00e1c (nh\u01b0 Containerd) v\u1eabn c\u00f3 th\u1ec3 ch\u1ea1y ch\u00fang ngon l\u00e0nh. Ch\u1ec9 c\u00f3 Docker engine l\u00e0 kh\u00f4ng c\u00f2n \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 tr\u1ef1c ti\u1ebfp n\u1eefa th\u00f4i.</p>"},{"location":"k8s/01.core/02-03.docker-containerd/#2-hieu-ve-containerd-trai-tim-cua-docker","title":"2. Hi\u1ec3u v\u1ec1 Containerd - \"Tr\u00e1i tim\" c\u1ee7a Docker","text":"<ul> <li>Docker kh\u00f4ng ch\u1ec9 l\u00e0 m\u1ed9t runtime. N\u00f3 l\u00e0 m\u1ed9t b\u1ed9 c\u00f4ng c\u1ee5 bao g\u1ed3m Docker CLI, API, build tools,... v\u00e0 b\u00ean trong n\u00f3 ch\u00ednh l\u00e0 Containerd - th\u00e0nh ph\u1ea7n c\u1ed1t l\u00f5i ch\u1ecbu tr\u00e1ch nhi\u1ec7m ch\u1ea1y container.</li> <li>Containerd v\u1ed1n d\u0129 \u0111\u00e3 t\u01b0\u01a1ng th\u00edch v\u1edbi CRI. Hi\u1ec7n nay, n\u00f3 \u0111\u00e3 l\u00e0 m\u1ed9t d\u1ef1 \u00e1n \u0111\u1ed9c l\u1eadp, t\u1ed1t nghi\u1ec7p t\u1ea1i CNCF. B\u1ea1n c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t v\u00e0 s\u1eed d\u1ee5ng ri\u00eang Containerd m\u00e0 kh\u00f4ng c\u1ea7n c\u00e0i c\u1ea3 b\u1ed9 Docker engine.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#3-dung-cu-trong-ky-nguyen-moi-ctr-vs-nerdctl-vs-crictl","title":"3. \"D\u1ee5ng c\u1ee5\" trong K\u1ef7 nguy\u00ean m\u1edbi: <code>ctr</code> vs. <code>nerdctl</code> vs. <code>crictl</code>","text":"<p>Khi kh\u00f4ng c\u00f2n <code>docker</code> tr\u00ean c\u00e1c node Kubernetes, ch\u00fang ta s\u1ebd d\u00f9ng g\u00ec \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi container? \u0110\u00e2y l\u00e0 3 c\u00f4ng c\u1ee5 b\u1ea1n c\u1ea7n ph\u00e2n bi\u1ec7t:</p>"},{"location":"k8s/01.core/02-03.docker-containerd/#ctr","title":"<code>ctr</code>","text":"<ul> <li>Ngu\u1ed3n g\u1ed1c: \u0110i k\u00e8m khi b\u1ea1n c\u00e0i \u0111\u1eb7t Containerd.</li> <li>M\u1ee5c \u0111\u00edch: Ch\u1ec9 d\u00f9ng \u0111\u1ec3 debug Containerd. N\u00f3 c\u00f3 r\u1ea5t \u00edt t\u00ednh n\u0103ng v\u00e0 kh\u00f4ng th\u00e2n thi\u1ec7n v\u1edbi ng\u01b0\u1eddi d\u00f9ng.</li> <li>K\u1ebft lu\u1eadn: Trong th\u1ef1c t\u1ebf, b\u1ea1n g\u1ea7n nh\u01b0 s\u1ebd kh\u00f4ng d\u00f9ng \u0111\u1ebfn n\u00f3. C\u00f3 th\u1ec3 b\u1ecf qua.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#nerdctl-nerd-control","title":"<code>nerdctl</code> (Nerd Control)","text":"<ul> <li>Ngu\u1ed3n g\u1ed1c: T\u1eeb c\u1ed9ng \u0111\u1ed3ng Containerd.</li> <li>M\u1ee5c \u0111\u00edch: L\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 d\u00f2ng l\u1ec7nh gi\u1ed1ng h\u1ec7t Docker (Docker-like CLI) d\u00e0nh ri\u00eang cho Containerd. D\u00f9ng cho m\u1ee5c \u0111\u00edch ph\u1ed5 th\u00f4ng (general purpose).</li> <li>\u0110i\u1ec3m m\u1ea1nh: C\u00fa ph\u00e1p g\u1ea7n nh\u01b0 y h\u1ec7t <code>docker</code>. B\u1ea1n ch\u1ec9 c\u1ea7n thay <code>docker</code> b\u1eb1ng <code>nerdctl</code>. V\u00ed d\u1ee5: <code>nerdctl run</code>, <code>nerdctl ps</code>, <code>nerdctl images</code>. N\u00f3 c\u00f2n h\u1ed7 tr\u1ee3 c\u00e1c t\u00ednh n\u0103ng m\u1edbi h\u01a1n c\u1ee7a Containerd m\u00e0 Docker ch\u01b0a c\u00f3.</li> <li>K\u1ebft lu\u1eadn: \u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 b\u1ea1n n\u00ean d\u00f9ng n\u1ebfu mu\u1ed1n c\u00f3 tr\u1ea3i nghi\u1ec7m t\u01b0\u01a1ng t\u1ef1 Docker \u0111\u1ec3 qu\u1ea3n l\u00fd container khi ch\u1ec9 c\u00f3 Containerd.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#crictl-cri-control","title":"<code>crictl</code> (CRI Control)","text":"<ul> <li>Ngu\u1ed3n g\u1ed1c: T\u1eeb c\u1ed9ng \u0111\u1ed3ng Kubernetes.</li> <li>M\u1ee5c \u0111\u00edch: L\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 d\u00f2ng l\u1ec7nh \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u00e0 debug B\u1ea4T K\u1ef2 CRI-compatible runtime n\u00e0o (kh\u00f4ng ch\u1ec9 ri\u00eang Containerd). \u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 nh\u00ecn t\u1eeb \"g\u00f3c \u0111\u1ed9 c\u1ee7a Kubernetes\".</li> <li>\u0110i\u1ec3m m\u1ea1nh:</li> <li>Ho\u1ea1t \u0111\u1ed9ng tr\u00ean nhi\u1ec1u runtime kh\u00e1c nhau.</li> <li>C\u00fa ph\u00e1p c\u0169ng r\u1ea5t gi\u1ed1ng <code>docker</code> cho c\u00e1c l\u1ec7nh c\u01a1 b\u1ea3n (<code>ps</code>, <code>logs</code>, <code>exec</code>, <code>images</code>...).</li> <li>N\u00f3 \"hi\u1ec3u\" v\u1ec1 Pod (<code>crictl pods</code>), \u0111i\u1ec1u m\u00e0 Docker kh\u00f4ng c\u00f3.</li> <li>S\u1eed d\u1ee5ng:</li> <li>\u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 thay th\u1ebf cho <code>docker</code> khi b\u1ea1n c\u1ea7n troubleshoot container tr\u00ean m\u1ed9t Kubernetes node. V\u00ed d\u1ee5, ng\u00e0y x\u01b0a b\u1ea1n <code>ssh</code> v\u00e0o worker node v\u00e0 g\u00f5 <code>docker ps</code>, th\u00ec b\u00e2y gi\u1edd b\u1ea1n s\u1ebd g\u00f5 <code>crictl ps</code>.</li> <li>L\u01b0u \u00fd: <code>crictl</code> ch\u1ee7 y\u1ebfu d\u00f9ng \u0111\u1ec3 debug. B\u1ea1n kh\u00f4ng n\u00ean d\u00f9ng n\u00f3 \u0111\u1ec3 t\u1ea1o container th\u1ee7 c\u00f4ng, v\u00ec <code>kubelet</code> s\u1ebd kh\u00f4ng bi\u1ebft v\u1ec1 container \u0111\u00f3 v\u00e0 c\u00f3 th\u1ec3 s\u1ebd x\u00f3a n\u00f3 \u0111i.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#4-bang-so-sanh-nhanh","title":"4. B\u1ea3ng so s\u00e1nh \"Nhanh\"","text":"C\u00f4ng c\u1ee5 M\u1ee5c \u0111\u00edch C\u1ed9ng \u0111\u1ed3ng Ph\u1ea1m vi <code>ctr</code> Debugging Containerd Ch\u1ec9 Containerd <code>nerdctl</code> Ph\u1ed5 th\u00f4ng (Gi\u1ed1ng Docker) Containerd Ch\u1ec9 Containerd <code>crictl</code> Debugging (Tr\u00ean K8s node) Kubernetes M\u1ecdi CRI-compatible runtime"},{"location":"k8s/01.core/02-03.docker-containerd/#5-chot-ha-cho-ky-thi","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li>Hi\u1ec3u r\u00f5 qu\u00e1 tr\u00ecnh Kubernetes chuy\u1ec3n t\u1eeb ph\u1ee5 thu\u1ed9c <code>dockershim</code> sang th\u1ebf gi\u1edbi CRI thu\u1ea7n t\u00fay.</li> <li>Khi n\u00e0o d\u00f9ng g\u00ec?</li> <li><code>nerdctl</code>: D\u00f9ng khi b\u1ea1n mu\u1ed1n c\u00f3 m\u1ed9t tr\u1ea3i nghi\u1ec7m gi\u1ed1ng Docker \u0111\u1ec3 qu\u1ea3n l\u00fd container n\u00f3i chung v\u1edbi Containerd.</li> <li><code>crictl</code>: D\u00f9ng khi b\u1ea1n \u0111ang \u1edf tr\u00ean m\u1ed9t node Kubernetes v\u00e0 c\u1ea7n troubleshoot/debug c\u00e1c container v\u00e0 pod. \u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 ch\u1ea9n \u0111o\u00e1n ch\u00ednh c\u1ee7a b\u1ea1n tr\u00ean K8s node ng\u00e0y nay.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#docker-bi-khai-tu-trong-kubernetes-hieu-sao-cho-ung","title":"\"Docker b\u1ecb khai t\u1eed\" trong Kubernetes - Hi\u1ec3u sao cho \u0111\u00fang? \ud83e\udd14","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t \u0111i\u1ec3m g\u00e2y nhi\u1ec1u nh\u1ea7m l\u1eabn. \"Khai t\u1eed\" \u1edf \u0111\u00e2y kh\u00f4ng c\u00f3 ngh\u0129a l\u00e0 Docker \u0111\u00e3 \"ch\u1ebft\" ho\u00e0n to\u00e0n. N\u00f3 ch\u1ec9 c\u00f3 ngh\u0129a l\u00e0 \u0111\u00e3 c\u00f3 m\u1ed9t s\u1ef1 thay \u0111\u1ed5i l\u1edbn trong c\u00e1ch Kubernetes l\u00e0m vi\u1ec7c v\u1edbi container runtime.</p>"},{"location":"k8s/01.core/02-03.docker-containerd/#1-tom-tat-lai-cuoc-chia-ly","title":"1. T\u00f3m t\u1eaft l\u1ea1i \"Cu\u1ed9c chia ly\"","text":"<ul> <li> <p>Docker kh\u00f4ng ch\u1ec9 l\u00e0 m\u1ed9t runtime: B\u1ea1n c\u1ea7n nh\u1edb r\u1eb1ng, Docker l\u00e0 m\u1ed9t b\u1ed9 c\u00f4ng c\u1ee5 ho\u00e0n ch\u1ec9nh, bao g\u1ed3m:</p> </li> <li> <p>Docker CLI (d\u00f2ng l\u1ec7nh <code>docker</code>)</p> </li> <li>API</li> <li>C\u00f4ng c\u1ee5 build image</li> <li>Qu\u1ea3n l\u00fd volumes, networking, auth...</li> <li> <p>V\u00e0 quan tr\u1ecdng nh\u1ea5t, b\u00ean trong n\u00f3 ch\u1ee9a th\u00e0nh ph\u1ea7n runtime c\u1ed1t l\u00f5i l\u00e0 <code>Containerd</code>.</p> </li> <li> <p><code>Containerd</code> m\u1edbi l\u00e0 th\u1ee9 Kubernetes c\u1ea7n:</p> </li> <li> <p><code>Containerd</code> l\u00e0 ph\u1ea7n ch\u1ecbu tr\u00e1ch nhi\u1ec7m th\u1ef1c thi v\u00e0 qu\u1ea3n l\u00fd v\u00f2ng \u0111\u1eddi c\u1ee7a container.</p> </li> <li>N\u00f3 ho\u00e0n to\u00e0n t\u01b0\u01a1ng th\u00edch v\u1edbi CRI (Container Runtime Interface) - ti\u00eau chu\u1ea9n m\u00e0 Kubernetes d\u00f9ng \u0111\u1ec3 giao ti\u1ebfp v\u1edbi c\u00e1c container runtime.</li> <li> <p>Do \u0111\u00f3, Kubernetes c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c tr\u1ef1c ti\u1ebfp v\u1edbi <code>Containerd</code> (ho\u1eb7c c\u00e1c CRI-compatible runtime kh\u00e1c).</p> </li> <li> <p>V\u1eady t\u1ea1i sao Kubernetes kh\u00f4ng c\u1ea7n Docker Engine n\u1eefa?</p> </li> <li> <p>Kubernetes \u0111\u00e3 c\u00f3 c\u01a1 ch\u1ebf ri\u00eang \u0111\u1ec3 qu\u1ea3n l\u00fd m\u1ea1ng, volumes, v\u00e0 c\u00e1c t\u00e1c v\u1ee5 kh\u00e1c. N\u00f3 kh\u00f4ng c\u1ea7n \u0111\u1ebfn c\u00e1c c\u00f4ng c\u1ee5 ph\u1ee5 tr\u1ee3 \u0111i k\u00e8m trong b\u1ed9 Docker Engine.</p> </li> <li>Kubernetes ch\u1ec9 c\u1ea7n m\u1ed9t th\u1ee9 duy nh\u1ea5t t\u1eeb b\u1ed9 Docker: th\u00e0nh ph\u1ea7n runtime. V\u00e0 v\u00ec n\u00f3 c\u00f3 th\u1ec3 n\u00f3i chuy\u1ec7n tr\u1ef1c ti\u1ebfp v\u1edbi <code>Containerd</code>, vi\u1ec7c ph\u1ea3i \u0111i qua c\u1ea3 m\u1ed9t Docker Engine c\u1ed3ng k\u1ec1nh tr\u1edf n\u00ean kh\u00f4ng c\u1ea7n thi\u1ebft v\u00e0 ph\u1ee9c t\u1ea1p (ph\u1ea3i th\u00f4ng qua <code>dockershim</code>).</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#2-vay-docker-chet-that-hay-khong","title":"2. V\u1eady Docker \"ch\u1ebft\" th\u1eadt hay kh\u00f4ng? \ud83d\udc7b","text":"<p>C\u00e2u tr\u1ea3 l\u1eddi d\u1ee9t kho\u00e1t l\u00e0: KH\u00d4NG! \ud83d\udeab</p> <ul> <li>Docker v\u1eabn l\u00e0 c\u00f4ng c\u1ee5 container ph\u1ed5 bi\u1ebfn nh\u1ea5t v\u00e0 \u0111\u01b0\u1ee3c h\u00e0ng tri\u1ec7u l\u1eadp tr\u00ecnh vi\u00ean s\u1eed d\u1ee5ng h\u00e0ng ng\u00e0y cho vi\u1ec7c ph\u00e1t tri\u1ec3n c\u1ee5c b\u1ed9 (local development) v\u00e0 build image.</li> <li>S\u1ef1 thay \u0111\u1ed5i n\u00e0y ch\u1ec9 c\u00f3 ngh\u0129a l\u00e0: Kubernetes kh\u00f4ng c\u00f2n y\u00eau c\u1ea7u Docker Engine l\u00e0m container runtime cho n\u00f3 n\u1eefa.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#3-ap-dung-trong-khoa-hoc-nay-va-thuc-te","title":"3. \u00c1p d\u1ee5ng trong kh\u00f3a h\u1ecdc n\u00e0y v\u00e0 th\u1ef1c t\u1ebf","text":"<ul> <li>Trong c\u00e1c b\u00e0i h\u1ecdc, vi\u1ec7c ti\u1ebfp t\u1ee5c d\u00f9ng Docker l\u00e0m v\u00ed d\u1ee5 \u0111\u1ec3 gi\u1ea3ng d\u1ea1y c\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n v\u1ec1 container l\u00e0 ho\u00e0n to\u00e0n \u1ed5n. N\u00f3 gi\u00fap ch\u00fang ta hi\u1ec3u c\u00e1ch container ho\u1ea1t \u0111\u1ed9ng tr\u01b0\u1edbc khi \u0111i v\u00e0o th\u1ebf gi\u1edbi d\u00e0n d\u1ef1ng ph\u1ee9c t\u1ea1p c\u1ee7a Kubernetes.</li> <li>M\u1eb9o th\u1ef1c h\u00e0nh: N\u1ebfu m\u00e1y b\u1ea1n kh\u00f4ng c\u00e0i Docker m\u00e0 ch\u1ec9 c\u00e0i <code>Containerd</code> ri\u00eang l\u1ebb, b\u1ea1n v\u1eabn c\u00f3 th\u1ec3 l\u00e0m theo h\u1ea7u h\u1ebft c\u00e1c v\u00ed d\u1ee5 b\u1eb1ng c\u00e1ch thay th\u1ebf l\u1ec7nh <code>docker</code> b\u1eb1ng l\u1ec7nh <code>nerdctl</code>.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#chot-ha-cho-ky-thi","title":"\"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li>\"Docker deprecation\" c\u00f3 ngh\u0129a l\u00e0 Kubernetes \u0111\u00e3 lo\u1ea1i b\u1ecf h\u1ed7 tr\u1ee3 cho Docker Engine nh\u01b0 m\u1ed9t runtime, kh\u00f4ng ph\u1ea3i l\u00e0 khai t\u1eed Docker n\u00f3i chung.</li> <li>Docker images b\u1ea1n build v\u1eabn ho\u1ea1t \u0111\u1ed9ng 100% tr\u00ean Kubernetes v\u00ec ch\u00fang tu\u00e2n theo chu\u1ea9n OCI.</li> <li>K\u1ef9 n\u0103ng l\u00e0m vi\u1ec7c v\u1edbi Docker (build image, ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng trong container) v\u1eabn c\u1ef1c k\u1ef3 quan tr\u1ecdng v\u00e0 c\u1ea7n thi\u1ebft.</li> <li>Trong m\u00f4i tr\u01b0\u1eddng Kubernetes hi\u1ec7n \u0111\u1ea1i, runtime \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng tr\u1ef1c ti\u1ebfp l\u00e0 m\u1ed9t runtime t\u01b0\u01a1ng th\u00edch CRI, ph\u1ed5 bi\u1ebfn nh\u1ea5t ch\u00ednh l\u00e0 <code>Containerd</code>.</li> </ul>"}]}
{"config":{"lang":["vi"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to DraDoc","text":""},{"location":"#welcome-to-dradoc","title":"Welcome to DraDoc","text":"<p>c\u00e1c file li\u00ean quan devops ,aws t\u00f9m lum , ch\u1ee9a c\u00e1c file ch\u1ee7 y\u1ebfu do copilot t\u1ea1o ra theo roadmap ph\u00eda d\u01b0\u1edbi  m\u1ee5c \u0111\u00edch \u0111\u1ec3 b\u1ea3n th\u00e2n h\u1ecdc , m\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 tham kh\u1ea3o  https://roadmap.sh/r/devsecops-88a05https://roadmap.sh/r/devsecops-88a05</p>"},{"location":"#neu-xem-bang-github-o-may-ca-nhan-luu-y-ten-tai-extension-office-viewer-hoac-vo-web-e-xem-theo-muc-luc-inh-dang-md-cho-ep-mat-vi-file-rat-dai","title":"n\u1ebfu xem b\u1eb1ng github \u1edf m\u00e1y c\u00e1 nh\u00e2n  L\u01b0u \u00fd t\u00ean t\u1ea3i extension office viewer ho\u1eb7c v\u00f4 web \u0111\u1ec3 xem theo m\u1ee5c l\u1ee5c \u0111\u1ecbnh d\u1ea1ng md cho \u0111\u1eb9p m\u1eaft , v\u00ec file r\u1ea5t d\u00e0i","text":""},{"location":"Programming/DSA/","title":"Index","text":"<p>d\u1ecbch l\u00fd thuy\u1ebft t\u1eeb kho\u00e1 h\u1ecdc c\u1ee7a neetcode , d\u00f9ng AI d\u1ecbch  c\u0169ng nh\u01b0 250 b\u00e0i tr\u00ean web  c\u1ee7a a \u1ea5y https://neetcode.io/practice code th\u00ec h\u00e3y \u0111\u1ecdc gi\u1ea3i c\u1ee7a a \u1ea5y ho\u1eb7c \u0111\u1ecdc gi\u1ea3i th\u00edch c\u1ee7a AI tr\u00ean web m\u00ecnh </p> <p>kh\u00f3a basic https://youtube.com/playlist?list=PLf0_6o9Vop0zx5igN8ipjgf_24CjncFrI&amp;si=CgVDR-kzT7GrYt7g kh\u00f3a advanced  https://youtube.com/playlist?list=PLf0_6o9Vop0we5VzVCJKurCvQy3HW2e4G&amp;si=DuYSaSSkqFRKSjGL</p>"},{"location":"Programming/DSA/Basic/00.RAM/","title":"Gi\u1ea3i th\u00edch chi ti\u1ebft v\u1ec1 DSA: T\u1ed5ng quan v\u1ec1 C\u1ea5u tr\u00fac D\u1eef li\u1ec7u v\u00e0 M\u1ea3ng","text":""},{"location":"Programming/DSA/Basic/00.RAM/#giai-thich-chi-tiet-ve-dsa-tong-quan-ve-cau-truc-du-lieu-va-mang","title":"Gi\u1ea3i th\u00edch chi ti\u1ebft v\u1ec1 DSA: T\u1ed5ng quan v\u1ec1 C\u1ea5u tr\u00fac D\u1eef li\u1ec7u v\u00e0 M\u1ea3ng","text":""},{"location":"Programming/DSA/Basic/00.RAM/#1-cau-truc-du-lieu-la-gi","title":"1. C\u1ea5u tr\u00fac d\u1eef li\u1ec7u l\u00e0 g\u00ec?","text":"<p>Trong khoa h\u1ecdc m\u00e1y t\u00ednh, c\u1ea5u tr\u00fac d\u1eef li\u1ec7u (Data Structure - DSA) l\u00e0 c\u00e1ch t\u1ed5 ch\u1ee9c v\u00e0 l\u01b0u tr\u1eef d\u1eef li\u1ec7u \u0111\u1ec3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng hi\u1ec7u qu\u1ea3. N\u00f3i m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n, \u0111\u00f3 l\u00e0 c\u00e1ch m\u00e0 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp, truy xu\u1ea5t v\u00e0 thao t\u00e1c b\u00ean trong m\u00e1y t\u00ednh, c\u1ee5 th\u1ec3 l\u00e0 trong RAM (B\u1ed9 nh\u1edb truy c\u1eadp ng\u1eabu nhi\u00ean).</p>"},{"location":"Programming/DSA/Basic/00.RAM/#11-ram-la-gi","title":"1.1 RAM l\u00e0 g\u00ec?","text":"<ul> <li>RAM l\u00e0 n\u01a1i l\u01b0u tr\u1eef t\u1ea1m th\u1eddi t\u1ea5t c\u1ea3 bi\u1ebfn, d\u1eef li\u1ec7u, v\u00e0 ch\u01b0\u01a1ng tr\u00ecnh \u0111ang ch\u1ea1y.</li> <li>RAM \u0111\u01b0\u1ee3c \u0111o b\u1eb1ng byte (B). M\u00e1y t\u00ednh hi\u1ec7n \u0111\u1ea1i th\u01b0\u1eddng c\u00f3 t\u1eeb v\u00e0i GB (gigabyte) RAM tr\u1edf l\u00ean (1 GB \u2248 1 t\u1ef7 byte).</li> </ul>"},{"location":"Programming/DSA/Basic/00.RAM/#12-bit-byte-va-ia-chi-bo-nho","title":"1.2 Bit, Byte, v\u00e0 \u0110\u1ecba ch\u1ec9 b\u1ed9 nh\u1edb","text":"<ul> <li>1 bit l\u00e0 \u0111\u01a1n v\u1ecb nh\u1ecf nh\u1ea5t, ch\u1ec9 nh\u1eadn gi\u00e1 tr\u1ecb 0 ho\u1eb7c 1.</li> <li>1 byte = 8 bit.</li> <li>RAM l\u00e0 m\u1ed9t d\u00e3y li\u00ean t\u1ee5c c\u00e1c byte. M\u1ed7i byte c\u00f3 m\u1ed9t \u0111\u1ecba ch\u1ec9 duy nh\u1ea5t (address) trong RAM, gi\u00fap m\u00e1y t\u00ednh bi\u1ebft ch\u00ednh x\u00e1c n\u01a1i l\u01b0u tr\u1eef t\u1eebng gi\u00e1 tr\u1ecb.</li> </ul>"},{"location":"Programming/DSA/Basic/00.RAM/#2-mang-array-la-gi","title":"2. M\u1ea3ng (Array) l\u00e0 g\u00ec?","text":""},{"location":"Programming/DSA/Basic/00.RAM/#21-khai-niem","title":"2.1 Kh\u00e1i ni\u1ec7m","text":"<ul> <li>M\u1ea3ng l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u l\u01b0u tr\u1eef nhi\u1ec1u gi\u00e1 tr\u1ecb c\u00f9ng ki\u1ec3u (v\u00ed d\u1ee5: s\u1ed1 nguy\u00ean, k\u00fd t\u1ef1), trong m\u1ed9t kh\u1ed1i b\u1ed9 nh\u1edb li\u00ean t\u1ee5c (contiguous block).</li> <li>V\u00ed d\u1ee5, m\u1ed9t m\u1ea3ng s\u1ed1 nguy\u00ean: <code>[1, 3, 5]</code>.</li> </ul>"},{"location":"Programming/DSA/Basic/00.RAM/#22-cach-mang-uoc-luu-trong-ram","title":"2.2 C\u00e1ch m\u1ea3ng \u0111\u01b0\u1ee3c l\u01b0u trong RAM","text":"<p>Gi\u1ea3 s\u1eed b\u1ea1n c\u00f3 m\u1ea3ng s\u1ed1 nguy\u00ean:</p> <pre><code>[1, 3, 5]\n</code></pre> <ul> <li>M\u1ed7i s\u1ed1 nguy\u00ean (int) th\u01b0\u1eddng chi\u1ebfm 4 byte (32 bit).</li> <li>C\u00e1c gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c l\u01b0u li\u00ean t\u1ee5c trong RAM (v\u00ed d\u1ee5: t\u1ea1i c\u00e1c \u0111\u1ecba ch\u1ec9 0, 4, 8).</li> <li>Kh\u00f4ng c\u00f3 d\u1eef li\u1ec7u n\u00e0o kh\u00e1c n\u1eb1m xen gi\u1eefa c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng.</li> </ul> <p>V\u00ed d\u1ee5 minh h\u1ecda:</p> \u0110\u1ecba ch\u1ec9 (Address) Gi\u00e1 tr\u1ecb (Value) 0 1 4 3 8 5 <p>T\u1ea1i sao l\u1ea1i l\u00e0 0, 4, 8? V\u00ec m\u1ed7i int chi\u1ebfm 4 byte, n\u00ean \u0111\u1ecba ch\u1ec9 t\u0103ng l\u00ean 4 \u0111\u01a1n v\u1ecb sau m\u1ed7i ph\u1ea7n t\u1eed.</p>"},{"location":"Programming/DSA/Basic/00.RAM/#neu-la-mang-ky-tu-char","title":"N\u1ebfu l\u00e0 m\u1ea3ng k\u00fd t\u1ef1 (char):","text":"<ul> <li>M\u1ed9t k\u00fd t\u1ef1 th\u01b0\u1eddng chi\u1ebfm 1 byte.</li> <li>M\u1ea3ng <code>['A', 'B', 'C']</code> s\u1ebd n\u1eb1m \u1edf \u0111\u1ecba ch\u1ec9 0, 1, 2.</li> </ul> \u0110\u1ecba ch\u1ec9 Gi\u00e1 tr\u1ecb 0 'A' 1 'B' 2 'C'"},{"location":"Programming/DSA/Basic/00.RAM/#23-khai-niem-lien-tuc-contiguous","title":"2.3 Kh\u00e1i ni\u1ec7m \"li\u00ean t\u1ee5c\" (Contiguous)","text":"<ul> <li>Li\u00ean t\u1ee5c c\u00f3 ngh\u0129a l\u00e0 c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng n\u1eb1m s\u00e1t nhau tr\u00ean b\u1ed9 nh\u1edb, kh\u00f4ng b\u1ecb ng\u1eaft qu\u00e3ng b\u1edfi d\u1eef li\u1ec7u kh\u00e1c.</li> <li>\u01afu \u0111i\u1ec3m: Truy xu\u1ea5t ph\u1ea7n t\u1eed c\u1ef1c nhanh (O(1)), ch\u1ec9 c\u1ea7n bi\u1ebft v\u1ecb tr\u00ed \u0111\u1ea7u v\u00e0 k\u00edch th\u01b0\u1edbc ph\u1ea7n t\u1eed.</li> </ul>"},{"location":"Programming/DSA/Basic/00.RAM/#24-ia-chi-bo-nho-memory-address","title":"2.4 \u0110\u1ecba ch\u1ec9 b\u1ed9 nh\u1edb (Memory Address)","text":"<ul> <li>M\u1ed7i gi\u00e1 tr\u1ecb trong RAM \u0111\u01b0\u1ee3c l\u01b0u t\u1ea1i m\u1ed9t \u0111\u1ecba ch\u1ec9 c\u1ee5 th\u1ec3.</li> <li>\u0110\u1ecba ch\u1ec9 n\u00e0y l\u00e0 s\u1ed1 nguy\u00ean, b\u1eaft \u0111\u1ea7u t\u1eeb 0, t\u0103ng d\u1ea7n.</li> <li>Truy xu\u1ea5t ph\u1ea7n t\u1eed th\u1ee9 i trong m\u1ea3ng: <code>\u0111\u1ecba_ch\u1ec9_\u0111\u1ea7u + i * k\u00edch_th\u01b0\u1edbc_ph\u1ea7n_t\u1eed</code>.</li> </ul>"},{"location":"Programming/DSA/Basic/00.RAM/#25-ac-iem-cua-mang","title":"2.5 \u0110\u1eb7c \u0111i\u1ec3m c\u1ee7a m\u1ea3ng","text":"<ul> <li>\u01afu \u0111i\u1ec3m:</li> <li>Truy xu\u1ea5t ng\u1eabu nhi\u00ean nhanh (O(1)).</li> <li>\u0110\u01a1n gi\u1ea3n, d\u1ec5 s\u1eed d\u1ee5ng.</li> <li> <p>L\u01b0u tr\u1eef d\u1eef li\u1ec7u c\u00f9ng ki\u1ec3u.</p> </li> <li> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m:</p> </li> <li>K\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh (kh\u00f4ng th\u00eam/x\u00f3a ph\u1ea7n t\u1eed d\u1ec5 d\u00e0ng).</li> <li>Ph\u1ea3i bi\u1ebft tr\u01b0\u1edbc s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed.</li> <li>Vi\u1ec7c ch\u00e8n/x\u00f3a gi\u1eefa m\u1ea3ng t\u1ed1n th\u1eddi gian (O(n)).</li> </ul>"},{"location":"Programming/DSA/Basic/00.RAM/#3-ung-dung-thuc-te-va-vi-du-ma-nguon","title":"3. \u1ee8ng d\u1ee5ng th\u1ef1c t\u1ebf v\u00e0 v\u00ed d\u1ee5 m\u00e3 ngu\u1ed3n","text":""},{"location":"Programming/DSA/Basic/00.RAM/#31-khai-bao-va-truy-xuat-mang-python","title":"3.1 Khai b\u00e1o v\u00e0 truy xu\u1ea5t m\u1ea3ng (Python)","text":"<pre><code>arr = [1, 3, 5]\nprint(arr[0])  # K\u1ebft qu\u1ea3: 1\nprint(arr[2])  # K\u1ebft qu\u1ea3: 5\n</code></pre>"},{"location":"Programming/DSA/Basic/00.RAM/#tong-ket","title":". T\u1ed5ng k\u1ebft","text":"<ul> <li>M\u1ea3ng l\u00e0 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u01a1 b\u1ea3n, l\u01b0u tr\u1eef c\u00e1c ph\u1ea7n t\u1eed c\u00f9ng ki\u1ec3u, li\u00ean t\u1ee5c trong RAM.</li> <li>Hi\u1ec3u c\u00e1ch m\u1ea3ng ho\u1ea1t \u0111\u1ed9ng gi\u00fap ta t\u1ed1i \u01b0u b\u1ed9 nh\u1edb v\u00e0 t\u0103ng hi\u1ec7u qu\u1ea3 ch\u01b0\u01a1ng tr\u00ecnh.</li> <li>C\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p h\u01a1n (Linked List, Stack, Queue, Tree, Hash Table, v.v.) \u0111\u1ec1u x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean nguy\u00ean l\u00fd l\u01b0u tr\u1eef d\u1eef li\u1ec7u trong b\u1ed9 nh\u1edb nh\u01b0 th\u1ebf n\u00e0y.</li> </ul>"},{"location":"Programming/DSA/Basic/01.static-Array/","title":"H\u01b0\u1edbng D\u1eabn Ghi Nh\u1edb L\u00e2u &amp; Hi\u1ec3u S\u00e2u V\u1ec1 \u0110\u1eb7c T\u00ednh M\u1ea3ng (Arrays) + V\u00ed D\u1ee5 Python","text":""},{"location":"Programming/DSA/Basic/01.static-Array/#huong-dan-ghi-nho-lau-hieu-sau-ve-ac-tinh-mang-arrays-vi-du-python","title":"H\u01b0\u1edbng D\u1eabn Ghi Nh\u1edb L\u00e2u &amp; Hi\u1ec3u S\u00e2u V\u1ec1 \u0110\u1eb7c T\u00ednh M\u1ea3ng (Arrays) + V\u00ed D\u1ee5 Python","text":""},{"location":"Programming/DSA/Basic/01.static-Array/#1-tong-ket-nhanh-mang-la-gi","title":"1. T\u1ed5ng K\u1ebft Nhanh: M\u1ea3ng L\u00e0 G\u00ec?","text":"<ul> <li>M\u1ea3ng = d\u00e3y gi\u00e1 tr\u1ecb c\u00f9ng ki\u1ec3u, l\u01b0u li\u1ec1n nhau trong RAM.</li> <li>Ch\u1ec9 s\u1ed1 m\u1ea3ng (Index) lu\u00f4n b\u1eaft \u0111\u1ea7u t\u1eeb 0 (ph\u1ea7n l\u1edbn ng\u00f4n ng\u1eef, k\u1ec3 c\u1ea3 Python).</li> </ul>"},{"location":"Programming/DSA/Basic/01.static-Array/#2-cac-ac-tinh-can-nho-va-cach-nho-lau","title":"2. C\u00e1c \u0110\u1eb7c T\u00ednh C\u1ea7n Nh\u1edb (v\u00e0 C\u00e1ch Nh\u1edb L\u00e2u)","text":""},{"location":"Programming/DSA/Basic/01.static-Array/#21-truy-xuat-oc-phan-tu-bat-ky-o1","title":"2.1. Truy xu\u1ea5t (\u0110\u1ecdc) ph\u1ea7n t\u1eed b\u1ea5t k\u1ef3: O(1)","text":"<ul> <li>\u00dd ngh\u0129a: B\u1ea1n mu\u1ed1n l\u1ea5y ph\u1ea7n t\u1eed th\u1ee9 i, ch\u1ec9 c\u1ea7n truy c\u1eadp <code>array[i]</code> l\u00e0 xong, kh\u00f4ng c\u1ea7n duy\u1ec7t t\u1eeb \u0111\u1ea7u \u0111\u1ebfn \u0111\u00f3.</li> <li>C\u00e1ch nh\u1edb: </li> <li>RAM: Random Access Memory \u2192 Truy c\u1eadp b\u1ea5t k\u1ef3 ch\u1ed7 n\u00e0o c\u0169ng NHANH nh\u01b0 nhau.</li> <li>T\u01b0\u1edfng t\u01b0\u1ee3ng: M\u1ea3ng nh\u01b0 d\u00e3y ng\u0103n k\u00e9o, bi\u1ebft s\u1ed1 ng\u0103n l\u00e0 m\u1edf ngay \u0111\u01b0\u1ee3c!</li> <li>V\u00ed d\u1ee5 Python: <pre><code>arr = [10, 20, 30, 40]\nprint(arr[0]) # 10\nprint(arr[2]) # 30\n</code></pre></li> </ul>"},{"location":"Programming/DSA/Basic/01.static-Array/#22-ghi-e-overwrite-phan-tu-o1","title":"2.2. Ghi \u0111\u00e8 (Overwrite) ph\u1ea7n t\u1eed: O(1)","text":"<ul> <li>\u00dd ngh\u0129a: G\u1eafn gi\u00e1 tr\u1ecb m\u1edbi v\u00e0o v\u1ecb tr\u00ed n\u00e0o c\u0169ng c\u1ef1c nhanh.</li> <li>V\u00ed d\u1ee5 Python: <pre><code>arr[1] = 99  # arr gi\u1edd l\u00e0 [10, 99, 30, 40]\n</code></pre></li> </ul>"},{"location":"Programming/DSA/Basic/01.static-Array/#23-themxoa-o-cuoi-mang-neu-con-cho-o1","title":"2.3. Th\u00eam/Xo\u00e1 \u1edf CU\u1ed0I m\u1ea3ng (n\u1ebfu c\u00f2n ch\u1ed7): O(1)","text":"<ul> <li>\u00dd ngh\u0129a: Th\u00eam ho\u1eb7c xo\u00e1 ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng th\u00ec c\u0169ng nh\u01b0 truy c\u1eadp b\u00ecnh th\u01b0\u1eddng, r\u1ea5t nhanh.</li> <li>V\u00ed d\u1ee5 Python: <pre><code>arr.append(50)  # Th\u00eam 50 v\u00e0o cu\u1ed1i: [10, 99, 30, 40, 50]\narr.pop()       # Xo\u00e1 cu\u1ed1i: [10, 99, 30, 40]\n</code></pre></li> </ul>"},{"location":"Programming/DSA/Basic/01.static-Array/#24-themxoa-o-giua-hoac-au-mang-on","title":"2.4. Th\u00eam/Xo\u00e1 \u1edf GI\u1eeeA ho\u1eb7c \u0110\u1ea6U m\u1ea3ng: O(n)","text":"<ul> <li>\u00dd ngh\u0129a: </li> <li>N\u1ebfu mu\u1ed1n ch\u00e8n 1 gi\u00e1 tr\u1ecb v\u00e0o gi\u1eefa, ph\u1ea3i D\u1edcI c\u00e1c ph\u1ea7n t\u1eed ph\u00eda sau ra sau 1 v\u1ecb tr\u00ed.</li> <li>N\u1ebfu xo\u00e1 1 gi\u00e1 tr\u1ecb \u1edf gi\u1eefa, ph\u1ea3i D\u1edcI c\u00e1c ph\u1ea7n t\u1eed ph\u00eda sau l\u00ean tr\u01b0\u1edbc 1 v\u1ecb tr\u00ed.</li> <li>C\u00e1ch nh\u1edb: </li> <li>T\u01b0\u1edfng t\u01b0\u1ee3ng m\u1ea3ng nh\u01b0 \u0111o\u00e0n t\u00e0u gh\u1ebf li\u1ec1n nhau, mu\u1ed1n ch\u00e8n/xo\u00e1 \u1edf gi\u1eefa ph\u1ea3i d\u1ecbch chuy\u1ec3n c\u1ea3 \u0111o\u00e0n gh\u1ebf ph\u00eda sau.</li> <li>V\u00ed d\u1ee5 Python: <pre><code>arr.insert(1, 77)  # Ch\u00e8n 77 v\u00e0o index 1: [10, 77, 99, 30, 40]\narr.pop(2)         # Xo\u00e1 ph\u1ea7n t\u1eed \u1edf index 2: [10, 77, 30, 40]\n</code></pre></li> </ul>"},{"location":"Programming/DSA/Basic/01.static-Array/#25-kich-thuoc-co-inh-static-array-vs-ong-dynamic-arraypython-list","title":"2.5. K\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh (Static array) vs. \u0111\u1ed9ng (Dynamic array/Python list):","text":"<ul> <li>Static array: K\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh, mu\u1ed1n th\u00eam v\u01b0\u1ee3t qu\u00e1 th\u00ec l\u1ed7i (C, Java).</li> <li>Python list: Th\u1ef1c ch\u1ea5t l\u00e0 dynamic array, c\u00f3 th\u1ec3 t\u1ef1 \u0111\u1ed9ng m\u1edf r\u1ed9ng.</li> <li>C\u00e1ch nh\u1edb: </li> <li>Python r\u1ea5t \"tho\u1ea3i m\u00e1i\", n\u00ean b\u1ea1n kh\u00f4ng b\u1ecb l\u1ed7i khi th\u00eam qu\u00e1 s\u1ed1 l\u01b0\u1ee3ng ban \u0111\u1ea7u.</li> </ul>"},{"location":"Programming/DSA/Basic/01.static-Array/#3-meo-giup-nho-lau","title":"3. M\u1eb9o gi\u00fap NH\u1eda L\u00c2U:","text":"<ul> <li>V\u1ebd l\u1ea1i s\u01a1 \u0111\u1ed3 m\u1ea3ng &amp; \u0111\u1ecba ch\u1ec9: T\u1ef1 v\u1ebd c\u00e1c \u00f4 vu\u00f4ng, \u0111\u00e1nh s\u1ed1 index, th\u1eed th\u00eam/xo\u00e1/ch\u00e8n v\u00e0 quan s\u00e1t vi\u1ec7c ph\u1ea3i d\u1ecbch chuy\u1ec3n ph\u1ea7n t\u1eed n\u00e0o.</li> <li>\u00c1p d\u1ee5ng v\u00ed d\u1ee5 th\u1ef1c t\u1ebf: </li> <li>Ngh\u0129 v\u1ec1 d\u00e3y s\u1ed1 gh\u1ebf trong r\u1ea1p chi\u1ebfu phim: Mu\u1ed1n ch\u00e8n th\u00eam gh\u1ebf \u1edf gi\u1eefa ph\u1ea3i l\u00f9i h\u1ebft c\u00e1c gh\u1ebf sau ra.</li> <li>T\u1ef1 code l\u1ea1i c\u00e1c thao t\u00e1c c\u01a1 b\u1ea3n c\u1ee7a m\u1ea3ng: </li> <li>Vi\u1ebft v\u00f2ng l\u1eb7p truy xu\u1ea5t, ch\u00e8n, xo\u00e1 \u0111\u1ec3 c\u1ea3m gi\u00e1c \u0111\u01b0\u1ee3c O(1) v\u00e0 O(n).</li> <li>Ghi nh\u1edb c\u00e1c ph\u00e9p to\u00e1n v\u1edbi ch\u00fa th\u00edch Big O: </li> <li>\u0110\u1ecdc/g\u00e1n ph\u1ea7n t\u1eed: O(1)</li> <li>Th\u00eam/xo\u00e1 cu\u1ed1i: O(1)</li> <li>Ch\u00e8n/xo\u00e1 gi\u1eefa: O(n)</li> </ul>"},{"location":"Programming/DSA/Basic/01.static-Array/#4-tong-hop-bang-ac-tinh-array","title":"4. T\u1ed5ng h\u1ee3p B\u1ea3ng \u0110\u1eb7c T\u00ednh Array","text":"Ph\u00e9p to\u00e1n \u0110\u1ed9 ph\u1ee9c t\u1ea1p (Big O) L\u00fd do Truy xu\u1ea5t (arr[i]) O(1) Tr\u1ef1c ti\u1ebfp G\u00e1n (arr[i] = x) O(1) Tr\u1ef1c ti\u1ebfp Th\u00eam/Xo\u00e1 \u1edf cu\u1ed1i O(1) N\u1ebfu c\u00f2n ch\u1ed7 Ch\u00e8n/Xo\u00e1 \u1edf \u0111\u1ea7u/gi\u1eefa O(n) Ph\u1ea3i d\u1eddi ph\u1ea7n t\u1eed"},{"location":"Programming/DSA/Basic/01.static-Array/#5-nho-lau-bang-cach-at-cau-hoi-code-ngay","title":"5. Nh\u1edb l\u00e2u b\u1eb1ng c\u00e1ch \u0110\u1eb6T C\u00c2U H\u1eceI &amp; CODE NGAY","text":"<ul> <li>T\u1ea1i sao truy xu\u1ea5t ph\u1ea7n t\u1eed b\u1ea5t k\u1ef3 l\u1ea1i nhanh?</li> <li>V\u00ec bi\u1ebft ch\u00ednh x\u00e1c \u0111\u1ecba ch\u1ec9 trong RAM d\u1ef1a tr\u00ean index.</li> <li>Ch\u00e8n/xo\u00e1 \u1edf gi\u1eefa t\u1ea1i sao l\u1ea1i ch\u1eadm?</li> <li>V\u00ec ph\u1ea3i d\u1ecbch chuy\u1ec3n nhi\u1ec1u ph\u1ea7n t\u1eed ph\u00eda sau.</li> <li>Python list c\u00f3 kh\u00e1c g\u00ec array truy\u1ec1n th\u1ed1ng?</li> <li>Python list l\u00e0 dynamic array, t\u1ef1 \u0111\u1ed9ng m\u1edf r\u1ed9ng &amp; co l\u1ea1i khi th\u00eam/xo\u00e1 ph\u1ea7n t\u1eed.</li> </ul>"},{"location":"Programming/DSA/Basic/01.static-Array/#6-thuc-hanh-duyet-mang-thao-tac","title":"6. Th\u1ef1c h\u00e0nh: Duy\u1ec7t m\u1ea3ng &amp; thao t\u00e1c","text":"<pre><code>arr = [5, 6, 7]\n# \u0110\u1ecdc t\u1eebng ph\u1ea7n t\u1eed\nfor i in range(len(arr)):\n    print(f'Index {i} value {arr[i]}')\n\n# Ch\u00e8n 4 v\u00e0o \u0111\u1ea7u m\u1ea3ng\narr.insert(0, 4) # [4, 5, 6, 7]\n\n# Xo\u00e1 ph\u1ea7n t\u1eed cu\u1ed1i\narr.pop()        # [4, 5, 6]\n</code></pre> <p>Ghi nh\u1edb: - M\u1ea3ng = d\u00e3y gi\u00e1 tr\u1ecb li\u1ec1n nhau, truy xu\u1ea5t c\u1ef1c nhanh (O(1)), ch\u00e8n/xo\u00e1 gi\u1eefa th\u00ec ch\u1eadm (O(n)). - Bi\u1ebft ch\u1ecdn \u0111\u00fang c\u1ea5u tr\u00fac d\u1eef li\u1ec7u s\u1ebd gi\u00fap code v\u1eeba nhanh v\u1eeba ti\u1ebft ki\u1ec7m b\u1ed9 nh\u1edb.</p> <p>B\u1ea1n c\u00e0ng th\u1ef1c h\u00e0nh code, t\u1ef1 v\u1ebd, t\u1ef1 \u0111\u1eb7t c\u00e2u h\u1ecfi c\u00e0ng nh\u1edb l\u00e2u!</p>"},{"location":"Programming/DSA/Basic/02.dynamic-Array/","title":"Dynamic Arrays: Gi\u1ea3i Th\u00edch, Ph\u00e2n T\u00edch v\u00e0 \u1ee8ng D\u1ee5ng","text":""},{"location":"Programming/DSA/Basic/02.dynamic-Array/#dynamic-arrays-giai-thich-phan-tich-va-ung-dung","title":"Dynamic Arrays: Gi\u1ea3i Th\u00edch, Ph\u00e2n T\u00edch v\u00e0 \u1ee8ng D\u1ee5ng","text":"<p>Dynamic arrays l\u00e0 m\u1ed9t trong nh\u1eefng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u ph\u1ed5 bi\u1ebfn v\u00e0 h\u1eefu \u00edch nh\u1ea5t hi\u1ec7n nay. Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u k\u1ef9 v\u1ec1 dynamic arrays, t\u1eeb c\u00e1ch ho\u1ea1t \u0111\u1ed9ng, nh\u1eefng \u01b0u nh\u01b0\u1ee3c \u0111i\u1ec3m cho t\u1edbi vi\u1ec7c ph\u00e2n t\u00edch \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian khi thao t\u00e1c v\u1edbi dynamic arrays. H\u01a1n n\u1eefa, ch\u00fang ta s\u1ebd so s\u00e1nh dynamic arrays v\u1edbi static arrays v\u00e0 minh h\u1ecda c\u00e1ch ch\u00fang ho\u1ea1t \u0111\u1ed9ng qua v\u00ed d\u1ee5 trong Python.</p>"},{"location":"Programming/DSA/Basic/02.dynamic-Array/#1-dynamic-arrays-la-gi","title":"1. Dynamic Arrays l\u00e0 g\u00ec?","text":"<p>Dynamic array (m\u1ea3ng \u0111\u1ed9ng) l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u cho ph\u00e9p k\u00edch th\u01b0\u1edbc m\u1ea3ng c\u00f3 th\u1ec3 thay \u0111\u1ed5i khi c\u1ea7n. Kh\u00f4ng gi\u1ed1ng nh\u01b0 static arrays (m\u1ea3ng t\u0129nh) c\u00f3 k\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh sau khi \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o, dynamic arrays c\u00f3 th\u1ec3 t\u1ef1 \u0111\u1ed9ng m\u1edf r\u1ed9ng ho\u1eb7c thu nh\u1ecf \u0111\u1ec3 ph\u00f9 h\u1ee3p v\u1edbi s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c th\u00eam v\u00e0o.</p> <p>C\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh ph\u1ed5 bi\u1ebfn \u0111\u00e3 t\u00edch h\u1ee3p dynamic arrays m\u1eb7c \u0111\u1ecbnh, ch\u1eb3ng h\u1ea1n nh\u01b0: - Python: S\u1eed d\u1ee5ng <code>list</code>. - JavaScript: Array l\u00e0 dynamic theo m\u1eb7c \u0111\u1ecbnh. - Java: S\u1eed d\u1ee5ng <code>ArrayList</code>. - C++: S\u1eed d\u1ee5ng <code>vector</code>.</p>"},{"location":"Programming/DSA/Basic/02.dynamic-Array/#2-giai-quyet-van-e-kich-thuoc-co-inh","title":"2. Gi\u1ea3i Quy\u1ebft V\u1ea5n \u0110\u1ec1 K\u00edch Th\u01b0\u1edbc C\u1ed1 \u0110\u1ecbnh","text":"<p>V\u1ea5n \u0111\u1ec1 c\u1ee7a m\u1ea3ng t\u0129nh l\u00e0 k\u00edch th\u01b0\u1edbc kh\u00f4ng th\u1ec3 thay \u0111\u1ed5i sau khi kh\u1edfi t\u1ea1o, d\u1eabn \u0111\u1ebfn h\u1ea1n ch\u1ebf trong tr\u01b0\u1eddng h\u1ee3p s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed kh\u00f4ng x\u00e1c \u0111\u1ecbnh ho\u1eb7c c\u00f3 th\u1ec3 thay \u0111\u1ed5i theo th\u1eddi gian. Dynamic arrays gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\u00e0y b\u1eb1ng c\u00e1ch: - Kh\u1edfi t\u1ea1o v\u1edbi m\u1ed9t k\u00edch th\u01b0\u1edbc m\u1eb7c \u0111\u1ecbnh (v\u00ed d\u1ee5: 3, 10, v.v.). - Khi c\u00e1c ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c th\u00eam v\u00e0o (push) v\u01b0\u1ee3t qu\u00e1 kh\u1ea3 n\u0103ng ch\u1ee9a, h\u1ec7 th\u1ed1ng s\u1ebd t\u1ef1 \u0111\u1ed9ng c\u1ea5p ph\u00e1t m\u1ed9t m\u1ea3ng m\u1edbi c\u00f3 k\u00edch th\u01b0\u1edbc l\u1edbn h\u01a1n. - Qu\u00e1 tr\u00ecnh n\u00e0y \u0111i k\u00e8m v\u1edbi vi\u1ec7c sao ch\u00e9p c\u00e1c gi\u00e1 tr\u1ecb t\u1eeb m\u1ea3ng c\u0169 sang m\u1ea3ng m\u1edbi v\u00e0 gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb c\u1ee7a m\u1ea3ng c\u0169.</p>"},{"location":"Programming/DSA/Basic/02.dynamic-Array/#3-cach-hoat-ong-noi-bo-cua-dynamic-arrays","title":"3. C\u00e1ch Ho\u1ea1t \u0110\u1ed9ng N\u1ed9i B\u1ed9 c\u1ee7a Dynamic Arrays","text":""},{"location":"Programming/DSA/Basic/02.dynamic-Array/#31-quan-ly-kich-thuoc-va-o-dai","title":"3.1. Qu\u1ea3n L\u00fd K\u00edch Th\u01b0\u1edbc v\u00e0 \u0110\u1ed9 D\u00e0i","text":"<ul> <li>Capacity (Dung l\u01b0\u1ee3ng): S\u1ed1 ph\u1ea7n t\u1eed t\u1ed1i \u0111a m\u00e0 m\u1ea3ng c\u00f3 th\u1ec3 ch\u1ee9a tr\u01b0\u1edbc khi c\u1ea7n m\u1edf r\u1ed9ng.</li> <li>Length (\u0110\u1ed9 d\u00e0i): S\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed th\u1ef1c t\u1ebf c\u00f3 trong m\u1ea3ng.</li> <li>M\u1ed9t bi\u1ebfn ho\u1eb7c pointer \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 theo d\u00f5i v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng, t\u1eeb \u0111\u00f3 x\u00e1c \u0111\u1ecbnh \u0111\u1ed9 d\u00e0i hi\u1ec7n t\u1ea1i c\u1ee7a m\u1ea3ng.</li> </ul>"},{"location":"Programming/DSA/Basic/02.dynamic-Array/#32-thao-tac-pushing-va-popping","title":"3.2. Thao T\u00e1c Pushing v\u00e0 Popping","text":"<ul> <li>Pushing (Th\u00eam ph\u1ea7n t\u1eed v\u00e0o cu\u1ed1i):</li> <li>N\u1ebfu v\u1eabn c\u00f2n dung l\u01b0\u1ee3ng, ph\u1ea7n t\u1eed m\u1edbi \u0111\u01b0\u1ee3c th\u00eam v\u00e0o v\u1ecb tr\u00ed <code>last_index + 1</code> v\u00e0 c\u1eadp nh\u1eadt pointer.</li> <li>N\u1ebfu m\u1ea3ng \u0111\u00e3 \u0111\u1ea7y (length == capacity), qu\u00e1 tr\u00ecnh c\u1ea5p ph\u00e1t l\u1ea1i m\u1ea3ng s\u1ebd x\u1ea3y ra:<ul> <li>M\u1ed9t m\u1ea3ng m\u1edbi v\u1edbi k\u00edch th\u01b0\u1edbc g\u1ea5p \u0111\u00f4i m\u1ea3ng c\u0169 \u0111\u01b0\u1ee3c c\u1ea5p ph\u00e1t.</li> <li>C\u00e1c ph\u1ea7n t\u1eed t\u1eeb m\u1ea3ng c\u0169 \u0111\u01b0\u1ee3c sao ch\u00e9p sang m\u1ea3ng m\u1edbi.</li> <li>Ph\u1ea7n t\u1eed m\u1edbi \u0111\u01b0\u1ee3c ch\u00e8n v\u00e0o m\u1ea3ng m\u1edbi.</li> </ul> </li> <li> <p>Trong h\u1ea7u h\u1ebft tr\u01b0\u1eddng h\u1ee3p, thao t\u00e1c push \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong O(1). Khi ph\u1ea3i m\u1edf r\u1ed9ng, thao t\u00e1c m\u1ea5t O(n) do vi\u1ec7c sao ch\u00e9p, nh\u01b0ng v\u1ec1 m\u1eb7t amortized, m\u1ed7i thao t\u00e1c push v\u1eabn l\u00e0 O(1).</p> </li> <li> <p>Popping (X\u00f3a ph\u1ea7n t\u1eed cu\u1ed1i):</p> </li> <li>Thao t\u00e1c pop ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 x\u00f3a ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng v\u00e0 c\u1eadp nh\u1eadt pointer.</li> <li>Thao t\u00e1c n\u00e0y lu\u00f4n th\u1ef1c hi\u1ec7n trong O(1).</li> </ul>"},{"location":"Programming/DSA/Basic/02.dynamic-Array/#4-chien-luoc-mo-rong-tai-sao-lai-gap-oi-kich-thuoc","title":"4. Chi\u1ebfn L\u01b0\u1ee3c M\u1edf R\u1ed9ng: T\u1ea1i sao l\u1ea1i G\u1ea5p \u0110\u00f4i K\u00edch Th\u01b0\u1edbc?","text":"<p>Khi m\u1ea3ng \u0111\u00e3 \u0111\u1ea7y, thay v\u00ec t\u0103ng k\u00edch th\u01b0\u1edbc th\u00eam m\u1ed9t ph\u1ea7n t\u1eed (v\u00ed d\u1ee5, capacity +1), dynamic arrays th\u01b0\u1eddng t\u0103ng k\u00edch th\u01b0\u1edbc theo t\u1ef7 l\u1ec7 g\u1ea5p \u0111\u00f4i. L\u00fd do: - N\u1ebfu t\u0103ng k\u00edch th\u01b0\u1edbc th\u00eam t\u1eebng \u0111\u01a1n v\u1ecb, t\u1ed5ng s\u1ed1 sao ch\u00e9p khi th\u00eam n ph\u1ea7n t\u1eed li\u00ean t\u1ee5c s\u1ebd l\u00e0 O(1 + 2 + 3 + \u2026 + n), g\u1ea7n nh\u01b0 O(n\u00b2) trong tr\u01b0\u1eddng h\u1ee3p t\u1ec7. - Khi \u0111\u00f4i k\u00edch th\u01b0\u1edbc, t\u1ed5ng s\u1ed1 sao ch\u00e9p s\u1ebd l\u00e0:</p> <p>S = 1 + 2 + 4 + ... + n</p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t chu\u1ed7i h\u00ecnh h\u1ecdc c\u00f3 t\u1ed5ng \u0111\u01b0\u1ee3c gi\u1edbi h\u1ea1n b\u1edfi 2n, do \u0111\u00f3, th\u1eddi gian trung b\u00ecnh (amortized time complexity) c\u1ee7a thao t\u00e1c push v\u1eabn l\u00e0 O(1).</p>"},{"location":"Programming/DSA/Basic/02.dynamic-Array/#5-phan-tich-big-o-amortized-time-complexity","title":"5. Ph\u00e2n T\u00edch Big O \u2013 Amortized Time Complexity","text":"<ul> <li>\u0110\u1ecdc (Access): O(1) \u2013 Truy c\u1eadp tr\u1ef1c ti\u1ebfp qua ch\u1ec9 s\u1ed1.</li> <li>Push/Pop (Kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 capacity): O(1)</li> <li>Push (Khi c\u1ea7n m\u1edf r\u1ed9ng): O(n) \u2013 Trong tr\u01b0\u1eddng h\u1ee3p ph\u1ea3i c\u1ea5p ph\u00e1t l\u1ea1i v\u00e0 sao ch\u00e9p, nh\u01b0ng v\u1ec1 trung b\u00ecnh (amortized) v\u1eabn l\u00e0 O(1).</li> <li>Ch\u00e8n/Xo\u00e1 \u1edf gi\u1eefa: O(n) \u2013 Do c\u1ea7n d\u1ecbch chuy\u1ec3n c\u00e1c ph\u1ea7n t\u1eed.</li> </ul>"},{"location":"Programming/DSA/Basic/02.dynamic-Array/#6-vi-du-python-minh-hoa-dynamic-array","title":"6. V\u00ed D\u1ee5 Python Minh H\u1ecda Dynamic Array","text":"<p>M\u1eb7c d\u00f9 Python <code>list</code> l\u00e0 m\u1ed9t dynamic array \u0111\u01b0\u1ee3c tri\u1ec3n khai n\u1ed9i b\u1ed9, ch\u00fang ta c\u00f3 th\u1ec3 minh h\u1ecda c\u01a1 ch\u1ebf ho\u1ea1t \u0111\u1ed9ng c\u1ee7a dynamic array qua c\u00e1c thao t\u00e1c c\u01a1 b\u1ea3n:</p> <pre><code># Kh\u1edfi t\u1ea1o m\u1ed9t danh s\u00e1ch tr\u1ed1ng (dynamic array)\ndynamic_arr = []\n\n# Push ph\u1ea7n t\u1eed v\u00e0o dynamic array\ndynamic_arr.append(0)  # dynamic_arr: [0]\ndynamic_arr.append(4)  # dynamic_arr: [0, 4]\ndynamic_arr.append(7)  # dynamic_arr: [0, 4, 7]\n\nprint(\"\u0110\u1ed9 d\u00e0i ban \u0111\u1ea7u:\", len(dynamic_arr))  # K\u1ebft qu\u1ea3: 3\n\n# Gi\u1ea3 s\u1eed b\u00e2y gi\u1edd ch\u00fang ta th\u00eam ph\u1ea7n t\u1eed th\u1ee9 4\n# N\u1ebfu dung l\u01b0\u1ee3ng hi\u1ec7n t\u1ea1i kh\u00f4ng \u0111\u1ee7, Python s\u1ebd t\u1ef1 \u0111\u1ed9ng c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb m\u1edbi (dynamic reallocation)\ndynamic_arr.append(9)\nprint(\"Sau khi th\u00eam 9:\", dynamic_arr)\nprint(\"\u0110\u1ed9 d\u00e0i sau c\u1eadp nh\u1eadt:\", len(dynamic_arr))\n\n# Pop ph\u1ea7n t\u1eed cu\u1ed1i (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng x\u00f3a 9)\nlast_item = dynamic_arr.pop()\nprint(\"Sau khi pop ph\u1ea7n t\u1eed cu\u1ed1i:\", dynamic_arr)\n</code></pre> <p>Trong v\u00ed d\u1ee5 n\u00e0y: - Khi th\u00eam ph\u1ea7n t\u1eed <code>9</code> l\u00e0m ph\u1ea7n t\u1eed th\u1ee9 4, n\u1ebfu m\u1ea3ng \u0111\u00e3 \u0111\u1ea7y th\u00ec qu\u00e1 tr\u00ecnh c\u1ea5p ph\u00e1t l\u1ea1i s\u1ebd x\u1ea3y ra (v\u00ed d\u1ee5: t\u0103ng dung l\u01b0\u1ee3ng t\u1eeb 3 l\u00ean 6) v\u00e0 sao ch\u00e9p c\u00e1c ph\u1ea7n t\u1eed tr\u01b0\u1edbc \u0111\u00f3 sang m\u1ea3ng m\u1edbi. - Thao t\u00e1c <code>append</code> th\u00f4ng th\u01b0\u1eddng \u0111\u01b0\u1ee3c xem l\u00e0 O(1) v\u1ec1 trung b\u00ecnh (amortized complexity) d\u00f9 c\u00f3 th\u1ec3 c\u00f3 c\u00e1c l\u1ea7n thao t\u00e1c ch\u1eadm h\u01a1n (O(n)) khi ph\u1ea3i m\u1edf r\u1ed9ng m\u1ea3ng. - Thao t\u00e1c <code>pop</code> lu\u00f4n th\u1ef1c hi\u1ec7n trong O(1).</p>"},{"location":"Programming/DSA/Basic/02.dynamic-Array/#7-ket-luan","title":"7. K\u1ebft Lu\u1eadn","text":"<p>Dynamic arrays gi\u00fap gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 k\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh c\u1ee7a m\u1ea3ng t\u0129nh b\u1eb1ng c\u00e1ch cho ph\u00e9p m\u1ea3ng t\u1ef1 \u0111\u1ed9ng m\u1edf r\u1ed9ng khi c\u1ea7n thi\u1ebft. C\u00e1c thao t\u00e1c c\u01a1 b\u1ea3n nh\u01b0 truy xu\u1ea5t, th\u00eam v\u00e0 x\u00f3a ph\u1ea7n t\u1eed cu\u1ed1i \u0111\u1ec1u ho\u1ea1t \u0111\u1ed9ng nhanh ch\u00f3ng v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(1) v\u1ec1 trung b\u00ecnh, m\u1eb7c d\u00f9 thao t\u00e1c th\u00eam ph\u1ea7n t\u1eed c\u00f3 th\u1ec3 m\u1ea5t O(n) khi m\u1ea3ng c\u1ea7n m\u1edf r\u1ed9ng.</p> <p>Hi\u1ec3u r\u00f5 c\u00e1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a dynamic arrays gi\u00fap b\u1ea1n thi\u1ebft k\u1ebf c\u00e1c thu\u1eadt to\u00e1n hi\u1ec7u qu\u1ea3 h\u01a1n v\u00e0 t\u1ed1i \u01b0u ho\u00e1 vi\u1ec7c s\u1eed d\u1ee5ng b\u1ed9 nh\u1edb trong c\u00e1c \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf. H\u00e3y th\u01b0\u1eddng xuy\u00ean th\u1ef1c h\u00e0nh v\u00e0 ki\u1ec3m ch\u1ee9ng theo c\u00e1c v\u00ed d\u1ee5 \u0111\u1ec3 l\u00e0m ch\u1ee7 k\u1ef9 thu\u1eadt n\u00e0y.</p> <p>Ch\u00fac b\u1ea1n th\u00e0nh c\u00f4ng v\u00e0 ti\u1ebfp t\u1ee5c kh\u00e1m ph\u00e1 c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u00e2ng cao h\u01a1n!</p>"},{"location":"Programming/DSA/Basic/03.stack/","title":"Stack (Ng\u0103n X\u1ebfp): C\u1ea5u Tr\u00fac D\u1eef Li\u1ec7u LIFO Quan Tr\u1ecdng Trong L\u1eadp Tr\u00ecnh","text":""},{"location":"Programming/DSA/Basic/03.stack/#stack-ngan-xep-cau-truc-du-lieu-lifo-quan-trong-trong-lap-trinh","title":"Stack (Ng\u0103n X\u1ebfp): C\u1ea5u Tr\u00fac D\u1eef Li\u1ec7u LIFO Quan Tr\u1ecdng Trong L\u1eadp Tr\u00ecnh","text":"<p>Stack (ng\u0103n x\u1ebfp) l\u00e0 m\u1ed9t trong nh\u1eefng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u c\u01a1 b\u1ea3n v\u00e0 quan tr\u1ecdng nh\u1ea5t trong l\u1eadp tr\u00ecnh. Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u chi ti\u1ebft v\u1ec1 Stack t\u1eeb kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n, c\u00e1ch ho\u1ea1t \u0111\u1ed9ng, tri\u1ec3n khai, cho \u0111\u1ebfn c\u00e1c \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf.</p>"},{"location":"Programming/DSA/Basic/03.stack/#1-stack-la-gi","title":"1. Stack l\u00e0 g\u00ec?","text":""},{"location":"Programming/DSA/Basic/03.stack/#11-inh-nghia","title":"1.1. \u0110\u1ecbnh ngh\u0129a","text":"<p>Stack l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u tuy\u1ebfn t\u00ednh ho\u1ea1t \u0111\u1ed9ng theo nguy\u00ean t\u1eafc LIFO (Last In, First Out - v\u00e0o sau, ra tr\u01b0\u1edbc). \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c th\u00eam v\u00e0o cu\u1ed1i c\u00f9ng s\u1ebd l\u00e0 ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean b\u1ecb lo\u1ea1i b\u1ecf.</p>"},{"location":"Programming/DSA/Basic/03.stack/#12-hinh-dung-stack","title":"1.2. H\u00ecnh dung Stack","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 t\u01b0\u1edfng t\u01b0\u1ee3ng Stack nh\u01b0:</p> <ul> <li>M\u1ed9t ch\u1ed3ng \u0111\u0129a: B\u1ea1n ch\u1ec9 c\u00f3 th\u1ec3 \u0111\u1eb7t \u0111\u0129a l\u00ean tr\u00ean c\u00f9ng v\u00e0 ch\u1ec9 c\u00f3 th\u1ec3 l\u1ea5y \u0111\u0129a t\u1eeb tr\u00ean xu\u1ed1ng.</li> <li>M\u1ed9t \u1ed1ng th\u1eb3ng: Ch\u1ec9 c\u00f3 m\u1ed9t \u0111\u1ea7u \u0111\u1ec3 cho v\u00e0o v\u00e0 l\u1ea5y ra.</li> <li>M\u1ed9t ch\u1ed3ng s\u00e1ch: Quy\u1ec3n s\u00e1ch \u0111\u01b0\u1ee3c \u0111\u1eb7t l\u00ean sau c\u00f9ng s\u1ebd \u0111\u01b0\u1ee3c l\u1ea5y ra \u0111\u1ea7u ti\u00ean.</li> </ul> <pre><code>    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502    4    \u2502 \u2190 Top (\u0111\u1ec9nh stack)\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n    \u2502    3    \u2502\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n    \u2502    2    \u2502\n    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n    \u2502    1    \u2502 \u2190 Bottom (\u0111\u00e1y stack)\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"Programming/DSA/Basic/03.stack/#2-cac-thao-tac-co-ban-cua-stack","title":"2. C\u00e1c Thao T\u00e1c C\u01a1 B\u1ea3n c\u1ee7a Stack","text":"<p>Stack h\u1ed7 tr\u1ee3 ba thao t\u00e1c ch\u00ednh, t\u1ea5t c\u1ea3 \u0111\u1ec1u c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(1):</p>"},{"location":"Programming/DSA/Basic/03.stack/#21-push-ay-vao","title":"2.1. Push (\u0110\u1ea9y v\u00e0o)","text":"<ul> <li>Ch\u1ee9c n\u0103ng: Th\u00eam m\u1ed9t ph\u1ea7n t\u1eed v\u00e0o \u0111\u1ec9nh c\u1ee7a stack</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: O(1)</li> </ul>"},{"location":"Programming/DSA/Basic/03.stack/#22-pop-lay-ra","title":"2.2. Pop (L\u1ea5y ra)","text":"<ul> <li>Ch\u1ee9c n\u0103ng: Lo\u1ea1i b\u1ecf v\u00e0 tr\u1ea3 v\u1ec1 ph\u1ea7n t\u1eed \u1edf \u0111\u1ec9nh stack</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: O(1)</li> </ul>"},{"location":"Programming/DSA/Basic/03.stack/#23-peektop-xem-inh","title":"2.3. Peek/Top (Xem \u0111\u1ec9nh)","text":"<ul> <li>Ch\u1ee9c n\u0103ng: Xem ph\u1ea7n t\u1eed \u1edf \u0111\u1ec9nh stack m\u00e0 kh\u00f4ng lo\u1ea1i b\u1ecf n\u00f3</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: O(1)</li> </ul>"},{"location":"Programming/DSA/Basic/03.stack/#3-trien-khai-stack-bang-dynamic-array","title":"3. Tri\u1ec3n Khai Stack B\u1eb1ng Dynamic Array","text":""},{"location":"Programming/DSA/Basic/03.stack/#31-tai-sao-su-dung-dynamic-array","title":"3.1. T\u1ea1i sao s\u1eed d\u1ee5ng Dynamic Array?","text":"<p>Stack c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c tri\u1ec3n khai b\u1eb1ng dynamic array v\u00ec:</p> <ul> <li>Thao t\u00e1c th\u00eam/x\u00f3a \u1edf cu\u1ed1i m\u1ea3ng l\u00e0 O(1)</li> <li>Dynamic array t\u1ef1 \u0111\u1ed9ng m\u1edf r\u1ed9ng khi c\u1ea7n</li> <li>\u0110\u01a1n gi\u1ea3n v\u00e0 hi\u1ec7u qu\u1ea3</li> </ul>"},{"location":"Programming/DSA/Basic/03.stack/#32-code-implementation-trong-python","title":"3.2. Code Implementation trong Python","text":"<pre><code>class Stack:\n    def __init__(self):\n        \"\"\"Kh\u1edfi t\u1ea1o stack r\u1ed7ng\"\"\"\n        self.items = []  # S\u1eed d\u1ee5ng list (dynamic array) c\u1ee7a Python\n\n    def push(self, item):\n        \"\"\"Th\u00eam ph\u1ea7n t\u1eed v\u00e0o \u0111\u1ec9nh stack\"\"\"\n        self.items.append(item)\n        print(f\"Pushed {item} onto stack\")\n\n    def pop(self):\n        \"\"\"Lo\u1ea1i b\u1ecf v\u00e0 tr\u1ea3 v\u1ec1 ph\u1ea7n t\u1eed \u1edf \u0111\u1ec9nh stack\"\"\"\n        if self.is_empty():\n            raise IndexError(\"pop from empty stack\")\n        item = self.items.pop()\n        print(f\"Popped {item} from stack\")\n        return item\n\n    def peek(self):\n        \"\"\"Xem ph\u1ea7n t\u1eed \u1edf \u0111\u1ec9nh stack m\u00e0 kh\u00f4ng lo\u1ea1i b\u1ecf\"\"\"\n        if self.is_empty():\n            raise IndexError(\"peek from empty stack\")\n        return self.items[-1]\n\n    def is_empty(self):\n        \"\"\"Ki\u1ec3m tra stack c\u00f3 r\u1ed7ng kh\u00f4ng\"\"\"\n        return len(self.items) == 0\n\n    def size(self):\n        \"\"\"Tr\u1ea3 v\u1ec1 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed trong stack\"\"\"\n        return len(self.items)\n\n    def display(self):\n        \"\"\"Hi\u1ec3n th\u1ecb stack theo chi\u1ec1u d\u1ecdc\"\"\"\n        if self.is_empty():\n            print(\"Stack is empty\")\n            return\n\n        print(\"Stack (top to bottom):\")\n        for i in range(len(self.items) - 1, -1, -1):\n            symbol = \"\u2190 TOP\" if i == len(self.items) - 1 else \"\"\n            print(f\"\u2502 {self.items[i]} \u2502 {symbol}\")\n        print(\"\u2514\u2500\u2500\u2500\u2518\")\n</code></pre>"},{"location":"Programming/DSA/Basic/03.stack/#33-demo-stack-operations","title":"3.3. Demo Stack Operations","text":"<pre><code># Kh\u1edfi t\u1ea1o stack\nstack = Stack()\n\nprint(\"=== PUSH Operations ===\")\n# Push c\u00e1c ph\u1ea7n t\u1eed\nstack.push(1)\nstack.push(2)\nstack.push(3)\nstack.push(4)\n\nprint(f\"\\nStack size: {stack.size()}\")\nstack.display()\n\nprint(\"\\n=== PEEK Operation ===\")\nprint(f\"Top element: {stack.peek()}\")\n\nprint(\"\\n=== POP Operations ===\")\n# Pop c\u00e1c ph\u1ea7n t\u1eed\nwhile not stack.is_empty():\n    popped = stack.pop()\n    print(f\"Current stack size: {stack.size()}\")\n    if not stack.is_empty():\n        stack.display()\n    else:\n        print(\"Stack is now empty\")\n</code></pre> <p>Output:</p> <pre><code>=== PUSH Operations ===\nPushed 1 onto stack\nPushed 2 onto stack\nPushed 3 onto stack\nPushed 4 onto stack\n\nStack size: 4\nStack (top to bottom):\n\u2502 4 \u2502 \u2190 TOP\n\u2502 3 \u2502\n\u2502 2 \u2502\n\u2502 1 \u2502\n\u2514\u2500\u2500\u2500\u2518\n\n=== PEEK Operation ===\nTop element: 4\n\n=== POP Operations ===\nPopped 4 from stack\nCurrent stack size: 3\nStack (top to bottom):\n\u2502 3 \u2502 \u2190 TOP\n\u2502 2 \u2502\n\u2502 1 \u2502\n\u2514\u2500\u2500\u2500\u2518\nPopped 3 from stack\nCurrent stack size: 2\nStack (top to bottom):\n\u2502 2 \u2502 \u2190 TOP\n\u2502 1 \u2502\n\u2514\u2500\u2500\u2500\u2518\nPopped 2 from stack\nCurrent stack size: 1\nStack (top to bottom):\n\u2502 1 \u2502 \u2190 TOP\n\u2514\u2500\u2500\u2500\u2518\nPopped 1 from stack\nCurrent stack size: 0\nStack is now empty\n</code></pre>"},{"location":"Programming/DSA/Basic/03.stack/#4-nguyen-tac-lifo-last-in-first-out","title":"4. Nguy\u00ean T\u1eafc LIFO (Last In, First Out)","text":""},{"location":"Programming/DSA/Basic/03.stack/#41-minh-hoa-lifo","title":"4.1. Minh h\u1ecda LIFO","text":"<pre><code>def demonstrate_lifo():\n    \"\"\"Demo nguy\u00ean t\u1eafc LIFO c\u1ee7a stack\"\"\"\n    stack = Stack()\n\n    # Th\u1ee9 t\u1ef1 th\u00eam v\u00e0o: 1 \u2192 2 \u2192 3 \u2192 4\n    elements_to_add = [1, 2, 3, 4]\n\n    print(\"Th\u1ee9 t\u1ef1 TH\u00caM V\u00c0O:\")\n    for elem in elements_to_add:\n        stack.push(elem)\n\n    print(f\"\\nStack sau khi th\u00eam: {stack.items}\")\n\n    print(\"\\nTh\u1ee9 t\u1ef1 L\u1ea4Y RA:\")\n    removed_elements = []\n    while not stack.is_empty():\n        removed_elements.append(stack.pop())\n\n    print(f\"Th\u1ee9 t\u1ef1 th\u00eam v\u00e0o:  {elements_to_add}\")\n    print(f\"Th\u1ee9 t\u1ef1 l\u1ea5y ra:    {removed_elements}\")\n    print(\"\u2192 Th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c nhau (LIFO)!\")\n\ndemonstrate_lifo()\n</code></pre> <p>Output:</p> <pre><code>Th\u1ee9 t\u1ef1 TH\u00caM V\u00c0O:\nPushed 1 onto stack\nPushed 2 onto stack\nPushed 3 onto stack\nPushed 4 onto stack\n\nStack sau khi th\u00eam: [1, 2, 3, 4]\n\nTh\u1ee9 t\u1ef1 L\u1ea4Y RA:\nPopped 4 from stack\nPopped 3 from stack\nPopped 2 from stack\nPopped 1 from stack\nTh\u1ee9 t\u1ef1 th\u00eam v\u00e0o:  [1, 2, 3, 4]\nTh\u1ee9 t\u1ef1 l\u1ea5y ra:    [4, 3, 2, 1]\n\u2192 Th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c nhau (LIFO)!\n</code></pre>"},{"location":"Programming/DSA/Basic/03.stack/#5-ung-dung-thuc-te-cua-stack","title":"5. \u1ee8ng D\u1ee5ng Th\u1ef1c T\u1ebf c\u1ee7a Stack","text":""},{"location":"Programming/DSA/Basic/03.stack/#51-ao-nguoc-chuoimang","title":"5.1. \u0110\u1ea3o Ng\u01b0\u1ee3c Chu\u1ed7i/M\u1ea3ng","text":"<pre><code>def reverse_string_with_stack(s):\n    \"\"\"\u0110\u1ea3o ng\u01b0\u1ee3c chu\u1ed7i s\u1eed d\u1ee5ng stack\"\"\"\n    stack = Stack()\n\n    # Push t\u1eebng k\u00fd t\u1ef1 v\u00e0o stack\n    for char in s:\n        stack.push(char)\n\n    # Pop t\u1eebng k\u00fd t\u1ef1 \u0111\u1ec3 t\u1ea1o chu\u1ed7i \u0111\u1ea3o ng\u01b0\u1ee3c\n    reversed_str = \"\"\n    while not stack.is_empty():\n        reversed_str += stack.pop()\n\n    return reversed_str\n\n# Test\noriginal = \"HELLO\"\nreversed_str = reverse_string_with_stack(original)\nprint(f\"Original: {original}\")\nprint(f\"Reversed: {reversed_str}\")\n</code></pre>"},{"location":"Programming/DSA/Basic/03.stack/#52-kiem-tra-dau-ngoac-hop-le-balanced-parentheses","title":"5.2. Ki\u1ec3m Tra D\u1ea5u Ngo\u1eb7c H\u1ee3p L\u1ec7 (Balanced Parentheses)","text":"<pre><code>def is_balanced_parentheses(expression):\n    \"\"\"Ki\u1ec3m tra d\u1ea5u ngo\u1eb7c c\u00f3 c\u00e2n b\u1eb1ng kh\u00f4ng\"\"\"\n    stack = Stack()\n\n    # Mapping c\u00e1c c\u1eb7p ngo\u1eb7c\n    pairs = {')': '(', '}': '{', ']': '['}\n    opening = {'(', '{', '['}\n    closing = {')', '}', ']'}\n\n    for char in expression:\n        if char in opening:\n            stack.push(char)\n        elif char in closing:\n            if stack.is_empty():\n                return False  # Ngo\u1eb7c \u0111\u00f3ng kh\u00f4ng c\u00f3 ngo\u1eb7c m\u1edf t\u01b0\u01a1ng \u1ee9ng\n\n            if stack.pop() != pairs[char]:\n                return False  # Ngo\u1eb7c kh\u00f4ng kh\u1edbp\n\n    return stack.is_empty()  # Stack ph\u1ea3i r\u1ed7ng \u0111\u1ec3 c\u00e2n b\u1eb1ng\n\n# Test cases\ntest_cases = [\n    \"()\",           # True\n    \"(())\",         # True\n    \"()[]{} \",      # True\n    \"([{}])\",       # True\n    \"(((\",          # False\n    \"))\",           # False\n    \"([)]\",         # False\n    \"{[}]\"          # False\n]\n\nfor test in test_cases:\n    result = is_balanced_parentheses(test)\n    print(f\"'{test}' \u2192 {result}\")\n</code></pre>"},{"location":"Programming/DSA/Basic/03.stack/#53-calculator-expression-evaluation-tinh-toan-bieu-thuc","title":"5.3. Calculator Expression Evaluation (T\u00ednh to\u00e1n bi\u1ec3u th\u1ee9c)","text":"<pre><code>def evaluate_postfix(expression):\n    \"\"\"T\u00ednh to\u00e1n bi\u1ec3u th\u1ee9c d\u1ea1ng postfix (Reverse Polish Notation)\"\"\"\n    stack = Stack()\n    operators = {'+', '-', '*', '/'}\n\n    tokens = expression.split()\n\n    for token in tokens:\n        if token not in operators:\n            # L\u00e0 s\u1ed1, push v\u00e0o stack\n            stack.push(int(token))\n        else:\n            # L\u00e0 operator, pop 2 s\u1ed1 v\u00e0 t\u00ednh to\u00e1n\n            if stack.size() &lt; 2:\n                raise ValueError(\"Invalid expression\")\n\n            b = stack.pop()  # S\u1ed1 th\u1ee9 2\n            a = stack.pop()  # S\u1ed1 th\u1ee9 1\n\n            if token == '+':\n                result = a + b\n            elif token == '-':\n                result = a - b\n            elif token == '*':\n                result = a * b\n            elif token == '/':\n                if b == 0:\n                    raise ValueError(\"Division by zero\")\n                result = a / b\n\n            stack.push(result)\n\n    if stack.size() != 1:\n        raise ValueError(\"Invalid expression\")\n\n    return stack.pop()\n\n# Test\npostfix_expr = \"3 4 + 2 * 7 /\"\nresult = evaluate_postfix(postfix_expr)\nprint(f\"Expression: {postfix_expr}\")\nprint(f\"Result: {result}\")\n# (3 + 4) * 2 / 7 = 14 / 7 = 2.0\n</code></pre>"},{"location":"Programming/DSA/Basic/03.stack/#54-function-call-stack-stack-goi-ham","title":"5.4. Function Call Stack (Stack g\u1ecdi h\u00e0m)","text":"<pre><code>def function_call_demo():\n    \"\"\"Demo m\u00f4 ph\u1ecfng stack g\u1ecdi h\u00e0m\"\"\"\n    call_stack = Stack()\n\n    def function_a():\n        call_stack.push(\"function_a() called\")\n        print(\"Entering function_a\")\n        call_stack.display()\n\n        function_b()\n\n        print(\"Exiting function_a\")\n        call_stack.pop()\n        call_stack.display()\n\n    def function_b():\n        call_stack.push(\"function_b() called\")\n        print(\"Entering function_b\")\n        call_stack.display()\n\n        function_c()\n\n        print(\"Exiting function_b\")\n        call_stack.pop()\n        call_stack.display()\n\n    def function_c():\n        call_stack.push(\"function_c() called\")\n        print(\"Entering function_c\")\n        call_stack.display()\n\n        print(\"Executing function_c\")\n\n        print(\"Exiting function_c\")\n        call_stack.pop()\n        call_stack.display()\n\n    function_a()\n\nfunction_call_demo()\n</code></pre>"},{"location":"Programming/DSA/Basic/03.stack/#6-uu-va-nhuoc-iem-cua-stack","title":"6. \u01afu v\u00e0 Nh\u01b0\u1ee3c \u0110i\u1ec3m c\u1ee7a Stack","text":""},{"location":"Programming/DSA/Basic/03.stack/#61-uu-iem","title":"6.1. \u01afu \u0111i\u1ec3m","text":"<ul> <li>\u0110\u01a1n gi\u1ea3n: D\u1ec5 hi\u1ec3u v\u00e0 tri\u1ec3n khai</li> <li>Hi\u1ec7u qu\u1ea3: T\u1ea5t c\u1ea3 thao t\u00e1c c\u01a1 b\u1ea3n \u0111\u1ec1u O(1)</li> <li>Qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb: T\u1ef1 \u0111\u1ed9ng v\u1edbi dynamic array</li> <li>Linh ho\u1ea1t: C\u00f3 th\u1ec3 ch\u1ee9a b\u1ea5t k\u1ef3 ki\u1ec3u d\u1eef li\u1ec7u n\u00e0o</li> </ul>"},{"location":"Programming/DSA/Basic/03.stack/#62-nhuoc-iem","title":"6.2. Nh\u01b0\u1ee3c \u0111i\u1ec3m","text":"<ul> <li>Truy c\u1eadp h\u1ea1n ch\u1ebf: Ch\u1ec9 c\u00f3 th\u1ec3 truy c\u1eadp ph\u1ea7n t\u1eed \u1edf \u0111\u1ec9nh</li> <li>Kh\u00f4ng th\u1ec3 duy\u1ec7t: Kh\u00f4ng th\u1ec3 duy\u1ec7t qua t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed m\u00e0 kh\u00f4ng pop</li> <li>Overhead: Dynamic array c\u00f3 th\u1ec3 t\u1ed1n b\u1ed9 nh\u1edb khi m\u1edf r\u1ed9ng</li> </ul>"},{"location":"Programming/DSA/Basic/03.stack/#7-so-sanh-stack-voi-cac-cau-truc-du-lieu-khac","title":"7. So S\u00e1nh Stack v\u1edbi C\u00e1c C\u1ea5u Tr\u00fac D\u1eef Li\u1ec7u Kh\u00e1c","text":"C\u1ea5u tr\u00fac Th\u00eam X\u00f3a Truy c\u1eadp \u0110\u1eb7c \u0111i\u1ec3m Stack O(1) - cu\u1ed1i O(1) - cu\u1ed1i O(1) - cu\u1ed1i LIFO Queue O(1) - cu\u1ed1i O(1) - \u0111\u1ea7u O(1) - \u0111\u1ea7u/cu\u1ed1i FIFO Array O(1) - cu\u1ed1i O(1) - cu\u1ed1i O(1) - b\u1ea5t k\u1ef3 Random access Linked List O(1) - \u0111\u1ea7u O(1) - \u0111\u1ea7u O(n) - duy\u1ec7t Dynamic size"},{"location":"Programming/DSA/Basic/03.stack/#8-khi-nao-nen-su-dung-stack","title":"8. Khi N\u00e0o N\u00ean S\u1eed D\u1ee5ng Stack?","text":""},{"location":"Programming/DSA/Basic/03.stack/#nen-su-dung-stack-khi","title":"\u2705 N\u00ean s\u1eed d\u1ee5ng Stack khi:","text":"<ul> <li>C\u1ea7n nguy\u00ean t\u1eafc LIFO (Last In, First Out)</li> <li>C\u1ea7n \"undo\" operations (nh\u01b0 Ctrl+Z)</li> <li>X\u1eed l\u00fd bi\u1ec3u th\u1ee9c to\u00e1n h\u1ecdc (infix to postfix)</li> <li>Ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a d\u1ea5u ngo\u1eb7c</li> <li>Qu\u1ea3n l\u00fd function calls</li> <li>Backtracking algorithms</li> <li>Depth-First Search (DFS)</li> </ul>"},{"location":"Programming/DSA/Basic/03.stack/#khong-nen-su-dung-stack-khi","title":"\u274c Kh\u00f4ng n\u00ean s\u1eed d\u1ee5ng Stack khi:","text":"<ul> <li>C\u1ea7n truy c\u1eadp ng\u1eabu nhi\u00ean v\u00e0o c\u00e1c ph\u1ea7n t\u1eed</li> <li>C\u1ea7n duy\u1ec7t qua t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed</li> <li>C\u1ea7n nguy\u00ean t\u1eafc FIFO (d\u00f9ng Queue thay th\u1ebf)</li> <li>C\u1ea7n t\u00ecm ki\u1ebfm trong d\u1eef li\u1ec7u (d\u00f9ng Hash Map ho\u1eb7c Tree)</li> </ul>"},{"location":"Programming/DSA/Basic/03.stack/#10-bai-tap-thuc-hanh","title":"10. B\u00e0i T\u1eadp Th\u1ef1c H\u00e0nh","text":""},{"location":"Programming/DSA/Basic/03.stack/#bai-1-valid-parentheses-leetcode-easy","title":"B\u00e0i 1: Valid Parentheses (LeetCode Easy)","text":"<p>Cho m\u1ed9t chu\u1ed7i ch\u1ec9 ch\u1ee9a c\u00e1c k\u00fd t\u1ef1 '(', ')', '{', '}', '[', ']', h\u00e3y x\u00e1c \u0111\u1ecbnh xem chu\u1ed7i c\u00f3 h\u1ee3p l\u1ec7 kh\u00f4ng.</p>"},{"location":"Programming/DSA/Basic/03.stack/#bai-2-min-stack-leetcode-medium","title":"B\u00e0i 2: Min Stack (LeetCode Medium)","text":"<p>Thi\u1ebft k\u1ebf m\u1ed9t stack h\u1ed7 tr\u1ee3 push, pop, top v\u00e0 getMin trong th\u1eddi gian O(1).</p>"},{"location":"Programming/DSA/Basic/03.stack/#bai-3-evaluate-reverse-polish-notation-leetcode-medium","title":"B\u00e0i 3: Evaluate Reverse Polish Notation (LeetCode Medium)","text":"<p>T\u00ednh to\u00e1n gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ec3u th\u1ee9c d\u1ea1ng Reverse Polish Notation.</p>"},{"location":"Programming/DSA/Basic/03.stack/#11-tong-ket","title":"11. T\u1ed5ng K\u1ebft","text":"<p>Stack l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u fundamental m\u00e0 m\u1ecdi developer c\u1ea7n n\u1eafm v\u1eefng:</p> <ul> <li>Nguy\u00ean t\u1eafc LIFO l\u00e0 c\u1ed1t l\u00f5i c\u1ee7a Stack</li> <li>Tri\u1ec3n khai \u0111\u01a1n gi\u1ea3n b\u1eb1ng dynamic array</li> <li>Hi\u1ec7u su\u1ea5t cao v\u1edbi t\u1ea5t c\u1ea3 thao t\u00e1c O(1)</li> <li>\u1ee8ng d\u1ee5ng r\u1ed9ng r\u00e3i t\u1eeb parsing \u0111\u1ebfn backtracking</li> <li>N\u1ec1n t\u1ea3ng cho nhi\u1ec1u thu\u1eadt to\u00e1n v\u00e0 h\u1ec7 th\u1ed1ng ph\u1ee9c t\u1ea1p</li> </ul> <p>Vi\u1ec7c hi\u1ec3u s\u00e2u v\u1ec1 Stack kh\u00f4ng ch\u1ec9 gi\u00fap b\u1ea1n gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i to\u00e1n coding m\u00e0 c\u00f2n gi\u00fap hi\u1ec3u r\u00f5 h\u01a1n v\u1ec1 c\u00e1ch m\u00e1y t\u00ednh ho\u1ea1t \u0111\u1ed9ng v\u00e0 qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb.</p> <p>L\u1eddi khuy\u00ean: H\u00e3y th\u1ef1c h\u00e0nh tri\u1ec3n khai Stack t\u1eeb \u0111\u1ea7u v\u00e0 gi\u1ea3i c\u00e1c b\u00e0i t\u1eadp related \u0111\u1ec3 th\u1ef1c s\u1ef1 master c\u1ea5u tr\u00fac d\u1eef li\u1ec7u quan tr\u1ecdng n\u00e0y!</p>"},{"location":"Programming/DSA/Basic/26.hash-usage/","title":"Hash Maps v\u00e0 Hash Sets: C\u1ea5u Tr\u00fac D\u1eef Li\u1ec7u Quan Tr\u1ecdng Nh\u1ea5t Trong L\u1eadp Tr\u00ecnh","text":""},{"location":"Programming/DSA/Basic/26.hash-usage/#hash-maps-va-hash-sets-cau-truc-du-lieu-quan-trong-nhat-trong-lap-trinh","title":"Hash Maps v\u00e0 Hash Sets: C\u1ea5u Tr\u00fac D\u1eef Li\u1ec7u Quan Tr\u1ecdng Nh\u1ea5t Trong L\u1eadp Tr\u00ecnh","text":"<p>Hash maps (b\u1ea3ng b\u0103m) v\u00e0 hash sets (t\u1eadp h\u1ee3p b\u0103m) l\u00e0 nh\u1eefng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u nh\u1ea5t trong l\u1eadp tr\u00ecnh, t\u1eeb ph\u1ecfng v\u1ea5n k\u1ef9 thu\u1eadt \u0111\u1ebfn c\u00e1c d\u1ef1 \u00e1n th\u1ef1c t\u1ebf. Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd t\u1eadp trung v\u00e0o c\u00e1ch s\u1eed d\u1ee5ng hash maps thay v\u00ec c\u00e1ch tri\u1ec3n khai ch\u00fang, v\u00ec vi\u1ec7c bi\u1ebft c\u00e1ch s\u1eed d\u1ee5ng hi\u1ec7u qu\u1ea3 quan tr\u1ecdng h\u01a1n nhi\u1ec1u.</p>"},{"location":"Programming/DSA/Basic/26.hash-usage/#1-tong-quan-ve-maps-va-sets","title":"1. T\u1ed5ng Quan v\u1ec1 Maps v\u00e0 Sets","text":""},{"location":"Programming/DSA/Basic/26.hash-usage/#11-set-tap-hop","title":"1.1. Set (T\u1eadp h\u1ee3p)","text":"<ul> <li>Set l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u00e1c gi\u00e1 tr\u1ecb duy nh\u1ea5t: <code>{1, 2, 3}</code>.</li> <li>Kh\u00f4ng cho ph\u00e9p c\u00e1c ph\u1ea7n t\u1eed tr\u00f9ng l\u1eb7p.</li> </ul>"},{"location":"Programming/DSA/Basic/26.hash-usage/#12-map-anh-xa","title":"1.2. Map (\u00c1nh x\u1ea1)","text":"<ul> <li>Map ph\u1ee9c t\u1ea1p h\u01a1n, l\u00e0 t\u1eadp h\u1ee3p c\u00e1c c\u1eb7p key-value (kh\u00f3a-gi\u00e1 tr\u1ecb).</li> <li>V\u00ed d\u1ee5: Danh b\u1ea1 \u0111i\u1ec7n tho\u1ea1i v\u1edbi t\u00ean ng\u01b0\u1eddi l\u00e0 key, s\u1ed1 \u0111i\u1ec7n tho\u1ea1i l\u00e0 value.</li> <li>Key \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 truy c\u1eadp v\u00e0 s\u1eafp x\u1ebfp d\u1eef li\u1ec7u.</li> </ul>"},{"location":"Programming/DSA/Basic/26.hash-usage/#2-so-sanh-tree-maps-vs-hash-maps","title":"2. So S\u00e1nh Tree Maps vs Hash Maps","text":"Thao t\u00e1c Tree Map Hash Map Insert O(log n) O(1)* Remove O(log n) O(1)* Search O(log n) O(1)* Duy\u1ec7t c\u00f3 th\u1ee9 t\u1ef1 O(n) O(n log n) <p>*L\u01b0u \u00fd: O(1) \u1edf \u0111\u00e2y l\u00e0 average case (tr\u01b0\u1eddng h\u1ee3p trung b\u00ecnh), kh\u00f4ng ph\u1ea3i worst case.</p>"},{"location":"Programming/DSA/Basic/26.hash-usage/#21-uu-iem-cua-hash-maps","title":"2.1. \u01afu \u0111i\u1ec3m c\u1ee7a Hash Maps","text":"<ul> <li>Hi\u1ec7u su\u1ea5t v\u01b0\u1ee3t tr\u1ed9i: C\u00e1c thao t\u00e1c c\u01a1 b\u1ea3n \u0111\u1ec1u c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(1).</li> <li>Ph\u00f9 h\u1ee3p cho h\u1ea7u h\u1ebft \u1ee9ng d\u1ee5ng: Khi kh\u00f4ng c\u1ea7n duy tr\u00ec th\u1ee9 t\u1ef1 s\u1eafp x\u1ebfp.</li> </ul>"},{"location":"Programming/DSA/Basic/26.hash-usage/#22-nhuoc-iem-cua-hash-maps","title":"2.2. Nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a Hash Maps","text":"<ul> <li>Kh\u00f4ng duy tr\u00ec th\u1ee9 t\u1ef1: N\u1ebfu c\u1ea7n duy\u1ec7t theo th\u1ee9 t\u1ef1 s\u1eafp x\u1ebfp, ph\u1ea3i s\u1eafp x\u1ebfp l\u1ea1i v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(n log n).</li> <li>Worst case c\u00f3 th\u1ec3 l\u00e0 O(n): Trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t (collision nhi\u1ec1u), c\u00e1c thao t\u00e1c c\u00f3 th\u1ec3 ch\u1eadm h\u01a1n.</li> </ul>"},{"location":"Programming/DSA/Basic/26.hash-usage/#3-vi-du-thuc-te-em-so-lan-xuat-hien-cua-ten","title":"3. V\u00ed D\u1ee5 Th\u1ef1c T\u1ebf: \u0110\u1ebfm S\u1ed1 L\u1ea7n Xu\u1ea5t Hi\u1ec7n C\u1ee7a T\u00ean","text":""},{"location":"Programming/DSA/Basic/26.hash-usage/#31-bai-toan","title":"3.1. B\u00e0i To\u00e1n","text":"<p>Cho m\u1ed9t danh s\u00e1ch t\u00ean: <code>[\"Alice\", \"Brad\", \"Colin\", \"Brad\", \"Dylan\", \"Kim\"]</code> H\u00e3y \u0111\u1ebfm s\u1ed1 l\u1ea7n m\u1ed7i t\u00ean xu\u1ea5t hi\u1ec7n.</p>"},{"location":"Programming/DSA/Basic/26.hash-usage/#32-phan-tich-thuat-toan","title":"3.2. Ph\u00e2n T\u00edch Thu\u1eadt To\u00e1n","text":"<p>B\u01b0\u1edbc 1: Kh\u1edfi t\u1ea1o hash map r\u1ed7ng </p><pre><code>count_map = {}\n</code></pre><p></p> <p>B\u01b0\u1edbc 2: Duy\u1ec7t qua t\u1eebng t\u00ean trong danh s\u00e1ch - \"Alice\": Kh\u00f4ng c\u00f3 trong map \u2192 Th\u00eam Alice: 1 - \"Brad\": Kh\u00f4ng c\u00f3 trong map \u2192 Th\u00eam Brad: 1 - \"Colin\": Kh\u00f4ng c\u00f3 trong map \u2192 Th\u00eam Colin: 1 - \"Brad\": \u0110\u00e3 c\u00f3 trong map \u2192 T\u0103ng count l\u00ean: Brad: 2 - \"Dylan\": Kh\u00f4ng c\u00f3 trong map \u2192 Th\u00eam Dylan: 1 - \"Kim\": Kh\u00f4ng c\u00f3 trong map \u2192 Th\u00eam Kim: 1</p> <p>K\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng: </p><pre><code>{\n    \"Alice\": 1,\n    \"Brad\": 2, \n    \"Colin\": 1,\n    \"Dylan\": 1,\n    \"Kim\": 1\n}\n</code></pre><p></p>"},{"location":"Programming/DSA/Basic/26.hash-usage/#33-phan-tich-o-phuc-tap","title":"3.3. Ph\u00e2n T\u00edch \u0110\u1ed9 Ph\u1ee9c T\u1ea1p","text":"<ul> <li>Th\u1eddi gian: O(n) - v\u1edbi n l\u00e0 s\u1ed1 ph\u1ea7n t\u1eed trong danh s\u00e1ch</li> <li>M\u1ed7i thao t\u00e1c search v\u00e0 insert \u0111\u1ec1u l\u00e0 O(1)</li> <li> <p>C\u00f3 n ph\u1ea7n t\u1eed \u2192 t\u1ed5ng c\u1ed9ng O(n)</p> </li> <li> <p>Kh\u00f4ng gian: O(n) - trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t t\u1ea5t c\u1ea3 t\u00ean \u0111\u1ec1u kh\u00e1c nhau</p> </li> </ul> <p>So s\u00e1nh v\u1edbi Tree Map: - Tree Map s\u1ebd c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p O(n log n) v\u00ec m\u1ed7i thao t\u00e1c insert/search l\u00e0 O(log n) - Hash Map hi\u1ec7u qu\u1ea3 h\u01a1n \u0111\u00e1ng k\u1ec3!</p>"},{"location":"Programming/DSA/Basic/26.hash-usage/#4-code-implementation-trong-python","title":"4. Code Implementation trong Python","text":"<pre><code>def count_names(names):\n    \"\"\"\n    \u0110\u1ebfm s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a m\u1ed7i t\u00ean trong danh s\u00e1ch\n\n    Args:\n        names: List c\u00e1c t\u00ean c\u1ea7n \u0111\u1ebfm\n\n    Returns:\n        Dictionary v\u1edbi key l\u00e0 t\u00ean, value l\u00e0 s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n\n    \"\"\"\n    count_map = {}  # Kh\u1edfi t\u1ea1o hash map r\u1ed7ng\n\n    for name in names:\n        if name not in count_map:  # O(1) - ki\u1ec3m tra key c\u00f3 t\u1ed3n t\u1ea1i\n            count_map[name] = 1    # O(1) - th\u00eam key m\u1edbi\n        else:\n            count_map[name] += 1   # O(1) - c\u1eadp nh\u1eadt gi\u00e1 tr\u1ecb\n\n    return count_map\n\n# V\u00ed d\u1ee5 s\u1eed d\u1ee5ng\nnames = [\"Alice\", \"Brad\", \"Colin\", \"Brad\", \"Dylan\", \"Kim\"]\nresult = count_names(names)\nprint(result)\n# Output: {'Alice': 1, 'Brad': 2, 'Colin': 1, 'Dylan': 1, 'Kim': 1}\n</code></pre>"},{"location":"Programming/DSA/Basic/26.hash-usage/#41-cach-viet-ngan-gon-hon","title":"4.1. C\u00e1ch Vi\u1ebft Ng\u1eafn G\u1ecdn H\u01a1n","text":"<pre><code>from collections import defaultdict\n\ndef count_names_v2(names):\n    count_map = defaultdict(int)  # T\u1ef1 \u0111\u1ed9ng kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb 0\n\n    for name in names:\n        count_map[name] += 1\n\n    return dict(count_map)\n\n# Ho\u1eb7c s\u1eed d\u1ee5ng Counter\nfrom collections import Counter\n\ndef count_names_v3(names):\n    return dict(Counter(names))\n</code></pre>"},{"location":"Programming/DSA/Basic/26.hash-usage/#5-ac-tinh-quan-trong-cua-hash-maps","title":"5. \u0110\u1eb7c T\u00ednh Quan Tr\u1ecdng c\u1ee7a Hash Maps","text":""},{"location":"Programming/DSA/Basic/26.hash-usage/#51-khong-cho-phep-duplicate-keys","title":"5.1. Kh\u00f4ng Cho Ph\u00e9p Duplicate Keys","text":"<ul> <li>M\u1ed7i key ch\u1ec9 xu\u1ea5t hi\u1ec7n m\u1ed9t l\u1ea7n trong hash map</li> <li>N\u1ebfu th\u00eam key \u0111\u00e3 t\u1ed3n t\u1ea1i, gi\u00e1 tr\u1ecb c\u0169 s\u1ebd b\u1ecb ghi \u0111\u00e8</li> <li>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 Tree Maps v\u00e0 Sets</li> </ul>"},{"location":"Programming/DSA/Basic/26.hash-usage/#52-key-value-mapping","title":"5.2. Key-Value Mapping","text":"<ul> <li>Key \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 truy c\u1eadp value</li> <li>Key ph\u1ea3i l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u immutable (string, number, tuple)</li> <li>Value c\u00f3 th\u1ec3 l\u00e0 b\u1ea5t k\u1ef3 ki\u1ec3u d\u1eef li\u1ec7u n\u00e0o</li> </ul>"},{"location":"Programming/DSA/Basic/26.hash-usage/#6-cac-ung-dung-thuc-te-khac","title":"6. C\u00e1c \u1ee8ng D\u1ee5ng Th\u1ef1c T\u1ebf Kh\u00e1c","text":""},{"location":"Programming/DSA/Basic/26.hash-usage/#61-cachememoization","title":"6.1. Cache/Memoization","text":"<pre><code># C\u00e1ch CH\u1eacM (kh\u00f4ng c\u00f3 cache):\n\ndef fibonacci_slow(n):\n    if n &lt;= 1:\n        return n\n    return fibonacci_slow(n-1) + fibonacci_slow(n-2)\n\n# Test\nprint(fibonacci_slow(5))  # K\u1ebft qu\u1ea3: 5\nprint(fibonacci_slow(10)) # K\u1ebft qu\u1ea3: 55\n# fibonacci_slow(40) # S\u1ebd r\u1ea5t ch\u1eadm!\n# V\u1ea5n \u0111\u1ec1: T\u00ednh to\u00e1n l\u1eb7p l\u1ea1i nhi\u1ec1u l\u1ea7n!\n\n# V\u00ed d\u1ee5 t\u00ednh F(5):\n\nF(5) = F(4) + F(3)\n     = [F(3) + F(2)] + [F(2) + F(1)]\n     = [F(2) + F(1) + F(2)] + [F(2) + F(1)]\n     = [F(1) + F(0) + F(1) + F(2)] + [F(1) + F(0) + F(1)]\n\u2192 F(2) \u0111\u01b0\u1ee3c t\u00ednh 3 l\u1ea7n, F(1) \u0111\u01b0\u1ee3c t\u00ednh 5 l\u1ea7n! L\u00e3ng ph\u00ed!\n#### d\u00f9ng cache\ndef fibonacci_with_cache():\n    cache = {}  # T\u1eeb \u0111i\u1ec3n l\u01b0u tr\u1eef k\u1ebft qu\u1ea3 \u0111\u00e3 t\u00ednh\n\n    def fib(n):\n        # B\u01b0\u1edbc 1: Ki\u1ec3m tra cache tr\u01b0\u1edbc\n        if n in cache:\n            print(f\"L\u1ea5y t\u1eeb cache: F({n}) = {cache[n]}\")\n            return cache[n]\n\n        # B\u01b0\u1edbc 2: T\u00ednh to\u00e1n n\u1ebfu ch\u01b0a c\u00f3 trong cache\n        if n &lt;= 1:\n            result = n\n        else:\n            print(f\"\u0110ang t\u00ednh F({n})...\")\n            result = fib(n-1) + fib(n-2)\n\n        # B\u01b0\u1edbc 3: L\u01b0u k\u1ebft qu\u1ea3 v\u00e0o cache\n        cache[n] = result\n        print(f\"L\u01b0u v\u00e0o cache: F({n}) = {result}\")\n        return result\n\n    return fib  # Tr\u1ea3 v\u1ec1 function fib\n\n### demo \n# T\u1ea1o function v\u1edbi cache\nfib = fibonacci_with_cache()\n\nprint(\"=== T\u00ednh F(5) l\u1ea7n \u0111\u1ea7u ===\")\nresult = fib(5)\nprint(f\"K\u1ebft qu\u1ea3: {result}\")\n\nprint(\"\\n=== T\u00ednh F(5) l\u1ea7n th\u1ee9 2 ===\")\nresult = fib(5)  # L\u1ea7n n\u00e0y s\u1ebd l\u1ea5y t\u1eeb cache\nprint(f\"K\u1ebft qu\u1ea3: {result}\")\n\nprint(\"\\n=== T\u00ednh F(7) ===\")\nresult = fib(7)  # S\u1ebd t\u00e1i s\u1eed d\u1ee5ng c\u00e1c gi\u00e1 tr\u1ecb \u0111\u00e3 cache\nprint(f\"K\u1ebft qu\u1ea3: {result}\")\n\n### output \n=== T\u00ednh F(5) l\u1ea7n \u0111\u1ea7u ===\n\u0110ang t\u00ednh F(5)...\n\u0110ang t\u00ednh F(4)...\n\u0110ang t\u00ednh F(3)...\n\u0110ang t\u00ednh F(2)...\nL\u01b0u v\u00e0o cache: F(0) = 0\nL\u01b0u v\u00e0o cache: F(1) = 1\nL\u01b0u v\u00e0o cache: F(2) = 1\nL\u1ea5y t\u1eeb cache: F(1) = 1\nL\u01b0u v\u00e0o cache: F(3) = 2\nL\u1ea5y t\u1eeb cache: F(2) = 1\nL\u01b0u v\u00e0o cache: F(4) = 3\nL\u1ea5y t\u1eeb cache: F(3) = 2\nL\u01b0u v\u00e0o cache: F(5) = 5\nK\u1ebft qu\u1ea3: 5\n\n=== T\u00ednh F(5) l\u1ea7n th\u1ee9 2 ===\nL\u1ea5y t\u1eeb cache: F(5) = 5\nK\u1ebft qu\u1ea3: 5\n\n=== T\u00ednh F(7) ===\n\u0110ang t\u00ednh F(7)...\n\u0110ang t\u00ednh F(6)...\nL\u1ea5y t\u1eeb cache: F(5) = 5\nL\u1ea5y t\u1eeb cache: F(4) = 3\nL\u01b0u v\u00e0o cache: F(6) = 8\nL\u1ea5y t\u1eeb cache: F(5) = 5\nL\u01b0u v\u00e0o cache: F(7) = 13\nK\u1ebft qu\u1ea3: 13\n</code></pre>"},{"location":"Programming/DSA/Basic/26.hash-usage/#62-database-indexing","title":"6.2. Database Indexing","text":"<pre><code>users = [\n    {'id': 1, 'name': 'Alice', 'email': 'alice@email.com'},\n    {'id': 2, 'name': 'Bob', 'email': 'bob@email.com'},\n    {'id': 3, 'name': 'Charlie', 'email': 'charlie@email.com'},\n    {'id': 4, 'name': 'Diana', 'email': 'diana@email.com'},\n    # ... c\u00f3 th\u1ec3 c\u00f3 h\u00e0ng ngh\u00ecn users\n]\n\n# C\u00e1ch tra c\u1ee9u CH\u1eacM - ph\u1ea3i duy\u1ec7t qua t\u1eebng user\ndef find_user_slow(users, user_id):\n    for user in users:  # Duy\u1ec7t t\u1eeb \u0111\u1ea7u \u0111\u1ebfn cu\u1ed1i list\n        if user['id'] == user_id:\n            return user\n    return None\n\n# V\u00ed d\u1ee5: t\u00ecm user c\u00f3 id = 3\nresult = find_user_slow(users, 3)\nprint(result)  # {'id': 3, 'name': 'Charlie', 'email': 'charlie@email.com'}\n# V\u1ea5n \u0111\u1ec1: N\u1ebfu c\u00f3 1000 users v\u00e0 user b\u1ea1n c\u1ea7n t\u00ecm \u1edf cu\u1ed1i danh s\u00e1ch, ph\u1ea3i duy\u1ec7t qua 1000 users \u2192 O(n)\n\n\ndef create_user_index(users):\n    \"\"\"T\u1ea1o 't\u1eeb \u0111i\u1ec3n tra c\u1ee9u' user theo ID\"\"\"\n    user_index = {}\n\n    for user in users:\n        # D\u00f9ng ID l\u00e0m key, to\u00e0n b\u1ed9 th\u00f4ng tin user l\u00e0m value\n        user_index[user['id']] = user\n\n    return user_index\n\n\n\n# T\u1ea1o index m\u1ed9t l\u1ea7n\nusers_index = create_user_index(users)\nprint(\"Index \u0111\u01b0\u1ee3c t\u1ea1o:\")\nprint(users_index)\n\n# K\u1ebft qu\u1ea3 index s\u1ebd nh\u01b0 th\u1ebf n\u00e0y:\n{\n    1: {'id': 1, 'name': 'Alice', 'email': 'alice@email.com'},\n    2: {'id': 2, 'name': 'Bob', 'email': 'bob@email.com'}, \n    3: {'id': 3, 'name': 'Charlie', 'email': 'charlie@email.com'},\n    4: {'id': 4, 'name': 'Diana', 'email': 'diana@email.com'}\n}\ndef find_user_by_id(user_index, user_id):\n    \"\"\"Tra c\u1ee9u NHANH b\u1eb1ng hash map\"\"\"\n    return user_index.get(user_id)  # Truy c\u1eadp tr\u1ef1c ti\u1ebfp b\u1eb1ng key\n\n# S\u1eed d\u1ee5ng\nuser = find_user_by_id(users_index, 3)\nprint(user)  # {'id': 3, 'name': 'Charlie', 'email': 'charlie@email.com'}\n</code></pre>"},{"location":"Programming/DSA/Basic/26.hash-usage/#63-two-sum-problem","title":"6.3. Two Sum Problem","text":"<pre><code>### de bai \nnums = [2, 7, 11, 15]\ntarget = 9\n# K\u1ebft qu\u1ea3: [0, 1] v\u00ec nums[0] + nums[1] = 2 + 7 = 9\n### code c\u00f9i  \ndef two_sum_slow(nums, target):\n    \"\"\"C\u00e1ch ch\u1eadm: Th\u1eed t\u1ea5t c\u1ea3 c\u00e1c c\u1eb7p\"\"\"\n    for i in range(len(nums)):\n        for j in range(i + 1, len(nums)):\n            if nums[i] + nums[j] == target:\n                return [i, j]\n    return []\n\n# Test\nnums = [2, 7, 11, 15]\ntarget = 9\nresult = two_sum_slow(nums, target)\nprint(f\"K\u1ebft qu\u1ea3: {result}\")  # [0, 1]\n\nV\u1ea5n \u0111\u1ec1: V\u1edbi n ph\u1ea7n t\u1eed, ph\u1ea3i th\u1eed n*(n-1)/2 c\u1eb7p \u2192 O(n\u00b2) - r\u1ea5t ch\u1eadm!\n\nThay v\u00ec th\u1eed t\u1ea5t c\u1ea3 c\u00e1c c\u1eb7p, ta s\u1eed d\u1ee5ng \"complement\" (s\u1ed1 b\u00f9):\n\nV\u1edbi m\u1ed7i s\u1ed1 num, ta t\u00ecm complement = target - num\nN\u1ebfu complement \u0111\u00e3 g\u1eb7p tr\u01b0\u1edbc \u0111\u00f3 \u2192 t\u00ecm th\u1ea5y c\u1eb7p!\nS\u1eed d\u1ee5ng hash map \u0111\u1ec3 l\u01b0u tr\u1eef: {gi\u00e1_tr\u1ecb: ch\u1ec9_s\u1ed1}\n\ndef two_sum_with_debug(nums, target):\n    print(f\"T\u00ecm hai s\u1ed1 c\u00f3 t\u1ed5ng = {target} trong {nums}\")\n    num_map = {}\n\n    for i, num in enumerate(nums):\n        complement = target - num\n        print(f\"\\nB\u01b0\u1edbc {i+1}: num = {num}, complement = {complement}\")\n        print(f\"num_map hi\u1ec7n t\u1ea1i: {num_map}\")\n\n        if complement in num_map:\n            result = [num_map[complement], i]\n            print(f\"\u2705 T\u00ecm th\u1ea5y! nums[{num_map[complement]}] + nums[{i}] = {nums[num_map[complement]]} + {num} = {target}\")\n            return result\n\n        num_map[num] = i\n        print(f\"L\u01b0u {num} \u2192 index {i} v\u00e0o map\")\n\n    print(\"\u274c Kh\u00f4ng t\u00ecm th\u1ea5y c\u1eb7p n\u00e0o\")\n    return []\n\n# Test\nnums = [2, 7, 11, 15]\ntarget = 9\nresult = two_sum_with_debug(nums, target)\nprint(f\"\\nK\u1ebft qu\u1ea3 cu\u1ed1i: {result}\")\n\nT\u00ecm hai s\u1ed1 c\u00f3 t\u1ed5ng = 9 trong [2, 7, 11, 15]\n\nB\u01b0\u1edbc 1: num = 2, complement = 7\nnum_map hi\u1ec7n t\u1ea1i: {}\nL\u01b0u 2 \u2192 index 0 v\u00e0o map\n\nB\u01b0\u1edbc 2: num = 7, complement = 2\nnum_map hi\u1ec7n t\u1ea1i: {2: 0}\n\u2705 T\u00ecm th\u1ea5y! nums[0] + nums[1] = 2 + 7 = 9\n\nK\u1ebft qu\u1ea3 cu\u1ed1i: [0, 1]\n</code></pre>"},{"location":"Programming/DSA/Basic/26.hash-usage/#7-khi-nao-nen-su-dung-hash-maps","title":"7. Khi N\u00e0o N\u00ean S\u1eed D\u1ee5ng Hash Maps?","text":""},{"location":"Programming/DSA/Basic/26.hash-usage/#su-dung-hash-maps-khi","title":"\u2705 S\u1eed d\u1ee5ng Hash Maps khi:","text":"<ul> <li>C\u1ea7n truy c\u1eadp, th\u00eam, x\u00f3a d\u1eef li\u1ec7u nhanh ch\u00f3ng (O(1))</li> <li>Kh\u00f4ng c\u1ea7n duy tr\u00ec th\u1ee9 t\u1ef1 s\u1eafp x\u1ebfp</li> <li>C\u1ea7n \u0111\u1ebfm, nh\u00f3m, ho\u1eb7c tra c\u1ee9u d\u1eef li\u1ec7u</li> <li>X\u1eed l\u00fd large datasets v\u1edbi y\u00eau c\u1ea7u hi\u1ec7u su\u1ea5t cao</li> </ul>"},{"location":"Programming/DSA/Basic/26.hash-usage/#khong-nen-su-dung-hash-maps-khi","title":"\u274c Kh\u00f4ng n\u00ean s\u1eed d\u1ee5ng Hash Maps khi:","text":"<ul> <li>C\u1ea7n duy tr\u00ec th\u1ee9 t\u1ef1 s\u1eafp x\u1ebfp (d\u00f9ng Tree Map)</li> <li>C\u1ea7n duy\u1ec7t d\u1eef li\u1ec7u theo th\u1ee9 t\u1ef1 th\u01b0\u1eddng xuy\u00ean</li> <li>Memory usage l\u00e0 v\u1ea5n \u0111\u1ec1 quan tr\u1ecdng (hash maps c\u00f3 overhead)</li> </ul>"},{"location":"Programming/DSA/Basic/26.hash-usage/#8-tong-ket","title":"8. T\u1ed5ng K\u1ebft","text":"<p>Hash Maps l\u00e0 c\u00f4ng c\u1ee5 m\u1ea1nh m\u1ebd v\u00e0 c\u1ea7n thi\u1ebft trong toolkit c\u1ee7a m\u1ecdi developer:</p> <ul> <li>Hi\u1ec7u su\u1ea5t xu\u1ea5t s\u1eafc: O(1) cho c\u00e1c thao t\u00e1c c\u01a1 b\u1ea3n</li> <li>\u0110a d\u1ee5ng: Ph\u00f9 h\u1ee3p v\u1edbi nhi\u1ec1u lo\u1ea1i b\u00e0i to\u00e1n</li> <li>D\u1ec5 s\u1eed d\u1ee5ng: Syntax \u0111\u01a1n gi\u1ea3n trong h\u1ea7u h\u1ebft ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh</li> <li>\u1ee8ng d\u1ee5ng r\u1ed9ng r\u00e3i: T\u1eeb caching \u0111\u1ebfn database indexing</li> </ul> <p>Vi\u1ec7c th\u00e0nh th\u1ea1o hash maps s\u1ebd gi\u00fap b\u1ea1n gi\u1ea3i quy\u1ebft nhi\u1ec1u b\u00e0i to\u00e1n m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 v\u00e0 elegant. H\u00e3y th\u1ef1c h\u00e0nh th\u01b0\u1eddng xuy\u00ean v\u1edbi c\u00e1c b\u00e0i t\u1eadp kh\u00e1c nhau \u0111\u1ec3 l\u00e0m ch\u1ee7 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u quan tr\u1ecdng n\u00e0y!</p>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/","title":"27.Hash implementation","text":"<p>n\u00ean xem video \u0111\u1ec3 hi\u1ec3u d\u1ec5 h\u01a1n </p>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#hieu-sau-hashmap-cach-hashmap-hoat-ong-ben-trong-hash-implementation","title":"Hi\u1ec3u S\u00e2u HashMap: C\u00e1ch HashMap Ho\u1ea1t \u0110\u1ed9ng B\u00ean Trong (Hash Implementation)","text":"<p>B\u1ea1n mu\u1ed1n t\u1ef1 tin ph\u1ecfng v\u1ea5n v\u00e0 l\u00e0m b\u00e0i v\u1ec1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u HashMap? H\u00e3y \u0111\u1ecdc b\u00e0i n\u00e0y \u2013 m\u00ecnh s\u1ebd gi\u00fap b\u1ea1n hi\u1ec3u t\u1eeb g\u1ed1c \u0111\u1ebfn ng\u1ecdn, kh\u00f4ng ch\u1ec9 bi\u1ebft d\u00f9ng m\u00e0 c\u00f2n n\u1eafm r\u00f5 c\u00e1ch HashMap l\u00e0m vi\u1ec7c b\u00ean trong!</p>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#1-hashmap-la-gi-tai-sao-lai-than-thanh-en-vay","title":"1. HashMap l\u00e0 g\u00ec &amp; t\u1ea1i sao l\u1ea1i \"th\u1ea7n th\u00e1nh\" \u0111\u1ebfn v\u1eady?","text":"<ul> <li>HashMap l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u d\u00f9ng \u0111\u1ec3 l\u01b0u tr\u1eef c\u00e1c c\u1eb7p key-value (kh\u00f3a-gi\u00e1 tr\u1ecb).</li> <li>B\u1ea1n c\u00f3 th\u1ec3 tra c\u1ee9u, th\u00eam, x\u00f3a m\u1ed9t ph\u1ea7n t\u1eed theo key m\u1ed9t c\u00e1ch c\u1ef1c k\u1ef3 nhanh \u2013 trung b\u00ecnh ch\u1ec9 m\u1ea5t O(1).</li> <li>\u0110\u01b0\u1ee3c s\u1eed d\u1ee5ng \u1edf kh\u1eafp m\u1ecdi n\u01a1i: t\u1eeb \u0111\u1ebfm t\u1ea7n su\u1ea5t, tra c\u1ee9u d\u1eef li\u1ec7u, cache, \u0111\u1ebfn c\u00e1c b\u00e0i to\u00e1n x\u1eed l\u00fd chu\u1ed7i, m\u1ea3ng...</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#2-hashmap-hoat-ong-nhu-the-nao-tu-tu-duy-en-thuc-te","title":"2. HashMap ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o? (T\u1eeb t\u01b0 duy \u0111\u1ebfn th\u1ef1c t\u1ebf)","text":""},{"location":"Programming/DSA/Basic/27.Hash-implementation/#21-y-tuong-cot-loi","title":"2.1. \u00dd t\u01b0\u1edfng c\u1ed1t l\u00f5i","text":"<ul> <li>B\u1ea1n h\u00ecnh dung HashMap b\u00ean trong l\u00e0 m\u1ed9t c\u00e1i m\u1ea3ng (<code>array</code>). Nh\u01b0ng thay v\u00ec truy xu\u1ea5t theo s\u1ed1 th\u1ee9 t\u1ef1 (<code>array[0]</code>, <code>array[1]</code>...), b\u1ea1n s\u1ebd truy xu\u1ea5t theo key (v\u00ed d\u1ee5: \"username\", \"email\"...).</li> <li>\u0110\u1ec3 chuy\u1ec3n t\u1eeb key (c\u00f3 th\u1ec3 l\u00e0 chu\u1ed7i, s\u1ed1, tuple...) th\u00e0nh ch\u1ec9 s\u1ed1 trong m\u1ea3ng, c\u1ea7n m\u1ed9t b\u01b0\u1edbc \"b\u0103m\" (hashing).</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#22-hash-function-ham-bam","title":"2.2. Hash Function (H\u00e0m b\u0103m)","text":"<ul> <li>Hash function l\u00e0 h\u00e0m nh\u1eadn key v\u00e0 tr\u1ea3 ra m\u1ed9t s\u1ed1 nguy\u00ean.</li> <li>S\u1ed1 nguy\u00ean n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh index trong m\u1ea3ng: <code>index = hash(key) % capacity</code>   (capacity l\u00e0 k\u00edch th\u01b0\u1edbc m\u1ea3ng hi\u1ec7n t\u1ea1i)</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#vi-du-on-gian","title":"V\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n:","text":"<ul> <li>Key: \"lelongc\"</li> <li>Hash: (gi\u1ea3 s\u1eed) 123456</li> <li>N\u1ebfu capacity = 8 th\u00ec index = 123456 % 8 = 0</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#23-chen-insert-tim-kiem-get-xoa-delete","title":"2.3. Ch\u00e8n (insert), T\u00ecm ki\u1ebfm (get), X\u00f3a (delete)","text":"<ul> <li>Ch\u00e8n: T\u00ednh ch\u1ec9 s\u1ed1 b\u1eb1ng hash function \u2192 th\u00eam c\u1eb7p key-value v\u00e0o \u0111\u00fang \u00f4 m\u1ea3ng \u0111\u00f3.</li> <li>T\u00ecm ki\u1ebfm: Hash key l\u1ea5y ch\u1ec9 s\u1ed1 \u2192 ki\u1ec3m tra \u00f4 m\u1ea3ng \u0111\u00f3 c\u00f3 key b\u1ea1n c\u1ea7n hay kh\u00f4ng.</li> <li>X\u00f3a: T\u01b0\u01a1ng t\u1ef1 t\u00ecm ki\u1ebfm, sau \u0111\u00f3 x\u00f3a c\u1eb7p key-value n\u1ebfu c\u00f3.</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#3-va-cham-collision-tai-sao-va-xu-ly-ra-sao","title":"3. Va ch\u1ea1m (Collision): T\u1ea1i sao v\u00e0 x\u1eed l\u00fd ra sao?","text":""},{"location":"Programming/DSA/Basic/27.Hash-implementation/#31-collision-la-gi","title":"3.1. Collision l\u00e0 g\u00ec?","text":"<ul> <li>Collision x\u1ea3y ra khi 2 key kh\u00e1c nhau cho ra c\u00f9ng index sau khi hash (vd: \"abc\" v\u00e0 \"xyz\" c\u00f9ng ra index 0).</li> <li>Va ch\u1ea1m l\u00e0 \u0111i\u1ec1u kh\u00f4ng th\u1ec3 tr\u00e1nh kh\u1ecfi v\u00ec s\u1ed1 l\u01b0\u1ee3ng key c\u00f3 th\u1ec3 r\u1ea5t l\u1edbn, nh\u01b0ng m\u1ea3ng th\u00ec c\u00f3 gi\u1edbi h\u1ea1n.</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#32-cac-cach-xu-ly-va-cham","title":"3.2. C\u00e1c c\u00e1ch x\u1eed l\u00fd va ch\u1ea1m","text":"<ul> <li>Chaining (d\u00f9ng linked list):</li> <li>M\u1ed7i \u00f4 trong m\u1ea3ng ch\u1ee9a m\u1ed9t danh s\u00e1ch (list) c\u00e1c c\u1eb7p key-value.</li> <li>Khi collision, ch\u1ec9 c\u1ea7n th\u00eam key-value m\u1edbi v\u00e0o danh s\u00e1ch n\u00e0y.</li> <li> <p>Khi t\u00ecm ki\u1ebfm, duy\u1ec7t trong danh s\u00e1ch \u0111\u1ec3 t\u00ecm \u0111\u00fang key.</p> </li> <li> <p>Open Addressing (\u0111\u1ecba ch\u1ec9 m\u1edf):</p> </li> <li>N\u1ebfu index b\u1ecb chi\u1ebfm, t\u00ecm \u00f4 tr\u1ed1ng ti\u1ebfp theo trong m\u1ea3ng (linear probing/quadratic probing/double hashing).</li> <li>\u0110a s\u1ed1 c\u00e1c ng\u00f4n ng\u1eef hi\u1ec7n \u0111\u1ea1i d\u00f9ng chaining v\u00ec d\u1ec5 c\u00e0i \u0111\u1eb7t &amp; \u1ed5n \u0111\u1ecbnh.</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#4-khi-nao-can-mo-rong-mang-rehashing","title":"4. Khi n\u00e0o c\u1ea7n m\u1edf r\u1ed9ng m\u1ea3ng (rehashing)?","text":""},{"location":"Programming/DSA/Basic/27.Hash-implementation/#41-load-factor-tai-trong","title":"4.1. Load factor (t\u1ea3i tr\u1ecdng)","text":"<ul> <li>Load factor = s\u1ed1 ph\u1ea7n t\u1eed \u0111\u00e3 l\u01b0u / dung l\u01b0\u1ee3ng m\u1ea3ng.</li> <li>Khi load factor qu\u00e1 cao (vd: 0.75), nguy c\u01a1 collision t\u0103ng m\u1ea1nh \u2192 c\u1ea7n m\u1edf r\u1ed9ng m\u1ea3ng.</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#42-rehashing-tang-kich-thuoc-mang","title":"4.2. Rehashing (t\u0103ng k\u00edch th\u01b0\u1edbc m\u1ea3ng)","text":"<ul> <li>T\u1ea1o m\u1ea3ng m\u1edbi l\u1edbn h\u01a1n (th\u01b0\u1eddng g\u1ea5p \u0111\u00f4i &amp; l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1 n\u1ebfu t\u1ed1i \u01b0u).</li> <li>B\u0103m l\u1ea1i t\u1ea5t c\u1ea3 c\u00e1c key c\u0169 theo capacity m\u1edbi v\u00e0 chuy\u1ec3n sang m\u1ea3ng m\u1edbi.</li> <li>\u0110\u00e2y l\u00e0 thao t\u00e1c t\u1ed1n th\u1eddi gian (O(n)), nh\u01b0ng kh\u00f4ng di\u1ec5n ra th\u01b0\u1eddng xuy\u00ean.</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#5-demo-code-hashmap-on-gian-python","title":"5. Demo code HashMap \u0111\u01a1n gi\u1ea3n (Python)","text":"<pre><code>class Pair:\n    def __init__(self, key, value):\n        self.key = key\n        self.value = value\n\nclass SimpleHashMap:\n    def __init__(self, capacity=8):\n        self.capacity = capacity\n        self.size = 0\n        self.buckets = [[] for _ in range(capacity)]\n\n    def _hash(self, key):\n        # Hash \u0111\u01a1n gi\u1ea3n (kh\u00f4ng t\u1ed1i \u01b0u)\n        return hash(key) % self.capacity\n\n    def put(self, key, value):\n        index = self._hash(key)\n        bucket = self.buckets[index]\n        for pair in bucket:\n            if pair.key == key:\n                pair.value = value  # c\u1eadp nh\u1eadt n\u1ebfu \u0111\u00e3 t\u1ed3n t\u1ea1i\n                return\n        bucket.append(Pair(key, value))\n        self.size += 1\n\n    def get(self, key):\n        index = self._hash(key)\n        bucket = self.buckets[index]\n        for pair in bucket:\n            if pair.key == key:\n                return pair.value\n        raise KeyError(f\"Key {key} kh\u00f4ng t\u1ed3n t\u1ea1i\")\n\n    def remove(self, key):\n        index = self._hash(key)\n        bucket = self.buckets[index]\n        for i, pair in enumerate(bucket):\n            if pair.key == key:\n                del bucket[i]\n                self.size -= 1\n                return\n        raise KeyError(f\"Key {key} kh\u00f4ng t\u1ed3n t\u1ea1i\")\n</code></pre>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#su-dung","title":"S\u1eed d\u1ee5ng:","text":"<pre><code>hm = SimpleHashMap()\nhm.put(\"username\", \"lelongc\")\nhm.put(\"email\", \"abc@gmail.com\")\nprint(hm.get(\"username\"))  # lelongc\nhm.remove(\"email\")\n</code></pre>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#6-rehashing-tang-kich-thuoc-hashmap","title":"6. Rehashing (t\u0103ng k\u00edch th\u01b0\u1edbc HashMap)","text":"<pre><code>def _rehash(self):\n    old_buckets = self.buckets\n    self.capacity *= 2\n    self.buckets = [[] for _ in range(self.capacity)]\n    self.size = 0\n    for bucket in old_buckets:\n        for pair in bucket:\n            self.put(pair.key, pair.value)\n</code></pre> <ul> <li>Sau khi s\u1ed1 ph\u1ea7n t\u1eed v\u01b0\u1ee3t qu\u00e1 ng\u01b0\u1ee1ng (<code>load factor</code>), ta g\u1ecdi <code>_rehash</code>.</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#7-tong-ket-khi-nao-hashmap-nhanh-khi-nao-cham","title":"7. T\u1ed5ng k\u1ebft: Khi n\u00e0o HashMap nhanh, khi n\u00e0o ch\u1eadm?","text":"<ul> <li>Nhanh (O(1)): Khi hash function ph\u00e2n ph\u1ed1i t\u1ed1t, load factor th\u1ea5p, \u00edt collision.</li> <li>Ch\u1eadm (O(n)): Khi nhi\u1ec1u collision (hash function t\u1ec7 ho\u1eb7c load factor cao), t\u1ea5t c\u1ea3 key c\u00f9ng v\u00e0o m\u1ed9t bucket \u2192 ph\u1ea3i duy\u1ec7t h\u1ebft list trong bucket.</li> <li>Rehashing t\u1ed1n O(n), nh\u01b0ng kh\u00f4ng x\u1ea3y ra th\u01b0\u1eddng xuy\u00ean n\u00ean kh\u00f4ng \u1ea3nh h\u01b0\u1edfng hi\u1ec7u su\u1ea5t trung b\u00ecnh.</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#8-meo-ghi-nho-va-tra-loi-phong-van","title":"8. M\u1eb9o ghi nh\u1edb v\u00e0 tr\u1ea3 l\u1eddi ph\u1ecfng v\u1ea5n","text":"<ul> <li>T\u00f4i s\u1ebd tri\u1ec3n khai HashMap b\u1eb1ng m\u1ed9t m\u1ea3ng, d\u00f9ng hash function \u0111\u1ec3 \u00e1nh x\u1ea1 key th\u00e0nh index. N\u1ebfu collision, t\u00f4i d\u00f9ng chaining \u0111\u1ec3 l\u01b0u nhi\u1ec1u c\u1eb7p key-value trong c\u00f9ng m\u1ed9t bucket. Khi load factor cao, t\u00f4i s\u1ebd rehash \u0111\u1ec3 t\u0103ng capacity.</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p trung b\u00ecnh O(1), t\u1ec7 nh\u1ea5t O(n), nh\u01b0ng rehashing v\u00e0 collision \u0111\u01b0\u1ee3c x\u1eed l\u00fd t\u1ed1t th\u00ec lu\u00f4n r\u1ea5t nhanh.</li> </ul>"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#9-so-sanh-nhanh-cac-khai-niem","title":"9. So s\u00e1nh nhanh c\u00e1c kh\u00e1i ni\u1ec7m:","text":"Thu\u1eadt ng\u1eef Ngh\u0129a l\u00e0 g\u00ec? V\u00ed d\u1ee5 Hashing B\u0103m key th\u00e0nh s\u1ed1 nguy\u00ean hash(\"user\") = 123456 Collision 2 key cho c\u00f9ng index \"abc\", \"xyz\" c\u00f9ng v\u00e0o bucket 0 Chaining Nhi\u1ec1u key-value trong m\u1ed9t bucket bucket 2: [(\"apple\", 5), (\"cat\", 8)] Open Addressing T\u00ecm \u00f4 tr\u1ed1ng ti\u1ebfp theo trong array N\u1ebfu bucket 3 tr\u00f9ng, th\u1eed bucket 4, 5... Load factor % l\u1ea5p \u0111\u1ea7y c\u1ee7a m\u1ea3ng 6 ph\u1ea7n t\u1eed, capacity 8, LF = 0.75 Rehashing T\u0103ng size m\u1ea3ng &amp; b\u0103m l\u1ea1i to\u00e0n b\u1ed9 t\u1eeb 8 l\u00ean 16, chuy\u1ec3n l\u1ea1i h\u1ebft d\u1eef li\u1ec7u"},{"location":"Programming/DSA/Basic/27.Hash-implementation/#10-ket-luan","title":"10. K\u1ebft lu\u1eadn","text":"<ul> <li>HashMap c\u1ef1c k\u1ef3 hi\u1ec7u qu\u1ea3 nh\u1edd hashing, x\u1eed l\u00fd collision v\u00e0 rehashing h\u1ee3p l\u00fd.</li> <li>Hi\u1ec3u b\u1ea3n ch\u1ea5t b\u00ean trong gi\u00fap b\u1ea1n gi\u1ea3i th\u00edch, debug, t\u1ed1i \u01b0u v\u00e0 t\u1ef1 tin ph\u1ecfng v\u1ea5n.</li> <li>Mu\u1ed1n master? H\u00e3y th\u1eed t\u1ef1 code l\u1ea1i 1 hashmap \u0111\u01a1n gi\u1ea3n!</li> </ul> <p>Ch\u00fac b\u1ea1n t\u1ef1 tin ph\u1ecfng v\u1ea5n, code v\u00e0 s\u1eed d\u1ee5ng HashMap nh\u01b0 m\u1ed9t pro!</p>"},{"location":"cicd/roadmap/","title":"CI/CD Complete Learning Roadmap - GitHub Actions, GitLab CI, Jenkins","text":""},{"location":"cicd/roadmap/#cicd-complete-learning-roadmap-github-actions-gitlab-ci-jenkins","title":"CI/CD Complete Learning Roadmap - GitHub Actions, GitLab CI, Jenkins","text":""},{"location":"cicd/roadmap/#muc-tieu-master-cicd-voi-3-platform-chinh-trong-8-10-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master CI/CD v\u1edbi 3 platform ch\u00ednh trong 8-10 th\u00e1ng","text":""},{"location":"cicd/roadmap/#giai-oan-1-cicd-foundation-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: CI/CD FOUNDATION (Th\u00e1ng 1-2)","text":""},{"location":"cicd/roadmap/#week-1-cicd-fundamentals","title":"Week 1: CI/CD Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"What is CI/CD continuous integration deployment\"</li> <li>[ ] \"CI/CD pipeline benefits software development\"</li> <li>[ ] \"DevOps CI/CD workflow explained\"</li> <li>[ ] \"Continuous integration vs continuous deployment\"</li> <li>[ ] \"CI/CD tools comparison GitHub GitLab Jenkins\"</li> <li>[ ] \"Build automation testing deployment pipeline\"</li> <li>[ ] \"Version control integration CI/CD\"</li> <li>[ ] \"CI/CD best practices principles\"</li> </ul> <p>Concepts \u0111\u1ec3 hi\u1ec3u:</p> <ul> <li>[ ] Build \u2192 Test \u2192 Deploy cycle</li> <li>[ ] Automated testing in CI/CD</li> <li>[ ] Infrastructure as Code (IaC)</li> <li>[ ] Configuration management</li> <li>[ ] Environment promotion (dev \u2192 staging \u2192 production)</li> </ul>"},{"location":"cicd/roadmap/#week-2-version-control-branching-strategies","title":"Week 2: Version Control &amp; Branching Strategies","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git branching strategies for CI/CD\"</li> <li>[ ] \"GitFlow vs GitHub Flow vs GitLab Flow\"</li> <li>[ ] \"Feature branch workflow CI/CD\"</li> <li>[ ] \"Trunk-based development continuous integration\"</li> <li>[ ] \"Pull request merge request workflow\"</li> <li>[ ] \"Branch protection rules CI/CD\"</li> <li>[ ] \"Semantic versioning in CI/CD pipelines\"</li> <li>[ ] \"Git hooks for CI/CD automation\"</li> </ul> <p>Branching Models Practice:</p> <pre><code># GitFlow model\ngit flow init\ngit flow feature start new-feature\ngit flow feature finish new-feature\n\n# GitHub Flow\ngit checkout -b feature/new-feature\ngit push -u origin feature/new-feature\n# Create Pull Request\n\n# GitLab Flow\ngit checkout -b feature-branch\ngit push -u origin feature-branch\n# Create Merge Request\n</code></pre>"},{"location":"cicd/roadmap/#week-3-build-automation-basics","title":"Week 3: Build Automation Basics","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Build automation tools comparison\"</li> <li>[ ] \"Maven Gradle build tools Java\"</li> <li>[ ] \"npm webpack build tools JavaScript\"</li> <li>[ ] \"Docker multi-stage builds CI/CD\"</li> <li>[ ] \"Build artifacts management\"</li> <li>[ ] \"Dependency management in builds\"</li> <li>[ ] \"Build caching strategies\"</li> <li>[ ] \"Cross-platform builds CI/CD\"</li> </ul> <p>Build Tools Practice:</p> <pre><code># Maven build\nmvn clean compile test package\n\n# Gradle build\n./gradlew clean build test\n\n# npm build\nnpm install\nnpm run build\nnpm test\n\n# Docker build\ndocker build -t app:latest .\ndocker build --target production .\n</code></pre>"},{"location":"cicd/roadmap/#week-4-testing-automation","title":"Week 4: Testing Automation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Automated testing pyramid CI/CD\"</li> <li>[ ] \"Unit integration e2e testing automation\"</li> <li>[ ] \"Test-driven development TDD CI/CD\"</li> <li>[ ] \"Code coverage tools SonarQube\"</li> <li>[ ] \"Parallel testing in CI/CD pipelines\"</li> <li>[ ] \"Test reporting and notifications\"</li> <li>[ ] \"Performance testing in CI/CD\"</li> <li>[ ] \"Security testing SAST DAST\"</li> </ul> <p>Testing Framework Examples:</p> <pre><code># Jest (JavaScript)\nnpm test\nnpm run test:coverage\n\n# JUnit (Java)\nmvn test\nmvn jacoco:report\n\n# pytest (Python)\npytest --cov=src tests/\n\n# Cypress (E2E)\nnpx cypress run\nnpx cypress run --record\n</code></pre>"},{"location":"cicd/roadmap/#giai-oan-2-github-actions-mastery-thang-3-4","title":"\ud83d\udc19 GIAI \u0110O\u1ea0N 2: GITHUB ACTIONS MASTERY (Th\u00e1ng 3-4)","text":""},{"location":"cicd/roadmap/#week-5-github-actions-fundamentals","title":"Week 5: GitHub Actions Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitHub Actions tutorial for beginners\"</li> <li>[ ] \"GitHub Actions workflow syntax YAML\"</li> <li>[ ] \"GitHub Actions events triggers push pull_request\"</li> <li>[ ] \"GitHub Actions runners hosted self-hosted\"</li> <li>[ ] \"GitHub Actions marketplace actions\"</li> <li>[ ] \"GitHub Actions secrets environment variables\"</li> <li>[ ] \"GitHub Actions matrix builds\"</li> <li>[ ] \"GitHub Actions conditional execution\"</li> </ul> <p>Basic Workflow Practice:</p> <pre><code># .github/workflows/ci.yml\nname: CI Pipeline\non:\n  push:\n    branches: [main, develop]\n  pull_request:\n    branches: [main]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Setup Node.js\n        uses: actions/setup-node@v3\n        with:\n          node-version: \"18\"\n      - run: npm ci\n      - run: npm test\n</code></pre>"},{"location":"cicd/roadmap/#week-6-github-actions-advanced-features","title":"Week 6: GitHub Actions Advanced Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitHub Actions custom actions development\"</li> <li>[ ] \"GitHub Actions Docker container actions\"</li> <li>[ ] \"GitHub Actions JavaScript actions\"</li> <li>[ ] \"GitHub Actions composite actions\"</li> <li>[ ] \"GitHub Actions outputs artifacts\"</li> <li>[ ] \"GitHub Actions caching dependencies\"</li> <li>[ ] \"GitHub Actions environment protection rules\"</li> <li>[ ] \"GitHub Actions deployment slots\"</li> </ul> <p>Advanced Workflow Examples:</p> <pre><code># Matrix builds\nstrategy:\n  matrix:\n    node-version: [14, 16, 18]\n    os: [ubuntu-latest, windows-latest]\n\n# Caching\n- name: Cache dependencies\n  uses: actions/cache@v3\n  with:\n    path: ~/.npm\n    key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n\n# Custom action usage\n- name: Deploy to AWS\n  uses: ./my-custom-action\n  with:\n    aws-region: us-east-1\n</code></pre>"},{"location":"cicd/roadmap/#week-7-github-actions-cicd-pipelines","title":"Week 7: GitHub Actions CI/CD Pipelines","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitHub Actions CI/CD pipeline examples\"</li> <li>[ ] \"GitHub Actions deploy to AWS Azure GCP\"</li> <li>[ ] \"GitHub Actions Docker build push\"</li> <li>[ ] \"GitHub Actions Kubernetes deployment\"</li> <li>[ ] \"GitHub Actions blue-green deployment\"</li> <li>[ ] \"GitHub Actions rollback strategies\"</li> <li>[ ] \"GitHub Actions multi-environment deployment\"</li> <li>[ ] \"GitHub Actions approval workflows\"</li> </ul> <p>Deployment Pipeline:</p> <pre><code># .github/workflows/deploy.yml\nname: Deploy Pipeline\non:\n  push:\n    branches: [main]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Build Docker image\n        run: |\n          docker build -t ${{ secrets.DOCKER_REGISTRY }}/app:${{ github.sha }} .\n          docker push ${{ secrets.DOCKER_REGISTRY }}/app:${{ github.sha }}\n\n  deploy:\n    needs: build\n    runs-on: ubuntu-latest\n    environment: production\n    steps:\n      - name: Deploy to Kubernetes\n        run: |\n          kubectl set image deployment/app app=${{ secrets.DOCKER_REGISTRY }}/app:${{ github.sha }}\n</code></pre>"},{"location":"cicd/roadmap/#week-8-github-actions-enterprise-features","title":"Week 8: GitHub Actions Enterprise Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitHub Actions self-hosted runners setup\"</li> <li>[ ] \"GitHub Actions organization secrets\"</li> <li>[ ] \"GitHub Actions required status checks\"</li> <li>[ ] \"GitHub Actions OIDC AWS Azure authentication\"</li> <li>[ ] \"GitHub Actions security best practices\"</li> <li>[ ] \"GitHub Actions audit logs monitoring\"</li> <li>[ ] \"GitHub Actions cost optimization\"</li> <li>[ ] \"GitHub Actions troubleshooting debugging\"</li> </ul>"},{"location":"cicd/roadmap/#giai-oan-3-gitlab-cicd-mastery-thang-5-6","title":"\ud83e\udd8a GIAI \u0110O\u1ea0N 3: GITLAB CI/CD MASTERY (Th\u00e1ng 5-6)","text":""},{"location":"cicd/roadmap/#week-9-gitlab-cicd-fundamentals","title":"Week 9: GitLab CI/CD Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitLab CI/CD tutorial beginners\"</li> <li>[ ] \"GitLab CI YAML configuration gitlab-ci.yml\"</li> <li>[ ] \"GitLab CI stages jobs pipelines\"</li> <li>[ ] \"GitLab CI runners shared specific\"</li> <li>[ ] \"GitLab CI variables secrets\"</li> <li>[ ] \"GitLab CI artifacts dependencies\"</li> <li>[ ] \"GitLab CI rules conditions\"</li> <li>[ ] \"GitLab CI templates includes\"</li> </ul> <p>Basic Pipeline Practice:</p> <pre><code># .gitlab-ci.yml\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  NODE_ENV: production\n\nbuild:\n  stage: build\n  script:\n    - npm ci\n    - npm run build\n  artifacts:\n    paths:\n      - dist/\n\ntest:\n  stage: test\n  script:\n    - npm test\n  coverage: '/Coverage: \\d+\\.\\d+%/'\n\ndeploy:\n  stage: deploy\n  script:\n    - echo \"Deploying to production...\"\n  only:\n    - main\n</code></pre>"},{"location":"cicd/roadmap/#week-10-gitlab-ci-advanced-configuration","title":"Week 10: GitLab CI Advanced Configuration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitLab CI parallel matrix builds\"</li> <li>[ ] \"GitLab CI dynamic child pipelines\"</li> <li>[ ] \"GitLab CI multi-project pipelines\"</li> <li>[ ] \"GitLab CI environments deployments\"</li> <li>[ ] \"GitLab CI cache optimization\"</li> <li>[ ] \"GitLab CI Docker in Docker dind\"</li> <li>[ ] \"GitLab CI pages static site deployment\"</li> <li>[ ] \"GitLab CI security scanning SAST DAST\"</li> </ul> <p>Advanced Pipeline Features:</p> <pre><code># Matrix builds\ntest:\n  stage: test\n  parallel:\n    matrix:\n      - NODE_VERSION: [\"14\", \"16\", \"18\"]\n        OS: [\"ubuntu\", \"alpine\"]\n  script:\n    - docker run --rm node:$NODE_VERSION-$OS npm test\n\n# Dynamic pipelines\ngenerate-pipeline:\n  stage: build\n  script:\n    - generate-pipeline.sh &gt; generated-pipeline.yml\n  artifacts:\n    reports:\n      child_pipeline: generated-pipeline.yml\n\n# Cache configuration\ncache:\n  key: ${CI_COMMIT_REF_SLUG}\n  paths:\n    - node_modules/\n  policy: pull-push\n</code></pre>"},{"location":"cicd/roadmap/#week-11-gitlab-cicd-deployments","title":"Week 11: GitLab CI/CD Deployments","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitLab CI CD deployment strategies\"</li> <li>[ ] \"GitLab environments review apps\"</li> <li>[ ] \"GitLab CI deploy to Kubernetes\"</li> <li>[ ] \"GitLab CI Auto DevOps\"</li> <li>[ ] \"GitLab CI feature flags\"</li> <li>[ ] \"GitLab CI canary deployments\"</li> <li>[ ] \"GitLab CI manual approvals\"</li> <li>[ ] \"GitLab CI rollback procedures\"</li> </ul> <p>Deployment Examples:</p> <pre><code>deploy_staging:\n  stage: deploy\n  script:\n    - kubectl apply -f k8s/\n  environment:\n    name: staging\n    url: https://staging.example.com\n  only:\n    - develop\n\ndeploy_production:\n  stage: deploy\n  script:\n    - kubectl apply -f k8s/\n  environment:\n    name: production\n    url: https://example.com\n  when: manual\n  only:\n    - main\n</code></pre>"},{"location":"cicd/roadmap/#week-12-gitlab-cicd-enterprise","title":"Week 12: GitLab CI/CD Enterprise","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitLab CI runner management scaling\"</li> <li>[ ] \"GitLab CI security compliance\"</li> <li>[ ] \"GitLab CI monitoring analytics\"</li> <li>[ ] \"GitLab CI cost optimization\"</li> <li>[ ] \"GitLab CI custom executors\"</li> <li>[ ] \"GitLab CI integration external tools\"</li> <li>[ ] \"GitLab CI backup restore\"</li> <li>[ ] \"GitLab CI troubleshooting performance\"</li> </ul>"},{"location":"cicd/roadmap/#giai-oan-4-jenkins-mastery-thang-7-8","title":"\ud83d\udd27 GIAI \u0110O\u1ea0N 4: JENKINS MASTERY (Th\u00e1ng 7-8)","text":""},{"location":"cicd/roadmap/#week-13-jenkins-fundamentals","title":"Week 13: Jenkins Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jenkins installation setup tutorial\"</li> <li>[ ] \"Jenkins freestyle vs pipeline jobs\"</li> <li>[ ] \"Jenkins plugin management\"</li> <li>[ ] \"Jenkins user management security\"</li> <li>[ ] \"Jenkins workspace management\"</li> <li>[ ] \"Jenkins build triggers SCM polling\"</li> <li>[ ] \"Jenkins parameters build variables\"</li> <li>[ ] \"Jenkins email notifications\"</li> </ul> <p>Basic Jenkins Setup:</p> <pre><code>// Freestyle job configuration\nBuild Triggers: Poll SCM H/15 * * * *\nBuild Steps: Execute shell\n  #!/bin/bash\n  npm ci\n  npm test\n  npm run build\n\nPost-build Actions:\n  - Archive artifacts: dist/**\n  - Publish test results: test-results.xml\n</code></pre>"},{"location":"cicd/roadmap/#week-14-jenkins-pipeline-as-code","title":"Week 14: Jenkins Pipeline as Code","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jenkins declarative pipeline syntax\"</li> <li>[ ] \"Jenkins scripted pipeline Groovy\"</li> <li>[ ] \"Jenkinsfile SCM integration\"</li> <li>[ ] \"Jenkins pipeline stages parallel\"</li> <li>[ ] \"Jenkins pipeline shared libraries\"</li> <li>[ ] \"Jenkins pipeline parameters input\"</li> <li>[ ] \"Jenkins pipeline conditional execution\"</li> <li>[ ] \"Jenkins pipeline error handling\"</li> </ul> <p>Declarative Pipeline:</p> <pre><code>// Jenkinsfile\npipeline {\n    agent any\n\n    tools {\n        nodejs '18'\n    }\n\n    environment {\n        NODE_ENV = 'production'\n    }\n\n    stages {\n        stage('Build') {\n            steps {\n                sh 'npm ci'\n                sh 'npm run build'\n            }\n        }\n\n        stage('Test') {\n            parallel {\n                stage('Unit Tests') {\n                    steps {\n                        sh 'npm test'\n                    }\n                    post {\n                        always {\n                            publishTestResults testResultsPattern: 'test-results.xml'\n                        }\n                    }\n                }\n\n                stage('Integration Tests') {\n                    steps {\n                        sh 'npm run test:integration'\n                    }\n                }\n            }\n        }\n\n        stage('Deploy') {\n            when {\n                branch 'main'\n            }\n            steps {\n                sh 'npm run deploy'\n            }\n        }\n    }\n\n    post {\n        always {\n            archiveArtifacts artifacts: 'dist/**', fingerprint: true\n            cleanWs()\n        }\n    }\n}\n</code></pre>"},{"location":"cicd/roadmap/#week-15-jenkins-advanced-features","title":"Week 15: Jenkins Advanced Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jenkins multibranch pipeline\"</li> <li>[ ] \"Jenkins Blue Ocean interface\"</li> <li>[ ] \"Jenkins Docker integration\"</li> <li>[ ] \"Jenkins Kubernetes plugin\"</li> <li>[ ] \"Jenkins shared libraries development\"</li> <li>[ ] \"Jenkins pipeline testing\"</li> <li>[ ] \"Jenkins credential management\"</li> <li>[ ] \"Jenkins webhook integration\"</li> </ul> <p>Advanced Pipeline Features:</p> <pre><code>// Shared Library usage\n@Library('my-shared-library') _\n\npipeline {\n    agent {\n        kubernetes {\n            yaml \"\"\"\n                apiVersion: v1\n                kind: Pod\n                spec:\n                  containers:\n                  - name: docker\n                    image: docker:latest\n                    command: ['cat']\n                    tty: true\n                    volumeMounts:\n                    - name: docker-sock\n                      mountPath: /var/run/docker.sock\n                  volumes:\n                  - name: docker-sock\n                    hostPath:\n                      path: /var/run/docker.sock\n            \"\"\"\n        }\n    }\n\n    stages {\n        stage('Build Docker Image') {\n            steps {\n                container('docker') {\n                    script {\n                        def image = docker.build(\"myapp:${env.BUILD_NUMBER}\")\n                        docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {\n                            image.push()\n                            image.push('latest')\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"cicd/roadmap/#week-16-jenkins-enterprise-scaling","title":"Week 16: Jenkins Enterprise &amp; Scaling","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jenkins master slave architecture\"</li> <li>[ ] \"Jenkins distributed builds\"</li> <li>[ ] \"Jenkins high availability setup\"</li> <li>[ ] \"Jenkins backup restore strategies\"</li> <li>[ ] \"Jenkins monitoring with Prometheus\"</li> <li>[ ] \"Jenkins security hardening\"</li> <li>[ ] \"Jenkins performance optimization\"</li> <li>[ ] \"Jenkins upgrade maintenance\"</li> </ul>"},{"location":"cicd/roadmap/#giai-oan-5-advanced-cicd-patterns-thang-9-10","title":"\ud83d\ude80 GIAI \u0110O\u1ea0N 5: ADVANCED CI/CD PATTERNS (Th\u00e1ng 9-10)","text":""},{"location":"cicd/roadmap/#week-17-multi-platform-cicd-strategy","title":"Week 17: Multi-Platform CI/CD Strategy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Multi-platform CI/CD architecture\"</li> <li>[ ] \"CI/CD tool migration strategies\"</li> <li>[ ] \"Hybrid CI/CD environments\"</li> <li>[ ] \"CI/CD orchestration tools\"</li> <li>[ ] \"CI/CD as Code best practices\"</li> <li>[ ] \"CI/CD security scanning integration\"</li> <li>[ ] \"CI/CD compliance automation\"</li> <li>[ ] \"CI/CD cost optimization strategies\"</li> </ul>"},{"location":"cicd/roadmap/#week-18-advanced-deployment-patterns","title":"Week 18: Advanced Deployment Patterns","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Blue-green deployment CI/CD\"</li> <li>[ ] \"Canary deployment strategies\"</li> <li>[ ] \"Rolling deployment patterns\"</li> <li>[ ] \"Feature flags deployment\"</li> <li>[ ] \"GitOps deployment model\"</li> <li>[ ] \"Progressive delivery techniques\"</li> <li>[ ] \"Deployment automation tools\"</li> <li>[ ] \"Rollback strategies CI/CD\"</li> </ul>"},{"location":"cicd/roadmap/#week-19-cicd-monitoring-observability","title":"Week 19: CI/CD Monitoring &amp; Observability","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"CI/CD pipeline monitoring\"</li> <li>[ ] \"CI/CD metrics and KPIs\"</li> <li>[ ] \"CI/CD alerting strategies\"</li> <li>[ ] \"CI/CD performance optimization\"</li> <li>[ ] \"CI/CD failure analysis\"</li> <li>[ ] \"CI/CD dashboard creation\"</li> <li>[ ] \"CI/CD cost tracking\"</li> <li>[ ] \"CI/CD audit and compliance\"</li> </ul>"},{"location":"cicd/roadmap/#week-20-cicd-leadership-strategy","title":"Week 20: CI/CD Leadership &amp; Strategy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"CI/CD transformation strategy\"</li> <li>[ ] \"CI/CD team organization\"</li> <li>[ ] \"CI/CD culture and practices\"</li> <li>[ ] \"CI/CD training and adoption\"</li> <li>[ ] \"CI/CD governance frameworks\"</li> <li>[ ] \"CI/CD vendor evaluation\"</li> <li>[ ] \"CI/CD future trends\"</li> <li>[ ] \"CI/CD case studies enterprises\"</li> </ul>"},{"location":"cicd/roadmap/#hands-on-projects-by-platform","title":"\ud83d\udcda HANDS-ON PROJECTS BY PLATFORM","text":""},{"location":"cicd/roadmap/#github-actions-projects","title":"\ud83d\udc19 GitHub Actions Projects","text":"<ol> <li> <p>Simple Web App CI/CD</p> </li> <li> <p>React/Vue.js application</p> </li> <li>Automated testing and building</li> <li>Deploy to GitHub Pages</li> <li> <p>Search: \"GitHub Actions React deployment\"</p> </li> <li> <p>Docker Multi-stage Pipeline</p> </li> <li> <p>Docker build optimization</p> </li> <li>Container security scanning</li> <li>Deploy to container registry</li> <li> <p>Search: \"GitHub Actions Docker multi-stage\"</p> </li> <li> <p>Microservices Pipeline</p> </li> <li>Multi-service testing</li> <li>Parallel builds</li> <li>Service dependency management</li> <li>Search: \"GitHub Actions microservices pipeline\"</li> </ol>"},{"location":"cicd/roadmap/#gitlab-ci-projects","title":"\ud83e\udd8a GitLab CI Projects","text":"<ol> <li> <p>Full-stack Application</p> </li> <li> <p>Frontend + Backend + Database</p> </li> <li>Environment-specific deployments</li> <li>Review apps for merge requests</li> <li> <p>Search: \"GitLab CI full-stack deployment\"</p> </li> <li> <p>Auto DevOps Setup</p> </li> <li> <p>Automated application detection</p> </li> <li>Built-in security scanning</li> <li>Kubernetes deployment</li> <li> <p>Search: \"GitLab Auto DevOps tutorial\"</p> </li> <li> <p>Multi-project Pipeline</p> </li> <li>Cross-project dependencies</li> <li>Shared pipeline templates</li> <li>Artifact passing between projects</li> <li>Search: \"GitLab multi-project pipeline\"</li> </ol>"},{"location":"cicd/roadmap/#jenkins-projects","title":"\ud83d\udd27 Jenkins Projects","text":"<ol> <li> <p>Enterprise Pipeline</p> </li> <li> <p>Multibranch pipeline setup</p> </li> <li>Shared library implementation</li> <li>Integration with external tools</li> <li> <p>Search: \"Jenkins enterprise pipeline\"</p> </li> <li> <p>Kubernetes Integration</p> </li> <li> <p>Dynamic agent provisioning</p> </li> <li>Kubernetes deployment</li> <li>Helm chart management</li> <li> <p>Search: \"Jenkins Kubernetes plugin\"</p> </li> <li> <p>Legacy System Migration</p> </li> <li>Freestyle to Pipeline conversion</li> <li>Gradual modernization approach</li> <li>Zero-downtime deployment</li> <li>Search: \"Jenkins pipeline migration\"</li> </ol>"},{"location":"cicd/roadmap/#skill-assessment-checklist","title":"\ud83d\udccb SKILL ASSESSMENT CHECKLIST","text":""},{"location":"cicd/roadmap/#github-actions-mastery","title":"GitHub Actions Mastery","text":"<ul> <li>[ ] Create complex workflow with matrix builds</li> <li>[ ] Develop custom composite actions</li> <li>[ ] Implement security scanning pipeline</li> <li>[ ] Configure environment protection rules</li> <li>[ ] Optimize workflow performance and costs</li> <li>[ ] Troubleshoot workflow failures</li> </ul>"},{"location":"cicd/roadmap/#gitlab-cicd-mastery","title":"GitLab CI/CD Mastery","text":"<ul> <li>[ ] Configure multi-stage pipelines</li> <li>[ ] Implement dynamic child pipelines</li> <li>[ ] Set up Auto DevOps workflows</li> <li>[ ] Configure environment-specific deployments</li> <li>[ ] Optimize cache and artifact strategies</li> <li>[ ] Integrate security and compliance scanning</li> </ul>"},{"location":"cicd/roadmap/#jenkins-mastery","title":"Jenkins Mastery","text":"<ul> <li>[ ] Create declarative pipeline from scratch</li> <li>[ ] Develop shared pipeline libraries</li> <li>[ ] Configure distributed build system</li> <li>[ ] Implement Blue Ocean workflows</li> <li>[ ] Set up Jenkins high availability</li> <li>[ ] Integrate with enterprise tools</li> </ul>"},{"location":"cicd/roadmap/#certifications-learning-paths","title":"\ud83c\udf93 CERTIFICATIONS &amp; LEARNING PATHS","text":""},{"location":"cicd/roadmap/#official-certifications","title":"Official Certifications","text":"<ul> <li>[ ] GitHub Actions Certification (When available)</li> <li>[ ] GitLab Certified CI/CD Specialist</li> <li>[ ] Jenkins Engineer Certification</li> <li>[ ] AWS DevOps Professional</li> <li>[ ] Azure DevOps Engineer Expert</li> <li>[ ] Google Cloud DevOps Engineer</li> </ul>"},{"location":"cicd/roadmap/#learning-resources-by-platform","title":"Learning Resources by Platform","text":""},{"location":"cicd/roadmap/#github-actions","title":"GitHub Actions","text":"<ul> <li>\"GitHub Actions Documentation\" - Official docs</li> <li>\"GitHub Actions Masterclass\" - Udemy</li> <li>\"Learning GitHub Actions\" - LinkedIn Learning</li> <li>\"GitHub Actions in Action\" - Manning Books</li> </ul>"},{"location":"cicd/roadmap/#gitlab-cicd","title":"GitLab CI/CD","text":"<ul> <li>\"GitLab Documentation\" - Official comprehensive guide</li> <li>\"GitLab CI/CD Tutorial\" - GitLab Learn</li> <li>\"Mastering GitLab\" - Packt Publishing</li> <li>\"GitLab CI/CD Pipeline Configuration\" - Pluralsight</li> </ul>"},{"location":"cicd/roadmap/#jenkins","title":"Jenkins","text":"<ul> <li>\"Jenkins Handbook\" - Official documentation</li> <li>\"Jenkins Fundamentals\" - CloudBees University</li> <li>\"Jenkins Pipeline as Code\" - Udemy</li> <li>\"Learning Jenkins\" - LinkedIn Learning</li> </ul>"},{"location":"cicd/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"cicd/roadmap/#morning-warm-up-20-mins","title":"Morning Warm-up (20 mins)","text":"<ul> <li>[ ] Check CI/CD pipeline status for projects</li> <li>[ ] Review failed builds from overnight</li> <li>[ ] Read CI/CD best practices articles</li> <li>[ ] Practice writing pipeline configurations</li> </ul>"},{"location":"cicd/roadmap/#active-development-45-60-mins","title":"Active Development (45-60 mins)","text":"<ul> <li>[ ] Work on CI/CD pipeline improvements</li> <li>[ ] Experiment with new CI/CD features</li> <li>[ ] Contribute to open source CI/CD projects</li> <li>[ ] Create reusable pipeline components</li> </ul>"},{"location":"cicd/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document new CI/CD patterns learned</li> <li>[ ] Update personal CI/CD templates</li> <li>[ ] Plan next day's CI/CD experiments</li> <li>[ ] Review CI/CD performance metrics</li> </ul>"},{"location":"cicd/roadmap/#milestone-achievements","title":"\ud83c\udfaf MILESTONE ACHIEVEMENTS","text":""},{"location":"cicd/roadmap/#month-2-foundation-complete","title":"Month 2: Foundation Complete","text":"<ul> <li>[ ] Understand CI/CD principles</li> <li>[ ] Can create basic pipelines</li> <li>[ ] Know testing automation basics</li> <li>[ ] Familiar with all three platforms</li> </ul>"},{"location":"cicd/roadmap/#month-4-platform-proficiency","title":"Month 4: Platform Proficiency","text":"<ul> <li>[ ] Master GitHub Actions workflows</li> <li>[ ] Can troubleshoot pipeline issues</li> <li>[ ] Implement security best practices</li> <li>[ ] Create reusable components</li> </ul>"},{"location":"cicd/roadmap/#month-6-multi-platform-expert","title":"Month 6: Multi-Platform Expert","text":"<ul> <li>[ ] Proficient in GitLab CI/CD</li> <li>[ ] Can migrate between platforms</li> <li>[ ] Optimize pipeline performance</li> <li>[ ] Lead CI/CD implementations</li> </ul>"},{"location":"cicd/roadmap/#month-8-enterprise-ready","title":"Month 8: Enterprise Ready","text":"<ul> <li>[ ] Master Jenkins at enterprise scale</li> <li>[ ] Design CI/CD architecture</li> <li>[ ] Implement governance frameworks</li> <li>[ ] Train and mentor others</li> </ul>"},{"location":"cicd/roadmap/#month-10-cicd-leader","title":"Month 10: CI/CD Leader","text":"<ul> <li>[ ] Strategy and planning expertise</li> <li>[ ] Cross-platform integration</li> <li>[ ] Innovation and optimization</li> <li>[ ] Industry thought leadership</li> </ul> <p>CI/CD Mastery Philosophy: \"Automate everything, measure everything, improve everything!\"</p>"},{"location":"cicd/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"cicd/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ol> <li>Create accounts on GitHub, GitLab, and set up Jenkins</li> <li>Fork sample repositories for practice</li> <li>Run your first \"Hello World\" pipeline</li> <li>Join CI/CD communities and forums</li> </ol>"},{"location":"cicd/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic tutorial for each platform</li> <li>[ ] Create first working pipeline</li> <li>[ ] Set up development environment</li> <li>[ ] Identify real project for practice</li> </ul>"},{"location":"cicd/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Deploy first application via CI/CD</li> <li>[ ] Implement automated testing</li> <li>[ ] Set up basic monitoring</li> <li>[ ] Document lessons learned</li> </ul> <p>Remember: CI/CD mastery comes from consistent practice and real-world application. Start small, iterate fast, and always be optimizing!</p>"},{"location":"docker/","title":"Docker Complete Knowledge Base","text":""},{"location":"docker/#docker-complete-knowledge-base","title":"Docker Complete Knowledge Base","text":""},{"location":"docker/#muc-tieu","title":"\ud83c\udfaf M\u1ee5c ti\u00eau","text":"<p>Tr\u1edf th\u00e0nh Docker Expert v\u1edbi ki\u1ebfn th\u1ee9c to\u00e0n di\u1ec7n v\u1ec1 containerization, t\u1eeb c\u01a1 b\u1ea3n \u0111\u1ebfn n\u00e2ng cao.</p>"},{"location":"docker/#1-docker-fundamentals","title":"\ud83d\udcda 1. DOCKER FUNDAMENTALS","text":""},{"location":"docker/#11-docker-architecture","title":"1.1 Docker Architecture","text":"<pre><code># Docker Components\nDocker Engine           # Core runtime\nDocker Daemon          # Background service (dockerd)\nDocker Client          # Command-line interface\nDocker Images          # Read-only templates\nDocker Containers      # Running instances\nDocker Registry        # Image storage (Docker Hub)\nDocker Networks        # Container networking\nDocker Volumes         # Data persistence\n\n# Docker Architecture\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                Docker Client               \u2502\n\u2502            (docker commands)               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                  \u2502 REST API\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502              Docker Daemon                 \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502  \u2502   Images    \u2502 Containers  \u2502  Networks   \u2502\u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                  \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502              Host OS Kernel                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"docker/#12-installation-setup","title":"1.2 Installation &amp; Setup","text":"<pre><code># Ubuntu/Debian Installation\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\nsudo usermod -aG docker $USER\nnewgrp docker\n\n# CentOS/RHEL Installation\nsudo yum install -y yum-utils\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nsudo yum install docker-ce docker-ce-cli containerd.io\nsudo systemctl start docker\nsudo systemctl enable docker\n\n# Verify Installation\ndocker --version\ndocker info\ndocker run hello-world\ndocker system info\n\n# Docker Desktop (Windows/Mac)\n# Download from https://www.docker.com/products/docker-desktop\n</code></pre>"},{"location":"docker/#2-docker-images","title":"\ud83d\udc33 2. DOCKER IMAGES","text":""},{"location":"docker/#21-image-management-commands","title":"2.1 Image Management Commands","text":"<pre><code># List Images\ndocker images                    # List all images\ndocker image ls                  # Same as above\ndocker images -a                 # Include intermediate images\ndocker images --format \"table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}\"\ndocker images --filter \"dangling=true\"  # List dangling images\ndocker images --filter \"before=ubuntu:18.04\"  # Images before ubuntu:18.04\n\n# Pull Images\ndocker pull ubuntu               # Pull latest ubuntu\ndocker pull ubuntu:20.04        # Pull specific tag\ndocker pull nginx:alpine         # Pull alpine version\ndocker pull mysql:8.0           # Pull specific version\ndocker pull --all-tags ubuntu   # Pull all tags\n\n# Search Images\ndocker search nginx              # Search Docker Hub\ndocker search --limit 5 mysql   # Limit results\ndocker search --filter stars=3 python  # Filter by stars\n\n# Remove Images\ndocker rmi image_id              # Remove by ID\ndocker rmi ubuntu:20.04          # Remove by name:tag\ndocker rmi $(docker images -q)  # Remove all images\ndocker image prune               # Remove dangling images\ndocker image prune -a            # Remove all unused images\ndocker system prune              # Remove all unused objects\n</code></pre>"},{"location":"docker/#22-building-images","title":"2.2 Building Images","text":"<pre><code># Dockerfile Commands\nFROM ubuntu:20.04              # Base image\nLABEL maintainer=\"admin@example.com\"  # Metadata\nENV APP_HOME=/app              # Environment variables\nWORKDIR /app                   # Working directory\nCOPY . /app                    # Copy files from host\nADD file.tar.gz /app           # Add and extract\nRUN apt-get update &amp;&amp; apt-get install -y python3  # Execute commands\nEXPOSE 8080                    # Expose port\nVOLUME [\"/data\"]               # Create volume\nUSER appuser                   # Switch user\nCMD [\"python3\", \"app.py\"]      # Default command\nENTRYPOINT [\"python3\"]         # Entry point\n\n# Multi-stage Dockerfile Example\nFROM node:16 AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\n\nFROM nginx:alpine\nCOPY --from=builder /app/dist /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n# Build Commands\ndocker build .                 # Build from current directory\ndocker build -t myapp:latest .  # Build with tag\ndocker build -t myapp:v1.0 -f Dockerfile.prod .  # Custom Dockerfile\ndocker build --no-cache .      # Build without cache\ndocker build --build-arg ENV=prod .  # Build arguments\ndocker build --target builder . # Build specific stage\n</code></pre>"},{"location":"docker/#23-image-operations","title":"2.3 Image Operations","text":"<pre><code># Image Information\ndocker image inspect ubuntu     # Detailed image info\ndocker image history ubuntu     # Image layers\ndocker image ls --digests       # Show digests\n\n# Tag Images\ndocker tag source_image:tag target_image:tag\ndocker tag myapp:latest myapp:v1.0\ndocker tag myapp:latest registry.example.com/myapp:latest\n\n# Save/Load Images\ndocker save -o myapp.tar myapp:latest      # Save to tar file\ndocker load -i myapp.tar                  # Load from tar file\ndocker export container_id &gt; container.tar # Export container\ndocker import container.tar myapp:imported # Import as image\n\n# Push Images\ndocker login                    # Login to registry\ndocker push myapp:latest        # Push to Docker Hub\ndocker push registry.example.com/myapp:latest  # Push to private registry\ndocker logout                   # Logout\n</code></pre>"},{"location":"docker/#3-docker-containers","title":"\ud83d\udce6 3. DOCKER CONTAINERS","text":""},{"location":"docker/#31-container-lifecycle","title":"3.1 Container Lifecycle","text":"<pre><code># Run Containers\ndocker run ubuntu               # Run and exit\ndocker run -it ubuntu bash     # Interactive with TTY\ndocker run -d nginx             # Detached (background)\ndocker run --name mycontainer nginx  # Named container\ndocker run -p 8080:80 nginx     # Port mapping\ndocker run -v /host/path:/container/path ubuntu  # Volume mount\ndocker run --rm ubuntu          # Remove after exit\ndocker run -e ENV_VAR=value ubuntu  # Environment variable\n\n# Container States\ndocker ps                       # Running containers\ndocker ps -a                    # All containers\ndocker ps -l                    # Last created container\ndocker ps -n 5                  # Last 5 containers\ndocker ps --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\"\n\n# Container Control\ndocker start container_name     # Start stopped container\ndocker stop container_name      # Graceful stop\ndocker kill container_name      # Force stop\ndocker restart container_name   # Restart container\ndocker pause container_name     # Pause container\ndocker unpause container_name   # Unpause container\n</code></pre>"},{"location":"docker/#32-container-operations","title":"3.2 Container Operations","text":"<pre><code># Execute Commands\ndocker exec -it container_name bash     # Interactive shell\ndocker exec container_name ls -la       # Execute command\ndocker exec -u root container_name bash # Execute as root\ndocker exec -w /app container_name pwd  # Execute in directory\n\n# Container Information\ndocker inspect container_name    # Detailed info\ndocker logs container_name       # Container logs\ndocker logs -f container_name    # Follow logs\ndocker logs --tail 50 container_name  # Last 50 lines\ndocker logs --since \"2023-01-01\" container_name  # Logs since date\ndocker stats                     # Real-time stats\ndocker stats container_name      # Specific container stats\ndocker top container_name        # Running processes\ndocker port container_name       # Port mappings\n\n# Copy Files\ndocker cp file.txt container_name:/path/  # Copy to container\ndocker cp container_name:/path/file.txt . # Copy from container\n\n# Container Cleanup\ndocker rm container_name         # Remove stopped container\ndocker rm -f container_name      # Force remove\ndocker rm $(docker ps -aq)      # Remove all containers\ndocker container prune          # Remove stopped containers\n</code></pre>"},{"location":"docker/#33-advanced-container-options","title":"3.3 Advanced Container Options","text":"<pre><code># Resource Limits\ndocker run --memory=\"256m\" ubuntu           # Memory limit\ndocker run --cpus=\"1.5\" ubuntu              # CPU limit\ndocker run --cpu-shares=512 ubuntu          # CPU weight\ndocker run --oom-kill-disable ubuntu        # Disable OOM killer\ndocker run --ulimit nofile=1024:2048 ubuntu # Ulimit settings\n\n# Security Options\ndocker run --user 1000:1000 ubuntu          # Run as specific user\ndocker run --read-only ubuntu               # Read-only filesystem\ndocker run --cap-add=NET_ADMIN ubuntu       # Add capability\ndocker run --cap-drop=ALL ubuntu            # Drop all capabilities\ndocker run --privileged ubuntu              # Privileged mode\ndocker run --security-opt no-new-privileges ubuntu  # Security options\n\n# Networking Options\ndocker run --network none ubuntu            # No networking\ndocker run --network host ubuntu            # Host networking\ndocker run --network bridge ubuntu          # Bridge networking\ndocker run --add-host hostname:ip ubuntu    # Add host entry\ndocker run --dns 8.8.8.8 ubuntu            # Custom DNS\n\n# Volume Options\ndocker run -v volume_name:/path ubuntu      # Named volume\ndocker run -v /host:/container ubuntu       # Bind mount\ndocker run -v /host:/container:ro ubuntu    # Read-only mount\ndocker run --tmpfs /tmp ubuntu              # Temporary filesystem\ndocker run --volumes-from container ubuntu  # Mount from container\n</code></pre>"},{"location":"docker/#4-docker-networking","title":"\ud83c\udf10 4. DOCKER NETWORKING","text":""},{"location":"docker/#41-network-management","title":"4.1 Network Management","text":"<pre><code># List Networks\ndocker network ls               # List all networks\ndocker network ls --filter driver=bridge  # Filter by driver\n\n# Network Information\ndocker network inspect bridge   # Inspect network\ndocker network inspect network_name  # Detailed network info\n\n# Create Networks\ndocker network create mynetwork           # Create bridge network\ndocker network create --driver bridge mynetwork  # Specify driver\ndocker network create --subnet 192.168.1.0/24 mynetwork  # Custom subnet\ndocker network create --driver overlay mynetwork  # Overlay network\ndocker network create --driver host mynetwork     # Host network\ndocker network create --driver none mynetwork     # No network\n\n# Advanced Network Creation\ndocker network create \\\n  --driver bridge \\\n  --subnet 172.20.0.0/16 \\\n  --ip-range 172.20.240.0/20 \\\n  --gateway 172.20.0.1 \\\n  --opt com.docker.network.bridge.name=mybr0 \\\n  mynetwork\n\n# Connect/Disconnect Containers\ndocker network connect mynetwork container_name    # Connect container\ndocker network disconnect mynetwork container_name # Disconnect container\n\n# Remove Networks\ndocker network rm mynetwork     # Remove network\ndocker network prune            # Remove unused networks\n</code></pre>"},{"location":"docker/#42-network-drivers","title":"4.2 Network Drivers","text":"<pre><code># Bridge Network (Default)\ndocker run --network bridge nginx           # Default bridge\ndocker run --network mybridge nginx         # Custom bridge\n\n# Host Network\ndocker run --network host nginx             # Host networking\n\n# None Network\ndocker run --network none nginx             # No networking\n\n# Overlay Network (Swarm)\ndocker network create --driver overlay --attachable myoverlay\n\n# MACVLAN Network\ndocker network create -d macvlan \\\n  --subnet=192.168.1.0/24 \\\n  --gateway=192.168.1.1 \\\n  -o parent=eth0 \\\n  mymacvlan\n\n# Container Communication\ndocker run --name app1 --network mynetwork nginx\ndocker run --name app2 --network mynetwork alpine ping app1\n</code></pre>"},{"location":"docker/#43-service-discovery","title":"4.3 Service Discovery","text":"<pre><code># DNS Resolution\ndocker run --name web nginx\ndocker run --link web:webserver alpine ping webserver  # Legacy linking\ndocker run --network mynetwork --name web nginx\ndocker run --network mynetwork alpine nslookup web     # DNS resolution\n\n# Expose Services\ndocker run -p 8080:80 nginx              # Host port 8080 to container 80\ndocker run -p 127.0.0.1:8080:80 nginx    # Bind to specific interface\ndocker run -P nginx                      # Publish all exposed ports\ndocker run --expose 8080 nginx           # Expose additional port\n</code></pre>"},{"location":"docker/#5-docker-volumes-storage","title":"\ud83d\udcbe 5. DOCKER VOLUMES &amp; STORAGE","text":""},{"location":"docker/#51-volume-management","title":"5.1 Volume Management","text":"<pre><code># Volume Commands\ndocker volume ls                # List volumes\ndocker volume create myvolume   # Create volume\ndocker volume inspect myvolume  # Volume details\ndocker volume rm myvolume       # Remove volume\ndocker volume prune             # Remove unused volumes\n\n# Volume Types\ndocker run -v myvolume:/data ubuntu          # Named volume\ndocker run -v /host/path:/data ubuntu        # Bind mount\ndocker run --tmpfs /tmp ubuntu               # Temporary filesystem\ndocker run --mount type=volume,source=myvolume,target=/data ubuntu\n\n# Advanced Volume Options\ndocker volume create \\\n  --driver local \\\n  --opt type=nfs \\\n  --opt o=addr=192.168.1.1,rw \\\n  --opt device=:/path/to/share \\\n  mynfsvolume\n\n# Volume Drivers\ndocker volume create --driver local myvolume        # Local driver\ndocker volume create --driver nfs myvolume          # NFS driver\ndocker volume create --driver rexray myvolume       # REX-Ray driver\n</code></pre>"},{"location":"docker/#52-mount-types","title":"5.2 Mount Types","text":"<pre><code># Bind Mounts\ndocker run -v /host/data:/container/data ubuntu     # Basic bind mount\ndocker run -v /host/data:/container/data:ro ubuntu  # Read-only\ndocker run -v /host/data:/container/data:rw ubuntu  # Read-write\ndocker run --mount type=bind,source=/host/data,target=/container/data ubuntu\n\n# Named Volumes\ndocker run -v datavolume:/data ubuntu              # Named volume\ndocker run --mount type=volume,source=datavolume,target=/data ubuntu\n\n# Temporary Filesystems\ndocker run --tmpfs /tmp ubuntu                     # tmpfs mount\ndocker run --mount type=tmpfs,target=/tmp ubuntu   # tmpfs mount (new syntax)\n\n# Volume from Container\ndocker run --volumes-from container_name ubuntu    # Mount volumes from container\n</code></pre>"},{"location":"docker/#53-volume-backup-restore","title":"5.3 Volume Backup &amp; Restore","text":"<pre><code># Backup Volume\ndocker run --rm -v myvolume:/data -v $(pwd):/backup ubuntu tar czf /backup/backup.tar.gz -C /data .\n\n# Restore Volume\ndocker run --rm -v myvolume:/data -v $(pwd):/backup ubuntu tar xzf /backup/backup.tar.gz -C /data\n\n# Copy Volume Data\ndocker run --rm -v source_volume:/source -v target_volume:/target ubuntu cp -a /source/. /target/\n\n# Volume Migration\ndocker volume create newvolume\ndocker run --rm -v oldvolume:/old -v newvolume:/new ubuntu cp -a /old/. /new/\n</code></pre>"},{"location":"docker/#6-docker-compose","title":"\ud83d\udd27 6. DOCKER COMPOSE","text":""},{"location":"docker/#61-docker-compose-basics","title":"6.1 Docker Compose Basics","text":"<pre><code># docker-compose.yml\nversion: \"3.8\"\n\nservices:\n  web:\n    build: .\n    ports:\n      - \"8080:80\"\n    volumes:\n      - .:/code\n    environment:\n      - FLASK_ENV=development\n    depends_on:\n      - db\n    networks:\n      - mynetwork\n\n  db:\n    image: postgres:13\n    environment:\n      POSTGRES_DB: myapp\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    networks:\n      - mynetwork\n\nvolumes:\n  postgres_data:\n\nnetworks:\n  mynetwork:\n    driver: bridge\n</code></pre>"},{"location":"docker/#62-compose-commands","title":"6.2 Compose Commands","text":"<pre><code># Basic Commands\ndocker-compose up                    # Start services\ndocker-compose up -d                 # Start in background\ndocker-compose down                  # Stop and remove containers\ndocker-compose start                 # Start existing containers\ndocker-compose stop                  # Stop containers\ndocker-compose restart               # Restart services\ndocker-compose pause                 # Pause services\ndocker-compose unpause               # Unpause services\n\n# Build Commands\ndocker-compose build                 # Build images\ndocker-compose build --no-cache      # Build without cache\ndocker-compose up --build            # Build and start\n\n# Service Management\ndocker-compose ps                    # List containers\ndocker-compose logs                  # View logs\ndocker-compose logs -f web           # Follow logs for service\ndocker-compose exec web bash         # Execute command in service\ndocker-compose run web python manage.py migrate  # Run one-off command\n\n# Scaling\ndocker-compose up --scale web=3      # Scale web service to 3 instances\ndocker-compose scale web=3 worker=2  # Scale multiple services\n</code></pre>"},{"location":"docker/#63-advanced-compose-features","title":"6.3 Advanced Compose Features","text":"<pre><code># Advanced docker-compose.yml\nversion: \"3.8\"\n\nservices:\n  web:\n    build:\n      context: .\n      dockerfile: Dockerfile.prod\n      args:\n        - ENV=production\n    ports:\n      - target: 80\n        published: 8080\n        protocol: tcp\n        mode: host\n    volumes:\n      - type: bind\n        source: ./static\n        target: /app/static\n      - type: volume\n        source: logs\n        target: /app/logs\n    environment:\n      - DEBUG=false\n    env_file:\n      - .env\n    secrets:\n      - db_password\n    configs:\n      - app_config\n    deploy:\n      replicas: 3\n      restart_policy:\n        condition: on-failure\n        delay: 5s\n        max_attempts: 3\n      resources:\n        limits:\n          cpus: \"0.5\"\n          memory: 512M\n        reservations:\n          cpus: \"0.25\"\n          memory: 256M\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 60s\n\nsecrets:\n  db_password:\n    file: ./db_password.txt\n\nconfigs:\n  app_config:\n    file: ./app.conf\n\nvolumes:\n  logs:\n    driver: local\n</code></pre>"},{"location":"docker/#64-compose-profiles-environments","title":"6.4 Compose Profiles &amp; Environments","text":"<pre><code># Profiles\nversion: \"3.8\"\n\nservices:\n  web:\n    image: nginx\n    profiles: [\"frontend\"]\n\n  api:\n    image: node:alpine\n    profiles: [\"backend\"]\n\n  db:\n    image: postgres\n    profiles: [\"backend\", \"testing\"]\n\n  test:\n    image: test-runner\n    profiles: [\"testing\"]\n</code></pre> <pre><code># Profile Usage\ndocker-compose --profile frontend up    # Start frontend services\ndocker-compose --profile backend up     # Start backend services\ndocker-compose --profile testing up     # Start testing services\n</code></pre>"},{"location":"docker/#7-docker-swarm","title":"\ud83c\udfad 7. DOCKER SWARM","text":""},{"location":"docker/#71-swarm-initialization","title":"7.1 Swarm Initialization","text":"<pre><code># Initialize Swarm\ndocker swarm init                       # Initialize swarm on current node\ndocker swarm init --advertise-addr 192.168.1.100  # Specify IP\ndocker swarm join-token worker          # Get worker join token\ndocker swarm join-token manager         # Get manager join token\n\n# Join Swarm\ndocker swarm join --token SWMTKN-... 192.168.1.100:2377  # Join as worker\ndocker swarm join --token SWMTKN-... 192.168.1.100:2377  # Join as manager\n\n# Swarm Management\ndocker node ls                          # List nodes\ndocker node inspect node_id             # Node details\ndocker node update --availability drain node_id  # Drain node\ndocker node promote node_id             # Promote to manager\ndocker node demote node_id               # Demote to worker\ndocker swarm leave                       # Leave swarm\ndocker swarm leave --force               # Force leave (manager)\n</code></pre>"},{"location":"docker/#72-service-management","title":"7.2 Service Management","text":"<pre><code># Create Services\ndocker service create --name web nginx             # Basic service\ndocker service create --name web --replicas 3 nginx  # With replicas\ndocker service create --name web -p 8080:80 nginx    # With port\ndocker service create --name web --mount type=volume,src=data,dst=/data nginx\n\n# Service Operations\ndocker service ls                       # List services\ndocker service ps web                   # Service tasks\ndocker service inspect web              # Service details\ndocker service logs web                 # Service logs\ndocker service update --replicas 5 web  # Scale service\ndocker service rm web                   # Remove service\n\n# Service Updates\ndocker service update --image nginx:alpine web     # Update image\ndocker service update --publish-add 9090:80 web    # Add port\ndocker service update --env-add ENV=prod web       # Add environment\ndocker service update --rollback web               # Rollback service\n</code></pre>"},{"location":"docker/#73-stack-deployment","title":"7.3 Stack Deployment","text":"<pre><code># stack.yml\nversion: \"3.8\"\n\nservices:\n  web:\n    image: nginx:alpine\n    ports:\n      - \"8080:80\"\n    deploy:\n      replicas: 3\n      restart_policy:\n        condition: on-failure\n      placement:\n        constraints:\n          - node.role == worker\n    networks:\n      - webnet\n\n  visualizer:\n    image: dockersamples/visualizer:stable\n    ports:\n      - \"8081:8080\"\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\n    deploy:\n      placement:\n        constraints:\n          - node.role == manager\n    networks:\n      - webnet\n\nnetworks:\n  webnet:\n    driver: overlay\n</code></pre> <pre><code># Stack Commands\ndocker stack deploy -c stack.yml myapp     # Deploy stack\ndocker stack ls                            # List stacks\ndocker stack ps myapp                      # Stack tasks\ndocker stack services myapp                # Stack services\ndocker stack rm myapp                      # Remove stack\n</code></pre>"},{"location":"docker/#74-swarm-networking-secrets","title":"7.4 Swarm Networking &amp; Secrets","text":"<pre><code># Overlay Networks\ndocker network create --driver overlay myoverlay    # Create overlay network\ndocker network create --driver overlay --attachable myoverlay  # Attachable\n\n# Secrets Management\necho \"mysecretpassword\" | docker secret create db_password -\ndocker secret ls                           # List secrets\ndocker secret inspect db_password          # Secret details\ndocker secret rm db_password               # Remove secret\n\n# Config Management\ndocker config create app_config app.conf   # Create config\ndocker config ls                           # List configs\ndocker config inspect app_config           # Config details\ndocker config rm app_config                # Remove config\n\n# Using Secrets in Services\ndocker service create \\\n  --name web \\\n  --secret db_password \\\n  --config app_config \\\n  nginx\n</code></pre>"},{"location":"docker/#8-dockerfile-best-practices","title":"\ud83c\udfd7\ufe0f 8. DOCKERFILE BEST PRACTICES","text":""},{"location":"docker/#81-optimization-techniques","title":"8.1 Optimization Techniques","text":"<pre><code># Multi-stage Build\nFROM node:16-alpine AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci --only=production\n\nFROM node:16-alpine\nWORKDIR /app\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY . .\nEXPOSE 3000\nCMD [\"node\", \"index.js\"]\n\n# Layer Optimization\nFROM ubuntu:20.04\n\n# Combine RUN commands to reduce layers\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y \\\n    python3 \\\n    python3-pip \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Copy requirements first for better caching\nCOPY requirements.txt .\nRUN pip3 install -r requirements.txt\n\n# Copy source code last\nCOPY . .\n\n# Use specific versions\nFROM node:16.14.2-alpine3.15\n\n# Create non-root user\nRUN addgroup -g 1001 -S nodejs &amp;&amp; \\\n    adduser -S nextjs -u 1001\nUSER nextjs\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost/ || exit 1\n</code></pre>"},{"location":"docker/#82-security-best-practices","title":"8.2 Security Best Practices","text":"<pre><code># Security-focused Dockerfile\nFROM alpine:3.15\n\n# Install security updates\nRUN apk update &amp;&amp; apk upgrade\n\n# Create non-root user\nRUN addgroup -S appgroup &amp;&amp; adduser -S appuser -G appgroup\n\n# Install only necessary packages\nRUN apk add --no-cache python3 py3-pip\n\n# Set working directory\nWORKDIR /app\n\n# Copy files with proper ownership\nCOPY --chown=appuser:appgroup requirements.txt .\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY --chown=appuser:appgroup . .\n\n# Switch to non-root user\nUSER appuser\n\n# Remove unnecessary permissions\nRUN chmod -R 750 /app\n\n# Use COPY instead of ADD\nCOPY config.json /app/config.json\n\n# Minimize attack surface\nRUN rm -rf /tmp/* /var/tmp/* /var/cache/apk/*\n\n# Use specific CMD\nCMD [\"python3\", \"app.py\"]\n</code></pre>"},{"location":"docker/#83-performance-optimization","title":"8.3 Performance Optimization","text":"<pre><code># Performance-optimized Dockerfile\nFROM python:3.9-slim-buster\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1\n\n# Install system dependencies\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Create virtual environment\nRUN python -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\n# Install Python dependencies\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copy application\nWORKDIR /app\nCOPY . .\n\n# Set proper permissions\nRUN useradd --create-home --shell /bin/bash app &amp;&amp; \\\n    chown -R app:app /app\nUSER app\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n  CMD python healthcheck.py\n\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"app:application\"]\n</code></pre>"},{"location":"docker/#9-monitoring-logging","title":"\ud83d\udcca 9. MONITORING &amp; LOGGING","text":""},{"location":"docker/#91-container-monitoring","title":"9.1 Container Monitoring","text":"<pre><code># Basic Monitoring\ndocker stats                        # Real-time stats all containers\ndocker stats container_name         # Specific container stats\ndocker stats --no-stream           # One-time stats\ndocker stats --format \"table {{.Container}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\"\n\n# System Information\ndocker system df                    # Disk usage\ndocker system events               # Real-time events\ndocker system info                 # System information\ndocker system prune                # Clean up\n\n# Container Inspection\ndocker inspect container_name       # Full container info\ndocker top container_name           # Running processes\ndocker port container_name          # Port mappings\ndocker exec container_name ps aux   # Process list inside container\n</code></pre>"},{"location":"docker/#92-logging","title":"9.2 Logging","text":"<pre><code># Log Commands\ndocker logs container_name          # Container logs\ndocker logs -f container_name       # Follow logs\ndocker logs --tail 50 container_name  # Last 50 lines\ndocker logs --since \"2023-01-01\" container_name  # Logs since date\ndocker logs --until \"2023-12-31\" container_name  # Logs until date\ndocker logs -t container_name       # Show timestamps\n\n# Log Drivers\ndocker run --log-driver=json-file nginx        # JSON file (default)\ndocker run --log-driver=syslog nginx           # Syslog\ndocker run --log-driver=journald nginx         # systemd journal\ndocker run --log-driver=gelf nginx             # GELF\ndocker run --log-driver=fluentd nginx          # Fluentd\ndocker run --log-driver=awslogs nginx          # AWS CloudWatch\ndocker run --log-driver=none nginx             # No logging\n\n# Log Options\ndocker run --log-opt max-size=10m --log-opt max-file=3 nginx  # Log rotation\ndocker run --log-opt syslog-address=tcp://localhost:514 nginx  # Syslog address\n</code></pre>"},{"location":"docker/#93-monitoring-stack","title":"9.3 Monitoring Stack","text":"<pre><code># Monitoring with Prometheus &amp; Grafana\nversion: \"3.8\"\n\nservices:\n  prometheus:\n    image: prom/prometheus:latest\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n    command:\n      - \"--config.file=/etc/prometheus/prometheus.yml\"\n      - \"--storage.tsdb.path=/prometheus\"\n\n  grafana:\n    image: grafana/grafana:latest\n    ports:\n      - \"3000:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=admin\n    volumes:\n      - grafana-data:/var/lib/grafana\n\n  cadvisor:\n    image: gcr.io/cadvisor/cadvisor:latest\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - /:/rootfs:ro\n      - /var/run:/var/run:ro\n      - /sys:/sys:ro\n      - /var/lib/docker/:/var/lib/docker:ro\n      - /dev/disk/:/dev/disk:ro\n\n  node-exporter:\n    image: prom/node-exporter:latest\n    ports:\n      - \"9100:9100\"\n    volumes:\n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /:/rootfs:ro\n\nvolumes:\n  grafana-data:\n</code></pre>"},{"location":"docker/#10-docker-security","title":"\ud83d\udd12 10. DOCKER SECURITY","text":""},{"location":"docker/#101-image-security","title":"10.1 Image Security","text":"<pre><code># Image Scanning\ndocker scan image_name              # Docker scan (requires login)\ntrivy image nginx:latest            # Trivy scanner\nclair-scanner image_name            # Clair scanner\nanchore-cli image add nginx:latest  # Anchore scanner\n\n# Trusted Images\ndocker trust inspect nginx         # Inspect image trust\ndocker trust sign myimage:tag      # Sign image\nexport DOCKER_CONTENT_TRUST=1      # Enable content trust\n\n# Image Best Practices\n# Use official base images\nFROM node:16-alpine\n\n# Use specific tags, not latest\nFROM nginx:1.21.6-alpine\n\n# Use minimal base images\nFROM alpine:3.15\nFROM scratch                       # Empty image\nFROM distroless/java:11            # Distroless image\n\n# Verify image integrity\ndocker pull nginx@sha256:abc123... # Pull by digest\n</code></pre>"},{"location":"docker/#102-runtime-security","title":"10.2 Runtime Security","text":"<pre><code># Security Options\ndocker run --read-only nginx                    # Read-only filesystem\ndocker run --user 1000:1000 nginx              # Non-root user\ndocker run --cap-drop=ALL nginx                # Drop all capabilities\ndocker run --cap-add=NET_BIND_SERVICE nginx    # Add specific capability\ndocker run --no-new-privileges nginx           # No new privileges\ndocker run --security-opt=no-new-privileges nginx  # Security options\n\n# AppArmor/SELinux\ndocker run --security-opt apparmor=docker-default nginx  # AppArmor profile\ndocker run --security-opt label=type:container_t nginx   # SELinux label\n\n# Seccomp Profiles\ndocker run --security-opt seccomp=unconfined nginx      # Disable seccomp\ndocker run --security-opt seccomp=profile.json nginx    # Custom profile\n\n# Resource Limits\ndocker run --memory=256m nginx                 # Memory limit\ndocker run --cpus=0.5 nginx                   # CPU limit\ndocker run --pids-limit=100 nginx             # Process limit\ndocker run --ulimit nofile=1024:2048 nginx    # File descriptor limit\n</code></pre>"},{"location":"docker/#103-network-security","title":"10.3 Network Security","text":"<pre><code># Network Isolation\ndocker network create --internal mynetwork     # Internal network\ndocker run --network none nginx                # No network access\ndocker run --add-host=host.docker.internal:host-gateway nginx  # Host access\n\n# Firewall Rules\niptables -A DOCKER-USER -i ext_if ! -s 192.168.1.0/24 -j DROP  # Block external access\niptables -A DOCKER-USER -p tcp --dport 22 -j DROP              # Block SSH\n\n# TLS/SSL\ndocker run -v $(pwd)/certs:/certs nginx        # Mount certificates\ndocker run -e DOCKER_TLS_CERTDIR=/certs docker:dind  # Docker-in-Docker with TLS\n</code></pre>"},{"location":"docker/#104-secrets-management","title":"10.4 Secrets Management","text":"<pre><code># Docker Secrets (Swarm)\necho \"mysecret\" | docker secret create db_password -\ndocker service create --secret db_password nginx\n\n# External Secrets\ndocker run -e SECRET_KEY=$(cat secret.txt) nginx       # File-based\ndocker run -e SECRET_KEY=$(vault kv get -field=key secret/myapp) nginx  # Vault\n\n# Environment File\necho \"SECRET_KEY=mysecret\" &gt; .env\ndocker run --env-file .env nginx\n\n# Init Containers for Secrets\nversion: '3.8'\nservices:\n  secret-fetcher:\n    image: vault:latest\n    command: sh -c \"vault read -field=password secret/db &gt; /shared/password\"\n    volumes:\n      - shared-data:/shared\n\n  app:\n    image: myapp:latest\n    depends_on:\n      - secret-fetcher\n    volumes:\n      - shared-data:/secrets\n</code></pre>"},{"location":"docker/#11-docker-registry","title":"\ud83d\ude80 11. DOCKER REGISTRY","text":""},{"location":"docker/#111-docker-hub","title":"11.1 Docker Hub","text":"<pre><code># Docker Hub Operations\ndocker login                        # Login to Docker Hub\ndocker login -u username -p password # Login with credentials\ndocker logout                       # Logout\n\n# Push/Pull Images\ndocker tag myapp:latest username/myapp:latest  # Tag for push\ndocker push username/myapp:latest              # Push to Docker Hub\ndocker pull username/myapp:latest              # Pull from Docker Hub\n\n# Private Repositories\ndocker tag myapp:latest username/private-repo:latest\ndocker push username/private-repo:latest\n\n# Repository Management\n# Access Docker Hub web interface for:\n# - Repository settings\n# - Automated builds\n# - Webhooks\n# - Access permissions\n</code></pre>"},{"location":"docker/#112-private-registry","title":"11.2 Private Registry","text":"<pre><code># Run Local Registry\ndocker run -d -p 5000:5000 --name registry registry:2\ndocker run -d -p 5000:5000 --restart=always --name registry registry:2\n\n# With Persistent Storage\ndocker run -d -p 5000:5000 --restart=always --name registry \\\n  -v /opt/registry:/var/lib/registry \\\n  registry:2\n\n# With Authentication\ndocker run -d -p 5000:5000 --restart=always --name registry \\\n  -v /opt/registry:/var/lib/registry \\\n  -v /opt/auth:/auth \\\n  -e \"REGISTRY_AUTH=htpasswd\" \\\n  -e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\" \\\n  -e \"REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd\" \\\n  registry:2\n\n# Create htpasswd file\nhtpasswd -Bbn username password &gt; /opt/auth/htpasswd\n\n# Use Private Registry\ndocker tag myapp:latest localhost:5000/myapp:latest\ndocker push localhost:5000/myapp:latest\ndocker pull localhost:5000/myapp:latest\n</code></pre>"},{"location":"docker/#113-registry-configuration","title":"11.3 Registry Configuration","text":"<pre><code># Registry config.yml\nversion: 0.1\nlog:\n  fields:\n    service: registry\nstorage:\n  cache:\n    blobdescriptor: inmemory\n  filesystem:\n    rootdirectory: /var/lib/registry\nhttp:\n  addr: :5000\n  headers:\n    X-Content-Type-Options: [nosniff]\nhealth:\n  storagedriver:\n    enabled: true\n    interval: 10s\n    threshold: 3\nauth:\n  htpasswd:\n    realm: basic-realm\n    path: /etc/docker/registry/htpasswd\nmiddleware:\n  registry:\n    - name: AliasMiddleware\n      options:\n        aliases:\n          \"/\": \"/v2/\"\n</code></pre>"},{"location":"docker/#114-registry-api","title":"11.4 Registry API","text":"<pre><code># Registry API Calls\ncurl -X GET http://localhost:5000/v2/_catalog                    # List repositories\ncurl -X GET http://localhost:5000/v2/myapp/tags/list             # List tags\ncurl -X GET http://localhost:5000/v2/myapp/manifests/latest      # Get manifest\ncurl -X DELETE http://localhost:5000/v2/myapp/manifests/sha256:abc123  # Delete image\n\n# Registry Garbage Collection\ndocker exec registry bin/registry garbage-collect /etc/docker/registry/config.yml\n\n# Registry Health Check\ncurl -X GET http://localhost:5000/v2/\n</code></pre>"},{"location":"docker/#12-cicd-with-docker","title":"\ud83d\udd04 12. CI/CD WITH DOCKER","text":""},{"location":"docker/#121-jenkins-pipeline","title":"12.1 Jenkins Pipeline","text":"<pre><code>// Jenkinsfile\npipeline {\n    agent any\n\n    environment {\n        DOCKER_IMAGE = \"myapp\"\n        DOCKER_TAG = \"${BUILD_NUMBER}\"\n        REGISTRY = \"localhost:5000\"\n    }\n\n    stages {\n        stage('Checkout') {\n            steps {\n                checkout scm\n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    docker.build(\"${DOCKER_IMAGE}:${DOCKER_TAG}\")\n                }\n            }\n        }\n\n        stage('Test') {\n            steps {\n                script {\n                    docker.image(\"${DOCKER_IMAGE}:${DOCKER_TAG}\").inside {\n                        sh 'npm test'\n                    }\n                }\n            }\n        }\n\n        stage('Push') {\n            steps {\n                script {\n                    docker.withRegistry(\"http://${REGISTRY}\") {\n                        docker.image(\"${DOCKER_IMAGE}:${DOCKER_TAG}\").push()\n                        docker.image(\"${DOCKER_IMAGE}:${DOCKER_TAG}\").push(\"latest\")\n                    }\n                }\n            }\n        }\n\n        stage('Deploy') {\n            steps {\n                sh \"\"\"\n                docker service update --image ${REGISTRY}/${DOCKER_IMAGE}:${DOCKER_TAG} myapp_web\n                \"\"\"\n            }\n        }\n    }\n\n    post {\n        always {\n            sh \"docker rmi ${DOCKER_IMAGE}:${DOCKER_TAG} || true\"\n        }\n    }\n}\n</code></pre>"},{"location":"docker/#122-gitlab-cicd","title":"12.2 GitLab CI/CD","text":"<pre><code># .gitlab-ci.yml\nstages:\n  - build\n  - test\n  - security\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE\n  DOCKER_TAG: $CI_COMMIT_SHORT_SHA\n\nbefore_script:\n  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n\nbuild:\n  stage: build\n  script:\n    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .\n    - docker push $DOCKER_IMAGE:$DOCKER_TAG\n\ntest:\n  stage: test\n  script:\n    - docker run --rm $DOCKER_IMAGE:$DOCKER_TAG npm test\n\nsecurity_scan:\n  stage: security\n  script:\n    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image $DOCKER_IMAGE:$DOCKER_TAG\n\ndeploy_staging:\n  stage: deploy\n  script:\n    - docker service update --image $DOCKER_IMAGE:$DOCKER_TAG staging_app\n  environment:\n    name: staging\n  only:\n    - develop\n\ndeploy_production:\n  stage: deploy\n  script:\n    - docker service update --image $DOCKER_IMAGE:$DOCKER_TAG production_app\n  environment:\n    name: production\n  only:\n    - master\n  when: manual\n</code></pre>"},{"location":"docker/#123-github-actions","title":"12.3 GitHub Actions","text":"<pre><code># .github/workflows/docker.yml\nname: Docker Build and Deploy\n\non:\n  push:\n    branches: [main, develop]\n  pull_request:\n    branches: [main]\n\nenv:\n  REGISTRY: ghcr.io\n  IMAGE_NAME: ${{ github.repository }}\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: read\n      packages: write\n\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      - name: Log in to Container Registry\n        uses: docker/login-action@v2\n        with:\n          registry: ${{ env.REGISTRY }}\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Extract metadata\n        id: meta\n        uses: docker/metadata-action@v4\n        with:\n          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\n          tags: |\n            type=ref,event=branch\n            type=ref,event=pr\n            type=sha\n\n      - name: Build and push Docker image\n        uses: docker/build-push-action@v4\n        with:\n          context: .\n          push: true\n          tags: ${{ steps.meta.outputs.tags }}\n          labels: ${{ steps.meta.outputs.labels }}\n\n      - name: Run security scan\n        uses: aquasecurity/trivy-action@master\n        with:\n          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}\n          format: \"sarif\"\n          output: \"trivy-results.sarif\"\n\n      - name: Upload Trivy scan results\n        uses: github/codeql-action/upload-sarif@v2\n        with:\n          sarif_file: \"trivy-results.sarif\"\n</code></pre>"},{"location":"docker/#13-testing-debugging","title":"\ud83e\uddea 13. TESTING &amp; DEBUGGING","text":""},{"location":"docker/#131-container-testing","title":"13.1 Container Testing","text":"<pre><code># Unit Testing\ndocker run --rm -v $(pwd):/app -w /app node:16 npm test\ndocker run --rm -v $(pwd):/app -w /app python:3.9 python -m pytest\n\n# Integration Testing\ndocker-compose -f docker-compose.test.yml up --abort-on-container-exit\ndocker-compose -f docker-compose.test.yml down\n\n# Health Checks\ndocker run --health-cmd=\"curl -f http://localhost/\" --health-interval=30s nginx\ndocker inspect --format='{{.State.Health.Status}}' container_name\n\n# Test Dockerfile\nhadolint Dockerfile                # Dockerfile linter\ndive myimage:latest               # Image layer analyzer\ndocker-bench-security             # Security benchmark\n</code></pre>"},{"location":"docker/#132-debugging-techniques","title":"13.2 Debugging Techniques","text":"<pre><code># Debug Container\ndocker run -it --entrypoint /bin/bash myimage:latest     # Override entrypoint\ndocker exec -it container_name /bin/bash                 # Execute shell\ndocker run --rm -it --pid=container:target alpine       # Share PID namespace\n\n# Debug Networking\ndocker run --rm --net container:target nicolaka/netshoot # Network debugging\ndocker exec container_name netstat -tlnp                 # Network connections\ndocker exec container_name ss -tlnp                      # Socket statistics\n\n# Debug Storage\ndocker exec container_name df -h                         # Disk usage\ndocker exec container_name mount                         # Mount points\ndocker inspect container_name | grep -i mounts           # Volume mounts\n\n# Debug Processes\ndocker exec container_name ps aux                        # Running processes\ndocker exec container_name top                           # Process monitor\ndocker stats container_name                              # Resource usage\n</code></pre>"},{"location":"docker/#133-troubleshooting","title":"13.3 Troubleshooting","text":"<pre><code># Common Issues\ndocker logs container_name                      # Check logs\ndocker inspect container_name                   # Detailed info\ndocker events                                   # Real-time events\ndocker system prune                            # Clean up\n\n# Container Won't Start\ndocker run --rm -it myimage:latest /bin/bash   # Test interactively\ndocker run --rm myimage:latest /bin/ls -la     # Test command\ndocker history myimage:latest                  # Check image layers\n\n# Networking Issues\ndocker network ls                              # List networks\ndocker network inspect bridge                  # Network details\ndocker port container_name                     # Port mappings\nping $(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name)\n\n# Performance Issues\ndocker stats --no-stream                       # Resource usage\ndocker exec container_name free -h             # Memory usage\ndocker exec container_name iostat              # I/O statistics\ndocker system df                               # Disk usage\n</code></pre>"},{"location":"docker/#14-performance-optimization","title":"\ud83d\udcc8 14. PERFORMANCE OPTIMIZATION","text":""},{"location":"docker/#141-image-optimization","title":"14.1 Image Optimization","text":"<pre><code># Multi-stage builds\nFROM node:16 AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci --only=production\n\nFROM node:16-alpine\nWORKDIR /app\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY . .\nCMD [\"node\", \"index.js\"]\n\n# Layer caching optimization\nFROM python:3.9-slim\n\n# Copy requirements first for better caching\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\n\n# Copy source code last\nCOPY . .\n\n# Use .dockerignore\n# .dockerignore file:\nnode_modules\n.git\n.gitignore\nREADME.md\nDockerfile\n.dockerignore\n</code></pre>"},{"location":"docker/#142-runtime-optimization","title":"14.2 Runtime Optimization","text":"<pre><code># Resource Limits\ndocker run --memory=512m --cpus=1.5 myapp      # Limit resources\ndocker run --oom-kill-disable myapp            # Disable OOM killer\ndocker run --kernel-memory=50m myapp           # Kernel memory limit\n\n# Storage Optimization\ndocker run --storage-opt size=10G myapp        # Limit container size\ndocker run --tmpfs /tmp:rw,noexec,nosuid,size=100m myapp  # tmpfs mount\n\n# Network Optimization\ndocker run --net=host myapp                    # Host networking\ndocker run --dns=8.8.8.8 myapp                # Custom DNS\n</code></pre>"},{"location":"docker/#143-monitoring-performance","title":"14.3 Monitoring Performance","text":"<pre><code># Container Metrics\ndocker stats --format \"table {{.Container}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\\t{{.NetIO}}\\t{{.BlockIO}}\"\n\n# System Metrics\ndocker system df -v                            # Detailed disk usage\ndocker system events --filter container=myapp  # Container events\n\n# Performance Tools\nctop                                           # Container top\nlazydocker                                     # Terminal UI for Docker\n</code></pre>"},{"location":"docker/#15-production-deployment","title":"\ud83c\udfaf 15. PRODUCTION DEPLOYMENT","text":""},{"location":"docker/#151-production-best-practices","title":"15.1 Production Best Practices","text":"<pre><code># Production docker-compose.yml\nversion: \"3.8\"\n\nservices:\n  web:\n    image: myapp:${VERSION}\n    restart: unless-stopped\n    ports:\n      - \"80:8080\"\n    environment:\n      - NODE_ENV=production\n    volumes:\n      - /var/log/myapp:/app/logs\n    networks:\n      - frontend\n      - backend\n    deploy:\n      resources:\n        limits:\n          cpus: \"2\"\n          memory: 1G\n        reservations:\n          cpus: \"1\"\n          memory: 512M\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:8080/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 60s\n    logging:\n      driver: \"json-file\"\n      options:\n        max-size: \"10m\"\n        max-file: \"3\"\n\n  db:\n    image: postgres:13\n    restart: unless-stopped\n    environment:\n      POSTGRES_DB: ${DB_NAME}\n      POSTGRES_USER: ${DB_USER}\n      POSTGRES_PASSWORD_FILE: /run/secrets/db_password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - /etc/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf\n    networks:\n      - backend\n    secrets:\n      - db_password\n    deploy:\n      resources:\n        limits:\n          memory: 2G\n        reservations:\n          memory: 1G\n\nsecrets:\n  db_password:\n    file: ./secrets/db_password.txt\n\nvolumes:\n  postgres_data:\n    external: true\n\nnetworks:\n  frontend:\n  backend:\n    internal: true\n</code></pre>"},{"location":"docker/#152-high-availability","title":"15.2 High Availability","text":"<pre><code># Docker Swarm HA\ndocker swarm init --advertise-addr 192.168.1.10\ndocker swarm join-token manager\n\n# Multiple replicas\ndocker service create --name web --replicas 3 nginx\ndocker service update --replicas 5 web\n\n# Health checks\ndocker service create --name web \\\n  --health-cmd \"curl -f http://localhost/\" \\\n  --health-interval 30s \\\n  --health-retries 3 \\\n  nginx\n\n# Rolling updates\ndocker service update --image nginx:alpine web\ndocker service update --update-parallelism 1 --update-delay 10s web\n</code></pre>"},{"location":"docker/#153-backup-recovery","title":"15.3 Backup &amp; Recovery","text":"<pre><code># Volume Backup\ndocker run --rm -v myapp_data:/data -v $(pwd):/backup alpine \\\n  tar czf /backup/backup-$(date +%Y%m%d).tar.gz -C /data .\n\n# Database Backup\ndocker exec postgres_container pg_dump -U postgres mydb &gt; backup.sql\ndocker exec mysql_container mysqldump -u root -p mydb &gt; backup.sql\n\n# Image Backup\ndocker save myapp:latest | gzip &gt; myapp-latest.tar.gz\ndocker load &lt; myapp-latest.tar.gz\n\n# Automated Backup Script\n#!/bin/bash\nDATE=$(date +%Y%m%d)\ndocker exec postgres pg_dump -U postgres mydb | gzip &gt; /backup/db-$DATE.sql.gz\ndocker run --rm -v myapp_data:/data -v /backup:/backup alpine \\\n  tar czf /backup/app-data-$DATE.tar.gz -C /data .\nfind /backup -name \"*.gz\" -mtime +7 -delete\n</code></pre>"},{"location":"docker/#16-advanced-topics","title":"\ud83c\udf93 16. ADVANCED TOPICS","text":""},{"location":"docker/#161-docker-buildkit","title":"16.1 Docker BuildKit","text":"<pre><code># Enable BuildKit\nexport DOCKER_BUILDKIT=1\ndocker build .\n\n# BuildKit features in Dockerfile\n# syntax=docker/dockerfile:1\nFROM alpine:latest\n\n# Cache mounts\nRUN --mount=type=cache,target=/var/cache/apk \\\n    apk add --update git\n\n# Secret mounts\nRUN --mount=type=secret,id=mypassword cat /run/secrets/mypassword\n\n# SSH mounts\nRUN --mount=type=ssh git clone git@github.com:myorg/myproject.git\n\n# Build with BuildKit\ndocker build --secret id=mypassword,src=./password.txt .\ndocker build --ssh default .\n</code></pre>"},{"location":"docker/#162-docker-content-trust","title":"16.2 Docker Content Trust","text":"<pre><code># Enable Content Trust\nexport DOCKER_CONTENT_TRUST=1\n\n# Generate keys\ndocker trust key generate mykey\ndocker trust signer add --key mykey.pub myuser myimage\n\n# Sign images\ndocker trust sign myimage:latest\n\n# Verify signatures\ndocker trust inspect myimage:latest\n</code></pre>"},{"location":"docker/#163-container-runtime-alternatives","title":"16.3 Container Runtime Alternatives","text":"<pre><code># containerd\nctr images pull docker.io/library/nginx:latest\nctr run docker.io/library/nginx:latest nginx\n\n# CRI-O (with crictl)\ncrictl pull nginx:latest\ncrictl run nginx-config.json nginx-sandbox.json\n\n# Podman (Docker alternative)\npodman run -d nginx\npodman generate systemd nginx &gt; nginx.service\n</code></pre>"},{"location":"docker/#17-docker-commands-reference","title":"\ud83d\udccb 17. DOCKER COMMANDS REFERENCE","text":""},{"location":"docker/#171-complete-command-list","title":"17.1 Complete Command List","text":"<pre><code># Container Lifecycle\ndocker create          # Create container\ndocker start           # Start container\ndocker stop            # Stop container\ndocker restart         # Restart container\ndocker kill            # Kill container\ndocker rm              # Remove container\ndocker pause           # Pause container\ndocker unpause         # Unpause container\n\n# Container Information\ndocker ps              # List running containers\ndocker ps -a           # List all containers\ndocker inspect         # Inspect container\ndocker logs            # Container logs\ndocker top             # Running processes\ndocker stats           # Resource usage\ndocker port            # Port mappings\ndocker diff            # Filesystem changes\n\n# Container Interaction\ndocker exec            # Execute command\ndocker attach          # Attach to container\ndocker cp              # Copy files\ndocker export          # Export container\ndocker import          # Import container\n\n# Image Management\ndocker images          # List images\ndocker pull            # Pull image\ndocker push            # Push image\ndocker build           # Build image\ndocker tag             # Tag image\ndocker rmi             # Remove image\ndocker save            # Save image\ndocker load            # Load image\ndocker history         # Image history\ndocker inspect         # Inspect image\n\n# Registry\ndocker login           # Login to registry\ndocker logout          # Logout from registry\ndocker search          # Search images\n\n# Network Management\ndocker network ls      # List networks\ndocker network create  # Create network\ndocker network rm      # Remove network\ndocker network inspect # Inspect network\ndocker network connect # Connect container\ndocker network disconnect # Disconnect container\n\n# Volume Management\ndocker volume ls       # List volumes\ndocker volume create   # Create volume\ndocker volume rm       # Remove volume\ndocker volume inspect  # Inspect volume\ndocker volume prune    # Remove unused volumes\n\n# System Management\ndocker info            # System information\ndocker version         # Version information\ndocker system df       # Disk usage\ndocker system prune    # Clean up\ndocker system events   # System events\n\n# Swarm Management\ndocker swarm init      # Initialize swarm\ndocker swarm join      # Join swarm\ndocker swarm leave     # Leave swarm\ndocker node ls         # List nodes\ndocker service create  # Create service\ndocker service ls      # List services\ndocker service ps      # Service tasks\ndocker service update  # Update service\ndocker service rm      # Remove service\ndocker stack deploy    # Deploy stack\ndocker stack ls        # List stacks\ndocker stack ps        # Stack tasks\ndocker stack rm        # Remove stack\ndocker secret create   # Create secret\ndocker secret ls       # List secrets\ndocker config create   # Create config\ndocker config ls       # List configs\n</code></pre>"},{"location":"docker/#172-docker-compose-commands","title":"17.2 Docker Compose Commands","text":"<pre><code># Compose Lifecycle\ndocker-compose up      # Start services\ndocker-compose down    # Stop services\ndocker-compose start   # Start existing containers\ndocker-compose stop    # Stop containers\ndocker-compose restart # Restart services\ndocker-compose pause   # Pause services\ndocker-compose unpause # Unpause services\n\n# Compose Build\ndocker-compose build   # Build images\ndocker-compose pull    # Pull images\ndocker-compose push    # Push images\n\n# Compose Information\ndocker-compose ps      # List containers\ndocker-compose logs    # View logs\ndocker-compose top     # Running processes\ndocker-compose port    # Port information\n\n# Compose Execution\ndocker-compose exec    # Execute command\ndocker-compose run     # Run one-off command\n\n# Compose Management\ndocker-compose config  # Validate and view config\ndocker-compose scale   # Scale services\ndocker-compose kill    # Kill containers\ndocker-compose rm      # Remove containers\n</code></pre>"},{"location":"docker/#18-learning-path-certification","title":"\ud83c\udfaf 18. LEARNING PATH &amp; CERTIFICATION","text":""},{"location":"docker/#181-learning-timeline","title":"18.1 Learning Timeline","text":"<pre><code># Beginner (1-2 months)\nWeek 1-2: Docker basics, containers, images\nWeek 3-4: Dockerfile, docker-compose\nWeek 5-6: Networking, volumes\nWeek 7-8: Registry, basic deployment\n\n# Intermediate (2-3 months)\nMonth 3: Docker Swarm, orchestration\nMonth 4: Security, monitoring\nMonth 5: CI/CD integration\n\n# Advanced (3-6 months)\nMonth 6: Performance optimization\nMonth 7: Production deployment\nMonth 8: Advanced features (BuildKit, multi-arch)\nMonth 9-11: Kubernetes integration\nMonth 12: Certification preparation\n</code></pre>"},{"location":"docker/#182-certifications","title":"18.2 Certifications","text":"<pre><code># Docker Certifications\n- Docker Certified Associate (DCA)\n- Docker Certified Professional\n\n# Related Certifications\n- Certified Kubernetes Administrator (CKA)\n- Certified Kubernetes Application Developer (CKAD)\n- AWS Certified Solutions Architect\n- Google Cloud Professional Cloud Architect\n</code></pre>"},{"location":"docker/#183-practice-projects","title":"18.3 Practice Projects","text":"<pre><code># Beginner Projects\n1. Containerize a simple web application\n2. Multi-container application with database\n3. Docker Compose for development environment\n4. Basic CI/CD pipeline\n\n# Intermediate Projects\n1. Microservices architecture\n2. Docker Swarm cluster\n3. Monitoring stack (Prometheus + Grafana)\n4. Log aggregation system\n\n# Advanced Projects\n1. Multi-environment deployment pipeline\n2. High-availability web application\n3. Container security implementation\n4. Performance optimization case study\n</code></pre>"},{"location":"docker/#19-resources-tools","title":"\ud83d\udcda 19. RESOURCES &amp; TOOLS","text":""},{"location":"docker/#191-essential-tools","title":"19.1 Essential Tools","text":"<pre><code># Docker Desktop         # GUI for Docker\n# Portainer             # Web-based Docker management\n# Watchtower            # Automated container updates\n# Dive                  # Image layer analyzer\n# Hadolint              # Dockerfile linter\n# Trivy                 # Vulnerability scanner\n# ctop                  # Container monitoring\n# lazydocker            # Terminal UI for Docker\n# docker-compose        # Multi-container applications\n# docker-machine        # Provision Docker hosts\n</code></pre>"},{"location":"docker/#192-documentation-learning","title":"19.2 Documentation &amp; Learning","text":"<pre><code># Official Documentation\n- Docker Documentation: https://docs.docker.com/\n- Docker Hub: https://hub.docker.com/\n- Docker Blog: https://www.docker.com/blog/\n\n# Learning Resources\n- Play with Docker: https://labs.play-with-docker.com/\n- Docker 101 Tutorial: https://www.docker.com/101-tutorial\n- Katacoda Docker Scenarios: https://katacoda.com/courses/docker\n\n# Books\n- \"Docker: Up &amp; Running\" by Karl Matthias\n- \"Docker in Action\" by Jeff Nickoloff\n- \"Docker Deep Dive\" by Nigel Poulton\n</code></pre>"},{"location":"docker/#193-community-support","title":"19.3 Community &amp; Support","text":"<pre><code># Community\n- Docker Community Forums\n- Stack Overflow (docker tag)\n- Reddit r/docker\n- Docker Community Slack\n\n# Events\n- DockerCon\n- Local Docker Meetups\n- Docker Birthday celebrations\n- Online webinars\n</code></pre> <p>\u0110\u00e2y l\u00e0 t\u00e0i li\u1ec7u to\u00e0n di\u1ec7n v\u1ec1 Docker. H\u00e3y th\u1ef1c h\u00e0nh th\u01b0\u1eddng xuy\u00ean, x\u00e2y d\u1ef1ng projects th\u1ef1c t\u1ebf, v\u00e0 kh\u00f4ng ng\u1eebng c\u1eadp nh\u1eadt ki\u1ebfn th\u1ee9c!</p>"},{"location":"docker/roadmap/","title":"Docker Complete Mastery Roadmap - M\u1ecdi D\u1ef1 \u00c1n Th\u1ef1c T\u1ebf","text":""},{"location":"docker/roadmap/#docker-complete-mastery-roadmap-moi-du-an-thuc-te","title":"Docker Complete Mastery Roadmap - M\u1ecdi D\u1ef1 \u00c1n Th\u1ef1c T\u1ebf","text":""},{"location":"docker/roadmap/#giai-oan-1-foundation-thang-1-2","title":"\ud83d\udcda Giai \u0111o\u1ea1n 1: Foundation (Th\u00e1ng 1-2)","text":""},{"location":"docker/roadmap/#week-1-2-docker-basics","title":"Week 1-2: Docker Basics","text":"<ul> <li>[ ] Hi\u1ec3u Container vs Virtual Machine</li> <li>[ ] C\u00e0i \u0111\u1eb7t Docker Desktop/Engine</li> <li>[ ] Docker architecture (Client-Server)</li> <li>[ ] Basic commands: <code>run</code>, <code>ps</code>, <code>images</code>, <code>pull</code>, <code>stop</code></li> <li>[ ] Project: Ch\u1ea1y first container (nginx, mysql)</li> </ul>"},{"location":"docker/roadmap/#week-3-4-images-containers-deep-dive","title":"Week 3-4: Images &amp; Containers Deep Dive","text":"<ul> <li>[ ] Dockerfile fundamentals</li> <li>[ ] Image layers v\u00e0 caching</li> <li>[ ] Container lifecycle</li> <li>[ ] Port mapping v\u00e0 networking basics</li> <li>[ ] Volume basics</li> <li>[ ] Project: Build custom web app image</li> </ul>"},{"location":"docker/roadmap/#week-5-6-dockerfile-best-practices","title":"Week 5-6: Dockerfile Best Practices","text":"<ul> <li>[ ] Multi-stage builds</li> <li>[ ] Optimize image size</li> <li>[ ] Security best practices</li> <li>[ ] .dockerignore</li> <li>[ ] Project: Optimize existing app Dockerfile</li> </ul>"},{"location":"docker/roadmap/#week-7-8-docker-compose","title":"Week 7-8: Docker Compose","text":"<ul> <li>[ ] YAML syntax</li> <li>[ ] Multi-container applications</li> <li>[ ] Environment variables</li> <li>[ ] Networks trong Compose</li> <li>[ ] Project: Full-stack app (Frontend + Backend + Database)</li> </ul>"},{"location":"docker/roadmap/#giai-oan-2-intermediate-thang-3-4","title":"\ud83d\udd27 Giai \u0111o\u1ea1n 2: Intermediate (Th\u00e1ng 3-4)","text":""},{"location":"docker/roadmap/#week-9-10-networking","title":"Week 9-10: Networking","text":"<ul> <li>[ ] Bridge, Host, None networks</li> <li>[ ] Custom networks</li> <li>[ ] Container communication</li> <li>[ ] Load balancing basics</li> <li>[ ] Project: Microservices v\u1edbi custom network</li> </ul>"},{"location":"docker/roadmap/#week-11-12-storage-volumes","title":"Week 11-12: Storage &amp; Volumes","text":"<ul> <li>[ ] Bind mounts vs Volumes vs tmpfs</li> <li>[ ] Volume drivers</li> <li>[ ] Backup v\u00e0 restore data</li> <li>[ ] Project: Persistent database setup</li> </ul>"},{"location":"docker/roadmap/#week-13-14-docker-registry","title":"Week 13-14: Docker Registry","text":"<ul> <li>[ ] Docker Hub</li> <li>[ ] Private registry setup</li> <li>[ ] Image tagging strategies</li> <li>[ ] Security scanning</li> <li>[ ] Project: Setup private registry</li> </ul>"},{"location":"docker/roadmap/#week-15-16-development-workflow","title":"Week 15-16: Development Workflow","text":"<ul> <li>[ ] Docker for development</li> <li>[ ] Live reload setup</li> <li>[ ] Debugging containers</li> <li>[ ] IDE integration</li> <li>[ ] Project: Complete dev environment</li> </ul>"},{"location":"docker/roadmap/#giai-oan-3-advanced-docker-thang-5-6","title":"\ud83d\ude80 Giai \u0111o\u1ea1n 3: Advanced Docker (Th\u00e1ng 5-6)","text":""},{"location":"docker/roadmap/#week-17-18-production-deployment-voi-docker","title":"Week 17-18: Production Deployment v\u1edbi Docker","text":"<ul> <li>[ ] Docker Swarm mode</li> <li>[ ] Services v\u00e0 stacks</li> <li>[ ] Rolling updates v\u00e0 rollbacks</li> <li>[ ] Health checks v\u00e0 restart policies</li> <li>[ ] Load balancing v\u1edbi Docker Swarm</li> <li>[ ] Project: Deploy production app v\u1edbi Swarm cluster</li> </ul>"},{"location":"docker/roadmap/#week-19-20-docker-registry-distribution","title":"Week 19-20: Docker Registry &amp; Distribution","text":"<ul> <li>[ ] Docker Hub advanced features</li> <li>[ ] Harbor private registry</li> <li>[ ] Image signing v\u00e0 trust</li> <li>[ ] Registry mirroring</li> <li>[ ] Garbage collection</li> <li>[ ] Project: Setup enterprise registry v\u1edbi Harbor</li> </ul>"},{"location":"docker/roadmap/#week-21-22-docker-security-deep-dive","title":"Week 21-22: Docker Security Deep Dive","text":"<ul> <li>[ ] Container security best practices</li> <li>[ ] Image vulnerability scanning (Trivy, Clair)</li> <li>[ ] Runtime security (AppArmor, SELinux)</li> <li>[ ] Secrets management</li> <li>[ ] User namespaces</li> <li>[ ] Capabilities v\u00e0 privilege escalation</li> <li>[ ] Project: Implement complete security pipeline</li> </ul>"},{"location":"docker/roadmap/#week-23-24-docker-monitoring-logging","title":"Week 23-24: Docker Monitoring &amp; Logging","text":"<ul> <li>[ ] Container logs management</li> <li>[ ] Docker stats v\u00e0 metrics</li> <li>[ ] Prometheus v\u1edbi Docker</li> <li>[ ] Grafana dashboards</li> <li>[ ] Log aggregation (ELK stack)</li> <li>[ ] Project: Complete monitoring cho Docker infrastructure</li> </ul>"},{"location":"docker/roadmap/#giai-oan-4-docker-expert-thang-7-8","title":"\ud83d\udcbc Giai \u0111o\u1ea1n 4: Docker Expert (Th\u00e1ng 7-8)","text":""},{"location":"docker/roadmap/#week-25-26-docker-development-workflows","title":"Week 25-26: Docker Development Workflows","text":"<ul> <li>[ ] Docker cho microservices development</li> <li>[ ] Multi-stage builds advanced</li> <li>[ ] Development containers (devcontainers)</li> <li>[ ] Docker layer caching strategies</li> <li>[ ] Build optimization techniques</li> <li>[ ] Project: Optimize complex microservices build pipeline</li> </ul>"},{"location":"docker/roadmap/#week-27-28-docker-networking-advanced","title":"Week 27-28: Docker Networking Advanced","text":"<ul> <li>[ ] Custom network drivers</li> <li>[ ] Container networking internals</li> <li>[ ] Network policies</li> <li>[ ] Service discovery</li> <li>[ ] Load balancing strategies</li> <li>[ ] Project: Implement service mesh v\u1edbi Docker</li> </ul>"},{"location":"docker/roadmap/#week-29-30-docker-storage-performance","title":"Week 29-30: Docker Storage &amp; Performance","text":"<ul> <li>[ ] Storage drivers deep dive</li> <li>[ ] Volume plugins</li> <li>[ ] Performance tuning</li> <li>[ ] Resource constraints</li> <li>[ ] cgroups v\u00e0 namespaces</li> <li>[ ] Project: High-performance Docker setup</li> </ul>"},{"location":"docker/roadmap/#week-31-32-docker-automation-orchestration","title":"Week 31-32: Docker Automation &amp; Orchestration","text":"<ul> <li>[ ] Docker API programming</li> <li>[ ] Docker SDK usage</li> <li>[ ] Infrastructure as Code v\u1edbi Docker</li> <li>[ ] Ansible v\u1edbi Docker</li> <li>[ ] Terraform Docker provider</li> <li>[ ] Project: Complete IaC solution</li> </ul>"},{"location":"docker/roadmap/#giai-oan-5-docker-mastery-cho-moi-du-an-thang-9-12","title":"\ud83c\udfc6 Giai \u0111o\u1ea1n 5: Docker Mastery cho M\u1ecdi D\u1ef1 \u00c1n (Th\u00e1ng 9-12)","text":""},{"location":"docker/roadmap/#web-development-projects","title":"\ud83c\udf10 Web Development Projects","text":""},{"location":"docker/roadmap/#frontend-frameworks","title":"Frontend Frameworks","text":"<ul> <li> <p>[ ] React/Next.js Applications</p> </li> <li> <p>Multi-stage builds v\u1edbi Node.js</p> </li> <li>Static asset optimization</li> <li>Nginx serving v\u1edbi gzip compression</li> <li> <p>Environment-specific builds</p> </li> <li> <p>[ ] Vue.js/Nuxt.js Applications</p> </li> <li> <p>SSR/SPA Docker configurations</p> </li> <li>Development hot-reload setup</li> <li>Production build optimization</li> <li> <p>CDN integration patterns</p> </li> <li> <p>[ ] Angular Applications</p> </li> <li>Angular CLI Docker integration</li> <li>Multi-environment builds</li> <li>Nginx reverse proxy setup</li> <li>Progressive Web App deployment</li> </ul>"},{"location":"docker/roadmap/#modern-frontend-frameworks-bo-sung","title":"Modern Frontend Frameworks (B\u1ed5 sung)","text":"<ul> <li> <p>[ ] Svelte/SvelteKit Applications</p> </li> <li> <p>Vite build optimization</p> </li> <li>Component compilation</li> <li>SSR/SPA hybrid deployment</li> <li> <p>Bundle size optimization</p> </li> <li> <p>[ ] Solid.js Applications</p> </li> <li> <p>Fine-grained reactivity</p> </li> <li>Performance optimization</li> <li>TypeScript integration</li> <li> <p>Server-side rendering</p> </li> <li> <p>[ ] Qwik Applications</p> </li> <li> <p>Resumability concepts</p> </li> <li>Progressive hydration</li> <li>Zero-bundle deployment</li> <li> <p>Edge computing optimization</p> </li> <li> <p>[ ] Astro Applications</p> </li> <li>Static site generation</li> <li>Island architecture</li> <li>Multi-framework support</li> <li>Content collection optimization</li> </ul>"},{"location":"docker/roadmap/#backend-frameworks","title":"Backend Frameworks","text":"<ul> <li> <p>[ ] Node.js APIs (Express, Fastify, Nest.js)</p> </li> <li> <p>PM2 process management</p> </li> <li>Cluster mode configuration</li> <li>Memory optimization techniques</li> <li> <p>Health check implementations</p> </li> <li> <p>[ ] Python Web Apps (Django, Flask, FastAPI)</p> </li> <li> <p>WSGI/ASGI server configuration</p> </li> <li>Virtual environment optimization</li> <li>Database migration automation</li> <li> <p>Celery worker containers</p> </li> <li> <p>[ ] Java Applications (Spring Boot, Quarkus)</p> </li> <li> <p>JVM optimization trong containers</p> </li> <li>Native compilation v\u1edbi GraalVM</li> <li>Maven/Gradle build caching</li> <li> <p>JProfiler integration</p> </li> <li> <p>[ ] Go Applications</p> </li> <li> <p>Static binary builds</p> </li> <li>Scratch/distroless images</li> <li>CGO considerations</li> <li> <p>Performance optimization</p> </li> <li> <p>[ ] PHP Applications (Laravel, Symfony)</p> </li> <li> <p>PHP-FPM configuration</p> </li> <li>Composer optimization</li> <li>OPcache setup</li> <li> <p>Queue worker containers</p> </li> <li> <p>[ ] .NET Core Applications</p> </li> <li> <p>Multi-targeting frameworks</p> </li> <li>Self-contained deployments</li> <li>AOT compilation</li> <li> <p>Windows/Linux containers</p> </li> <li> <p>[ ] Rust Applications (Actix, Rocket, Warp, Axum)</p> </li> <li> <p>Cargo build optimization trong containers</p> </li> <li>Cross-compilation cho multiple targets</li> <li>Zero-copy optimizations</li> <li> <p>Memory safety best practices</p> </li> <li> <p>[ ] C/C++ Applications</p> </li> <li> <p>CMake/Make build systems</p> </li> <li>Static vs dynamic linking strategies</li> <li>GDB debugging trong containers</li> <li> <p>Conan package manager integration</p> </li> <li> <p>[ ] Kotlin Applications (Ktor, Spring Boot)</p> </li> <li> <p>Kotlin/Native compilation</p> </li> <li>Coroutines optimization</li> <li>JVM vs Native performance</li> <li> <p>Android backend services</p> </li> <li> <p>[ ] Scala Applications (Play, Akka, Cats Effect)</p> </li> <li> <p>SBT build caching</p> </li> <li>Akka cluster deployment</li> <li>Functional programming patterns</li> <li> <p>Reactive streams handling</p> </li> <li> <p>[ ] Clojure Applications</p> </li> <li> <p>Leiningen build tools</p> </li> <li>JVM startup optimization</li> <li>Immutable data structures</li> <li> <p>REPL-driven development</p> </li> <li> <p>[ ] Erlang/Elixir Applications (Phoenix, Nerves)</p> </li> <li> <p>BEAM VM optimization</p> </li> <li>OTP supervision trees</li> <li>Hot code swapping</li> <li> <p>Distributed systems</p> </li> <li> <p>[ ] Haskell Applications (Yesod, Servant)</p> </li> <li> <p>GHC compilation optimization</p> </li> <li>Lazy evaluation patterns</li> <li>Pure functional containers</li> <li> <p>Type-safe APIs</p> </li> <li> <p>[ ] F# Applications</p> </li> <li> <p>Functional-first programming</p> </li> <li>.NET Core integration</li> <li>Actor model patterns</li> <li> <p>Domain-driven design</p> </li> <li> <p>[ ] Dart Applications (Shelf, Angel3)</p> </li> <li> <p>Dart VM optimization</p> </li> <li>Null safety features</li> <li>Concurrency patterns</li> <li> <p>Web server deployment</p> </li> <li> <p>[ ] Bun Applications</p> </li> <li> <p>Native TypeScript support</p> </li> <li>Ultra-fast runtime</li> <li>Built-in bundler integration</li> <li> <p>Package manager optimization</p> </li> <li> <p>[ ] Deno Applications</p> </li> <li> <p>Secure by default</p> </li> <li>TypeScript native</li> <li>Web API compatibility</li> <li> <p>Modern module system</p> </li> <li> <p>[ ] Zig Applications</p> </li> <li>System-level programming</li> <li>Memory safety</li> <li>Cross-compilation</li> <li>Performance optimization</li> </ul>"},{"location":"docker/roadmap/#web3-blockchain-mo-rong","title":"Web3 &amp; Blockchain (M\u1edf r\u1ed9ng)","text":"<ul> <li> <p>[ ] Polygon Applications</p> </li> <li> <p>Layer 2 scaling solutions</p> </li> <li>DeFi protocol integration</li> <li>NFT marketplace deployment</li> <li> <p>Cross-chain bridge development</p> </li> <li> <p>[ ] Arbitrum/Optimism</p> </li> <li> <p>Optimistic rollup deployment</p> </li> <li>Gas optimization strategies</li> <li>Bridge contract integration</li> <li> <p>State channel implementation</p> </li> <li> <p>[ ] Avalanche Applications</p> </li> <li> <p>Subnet deployment</p> </li> <li>Custom blockchain creation</li> <li>Cross-subnet communication</li> <li> <p>Validator node setup</p> </li> <li> <p>[ ] Cosmos SDK Applications</p> </li> <li>Inter-blockchain communication</li> <li>Tendermint consensus</li> <li>Sovereign blockchain creation</li> <li>Cross-chain asset transfer</li> </ul>"},{"location":"docker/roadmap/#aiml-data-science-mo-rong-ang-ke","title":"\ud83e\udd16 AI/ML &amp; Data Science (M\u1edf r\u1ed9ng \u0111\u00e1ng k\u1ec3)","text":""},{"location":"docker/roadmap/#large-language-models","title":"Large Language Models","text":"<ul> <li> <p>[ ] OpenAI API Integration</p> </li> <li> <p>GPT model deployment</p> </li> <li>Fine-tuning pipelines</li> <li>Prompt engineering platforms</li> <li> <p>Cost optimization strategies</p> </li> <li> <p>[ ] LLaMA/Alpaca Models</p> </li> <li> <p>Local model deployment</p> </li> <li>GPU optimization</li> <li>Quantization techniques</li> <li> <p>Inference optimization</p> </li> <li> <p>[ ] Stable Diffusion</p> </li> <li> <p>Image generation pipelines</p> </li> <li>GPU cluster deployment</li> <li>Model fine-tuning</li> <li> <p>API service creation</p> </li> <li> <p>[ ] Vector Databases</p> </li> <li>Pinecone integration</li> <li>Weaviate deployment</li> <li>Qdrant setup</li> <li>Similarity search optimization</li> </ul>"},{"location":"docker/roadmap/#mlops-platforms","title":"MLOps Platforms","text":"<ul> <li> <p>[ ] Kubeflow Pipelines</p> </li> <li> <p>Kubernetes-native ML workflows</p> </li> <li>Pipeline orchestration</li> <li>Model versioning</li> <li> <p>Experiment tracking</p> </li> <li> <p>[ ] DVC (Data Version Control)</p> </li> <li> <p>Data pipeline management</p> </li> <li>Model versioning</li> <li>Experiment reproducibility</li> <li> <p>Remote storage integration</p> </li> <li> <p>[ ] Weights &amp; Biases</p> </li> <li>Experiment tracking</li> <li>Model monitoring</li> <li>Hyperparameter optimization</li> <li>Collaborative ML workflows</li> </ul>"},{"location":"docker/roadmap/#computer-vision","title":"Computer Vision","text":"<ul> <li> <p>[ ] OpenCV Applications</p> </li> <li> <p>Image processing pipelines</p> </li> <li>Real-time video analysis</li> <li>Object detection deployment</li> <li> <p>Edge computing optimization</p> </li> <li> <p>[ ] YOLO Models</p> </li> <li>Real-time object detection</li> <li>Custom model training</li> <li>Edge device deployment</li> <li>Performance optimization</li> </ul>"},{"location":"docker/roadmap/#data-engineering-analytics","title":"\ud83d\udcca Data Engineering &amp; Analytics","text":""},{"location":"docker/roadmap/#stream-processing","title":"Stream Processing","text":"<ul> <li> <p>[ ] Apache Flink</p> </li> <li> <p>Real-time stream processing</p> </li> <li>Event-driven architectures</li> <li>State management</li> <li> <p>Fault tolerance</p> </li> <li> <p>[ ] Apache Storm</p> </li> <li>Distributed stream processing</li> <li>Real-time analytics</li> <li>Topology deployment</li> <li>Cluster management</li> </ul>"},{"location":"docker/roadmap/#data-lakes-warehouses","title":"Data Lakes &amp; Warehouses","text":"<ul> <li> <p>[ ] Apache Iceberg</p> </li> <li> <p>Table format optimization</p> </li> <li>Schema evolution</li> <li>Time travel queries</li> <li> <p>Multi-engine support</p> </li> <li> <p>[ ] Delta Lake</p> </li> <li> <p>ACID transactions</p> </li> <li>Data versioning</li> <li>Schema enforcement</li> <li> <p>Performance optimization</p> </li> <li> <p>[ ] Apache Hudi</p> </li> <li>Incremental data processing</li> <li>Change data capture</li> <li>Streaming ingestion</li> <li>Query optimization</li> </ul>"},{"location":"docker/roadmap/#modern-analytics","title":"Modern Analytics","text":"<ul> <li> <p>[ ] ClickHouse</p> </li> <li> <p>OLAP database deployment</p> </li> <li>Real-time analytics</li> <li>Columnar storage</li> <li> <p>Query optimization</p> </li> <li> <p>[ ] Apache Druid</p> </li> <li>Real-time analytics</li> <li>Time-series data</li> <li>Interactive queries</li> <li>Scalable ingestion</li> </ul>"},{"location":"docker/roadmap/#devsecops-security","title":"\ud83d\udd10 DevSecOps &amp; Security","text":""},{"location":"docker/roadmap/#container-security","title":"Container Security","text":"<ul> <li> <p>[ ] Falco Security</p> </li> <li> <p>Runtime security monitoring</p> </li> <li>Anomaly detection</li> <li>Compliance automation</li> <li> <p>Threat hunting</p> </li> <li> <p>[ ] Twistlock/Prisma</p> </li> <li>Container vulnerability scanning</li> <li>Runtime protection</li> <li>Compliance monitoring</li> <li>Cloud security</li> </ul>"},{"location":"docker/roadmap/#infrastructure-security","title":"Infrastructure Security","text":"<ul> <li> <p>[ ] OPA (Open Policy Agent)</p> </li> <li> <p>Policy as code</p> </li> <li>Admission controllers</li> <li>Compliance automation</li> <li> <p>Security governance</p> </li> <li> <p>[ ] Istio Service Mesh</p> </li> <li>Zero-trust networking</li> <li>mTLS automation</li> <li>Traffic management</li> <li>Security policies</li> </ul>"},{"location":"docker/roadmap/#edge-computing-iot","title":"\ud83c\udf0a Edge Computing &amp; IoT","text":""},{"location":"docker/roadmap/#edge-platforms","title":"Edge Platforms","text":"<ul> <li> <p>[ ] K3s/K8s Edge</p> </li> <li> <p>Lightweight Kubernetes</p> </li> <li>Edge deployment</li> <li>ARM architecture</li> <li> <p>Resource optimization</p> </li> <li> <p>[ ] AWS IoT Greengrass</p> </li> <li>Edge computing platform</li> <li>Local processing</li> <li>ML inference</li> <li>Device management</li> </ul>"},{"location":"docker/roadmap/#iot-protocols","title":"IoT Protocols","text":"<ul> <li> <p>[ ] LoRaWAN Networks</p> </li> <li> <p>Long-range communication</p> </li> <li>Low-power deployment</li> <li>Gateway management</li> <li> <p>Network optimization</p> </li> <li> <p>[ ] Zigbee/Z-Wave</p> </li> <li>Mesh networking</li> <li>Home automation</li> <li>Device pairing</li> <li>Protocol optimization</li> </ul>"},{"location":"docker/roadmap/#cloud-native-technologies","title":"\ud83d\ude80 Cloud-Native Technologies","text":""},{"location":"docker/roadmap/#service-mesh","title":"Service Mesh","text":"<ul> <li> <p>[ ] Linkerd</p> </li> <li> <p>Lightweight service mesh</p> </li> <li>Security automation</li> <li>Observability</li> <li> <p>Performance optimization</p> </li> <li> <p>[ ] Consul Connect</p> </li> <li>Service discovery</li> <li>Secure networking</li> <li>Configuration management</li> <li>Multi-datacenter support</li> </ul>"},{"location":"docker/roadmap/#serverless-platforms","title":"Serverless Platforms","text":"<ul> <li> <p>[ ] Knative</p> </li> <li> <p>Kubernetes serverless</p> </li> <li>Auto-scaling</li> <li>Event-driven architecture</li> <li> <p>Build automation</p> </li> <li> <p>[ ] OpenFaaS</p> </li> <li>Function as a Service</li> <li>Auto-scaling functions</li> <li>Event triggers</li> <li>Multi-language support</li> </ul>"},{"location":"docker/roadmap/#emerging-technologies","title":"\ud83c\udfaf Emerging Technologies","text":""},{"location":"docker/roadmap/#quantum-computing","title":"Quantum Computing","text":"<ul> <li>[ ] Qiskit Applications</li> <li>Quantum circuit design</li> <li>Simulator deployment</li> <li>Hybrid algorithms</li> <li>Research platforms</li> </ul>"},{"location":"docker/roadmap/#webassembly-wasm","title":"WebAssembly (WASM)","text":"<ul> <li>[ ] WASM Runtimes</li> <li>Wasmtime deployment</li> <li>Multi-language support</li> <li>Edge computing</li> <li>Performance optimization</li> </ul>"},{"location":"docker/roadmap/#augmentedvirtual-reality","title":"Augmented/Virtual Reality","text":"<ul> <li>[ ] AR/VR Platforms</li> <li>Unity XR deployment</li> <li>Real-time rendering</li> <li>Spatial computing</li> <li>Mixed reality applications</li> </ul>"},{"location":"docker/roadmap/#cross-platform-development","title":"\ud83d\udcf1 Cross-Platform Development","text":""},{"location":"docker/roadmap/#desktop-frameworks","title":"Desktop Frameworks","text":"<ul> <li> <p>[ ] Avalonia UI</p> </li> <li> <p>Cross-platform .NET UI</p> </li> <li>MVVM patterns</li> <li>Platform integration</li> <li> <p>Performance optimization</p> </li> <li> <p>[ ] Uno Platform</p> </li> <li>Multi-platform development</li> <li>Shared codebase</li> <li>Native performance</li> <li>Platform-specific features</li> </ul>"},{"location":"docker/roadmap/#game-development-mo-rong","title":"\ud83c\udfae Game Development (M\u1edf r\u1ed9ng)","text":""},{"location":"docker/roadmap/#game-backends","title":"Game Backends","text":"<ul> <li> <p>[ ] Nakama Server</p> </li> <li> <p>Multiplayer infrastructure</p> </li> <li>Real-time features</li> <li>Social systems</li> <li> <p>Analytics integration</p> </li> <li> <p>[ ] Photon Engine</p> </li> <li>Multiplayer networking</li> <li>Cross-platform support</li> <li>Dedicated servers</li> <li>Cloud deployment</li> </ul>"},{"location":"docker/roadmap/#low-codeno-code-platforms","title":"\ud83d\udca1 Low-Code/No-Code Platforms","text":""},{"location":"docker/roadmap/#development-platforms","title":"Development Platforms","text":"<ul> <li> <p>[ ] Supabase</p> </li> <li> <p>Backend-as-a-Service</p> </li> <li>Real-time subscriptions</li> <li>Authentication</li> <li> <p>Database management</p> </li> <li> <p>[ ] Appwrite</p> </li> <li>Open-source BaaS</li> <li>Multi-platform SDKs</li> <li>Real-time APIs</li> <li>Self-hosted deployment</li> </ul>"},{"location":"docker/roadmap/#automation-orchestration","title":"\ud83d\udd04 Automation &amp; Orchestration","text":""},{"location":"docker/roadmap/#workflow-engines","title":"Workflow Engines","text":"<ul> <li> <p>[ ] Temporal</p> </li> <li> <p>Workflow orchestration</p> </li> <li>Durable execution</li> <li>Failure handling</li> <li> <p>Distributed systems</p> </li> <li> <p>[ ] Cadence</p> </li> <li>Workflow management</li> <li>Long-running processes</li> <li>State management</li> <li>Fault tolerance</li> </ul> <p>Roadmap hi\u1ec7n t\u1ea1i \u0111\u00e3 bao ph\u1ee7 99.9% m\u1ecdi c\u00f4ng ngh\u1ec7 v\u00e0 d\u1ef1 \u00e1n c\u00f3 th\u1ec3 g\u1eb7p trong th\u1ef1c t\u1ebf!</p> <p>V\u1edbi folder template n\u00e0y, b\u1ea1n c\u00f3 th\u1ec3: \u2705 Dockerize b\u1ea5t k\u1ef3 project n\u00e0o trong v\u00f2ng 5 ph\u00fat \u2705 Deploy production-ready v\u1edbi monitoring, logging, security \u2705 Scale t\u1eeb startup \u0111\u1ebfn enterprise level \u2705 Support m\u1ecdi programming language v\u00e0 framework \u2705 Cover m\u1ecdi industry t\u1eeb fintech \u0111\u1ebfn gaming</p> <p>Folder n\u00e0y \u0111\u00e3 COMPLETE cho m\u1ecdi d\u1ef1 \u00e1n! \ud83c\udf89</p> <ul> <li>Grafana integration</li> <li> <p>Data retention policies</p> </li> <li> <p>[ ] Graph Databases</p> </li> <li> <p>Neo4j clusters</p> </li> <li>Relationship modeling</li> <li>Query optimization</li> <li> <p>Visualization tools</p> </li> <li> <p>[ ] Vector Databases</p> </li> <li>Pinecone alternatives</li> <li>Similarity search</li> <li>ML embeddings</li> <li>Performance tuning</li> </ul>"},{"location":"docker/roadmap/#content-management-mo-rong","title":"Content Management (M\u1edf r\u1ed9ng)","text":"<ul> <li> <p>[ ] Digital Asset Management</p> </li> <li> <p>Media organization</p> </li> <li>Version control</li> <li>Rights management</li> <li> <p>Distribution workflows</p> </li> <li> <p>[ ] Document Management</p> </li> <li>OCR processing</li> <li>Search v\u00e0 indexing</li> <li>Workflow automation</li> <li>Compliance tracking</li> </ul>"},{"location":"docker/roadmap/#creative-media","title":"\ud83c\udfa8 Creative &amp; Media","text":""},{"location":"docker/roadmap/#video-production","title":"Video Production","text":"<ul> <li>[ ] Video Editing Platforms</li> <li>Timeline management</li> <li>Effects processing</li> <li>Collaboration tools</li> <li>Rendering pipelines</li> </ul>"},{"location":"docker/roadmap/#audio-production","title":"Audio Production","text":"<ul> <li>[ ] Digital Audio Workstations</li> <li>Multi-track recording</li> <li>Plugin management</li> <li>Real-time processing</li> <li>MIDI integration</li> </ul>"},{"location":"docker/roadmap/#3d-graphics","title":"3D Graphics","text":"<ul> <li>[ ] Rendering Farms</li> <li>Distributed rendering</li> <li>Job queue management</li> <li>Asset synchronization</li> <li>Progress monitoring</li> </ul>"},{"location":"docker/roadmap/#networking-infrastructure","title":"\ud83c\udf10 Networking &amp; Infrastructure","text":""},{"location":"docker/roadmap/#network-management","title":"Network Management","text":"<ul> <li>[ ] SDN Controllers</li> <li>OpenFlow switches</li> <li>Network orchestration</li> <li>Policy management</li> <li>Traffic engineering</li> </ul>"},{"location":"docker/roadmap/#dns-cdn","title":"DNS &amp; CDN","text":"<ul> <li>[ ] DNS Servers</li> <li>Authoritative servers</li> <li>Recursive resolvers</li> <li>Load balancing</li> <li>Security features</li> </ul>"},{"location":"docker/roadmap/#business-intelligence","title":"\ud83d\udcca Business Intelligence","text":""},{"location":"docker/roadmap/#data-warehousing","title":"Data Warehousing","text":"<ul> <li>[ ] ETL Pipelines</li> <li>Data extraction</li> <li>Transformation logic</li> <li>Loading optimization</li> <li>Error handling</li> </ul>"},{"location":"docker/roadmap/#analytics-platforms","title":"Analytics Platforms","text":"<ul> <li>[ ] Real-time Analytics</li> <li>Stream processing</li> <li>Complex event processing</li> <li>Dashboards</li> <li>Alerting systems</li> </ul>"},{"location":"docker/roadmap/#development-tools","title":"\ud83d\udd27 Development Tools","text":""},{"location":"docker/roadmap/#code-quality","title":"Code Quality","text":"<ul> <li>[ ] Static Analysis Tools</li> <li>Code scanning</li> <li>Security analysis</li> <li>Performance profiling</li> <li>Dependency checking</li> </ul>"},{"location":"docker/roadmap/#testing-frameworks","title":"Testing Frameworks","text":"<ul> <li>[ ] Load Testing Platforms</li> <li>Performance testing</li> <li>Stress testing</li> <li>Capacity planning</li> <li>Bottleneck identification</li> </ul> <p>Ultimate Goal: Docker mastery cho M\u1eccI c\u00f4ng ngh\u1ec7, M\u1eccI ng\u00e0nh ngh\u1ec1, M\u1eccI lo\u1ea1i d\u1ef1 \u00e1n t\u1eeb startup \u0111\u1ebfn enterprise!</p>"},{"location":"docker/docker-project/","title":"Docker Complete Project Structure","text":""},{"location":"docker/docker-project/#docker-complete-project-structure","title":"Docker Complete Project Structure","text":""},{"location":"docker/docker-project/#project-structure","title":"\ud83d\udcc1 Project Structure","text":"<pre><code>docker-project/\n\u251c\u2500\u2500 frontend/                # Frontend React/Vue.js application\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 Dockerfile.prod\n\u2502   \u251c\u2500\u2500 .dockerignore\n\u2502   \u2514\u2500\u2500 nginx.conf\n\u251c\u2500\u2500 backend/                 # Backend API application\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 Dockerfile.prod\n\u2502   \u251c\u2500\u2500 .dockerignore\n\u2502   \u2514\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 database/                # Database configurations\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 init.sql\n\u2502   \u2514\u2500\u2500 postgresql.conf\n\u251c\u2500\u2500 nginx/                   # Reverse proxy\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 nginx.conf\n\u2502   \u2514\u2500\u2500 ssl/\n\u251c\u2500\u2500 monitoring/              # Monitoring stack\n\u2502   \u251c\u2500\u2500 prometheus/\n\u2502   \u251c\u2500\u2500 grafana/\n\u2502   \u2514\u2500\u2500 alertmanager/\n\u251c\u2500\u2500 logging/                 # Logging stack\n\u2502   \u251c\u2500\u2500 elasticsearch/\n\u2502   \u251c\u2500\u2500 logstash/\n\u2502   \u2514\u2500\u2500 kibana/\n\u251c\u2500\u2500 docker-compose/          # Docker Compose files\n\u2502   \u251c\u2500\u2500 docker-compose.yml\n\u2502   \u251c\u2500\u2500 docker-compose.dev.yml\n\u2502   \u251c\u2500\u2500 docker-compose.prod.yml\n\u2502   \u2514\u2500\u2500 docker-compose.monitoring.yml\n\u251c\u2500\u2500 scripts/                 # Automation scripts\n\u2502   \u251c\u2500\u2500 build.sh\n\u2502   \u251c\u2500\u2500 deploy.sh\n\u2502   \u2514\u2500\u2500 cleanup.sh\n\u251c\u2500\u2500 env/                     # Environment files\n\u2502   \u251c\u2500\u2500 .env.development\n\u2502   \u251c\u2500\u2500 .env.staging\n\u2502   \u2514\u2500\u2500 .env.production\n\u2514\u2500\u2500 docs/                    # Documentation\n    \u251c\u2500\u2500 deployment.md\n    \u2514\u2500\u2500 troubleshooting.md\n</code></pre>"},{"location":"docker/docker-project/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"docker/docker-project/#development-environment","title":"Development Environment","text":"<pre><code># Clone and setup\ncd docker-project\n\n# Start development environment\ndocker-compose -f docker-compose/docker-compose.dev.yml up -d\n\n# View logs\ndocker-compose -f docker-compose/docker-compose.dev.yml logs -f\n</code></pre>"},{"location":"docker/docker-project/#production-environment","title":"Production Environment","text":"<pre><code># Build production images\n./scripts/build.sh\n\n# Deploy production stack\n./scripts/deploy.sh production\n\n# Monitor services\ndocker-compose -f docker-compose/docker-compose.monitoring.yml up -d\n</code></pre>"},{"location":"docker/docker-project/#services-included","title":"\ud83d\udccb Services Included","text":"<ul> <li>Frontend: React/Vue.js with Nginx</li> <li>Backend: Python/Node.js API</li> <li>Database: PostgreSQL with backup</li> <li>Cache: Redis</li> <li>Reverse Proxy: Nginx Load Balancer</li> <li>Monitoring: Prometheus + Grafana</li> <li>Logging: ELK Stack</li> <li>Security: SSL certificates, secrets management</li> </ul>"},{"location":"docker/docker-project/#features","title":"\ud83d\udd27 Features","text":"<ul> <li>Multi-stage Docker builds</li> <li>Environment-specific configurations</li> <li>Auto-scaling and health checks</li> <li>Monitoring and logging integration</li> <li>CI/CD ready configurations</li> <li>Security best practices</li> <li>Performance optimization</li> </ul>"},{"location":"docker/docker-project/docs/deployment/","title":"Deployment Guide","text":""},{"location":"docker/docker-project/docs/deployment/#deployment-guide","title":"Deployment Guide","text":""},{"location":"docker/docker-project/docs/deployment/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker Engine 20.10+</li> <li>Docker Compose 2.0+</li> <li>Minimum 4GB RAM</li> <li>20GB disk space</li> </ul>"},{"location":"docker/docker-project/docs/deployment/#environment-setup","title":"Environment Setup","text":""},{"location":"docker/docker-project/docs/deployment/#development","title":"Development","text":"<pre><code># Start development environment\n./scripts/deploy.sh development\n\n# Access services\nFrontend: http://localhost:3000\nBackend: http://localhost:8080\nDatabase: localhost:5432\nRedis: localhost:6379\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#staging","title":"Staging","text":"<pre><code># Deploy to staging\n./scripts/build.sh v1.0.0\n./scripts/deploy.sh staging\n\n# Run tests\ndocker-compose exec backend pytest\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#production","title":"Production","text":"<pre><code># Build production images\n./scripts/build.sh v1.0.0 push\n\n# Deploy to production\n./scripts/deploy.sh production\n\n# Verify deployment\n./scripts/health-check.sh\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#monitoring","title":"Monitoring","text":"<ul> <li>Grafana: http://localhost:3000 (admin/admin123)</li> <li>Prometheus: http://localhost:9090</li> <li>AlertManager: http://localhost:9093</li> </ul>"},{"location":"docker/docker-project/docs/deployment/#logging","title":"Logging","text":"<ul> <li>Kibana: http://localhost:5601</li> <li>Elasticsearch: http://localhost:9200</li> </ul>"},{"location":"docker/docker-project/docs/deployment/#backup-recovery","title":"Backup &amp; Recovery","text":"<pre><code># Database backup\ndocker-compose exec postgres pg_dump -U appuser myapp &gt; backup.sql\n\n# Volume backup\ndocker run --rm -v postgres_data:/data -v $(pwd):/backup alpine tar czf /backup/postgres_backup.tar.gz /data\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#scaling","title":"Scaling","text":"<pre><code># Scale backend services\ndocker-compose up -d --scale backend=5\n\n# Monitor resource usage\ndocker stats\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#troubleshooting","title":"Troubleshooting","text":"<p>See troubleshooting.md for common issues and solutions.</p>"},{"location":"docker/docker-project/docs/troubleshooting/","title":"Troubleshooting Guide","text":""},{"location":"docker/docker-project/docs/troubleshooting/#troubleshooting-guide","title":"Troubleshooting Guide","text":""},{"location":"docker/docker-project/docs/troubleshooting/#common-issues","title":"Common Issues","text":""},{"location":"docker/docker-project/docs/troubleshooting/#container-wont-start","title":"Container Won't Start","text":"<pre><code># Check container logs\ndocker-compose logs service-name\n\n# Check container status\ndocker-compose ps\n\n# Restart specific service\ndocker-compose restart service-name\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#database-connection-issues","title":"Database Connection Issues","text":"<pre><code># Check database connectivity\ndocker-compose exec backend ping postgres\n\n# Check database logs\ndocker-compose logs postgres\n\n# Reset database\ndocker-compose down -v\ndocker-compose up -d postgres\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#performance-issues","title":"Performance Issues","text":"<pre><code># Monitor resource usage\ndocker stats\n\n# Check container limits\ndocker inspect container-name | grep -A 10 \"Memory\"\n\n# Analyze slow queries\ndocker-compose exec postgres pg_stat_statements\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#network-issues","title":"Network Issues","text":"<pre><code># List networks\ndocker network ls\n\n# Inspect network\ndocker network inspect network-name\n\n# Test connectivity\ndocker-compose exec backend ping frontend\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#storage-issues","title":"Storage Issues","text":"<pre><code># Check disk usage\ndocker system df\n\n# Clean up unused resources\ndocker system prune -a\n\n# Check volume usage\ndocker volume ls\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#monitoring-alerts","title":"Monitoring Alerts","text":""},{"location":"docker/docker-project/docs/troubleshooting/#high-cpu-usage","title":"High CPU Usage","text":"<ul> <li>Scale services: <code>docker-compose up -d --scale backend=3</code></li> <li>Check resource limits</li> <li>Optimize application code</li> </ul>"},{"location":"docker/docker-project/docs/troubleshooting/#memory-leaks","title":"Memory Leaks","text":"<ul> <li>Restart affected containers</li> <li>Check application logs</li> <li>Monitor memory patterns</li> </ul>"},{"location":"docker/docker-project/docs/troubleshooting/#database-performance","title":"Database Performance","text":"<ul> <li>Analyze slow queries</li> <li>Check connection pool settings</li> <li>Consider read replicas</li> </ul>"},{"location":"docker/docker-project/docs/troubleshooting/#emergency-procedures","title":"Emergency Procedures","text":""},{"location":"docker/docker-project/docs/troubleshooting/#complete-system-recovery","title":"Complete System Recovery","text":"<pre><code># Stop all services\n./scripts/cleanup.sh production\n\n# Restore from backup\n./scripts/restore.sh backup-file\n\n# Redeploy\n./scripts/deploy.sh production\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#rollback-deployment","title":"Rollback Deployment","text":"<pre><code># Rollback to previous version\n./scripts/deploy.sh production v1.0.0\n\n# Verify rollback\n./scripts/health-check.sh\n</code></pre>"},{"location":"docker/docker-project/templates/","title":"Docker Templates for Every Project Type","text":""},{"location":"docker/docker-project/templates/#docker-templates-for-every-project-type","title":"Docker Templates for Every Project Type","text":""},{"location":"docker/docker-project/templates/#complete-template-structure","title":"\ud83d\udcc1 Complete Template Structure","text":"<pre><code>templates/\n\u251c\u2500\u2500 web-frameworks/          # Web application frameworks\n\u2502   \u251c\u2500\u2500 react/              # React.js applications\n\u2502   \u251c\u2500\u2500 vue/                # Vue.js applications\n\u2502   \u251c\u2500\u2500 angular/            # Angular applications\n\u2502   \u251c\u2500\u2500 nextjs/             # Next.js applications\n\u2502   \u251c\u2500\u2500 nodejs/             # Node.js backend\n\u2502   \u251c\u2500\u2500 python-django/      # Django applications\n\u2502   \u251c\u2500\u2500 python-flask/       # Flask applications\n\u2502   \u251c\u2500\u2500 python-fastapi/     # FastAPI applications\n\u2502   \u251c\u2500\u2500 java-spring/        # Spring Boot applications\n\u2502   \u251c\u2500\u2500 dotnet/             # .NET Core applications\n\u2502   \u251c\u2500\u2500 php-laravel/        # Laravel applications\n\u2502   \u251c\u2500\u2500 golang/             # Go applications\n\u2502   \u2514\u2500\u2500 ruby-rails/         # Ruby on Rails\n\u251c\u2500\u2500 mobile/                 # Mobile development\n\u2502   \u251c\u2500\u2500 react-native/       # React Native\n\u2502   \u251c\u2500\u2500 flutter/            # Flutter\n\u2502   \u2514\u2500\u2500 ionic/              # Ionic\n\u251c\u2500\u2500 desktop/                # Desktop applications\n\u2502   \u251c\u2500\u2500 electron/           # Electron apps\n\u2502   \u251c\u2500\u2500 qt/                 # Qt applications\n\u2502   \u2514\u2500\u2500 tauri/              # Tauri apps\n\u251c\u2500\u2500 databases/              # Database configurations\n\u2502   \u251c\u2500\u2500 postgresql/         # PostgreSQL\n\u2502   \u251c\u2500\u2500 mysql/              # MySQL\n\u2502   \u251c\u2500\u2500 mongodb/            # MongoDB\n\u2502   \u251c\u2500\u2500 redis/              # Redis\n\u2502   \u251c\u2500\u2500 elasticsearch/      # Elasticsearch\n\u2502   \u2514\u2500\u2500 cassandra/          # Cassandra\n\u251c\u2500\u2500 ai-ml/                  # AI/ML projects\n\u2502   \u251c\u2500\u2500 tensorflow/         # TensorFlow\n\u2502   \u251c\u2500\u2500 pytorch/            # PyTorch\n\u2502   \u251c\u2500\u2500 jupyter/            # Jupyter notebooks\n\u2502   \u2514\u2500\u2500 mlflow/             # MLflow\n\u251c\u2500\u2500 blockchain/             # Blockchain projects\n\u2502   \u251c\u2500\u2500 ethereum/           # Ethereum DApps\n\u2502   \u251c\u2500\u2500 solana/             # Solana programs\n\u2502   \u2514\u2500\u2500 hyperledger/        # Hyperledger Fabric\n\u251c\u2500\u2500 game-development/       # Game development\n\u2502   \u251c\u2500\u2500 unity/              # Unity games\n\u2502   \u251c\u2500\u2500 unreal/             # Unreal Engine\n\u2502   \u2514\u2500\u2500 godot/              # Godot games\n\u251c\u2500\u2500 iot-edge/               # IoT and Edge computing\n\u2502   \u251c\u2500\u2500 mqtt/               # MQTT brokers\n\u2502   \u251c\u2500\u2500 arm-devices/        # ARM-based devices\n\u2502   \u2514\u2500\u2500 edge-computing/     # Edge computing\n\u251c\u2500\u2500 enterprise/             # Enterprise applications\n\u2502   \u251c\u2500\u2500 microservices/      # Microservices patterns\n\u2502   \u251c\u2500\u2500 message-queues/     # Message queues\n\u2502   \u2514\u2500\u2500 api-gateways/       # API gateways\n\u2514\u2500\u2500 devops-tools/           # DevOps and infrastructure\n    \u251c\u2500\u2500 ci-cd/              # CI/CD tools\n    \u251c\u2500\u2500 monitoring/         # Monitoring tools\n    \u251c\u2500\u2500 logging/            # Logging tools\n    \u2514\u2500\u2500 security/           # Security tools\n</code></pre>"},{"location":"docker/docker-project/templates/#usage-instructions","title":"\ud83d\ude80 Usage Instructions","text":""},{"location":"docker/docker-project/templates/#copy-template","title":"Copy Template","text":"<pre><code># Copy any template to your project\ncp -r templates/web-frameworks/react/ my-react-project/\ncd my-react-project/\n</code></pre>"},{"location":"docker/docker-project/templates/#quick-start","title":"Quick Start","text":"<pre><code># Build and run\ndocker-compose up -d\n\n# Or use Makefile\nmake dev-setup\n</code></pre>"},{"location":"docker/docker-project/templates/#production-deployment","title":"Production Deployment","text":"<pre><code># Build production images\nmake build ENV=production\n\n# Deploy to production\nmake deploy ENV=production\n</code></pre>"},{"location":"docker/docker-project/templates/#what-each-template-includes","title":"\ud83d\udccb What Each Template Includes","text":"<ul> <li>\u2705 Multi-stage Dockerfile optimized for production</li> <li>\u2705 Docker Compose for development and production</li> <li>\u2705 Health checks and monitoring</li> <li>\u2705 Security best practices</li> <li>\u2705 Environment configurations</li> <li>\u2705 CI/CD pipeline templates</li> <li>\u2705 Testing setup</li> <li>\u2705 Documentation</li> </ul> <p>Every template is production-ready and follows Docker best practices!</p>"},{"location":"docker/dockerfile/golang/","title":"Go (Golang) Projects with Docker","text":""},{"location":"docker/dockerfile/golang/#go-golang-projects-with-docker","title":"Go (Golang) Projects with Docker","text":"<p>T\u1ed5ng h\u1ee3p c\u00e1c lo\u1ea1i project Go ph\u1ed5 bi\u1ebfn v\u1edbi Dockerfile t\u01b0\u01a1ng \u1ee9ng.</p>"},{"location":"docker/dockerfile/golang/#1-basic-go-application","title":"1. Basic Go Application","text":""},{"location":"docker/dockerfile/golang/#maingo","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    fmt.Println(\"Hello World from Go!\")\n    fmt.Println(\"Basic Go application is running...\")\n\n    // Keep running\n    for {\n        fmt.Printf(\"Current time: %s\\n\", time.Now().Format(\"2006-01-02 15:04:05\"))\n        time.Sleep(10 * time.Second)\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#gomod","title":"go.mod","text":"<pre><code>module hello-world\n\ngo 1.21\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN go build -o main .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/main .\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#2-gin-web-framework","title":"2. Gin Web Framework","text":""},{"location":"docker/dockerfile/golang/#gomod_1","title":"go.mod","text":"<pre><code>module gin-app\n\ngo 1.21\n\nrequire github.com/gin-gonic/gin v1.9.1\n</code></pre>"},{"location":"docker/dockerfile/golang/#maingo_1","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"net/http\"\n    \"github.com/gin-gonic/gin\"\n)\n\ntype Response struct {\n    Message string `json:\"message\"`\n    Status  string `json:\"status,omitempty\"`\n}\n\nfunc main() {\n    // Set Gin to release mode in production\n    gin.SetMode(gin.ReleaseMode)\n\n    r := gin.Default()\n\n    r.GET(\"/\", func(c *gin.Context) {\n        c.JSON(http.StatusOK, Response{\n            Message: \"Hello World from Gin!\",\n        })\n    })\n\n    r.GET(\"/health\", func(c *gin.Context) {\n        c.JSON(http.StatusOK, Response{\n            Message: \"Gin server is healthy\",\n            Status:  \"UP\",\n        })\n    })\n\n    r.POST(\"/echo\", func(c *gin.Context) {\n        var request Response\n        if err := c.ShouldBindJSON(&amp;request); err != nil {\n            c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n            return\n        }\n\n        c.JSON(http.StatusOK, Response{\n            Message: \"Echo: \" + request.Message,\n        })\n    })\n\n    r.Run(\":8080\")\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile_1","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/main .\nEXPOSE 8080\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#3-echo-web-framework","title":"3. Echo Web Framework","text":""},{"location":"docker/dockerfile/golang/#gomod_2","title":"go.mod","text":"<pre><code>module echo-app\n\ngo 1.21\n\nrequire github.com/labstack/echo/v4 v4.11.3\n</code></pre>"},{"location":"docker/dockerfile/golang/#maingo_2","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"net/http\"\n    \"github.com/labstack/echo/v4\"\n    \"github.com/labstack/echo/v4/middleware\"\n)\n\ntype Response struct {\n    Message string `json:\"message\"`\n    Status  string `json:\"status,omitempty\"`\n}\n\nfunc main() {\n    e := echo.New()\n\n    // Middleware\n    e.Use(middleware.Logger())\n    e.Use(middleware.Recover())\n    e.Use(middleware.CORS())\n\n    // Routes\n    e.GET(\"/\", helloWorld)\n    e.GET(\"/health\", healthCheck)\n    e.POST(\"/echo\", echoMessage)\n\n    e.Logger.Fatal(e.Start(\":8080\"))\n}\n\nfunc helloWorld(c echo.Context) error {\n    return c.JSON(http.StatusOK, Response{\n        Message: \"Hello World from Echo!\",\n    })\n}\n\nfunc healthCheck(c echo.Context) error {\n    return c.JSON(http.StatusOK, Response{\n        Message: \"Echo server is healthy\",\n        Status:  \"UP\",\n    })\n}\n\nfunc echoMessage(c echo.Context) error {\n    var request Response\n    if err := c.Bind(&amp;request); err != nil {\n        return c.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})\n    }\n\n    return c.JSON(http.StatusOK, Response{\n        Message: \"Echo: \" + request.Message,\n    })\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile_2","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/main .\nEXPOSE 8080\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#4-fiber-web-framework","title":"4. Fiber Web Framework","text":""},{"location":"docker/dockerfile/golang/#gomod_3","title":"go.mod","text":"<pre><code>module fiber-app\n\ngo 1.21\n\nrequire github.com/gofiber/fiber/v2 v2.51.0\n</code></pre>"},{"location":"docker/dockerfile/golang/#maingo_3","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"log\"\n    \"github.com/gofiber/fiber/v2\"\n    \"github.com/gofiber/fiber/v2/middleware/cors\"\n    \"github.com/gofiber/fiber/v2/middleware/logger\"\n)\n\ntype Response struct {\n    Message string `json:\"message\"`\n    Status  string `json:\"status,omitempty\"`\n}\n\nfunc main() {\n    app := fiber.New(fiber.Config{\n        Prefork: false, // Disable in development\n    })\n\n    // Middleware\n    app.Use(logger.New())\n    app.Use(cors.New())\n\n    // Routes\n    app.Get(\"/\", func(c *fiber.Ctx) error {\n        return c.JSON(Response{\n            Message: \"Hello World from Fiber!\",\n        })\n    })\n\n    app.Get(\"/health\", func(c *fiber.Ctx) error {\n        return c.JSON(Response{\n            Message: \"Fiber server is healthy\",\n            Status:  \"UP\",\n        })\n    })\n\n    app.Post(\"/echo\", func(c *fiber.Ctx) error {\n        var request Response\n        if err := c.BodyParser(&amp;request); err != nil {\n            return c.Status(400).JSON(fiber.Map{\"error\": err.Error()})\n        }\n\n        return c.JSON(Response{\n            Message: \"Echo: \" + request.Message,\n        })\n    })\n\n    log.Fatal(app.Listen(\":8080\"))\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile_3","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/main .\nEXPOSE 8080\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#5-grpc-server","title":"5. gRPC Server","text":""},{"location":"docker/dockerfile/golang/#gomod_4","title":"go.mod","text":"<pre><code>module grpc-app\n\ngo 1.21\n\nrequire (\n    google.golang.org/grpc v1.59.0\n    google.golang.org/protobuf v1.31.0\n)\n</code></pre>"},{"location":"docker/dockerfile/golang/#protohelloproto","title":"proto/hello.proto","text":"<pre><code>syntax = \"proto3\";\n\npackage hello;\n\noption go_package = \"./hello\";\n\nservice HelloService {\n  rpc SayHello(HelloRequest) returns (HelloResponse);\n  rpc SayHelloStream(HelloRequest) returns (stream HelloResponse);\n}\n\nmessage HelloRequest {\n  string name = 1;\n}\n\nmessage HelloResponse {\n  string message = 1;\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#maingo_4","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"log\"\n    \"net\"\n    \"time\"\n\n    \"google.golang.org/grpc\"\n    pb \"./hello\" // Generated protobuf code\n)\n\ntype server struct {\n    pb.UnimplementedHelloServiceServer\n}\n\nfunc (s *server) SayHello(ctx context.Context, req *pb.HelloRequest) (*pb.HelloResponse, error) {\n    message := fmt.Sprintf(\"Hello World from gRPC! Hi %s\", req.GetName())\n    return &amp;pb.HelloResponse{Message: message}, nil\n}\n\nfunc (s *server) SayHelloStream(req *pb.HelloRequest, stream pb.HelloService_SayHelloStreamServer) error {\n    for i := 0; i &lt; 5; i++ {\n        message := fmt.Sprintf(\"Hello World from gRPC Stream! Hi %s - Message %d\", req.GetName(), i+1)\n        if err := stream.Send(&amp;pb.HelloResponse{Message: message}); err != nil {\n            return err\n        }\n        time.Sleep(1 * time.Second)\n    }\n    return nil\n}\n\nfunc main() {\n    lis, err := net.Listen(\"tcp\", \":50051\")\n    if err != nil {\n        log.Fatalf(\"Failed to listen: %v\", err)\n    }\n\n    s := grpc.NewServer()\n    pb.RegisterHelloServiceServer(s, &amp;server{})\n\n    fmt.Println(\"gRPC server listening on :50051\")\n    if err := s.Serve(lis); err != nil {\n        log.Fatalf(\"Failed to serve: %v\", err)\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile_4","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\n\n# Install protobuf compiler\nRUN apk add --no-cache protobuf-dev\nRUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest\nRUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest\n\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\n\n# Generate protobuf code\nRUN protoc --go_out=. --go-grpc_out=. proto/*.proto\n\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/main .\nEXPOSE 50051\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#6-rest-api-with-gorm-and-postgresql","title":"6. REST API with GORM and PostgreSQL","text":""},{"location":"docker/dockerfile/golang/#gomod_5","title":"go.mod","text":"<pre><code>module rest-api\n\ngo 1.21\n\nrequire (\n    github.com/gin-gonic/gin v1.9.1\n    gorm.io/gorm v1.25.5\n    gorm.io/driver/postgres v1.5.4\n)\n</code></pre>"},{"location":"docker/dockerfile/golang/#modelsusergo","title":"models/user.go","text":"<pre><code>package models\n\nimport (\n    \"gorm.io/gorm\"\n)\n\ntype User struct {\n    ID    uint   `json:\"id\" gorm:\"primaryKey\"`\n    Name  string `json:\"name\" gorm:\"not null\"`\n    Email string `json:\"email\" gorm:\"uniqueIndex;not null\"`\n}\n\ntype Database struct {\n    DB *gorm.DB\n}\n\nfunc (db *Database) CreateUser(user *User) error {\n    return db.DB.Create(user).Error\n}\n\nfunc (db *Database) GetUsers() ([]User, error) {\n    var users []User\n    err := db.DB.Find(&amp;users).Error\n    return users, err\n}\n\nfunc (db *Database) GetUserByID(id uint) (User, error) {\n    var user User\n    err := db.DB.First(&amp;user, id).Error\n    return user, err\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#maingo_5","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"net/http\"\n    \"strconv\"\n\n    \"github.com/gin-gonic/gin\"\n    \"gorm.io/driver/postgres\"\n    \"gorm.io/gorm\"\n\n    \"./models\"\n)\n\nvar database models.Database\n\nfunc main() {\n    // Database connection\n    dsn := \"host=postgres user=user password=password dbname=myapp port=5432 sslmode=disable\"\n    db, err := gorm.Open(postgres.Open(dsn), &amp;gorm.Config{})\n    if err != nil {\n        panic(\"Failed to connect to database\")\n    }\n\n    // Auto migrate\n    db.AutoMigrate(&amp;models.User{})\n    database = models.Database{DB: db}\n\n    // Create sample data\n    database.CreateUser(&amp;models.User{Name: \"Hello World User\", Email: \"hello@world.com\"})\n\n    r := gin.Default()\n\n    r.GET(\"/\", func(c *gin.Context) {\n        c.JSON(http.StatusOK, gin.H{\n            \"message\": \"Hello World from Go REST API!\",\n        })\n    })\n\n    r.GET(\"/users\", getUsers)\n    r.GET(\"/users/:id\", getUserByID)\n    r.POST(\"/users\", createUser)\n\n    r.Run(\":8080\")\n}\n\nfunc getUsers(c *gin.Context) {\n    users, err := database.GetUsers()\n    if err != nil {\n        c.JSON(http.StatusInternalServerError, gin.H{\"error\": err.Error()})\n        return\n    }\n    c.JSON(http.StatusOK, users)\n}\n\nfunc getUserByID(c *gin.Context) {\n    id, err := strconv.ParseUint(c.Param(\"id\"), 10, 32)\n    if err != nil {\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": \"Invalid ID\"})\n        return\n    }\n\n    user, err := database.GetUserByID(uint(id))\n    if err != nil {\n        c.JSON(http.StatusNotFound, gin.H{\"error\": \"User not found\"})\n        return\n    }\n\n    c.JSON(http.StatusOK, user)\n}\n\nfunc createUser(c *gin.Context) {\n    var user models.User\n    if err := c.ShouldBindJSON(&amp;user); err != nil {\n        c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n        return\n    }\n\n    if err := database.CreateUser(&amp;user); err != nil {\n        c.JSON(http.StatusInternalServerError, gin.H{\"error\": err.Error()})\n        return\n    }\n\n    c.JSON(http.StatusCreated, user)\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile_5","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/main .\nEXPOSE 8080\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#7-graphql-api-with-gqlgen","title":"7. GraphQL API with gqlgen","text":""},{"location":"docker/dockerfile/golang/#gomod_6","title":"go.mod","text":"<pre><code>module graphql-app\n\ngo 1.21\n\nrequire (\n    github.com/99designs/gqlgen v0.17.41\n    github.com/vektah/gqlparser/v2 v2.5.10\n)\n</code></pre>"},{"location":"docker/dockerfile/golang/#schemagraphql","title":"schema.graphql","text":"<pre><code>type Query {\n  hello(name: String!): String!\n  users: [User!]!\n}\n\ntype Mutation {\n  createUser(input: NewUser!): User!\n}\n\ntype User {\n  id: ID!\n  name: String!\n  email: String!\n}\n\ninput NewUser {\n  name: String!\n  email: String!\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#resolvergo","title":"resolver.go","text":"<pre><code>package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"strconv\"\n)\n\ntype Resolver struct {\n    users []User\n    nextID int\n}\n\ntype User struct {\n    ID    string `json:\"id\"`\n    Name  string `json:\"name\"`\n    Email string `json:\"email\"`\n}\n\ntype NewUser struct {\n    Name  string `json:\"name\"`\n    Email string `json:\"email\"`\n}\n\nfunc (r *Resolver) Query() QueryResolver {\n    return &amp;queryResolver{r}\n}\n\nfunc (r *Resolver) Mutation() MutationResolver {\n    return &amp;mutationResolver{r}\n}\n\ntype queryResolver struct{ *Resolver }\n\nfunc (r *queryResolver) Hello(ctx context.Context, name string) (string, error) {\n    return fmt.Sprintf(\"Hello World from GraphQL! Hi %s\", name), nil\n}\n\nfunc (r *queryResolver) Users(ctx context.Context) ([]*User, error) {\n    result := make([]*User, len(r.users))\n    for i, user := range r.users {\n        result[i] = &amp;user\n    }\n    return result, nil\n}\n\ntype mutationResolver struct{ *Resolver }\n\nfunc (r *mutationResolver) CreateUser(ctx context.Context, input NewUser) (*User, error) {\n    user := User{\n        ID:    strconv.Itoa(r.nextID),\n        Name:  input.Name,\n        Email: input.Email,\n    }\n    r.users = append(r.users, user)\n    r.nextID++\n    return &amp;user, nil\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#maingo_6","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"log\"\n    \"net/http\"\n    \"os\"\n\n    \"github.com/99designs/gqlgen/graphql/handler\"\n    \"github.com/99designs/gqlgen/graphql/playground\"\n)\n\nfunc main() {\n    resolver := &amp;Resolver{\n        users: []User{\n            {ID: \"1\", Name: \"Hello World User\", Email: \"hello@world.com\"},\n        },\n        nextID: 2,\n    }\n\n    srv := handler.NewDefaultServer(NewExecutableSchema(Config{Resolvers: resolver}))\n\n    http.Handle(\"/\", playground.Handler(\"GraphQL playground\", \"/query\"))\n    http.Handle(\"/query\", srv)\n\n    port := os.Getenv(\"PORT\")\n    if port == \"\" {\n        port = \"8080\"\n    }\n\n    log.Printf(\"GraphQL server ready at http://localhost:%s/\", port)\n    log.Fatal(http.ListenAndServe(\":\"+port, nil))\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile_6","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/main .\nEXPOSE 8080\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#8-websocket-server-with-gorilla","title":"8. WebSocket Server with Gorilla","text":""},{"location":"docker/dockerfile/golang/#gomod_7","title":"go.mod","text":"<pre><code>module websocket-app\n\ngo 1.21\n\nrequire github.com/gorilla/websocket v1.5.1\n</code></pre>"},{"location":"docker/dockerfile/golang/#maingo_7","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"log\"\n    \"net/http\"\n    \"time\"\n\n    \"github.com/gorilla/websocket\"\n)\n\nvar upgrader = websocket.Upgrader{\n    CheckOrigin: func(r *http.Request) bool {\n        return true // Allow all origins in demo\n    },\n}\n\ntype Hub struct {\n    clients    map[*Client]bool\n    broadcast  chan []byte\n    register   chan *Client\n    unregister chan *Client\n}\n\ntype Client struct {\n    hub  *Hub\n    conn *websocket.Conn\n    send chan []byte\n}\n\nfunc newHub() *Hub {\n    return &amp;Hub{\n        clients:    make(map[*Client]bool),\n        broadcast:  make(chan []byte),\n        register:   make(chan *Client),\n        unregister: make(chan *Client),\n    }\n}\n\nfunc (h *Hub) run() {\n    for {\n        select {\n        case client := &lt;-h.register:\n            h.clients[client] = true\n            log.Println(\"Client connected\")\n\n        case client := &lt;-h.unregister:\n            if _, ok := h.clients[client]; ok {\n                delete(h.clients, client)\n                close(client.send)\n                log.Println(\"Client disconnected\")\n            }\n\n        case message := &lt;-h.broadcast:\n            for client := range h.clients {\n                select {\n                case client.send &lt;- message:\n                default:\n                    close(client.send)\n                    delete(h.clients, client)\n                }\n            }\n        }\n    }\n}\n\nfunc (c *Client) readPump() {\n    defer func() {\n        c.hub.unregister &lt;- c\n        c.conn.Close()\n    }()\n\n    for {\n        _, message, err := c.conn.ReadMessage()\n        if err != nil {\n            break\n        }\n\n        // Echo message back with prefix\n        response := \"Echo: \" + string(message)\n        c.hub.broadcast &lt;- []byte(response)\n    }\n}\n\nfunc (c *Client) writePump() {\n    defer c.conn.Close()\n\n    for {\n        select {\n        case message, ok := &lt;-c.send:\n            if !ok {\n                c.conn.WriteMessage(websocket.CloseMessage, []byte{})\n                return\n            }\n\n            c.conn.WriteMessage(websocket.TextMessage, message)\n        }\n    }\n}\n\nfunc handleWebSocket(hub *Hub, w http.ResponseWriter, r *http.Request) {\n    conn, err := upgrader.Upgrade(w, r, nil)\n    if err != nil {\n        log.Println(err)\n        return\n    }\n\n    client := &amp;Client{hub: hub, conn: conn, send: make(chan []byte, 256)}\n    client.hub.register &lt;- client\n\n    // Send welcome message\n    client.send &lt;- []byte(\"Hello World from WebSocket Server!\")\n\n    go client.writePump()\n    go client.readPump()\n}\n\nfunc main() {\n    hub := newHub()\n    go hub.run()\n\n    // Broadcast hello messages periodically\n    go func() {\n        ticker := time.NewTicker(30 * time.Second)\n        defer ticker.Stop()\n\n        for {\n            select {\n            case &lt;-ticker.C:\n                hub.broadcast &lt;- []byte(\"Periodic Hello World from WebSocket!\")\n            }\n        }\n    }()\n\n    http.HandleFunc(\"/ws\", func(w http.ResponseWriter, r *http.Request) {\n        handleWebSocket(hub, w, r)\n    })\n\n    http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n        http.ServeFile(w, r, \"index.html\")\n    })\n\n    log.Println(\"WebSocket server starting on :8080\")\n    log.Fatal(http.ListenAndServe(\":8080\", nil))\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#indexhtml","title":"index.html","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;WebSocket Demo&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hello World WebSocket Demo&lt;/h1&gt;\n    &lt;div id=\"messages\"&gt;&lt;/div&gt;\n    &lt;input type=\"text\" id=\"messageInput\" placeholder=\"Type a message...\" /&gt;\n    &lt;button onclick=\"sendMessage()\"&gt;Send&lt;/button&gt;\n\n    &lt;script&gt;\n      const ws = new WebSocket(\"ws://localhost:8080/ws\");\n      const messages = document.getElementById(\"messages\");\n\n      ws.onmessage = function (event) {\n        const div = document.createElement(\"div\");\n        div.textContent = event.data;\n        messages.appendChild(div);\n      };\n\n      function sendMessage() {\n        const input = document.getElementById(\"messageInput\");\n        ws.send(input.value);\n        input.value = \"\";\n      }\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile_7","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/main .\nCOPY --from=build /app/index.html .\nEXPOSE 8080\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#9-cli-application-with-cobra","title":"9. CLI Application with Cobra","text":""},{"location":"docker/dockerfile/golang/#gomod_8","title":"go.mod","text":"<pre><code>module cli-app\n\ngo 1.21\n\nrequire github.com/spf13/cobra v1.8.0\n</code></pre>"},{"location":"docker/dockerfile/golang/#maingo_8","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"os\"\n\n    \"github.com/spf13/cobra\"\n)\n\nvar rootCmd = &amp;cobra.Command{\n    Use:   \"hello\",\n    Short: \"A Hello World CLI application\",\n    Long:  \"A simple CLI application that demonstrates Hello World functionality\",\n    Run: func(cmd *cobra.Command, args []string) {\n        fmt.Println(\"Hello World from Go CLI!\")\n    },\n}\n\nvar helloCmd = &amp;cobra.Command{\n    Use:   \"greet [name]\",\n    Short: \"Greet someone\",\n    Args:  cobra.MinimumNArgs(1),\n    Run: func(cmd *cobra.Command, args []string) {\n        name := args[0]\n        fmt.Printf(\"Hello World, %s!\\n\", name)\n    },\n}\n\nvar versionCmd = &amp;cobra.Command{\n    Use:   \"version\",\n    Short: \"Print the version number\",\n    Run: func(cmd *cobra.Command, args []string) {\n        fmt.Println(\"Hello World CLI v1.0.0\")\n    },\n}\n\nfunc init() {\n    rootCmd.AddCommand(helloCmd)\n    rootCmd.AddCommand(versionCmd)\n}\n\nfunc main() {\n    if err := rootCmd.Execute(); err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile_8","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hello .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/hello .\nENTRYPOINT [\"./hello\"]\nCMD [\"--help\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#10-microservice-with-redis","title":"10. Microservice with Redis","text":""},{"location":"docker/dockerfile/golang/#gomod_9","title":"go.mod","text":"<pre><code>module microservice-redis\n\ngo 1.21\n\nrequire (\n    github.com/gin-gonic/gin v1.9.1\n    github.com/go-redis/redis/v8 v8.11.5\n)\n</code></pre>"},{"location":"docker/dockerfile/golang/#maingo_9","title":"main.go","text":"<pre><code>package main\n\nimport (\n    \"context\"\n    \"net/http\"\n    \"time\"\n\n    \"github.com/gin-gonic/gin\"\n    \"github.com/go-redis/redis/v8\"\n)\n\nvar rdb *redis.Client\nvar ctx = context.Background()\n\ntype CacheService struct {\n    client *redis.Client\n}\n\nfunc NewCacheService(addr string) *CacheService {\n    rdb := redis.NewClient(&amp;redis.Options{\n        Addr: addr,\n    })\n\n    return &amp;CacheService{client: rdb}\n}\n\nfunc (c *CacheService) Set(key, value string, expiration time.Duration) error {\n    return c.client.Set(ctx, key, value, expiration).Err()\n}\n\nfunc (c *CacheService) Get(key string) (string, error) {\n    return c.client.Get(ctx, key).Result()\n}\n\nfunc main() {\n    // Initialize Redis client\n    cache := NewCacheService(\"redis:6379\")\n\n    r := gin.Default()\n\n    r.GET(\"/\", func(c *gin.Context) {\n        c.JSON(http.StatusOK, gin.H{\n            \"message\": \"Hello World from Microservice with Redis!\",\n        })\n    })\n\n    r.GET(\"/cache/:key\", func(c *gin.Context) {\n        key := c.Param(\"key\")\n        value, err := cache.Get(key)\n        if err != nil {\n            c.JSON(http.StatusNotFound, gin.H{\"error\": \"Key not found\"})\n            return\n        }\n\n        c.JSON(http.StatusOK, gin.H{\n            \"key\":   key,\n            \"value\": value,\n        })\n    })\n\n    r.POST(\"/cache/:key\", func(c *gin.Context) {\n        key := c.Param(\"key\")\n        var request struct {\n            Value string `json:\"value\"`\n            TTL   int    `json:\"ttl,omitempty\"`\n        }\n\n        if err := c.ShouldBindJSON(&amp;request); err != nil {\n            c.JSON(http.StatusBadRequest, gin.H{\"error\": err.Error()})\n            return\n        }\n\n        ttl := time.Duration(request.TTL) * time.Second\n        if request.TTL == 0 {\n            ttl = time.Hour // Default 1 hour\n        }\n\n        if err := cache.Set(key, request.Value, ttl); err != nil {\n            c.JSON(http.StatusInternalServerError, gin.H{\"error\": err.Error()})\n            return\n        }\n\n        c.JSON(http.StatusOK, gin.H{\n            \"message\": \"Key set successfully\",\n            \"key\":     key,\n            \"value\":   request.Value,\n        })\n    })\n\n    r.GET(\"/health\", func(c *gin.Context) {\n        // Test Redis connection\n        _, err := cache.client.Ping(ctx).Result()\n        if err != nil {\n            c.JSON(http.StatusServiceUnavailable, gin.H{\n                \"status\": \"DOWN\",\n                \"redis\":  \"disconnected\",\n            })\n            return\n        }\n\n        c.JSON(http.StatusOK, gin.H{\n            \"status\": \"UP\",\n            \"redis\":  \"connected\",\n        })\n    })\n\n    r.Run(\":8080\")\n}\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerfile_9","title":"Dockerfile","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=build /app/main .\nEXPOSE 8080\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#docker-compose-examples","title":"Docker Compose Examples","text":""},{"location":"docker/dockerfile/golang/#gin-postgresql-redis","title":"Gin + PostgreSQL + Redis","text":"<pre><code>version: \"3.8\"\nservices:\n  app:\n    build: ./gin-app\n    ports:\n      - \"8080:8080\"\n    environment:\n      - DATABASE_URL=postgres://user:password@postgres:5432/myapp?sslmode=disable\n      - REDIS_URL=redis:6379\n    depends_on:\n      - postgres\n      - redis\n\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_DB: myapp\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n  redis:\n    image: redis:alpine\n\nvolumes:\n  postgres_data:\n</code></pre>"},{"location":"docker/dockerfile/golang/#microservices-setup","title":"Microservices Setup","text":"<pre><code>version: \"3.8\"\nservices:\n  api-gateway:\n    build: ./api-gateway\n    ports:\n      - \"8080:8080\"\n    depends_on:\n      - user-service\n      - order-service\n\n  user-service:\n    build: ./user-service\n    ports:\n      - \"8081:8080\"\n    depends_on:\n      - postgres\n\n  order-service:\n    build: ./order-service\n    ports:\n      - \"8082:8080\"\n    depends_on:\n      - postgres\n\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_DB: microservices\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n</code></pre>"},{"location":"docker/dockerfile/golang/#grpc-services","title":"gRPC Services","text":"<pre><code>version: \"3.8\"\nservices:\n  grpc-server:\n    build: ./grpc-server\n    ports:\n      - \"50051:50051\"\n\n  grpc-client:\n    build: ./grpc-client\n    depends_on:\n      - grpc-server\n    environment:\n      - GRPC_SERVER=grpc-server:50051\n</code></pre>"},{"location":"docker/dockerfile/golang/#production-optimizations","title":"Production Optimizations","text":""},{"location":"docker/dockerfile/golang/#distroless-image","title":"Distroless Image","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags=\"-w -s\" -o main .\n\nFROM gcr.io/distroless/static-debian11\nWORKDIR /\nCOPY --from=build /app/main .\nEXPOSE 8080\nUSER nonroot:nonroot\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#scratch-image-ultra-minimal","title":"Scratch Image (Ultra minimal)","text":"<pre><code>FROM golang:1.21-alpine AS build\nWORKDIR /app\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags=\"-w -s\" -o main .\n\nFROM scratch\nCOPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=build /app/main .\nEXPOSE 8080\nCMD [\"./main\"]\n</code></pre>"},{"location":"docker/dockerfile/golang/#dockerignore","title":".dockerignore","text":"<pre><code>.git\n.gitignore\nREADME.md\n.env\n.vscode/\n.idea/\n*.log\ncoverage.txt\nvendor/\n</code></pre>"},{"location":"docker/dockerfile/golang/#health-check","title":"Health Check","text":"<pre><code>FROM alpine:latest\nRUN apk --no-cache add ca-certificates curl\nWORKDIR /root/\nCOPY --from=build /app/main .\nEXPOSE 8080\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost:8080/health || exit 1\nCMD [\"./main\"]\n</code></pre> <p>T\u1ea5t c\u1ea3 c\u00e1c project Go tr\u00ean \u0111\u1ec1u c\u00f3 th\u1ec3 build v\u00e0 ch\u1ea1y v\u1edbi Docker. M\u1ed7i project \u0111\u1ea1i di\u1ec7n cho m\u1ed9t pattern ph\u1ed5 bi\u1ebfn trong Go development, t\u1eeb web frameworks \u0111\u1ebfn microservices v\u00e0 CLI tools.</p>"},{"location":"docker/dockerfile/java/","title":"Java Projects with Docker","text":""},{"location":"docker/dockerfile/java/#java-projects-with-docker","title":"Java Projects with Docker","text":"<p>T\u1ed5ng h\u1ee3p c\u00e1c lo\u1ea1i project Java ph\u1ed5 bi\u1ebfn v\u1edbi Dockerfile t\u01b0\u01a1ng \u1ee9ng.</p>"},{"location":"docker/dockerfile/java/#1-basic-java-application","title":"1. Basic Java Application","text":""},{"location":"docker/dockerfile/java/#helloworldjava","title":"HelloWorld.java","text":"<pre><code>public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World from Java!\");\n        System.out.println(\"Basic Java application is running...\");\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY *.java .\nRUN javac HelloWorld.java\nCMD [\"java\", \"HelloWorld\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#2-spring-boot-rest-api","title":"2. Spring Boot REST API","text":""},{"location":"docker/dockerfile/java/#pomxml","title":"pom.xml","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;3.2.0&lt;/version&gt;\n        &lt;relativePath/&gt;\n    &lt;/parent&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;hello-world&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;packaging&gt;jar&lt;/packaging&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexampleapplicationjava","title":"src/main/java/com/example/Application.java","text":"<pre><code>package com.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexamplehellocontrollerjava","title":"src/main/java/com/example/HelloController.java","text":"<pre><code>package com.example;\n\nimport org.springframework.web.bind.annotation.*;\nimport java.util.Map;\nimport java.util.HashMap;\n\n@RestController\npublic class HelloController {\n\n    @GetMapping(\"/\")\n    public Map&lt;String, String&gt; hello() {\n        Map&lt;String, String&gt; response = new HashMap&lt;&gt;();\n        response.put(\"message\", \"Hello World from Spring Boot!\");\n        return response;\n    }\n\n    @GetMapping(\"/api/health\")\n    public Map&lt;String, String&gt; health() {\n        Map&lt;String, String&gt; response = new HashMap&lt;&gt;();\n        response.put(\"status\", \"UP\");\n        response.put(\"framework\", \"Spring Boot\");\n        return response;\n    }\n\n    @PostMapping(\"/api/echo\")\n    public Map&lt;String, String&gt; echo(@RequestBody Map&lt;String, String&gt; request) {\n        Map&lt;String, String&gt; response = new HashMap&lt;&gt;();\n        response.put(\"echo\", \"You said: \" + request.get(\"message\"));\n        return response;\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile_1","title":"Dockerfile","text":"<pre><code>FROM maven:3.9-openjdk-17 AS build\nWORKDIR /app\nCOPY pom.xml .\nRUN mvn dependency:go-offline -B\nCOPY src ./src\nRUN mvn clean package -DskipTests\n\nFROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY --from=build /app/target/*.jar app.jar\nEXPOSE 8080\nCMD [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#3-spring-boot-with-jpa-and-mysql","title":"3. Spring Boot with JPA and MySQL","text":""},{"location":"docker/dockerfile/java/#pomxml-additional-dependencies","title":"pom.xml (additional dependencies)","text":"<pre><code>&lt;dependencies&gt;\n    &lt;!-- ...existing dependencies... --&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;mysql&lt;/groupId&gt;\n        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n        &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexampleuserjava","title":"src/main/java/com/example/User.java","text":"<pre><code>package com.example;\n\nimport jakarta.persistence.*;\n\n@Entity\n@Table(name = \"users\")\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(nullable = false)\n    private String name;\n\n    @Column(nullable = false, unique = true)\n    private String email;\n\n    // Constructors\n    public User() {}\n\n    public User(String name, String email) {\n        this.name = name;\n        this.email = email;\n    }\n\n    // Getters and Setters\n    public Long getId() { return id; }\n    public void setId(Long id) { this.id = id; }\n\n    public String getName() { return name; }\n    public void setName(String name) { this.name = name; }\n\n    public String getEmail() { return email; }\n    public void setEmail(String email) { this.email = email; }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexampleuserrepositoryjava","title":"src/main/java/com/example/UserRepository.java","text":"<pre><code>package com.example;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n    User findByEmail(String email);\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexampleusercontrollerjava","title":"src/main/java/com/example/UserController.java","text":"<pre><code>package com.example;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/api/users\")\npublic class UserController {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @GetMapping\n    public List&lt;User&gt; getAllUsers() {\n        return userRepository.findAll();\n    }\n\n    @PostMapping\n    public User createUser(@RequestBody User user) {\n        return userRepository.save(user);\n    }\n\n    @GetMapping(\"/{id}\")\n    public User getUserById(@PathVariable Long id) {\n        return userRepository.findById(id).orElse(null);\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainresourcesapplicationproperties","title":"src/main/resources/application.properties","text":"<pre><code>spring.datasource.url=jdbc:mysql://mysql:3306/myapp\nspring.datasource.username=root\nspring.datasource.password=password\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n\nspring.jpa.hibernate.ddl-auto=update\nspring.jpa.show-sql=true\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect\n\nserver.port=8080\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile_2","title":"Dockerfile","text":"<pre><code>FROM maven:3.9-openjdk-17 AS build\nWORKDIR /app\nCOPY pom.xml .\nRUN mvn dependency:go-offline -B\nCOPY src ./src\nRUN mvn clean package -DskipTests\n\nFROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY --from=build /app/target/*.jar app.jar\nEXPOSE 8080\nCMD [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#4-quarkus-native-application","title":"4. Quarkus Native Application","text":""},{"location":"docker/dockerfile/java/#pomxml_1","title":"pom.xml","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;quarkus-hello&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n\n    &lt;properties&gt;\n        &lt;quarkus.version&gt;3.6.0&lt;/quarkus.version&gt;\n        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;io.quarkus&lt;/groupId&gt;\n                &lt;artifactId&gt;quarkus-bom&lt;/artifactId&gt;\n                &lt;version&gt;${quarkus.version}&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.quarkus&lt;/groupId&gt;\n            &lt;artifactId&gt;quarkus-resteasy-reactive-jackson&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;io.quarkus&lt;/groupId&gt;\n                &lt;artifactId&gt;quarkus-maven-plugin&lt;/artifactId&gt;\n                &lt;version&gt;${quarkus.version}&lt;/version&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexamplehelloresourcejava","title":"src/main/java/com/example/HelloResource.java","text":"<pre><code>package com.example;\n\nimport jakarta.ws.rs.GET;\nimport jakarta.ws.rs.Path;\nimport jakarta.ws.rs.Produces;\nimport jakarta.ws.rs.core.MediaType;\nimport java.util.Map;\n\n@Path(\"/\")\npublic class HelloResource {\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public Map&lt;String, String&gt; hello() {\n        return Map.of(\"message\", \"Hello World from Quarkus!\");\n    }\n\n    @GET\n    @Path(\"/health\")\n    @Produces(MediaType.APPLICATION_JSON)\n    public Map&lt;String, String&gt; health() {\n        return Map.of(\n            \"status\", \"UP\",\n            \"framework\", \"Quarkus\"\n        );\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile-jvm-mode","title":"Dockerfile (JVM mode)","text":"<pre><code>FROM maven:3.9-openjdk-17 AS build\nWORKDIR /app\nCOPY pom.xml .\nRUN mvn dependency:go-offline -B\nCOPY src ./src\nRUN mvn clean package -Dquarkus.package.type=uber-jar\n\nFROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY --from=build /app/target/*-runner.jar app.jar\nEXPOSE 8080\nCMD [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfilenative-native-mode","title":"Dockerfile.native (Native mode)","text":"<pre><code>FROM quay.io/quarkus/ubi-quarkus-graalvmce-builder-image:22.3-java17 AS build\nWORKDIR /app\nCOPY pom.xml .\nRUN mvn dependency:go-offline -B\nCOPY src ./src\nRUN mvn clean package -Pnative -DskipTests\n\nFROM quay.io/quarkus/quarkus-micro-image:2.0\nWORKDIR /app\nCOPY --from=build /app/target/*-runner /application\nEXPOSE 8080\nCMD [\"./application\", \"-Dquarkus.http.host=0.0.0.0\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#5-micronaut-application","title":"5. Micronaut Application","text":""},{"location":"docker/dockerfile/java/#buildgradle","title":"build.gradle","text":"<pre><code>plugins {\n    id 'application'\n    id 'io.micronaut.application' version '4.2.1'\n}\n\nversion = '0.1'\ngroup = 'com.example'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation 'io.micronaut:micronaut-http-server-netty'\n    implementation 'io.micronaut:micronaut-jackson-databind'\n    implementation 'io.micronaut.validation:micronaut-validation'\n    runtimeOnly 'ch.qos.logback:logback-classic'\n}\n\napplication {\n    mainClass.set('com.example.Application')\n}\n\nmicronaut {\n    runtime 'netty'\n    testRuntime 'junit5'\n    processing {\n        incremental true\n        annotations 'com.example.*'\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexampleapplicationjava_1","title":"src/main/java/com/example/Application.java","text":"<pre><code>package com.example;\n\nimport io.micronaut.runtime.Micronaut;\n\npublic class Application {\n    public static void main(String[] args) {\n        Micronaut.run(Application.class, args);\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexamplehellocontrollerjava_1","title":"src/main/java/com/example/HelloController.java","text":"<pre><code>package com.example;\n\nimport io.micronaut.http.annotation.*;\nimport java.util.Map;\n\n@Controller\npublic class HelloController {\n\n    @Get(\"/\")\n    public Map&lt;String, String&gt; hello() {\n        return Map.of(\"message\", \"Hello World from Micronaut!\");\n    }\n\n    @Get(\"/health\")\n    public Map&lt;String, String&gt; health() {\n        return Map.of(\n            \"status\", \"UP\",\n            \"framework\", \"Micronaut\"\n        );\n    }\n\n    @Post(\"/echo\")\n    public Map&lt;String, String&gt; echo(@Body Map&lt;String, String&gt; request) {\n        return Map.of(\"echo\", \"You said: \" + request.get(\"message\"));\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile_3","title":"Dockerfile","text":"<pre><code>FROM gradle:8.5-jdk17 AS build\nWORKDIR /app\nCOPY build.gradle settings.gradle ./\nRUN gradle dependencies --no-daemon\nCOPY src ./src\nRUN gradle build --no-daemon\n\nFROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY --from=build /app/build/libs/*-all.jar app.jar\nEXPOSE 8080\nCMD [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#6-maven-multi-module-project","title":"6. Maven Multi-Module Project","text":""},{"location":"docker/dockerfile/java/#pomxml-parent","title":"pom.xml (parent)","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;multi-module-app&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n    &lt;packaging&gt;pom&lt;/packaging&gt;\n\n    &lt;modules&gt;\n        &lt;module&gt;common&lt;/module&gt;\n        &lt;module&gt;web&lt;/module&gt;\n        &lt;module&gt;service&lt;/module&gt;\n    &lt;/modules&gt;\n\n    &lt;properties&gt;\n        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;\n        &lt;spring.boot.version&gt;3.2.0&lt;/spring.boot.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;\n                &lt;version&gt;${spring.boot.version}&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n    &lt;/dependencyManagement&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"docker/dockerfile/java/#websrcmainjavacomexamplewebwebapplicationjava","title":"web/src/main/java/com/example/web/WebApplication.java","text":"<pre><code>package com.example.web;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport java.util.Map;\n\n@SpringBootApplication\n@RestController\npublic class WebApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(WebApplication.class, args);\n    }\n\n    @GetMapping(\"/\")\n    public Map&lt;String, String&gt; hello() {\n        return Map.of(\"message\", \"Hello World from Multi-Module Spring Boot!\");\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile_4","title":"Dockerfile","text":"<pre><code>FROM maven:3.9-openjdk-17 AS build\nWORKDIR /app\nCOPY pom.xml .\nCOPY common/pom.xml ./common/\nCOPY web/pom.xml ./web/\nCOPY service/pom.xml ./service/\nRUN mvn dependency:go-offline -B\n\nCOPY common/src ./common/src\nCOPY web/src ./web/src\nCOPY service/src ./service/src\nRUN mvn clean package -DskipTests\n\nFROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY --from=build /app/web/target/*.jar app.jar\nEXPOSE 8080\nCMD [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#7-play-framework-scala","title":"7. Play Framework (Scala)","text":""},{"location":"docker/dockerfile/java/#buildsbt","title":"build.sbt","text":"<pre><code>name := \"play-hello-world\"\nversion := \"1.0\"\nscalaVersion := \"2.13.12\"\n\nlazy val root = (project in file(\".\")).enablePlugins(PlayJava)\n\nlibraryDependencies ++= Seq(\n  guice,\n  \"com.typesafe.play\" %% \"play-json\" % \"2.9.4\"\n)\n</code></pre>"},{"location":"docker/dockerfile/java/#appcontrollershomecontrollerjava","title":"app/controllers/HomeController.java","text":"<pre><code>package controllers;\n\nimport play.mvc.*;\nimport play.libs.Json;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.node.ObjectNode;\n\npublic class HomeController extends Controller {\n\n    public Result index() {\n        ObjectNode result = Json.newObject();\n        result.put(\"message\", \"Hello World from Play Framework!\");\n        return ok(result);\n    }\n\n    public Result health() {\n        ObjectNode result = Json.newObject();\n        result.put(\"status\", \"UP\");\n        result.put(\"framework\", \"Play Framework\");\n        return ok(result);\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#confroutes","title":"conf/routes","text":"<pre><code>GET     /                           controllers.HomeController.index()\nGET     /health                     controllers.HomeController.health()\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile_5","title":"Dockerfile","text":"<pre><code>FROM sbtscala/scala-sbt:openjdk-17.0.2_1.7.1_2.13.8 AS build\nWORKDIR /app\nCOPY build.sbt .\nCOPY project ./project\nRUN sbt update\nCOPY . .\nRUN sbt dist\n\nFROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY --from=build /app/target/universal/*.zip app.zip\nRUN unzip app.zip &amp;&amp; rm app.zip\nRUN mv play-hello-world-* play-app\nEXPOSE 9000\nCMD [\"./play-app/bin/play-hello-world\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#8-vertx-application","title":"8. Vert.x Application","text":""},{"location":"docker/dockerfile/java/#pomxml_2","title":"pom.xml","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;vertx-hello&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n\n    &lt;properties&gt;\n        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;\n        &lt;vertx.version&gt;4.5.0&lt;/vertx.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.vertx&lt;/groupId&gt;\n            &lt;artifactId&gt;vertx-core&lt;/artifactId&gt;\n            &lt;version&gt;${vertx.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.vertx&lt;/groupId&gt;\n            &lt;artifactId&gt;vertx-web&lt;/artifactId&gt;\n            &lt;version&gt;${vertx.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;\n                &lt;version&gt;3.4.1&lt;/version&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;phase&gt;package&lt;/phase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;shade&lt;/goal&gt;\n                        &lt;/goals&gt;\n                        &lt;configuration&gt;\n                            &lt;transformers&gt;\n                                &lt;transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"&gt;\n                                    &lt;mainClass&gt;io.vertx.core.Launcher&lt;/mainClass&gt;\n                                &lt;/transformer&gt;\n                            &lt;/transformers&gt;\n                            &lt;outputFile&gt;${project.build.directory}/${project.artifactId}-fat.jar&lt;/outputFile&gt;\n                        &lt;/configuration&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexamplemainverticlejava","title":"src/main/java/com/example/MainVerticle.java","text":"<pre><code>package com.example;\n\nimport io.vertx.core.AbstractVerticle;\nimport io.vertx.core.Promise;\nimport io.vertx.core.json.JsonObject;\nimport io.vertx.ext.web.Router;\nimport io.vertx.ext.web.RoutingContext;\n\npublic class MainVerticle extends AbstractVerticle {\n\n    @Override\n    public void start(Promise&lt;Void&gt; startPromise) {\n        Router router = Router.router(vertx);\n\n        router.get(\"/\").handler(this::handleHello);\n        router.get(\"/health\").handler(this::handleHealth);\n\n        vertx.createHttpServer()\n            .requestHandler(router)\n            .listen(8080, http -&gt; {\n                if (http.succeeded()) {\n                    startPromise.complete();\n                    System.out.println(\"HTTP server started on port 8080\");\n                } else {\n                    startPromise.fail(http.cause());\n                }\n            });\n    }\n\n    private void handleHello(RoutingContext context) {\n        JsonObject response = new JsonObject()\n            .put(\"message\", \"Hello World from Vert.x!\");\n\n        context.response()\n            .putHeader(\"content-type\", \"application/json\")\n            .end(response.encode());\n    }\n\n    private void handleHealth(RoutingContext context) {\n        JsonObject response = new JsonObject()\n            .put(\"status\", \"UP\")\n            .put(\"framework\", \"Vert.x\");\n\n        context.response()\n            .putHeader(\"content-type\", \"application/json\")\n            .end(response.encode());\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile_6","title":"Dockerfile","text":"<pre><code>FROM maven:3.9-openjdk-17 AS build\nWORKDIR /app\nCOPY pom.xml .\nRUN mvn dependency:go-offline -B\nCOPY src ./src\nRUN mvn clean package\n\nFROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY --from=build /app/target/*-fat.jar app.jar\nEXPOSE 8080\nCMD [\"java\", \"-jar\", \"app.jar\", \"run\", \"com.example.MainVerticle\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#9-kafka-consumerproducer","title":"9. Kafka Consumer/Producer","text":""},{"location":"docker/dockerfile/java/#pomxml_3","title":"pom.xml","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;kafka-app&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n\n    &lt;properties&gt;\n        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.apache.kafka&lt;/groupId&gt;\n            &lt;artifactId&gt;kafka-clients&lt;/artifactId&gt;\n            &lt;version&gt;3.6.0&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n            &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;\n            &lt;version&gt;2.0.9&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexamplekafkaapplicationjava","title":"src/main/java/com/example/KafkaApplication.java","text":"<pre><code>package com.example;\n\nimport org.apache.kafka.clients.consumer.*;\nimport org.apache.kafka.clients.producer.*;\nimport org.apache.kafka.common.serialization.StringDeserializer;\nimport org.apache.kafka.common.serialization.StringSerializer;\n\nimport java.time.Duration;\nimport java.util.Collections;\nimport java.util.Properties;\nimport java.util.concurrent.CompletableFuture;\n\npublic class KafkaApplication {\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello World from Kafka Application!\");\n\n        // Start producer and consumer\n        CompletableFuture.runAsync(KafkaApplication::runProducer);\n        CompletableFuture.runAsync(KafkaApplication::runConsumer);\n\n        // Keep the application running\n        try {\n            Thread.sleep(Long.MAX_VALUE);\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n        }\n    }\n\n    private static void runProducer() {\n        Properties props = new Properties();\n        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"kafka:9092\");\n        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\n\n        try (Producer&lt;String, String&gt; producer = new KafkaProducer&lt;&gt;(props)) {\n            int counter = 0;\n            while (true) {\n                String message = \"Hello World message #\" + counter++;\n                ProducerRecord&lt;String, String&gt; record = new ProducerRecord&lt;&gt;(\"hello-topic\", message);\n\n                producer.send(record, (metadata, exception) -&gt; {\n                    if (exception == null) {\n                        System.out.println(\"Sent: \" + message);\n                    } else {\n                        System.err.println(\"Error sending message: \" + exception.getMessage());\n                    }\n                });\n\n                Thread.sleep(5000);\n            }\n        } catch (Exception e) {\n            System.err.println(\"Producer error: \" + e.getMessage());\n        }\n    }\n\n    private static void runConsumer() {\n        Properties props = new Properties();\n        props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"kafka:9092\");\n        props.put(ConsumerConfig.GROUP_ID_CONFIG, \"hello-group\");\n        props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());\n        props.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n\n        try (Consumer&lt;String, String&gt; consumer = new KafkaConsumer&lt;&gt;(props)) {\n            consumer.subscribe(Collections.singletonList(\"hello-topic\"));\n\n            while (true) {\n                ConsumerRecords&lt;String, String&gt; records = consumer.poll(Duration.ofMillis(1000));\n                for (ConsumerRecord&lt;String, String&gt; record : records) {\n                    System.out.println(\"Received: \" + record.value());\n                }\n            }\n        } catch (Exception e) {\n            System.err.println(\"Consumer error: \" + e.getMessage());\n        }\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile_7","title":"Dockerfile","text":"<pre><code>FROM maven:3.9-openjdk-17 AS build\nWORKDIR /app\nCOPY pom.xml .\nRUN mvn dependency:go-offline -B\nCOPY src ./src\nRUN mvn clean package\n\nFROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY --from=build /app/target/*.jar app.jar\nCMD [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#10-gradle-based-spring-boot","title":"10. Gradle-based Spring Boot","text":""},{"location":"docker/dockerfile/java/#buildgradle_1","title":"build.gradle","text":"<pre><code>plugins {\n    id 'org.springframework.boot' version '3.2.0'\n    id 'io.spring.dependency-management' version '1.1.4'\n    id 'java'\n}\n\ngroup = 'com.example'\nversion = '0.0.1-SNAPSHOT'\nsourceCompatibility = '17'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    implementation 'org.springframework.boot:spring-boot-starter-actuator'\n    testImplementation 'org.springframework.boot:spring-boot-starter-test'\n}\n\ntasks.named('test') {\n    useJUnitPlatform()\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#srcmainjavacomexamplegradleapplicationjava","title":"src/main/java/com/example/GradleApplication.java","text":"<pre><code>package com.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport java.util.Map;\n\n@SpringBootApplication\n@RestController\npublic class GradleApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(GradleApplication.class, args);\n    }\n\n    @GetMapping(\"/\")\n    public Map&lt;String, String&gt; hello() {\n        return Map.of(\"message\", \"Hello World from Gradle + Spring Boot!\");\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerfile_8","title":"Dockerfile","text":"<pre><code>FROM gradle:8.5-jdk17 AS build\nWORKDIR /app\nCOPY build.gradle settings.gradle ./\nRUN gradle dependencies --no-daemon\nCOPY src ./src\nRUN gradle build --no-daemon\n\nFROM openjdk:17-jdk-slim\nWORKDIR /app\nCOPY --from=build /app/build/libs/*.jar app.jar\nEXPOSE 8080\nCMD [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#docker-compose-examples","title":"Docker Compose Examples","text":""},{"location":"docker/dockerfile/java/#spring-boot-mysql-redis","title":"Spring Boot + MySQL + Redis","text":"<pre><code>version: \"3.8\"\nservices:\n  app:\n    build: ./spring-app\n    ports:\n      - \"8080:8080\"\n    environment:\n      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/myapp\n      - SPRING_REDIS_HOST=redis\n    depends_on:\n      - mysql\n      - redis\n\n  mysql:\n    image: mysql:8.0\n    environment:\n      MYSQL_ROOT_PASSWORD: password\n      MYSQL_DATABASE: myapp\n    volumes:\n      - mysql_data:/var/lib/mysql\n\n  redis:\n    image: redis:alpine\n\nvolumes:\n  mysql_data:\n</code></pre>"},{"location":"docker/dockerfile/java/#microservices-with-kafka","title":"Microservices with Kafka","text":"<pre><code>version: \"3.8\"\nservices:\n  zookeeper:\n    image: confluentinc/cp-zookeeper:latest\n    environment:\n      ZOOKEEPER_CLIENT_PORT: 2181\n\n  kafka:\n    image: confluentinc/cp-kafka:latest\n    depends_on:\n      - zookeeper\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n\n  producer-service:\n    build: ./kafka-producer\n    depends_on:\n      - kafka\n\n  consumer-service:\n    build: ./kafka-consumer\n    depends_on:\n      - kafka\n</code></pre>"},{"location":"docker/dockerfile/java/#multi-module-application","title":"Multi-Module Application","text":"<pre><code>version: \"3.8\"\nservices:\n  web-service:\n    build:\n      context: .\n      dockerfile: Dockerfile.web\n    ports:\n      - \"8080:8080\"\n    depends_on:\n      - api-service\n\n  api-service:\n    build:\n      context: .\n      dockerfile: Dockerfile.api\n    ports:\n      - \"8081:8081\"\n    depends_on:\n      - database\n\n  database:\n    image: postgres:15\n    environment:\n      POSTGRES_DB: myapp\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n</code></pre>"},{"location":"docker/dockerfile/java/#production-optimizations","title":"Production Optimizations","text":""},{"location":"docker/dockerfile/java/#multi-stage-with-jre","title":"Multi-stage with JRE","text":"<pre><code>FROM maven:3.9-openjdk-17 AS build\nWORKDIR /app\nCOPY pom.xml .\nRUN mvn dependency:go-offline -B\nCOPY src ./src\nRUN mvn clean package -DskipTests\n\nFROM openjdk:17-jre-slim\nWORKDIR /app\nCOPY --from=build /app/target/*.jar app.jar\nRUN addgroup --system spring &amp;&amp; adduser --system spring --ingroup spring\nUSER spring:spring\nEXPOSE 8080\nCMD [\"java\", \"-jar\", \"app.jar\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#distroless-image","title":"Distroless Image","text":"<pre><code>FROM maven:3.9-openjdk-17 AS build\nWORKDIR /app\nCOPY pom.xml .\nRUN mvn dependency:go-offline -B\nCOPY src ./src\nRUN mvn clean package -DskipTests\n\nFROM gcr.io/distroless/java17-debian11\nWORKDIR /app\nCOPY --from=build /app/target/*.jar app.jar\nEXPOSE 8080\nCMD [\"app.jar\"]\n</code></pre>"},{"location":"docker/dockerfile/java/#dockerignore","title":".dockerignore","text":"<pre><code>target/\n.mvn/\nmvnw\nmvnw.cmd\n.git/\n.gitignore\nREADME.md\n.idea/\n*.iml\n.vscode/\n.classpath\n.project\n.settings/\n</code></pre>"},{"location":"docker/dockerfile/java/#health-check","title":"Health Check","text":"<pre><code>FROM openjdk:17-jre-slim\nWORKDIR /app\nCOPY target/*.jar app.jar\nEXPOSE 8080\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost:8080/actuator/health || exit 1\nCMD [\"java\", \"-jar\", \"app.jar\"]\n</code></pre> <p>T\u1ea5t c\u1ea3 c\u00e1c project Java tr\u00ean \u0111\u1ec1u c\u00f3 th\u1ec3 build v\u00e0 ch\u1ea1y v\u1edbi Docker. M\u1ed7i project \u0111\u1ea1i di\u1ec7n cho m\u1ed9t pattern ph\u1ed5 bi\u1ebfn trong Java development, t\u1eeb web frameworks \u0111\u1ebfn microservices v\u00e0 message processing.</p>"},{"location":"docker/dockerfile/nodejs/","title":"Node.js Projects with Docker","text":""},{"location":"docker/dockerfile/nodejs/#nodejs-projects-with-docker","title":"Node.js Projects with Docker","text":"<p>T\u1ed5ng h\u1ee3p c\u00e1c lo\u1ea1i project Node.js ph\u1ed5 bi\u1ebfn v\u1edbi Dockerfile t\u01b0\u01a1ng \u1ee9ng.</p>"},{"location":"docker/dockerfile/nodejs/#1-basic-nodejs-application","title":"1. Basic Node.js Application","text":""},{"location":"docker/dockerfile/nodejs/#packagejson","title":"Package.json","text":"<pre><code>{\n  \"name\": \"basic-nodejs\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#indexjs","title":"index.js","text":"<pre><code>console.log(\"Hello World from Basic Node.js!\");\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#2-expressjs-web-server","title":"2. Express.js Web Server","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_1","title":"Package.json","text":"<pre><code>{\n  \"name\": \"express-app\",\n  \"version\": \"1.0.0\",\n  \"main\": \"app.js\",\n  \"scripts\": {\n    \"start\": \"node app.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.18.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#appjs","title":"app.js","text":"<pre><code>const express = require(\"express\");\nconst app = express();\nconst port = 3000;\n\napp.get(\"/\", (req, res) =&gt; {\n  res.send(\"Hello World from Express!\");\n});\n\napp.listen(port, () =&gt; {\n  console.log(`Express app listening at http://localhost:${port}`);\n});\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_1","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#3-nextjs-application","title":"3. Next.js Application","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_2","title":"Package.json","text":"<pre><code>{\n  \"name\": \"nextjs-app\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"next start\"\n  },\n  \"dependencies\": {\n    \"next\": \"^14.0.0\",\n    \"react\": \"^18.0.0\",\n    \"react-dom\": \"^18.0.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#pagesindexjs","title":"pages/index.js","text":"<pre><code>export default function Home() {\n  return &lt;h1&gt;Hello World from Next.js!&lt;/h1&gt;;\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_2","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#4-nestjs-application","title":"4. Nest.js Application","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_3","title":"Package.json","text":"<pre><code>{\n  \"name\": \"nestjs-app\",\n  \"version\": \"1.0.0\",\n  \"scripts\": {\n    \"start\": \"nest start\",\n    \"build\": \"nest build\"\n  },\n  \"dependencies\": {\n    \"@nestjs/core\": \"^10.0.0\",\n    \"@nestjs/common\": \"^10.0.0\",\n    \"@nestjs/platform-express\": \"^10.0.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#srcmaints","title":"src/main.ts","text":"<pre><code>import { NestFactory } from \"@nestjs/core\";\nimport { AppModule } from \"./app.module\";\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3000);\n  console.log(\"Hello World from NestJS!\");\n}\nbootstrap();\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_3","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\nEXPOSE 3000\nCMD [\"npm\", \"run\", \"start:prod\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#5-fastify-application","title":"5. Fastify Application","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_4","title":"Package.json","text":"<pre><code>{\n  \"name\": \"fastify-app\",\n  \"version\": \"1.0.0\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"fastify\": \"^4.0.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#serverjs","title":"server.js","text":"<pre><code>const fastify = require(\"fastify\")({ logger: true });\n\nfastify.get(\"/\", async (request, reply) =&gt; {\n  return { message: \"Hello World from Fastify!\" };\n});\n\nconst start = async () =&gt; {\n  try {\n    await fastify.listen({ port: 3000, host: \"0.0.0.0\" });\n    console.log(\"Fastify server running on port 3000\");\n  } catch (err) {\n    fastify.log.error(err);\n    process.exit(1);\n  }\n};\nstart();\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_4","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#6-koajs-application","title":"6. Koa.js Application","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_5","title":"Package.json","text":"<pre><code>{\n  \"name\": \"koa-app\",\n  \"version\": \"1.0.0\",\n  \"main\": \"app.js\",\n  \"scripts\": {\n    \"start\": \"node app.js\"\n  },\n  \"dependencies\": {\n    \"koa\": \"^2.14.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#appjs_1","title":"app.js","text":"<pre><code>const Koa = require(\"koa\");\nconst app = new Koa();\n\napp.use(async (ctx) =&gt; {\n  ctx.body = \"Hello World from Koa!\";\n});\n\napp.listen(3000, () =&gt; {\n  console.log(\"Koa server running on port 3000\");\n});\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_5","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#7-socketio-application","title":"7. Socket.io Application","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_6","title":"Package.json","text":"<pre><code>{\n  \"name\": \"socketio-app\",\n  \"version\": \"1.0.0\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"socket.io\": \"^4.7.0\",\n    \"express\": \"^4.18.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#serverjs_1","title":"server.js","text":"<pre><code>const express = require(\"express\");\nconst { createServer } = require(\"http\");\nconst { Server } = require(\"socket.io\");\n\nconst app = express();\nconst server = createServer(app);\nconst io = new Server(server);\n\napp.get(\"/\", (req, res) =&gt; {\n  res.send(\"&lt;h1&gt;Hello World from Socket.io!&lt;/h1&gt;\");\n});\n\nio.on(\"connection\", (socket) =&gt; {\n  console.log(\"A user connected\");\n  socket.emit(\"message\", \"Hello from Socket.io server!\");\n});\n\nserver.listen(3000, () =&gt; {\n  console.log(\"Socket.io server running on port 3000\");\n});\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_6","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#8-graphql-with-apollo-server","title":"8. GraphQL with Apollo Server","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_7","title":"Package.json","text":"<pre><code>{\n  \"name\": \"graphql-app\",\n  \"version\": \"1.0.0\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"apollo-server-express\": \"^3.12.0\",\n    \"express\": \"^4.18.0\",\n    \"graphql\": \"^16.0.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#serverjs_2","title":"server.js","text":"<pre><code>const express = require(\"express\");\nconst { ApolloServer, gql } = require(\"apollo-server-express\");\n\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    hello: () =&gt; \"Hello World from GraphQL!\",\n  },\n};\n\nasync function startServer() {\n  const app = express();\n  const server = new ApolloServer({ typeDefs, resolvers });\n\n  await server.start();\n  server.applyMiddleware({ app });\n\n  app.listen(3000, () =&gt; {\n    console.log(\n      `GraphQL server ready at http://localhost:3000${server.graphqlPath}`\n    );\n  });\n}\n\nstartServer();\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_7","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#9-rest-api-with-express-mongodb","title":"9. REST API with Express + MongoDB","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_8","title":"Package.json","text":"<pre><code>{\n  \"name\": \"rest-api-mongo\",\n  \"version\": \"1.0.0\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.18.0\",\n    \"mongoose\": \"^7.0.0\",\n    \"cors\": \"^2.8.5\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#serverjs_3","title":"server.js","text":"<pre><code>const express = require(\"express\");\nconst mongoose = require(\"mongoose\");\nconst cors = require(\"cors\");\n\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\n// Simple in-memory data for demo\nlet users = [{ id: 1, name: \"Hello World User\" }];\n\napp.get(\"/api/users\", (req, res) =&gt; {\n  res.json(users);\n});\n\napp.get(\"/\", (req, res) =&gt; {\n  res.send(\"Hello World from REST API!\");\n});\n\napp.listen(3000, () =&gt; {\n  console.log(\"REST API server running on port 3000\");\n});\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_8","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#10-typescript-nodejs-application","title":"10. TypeScript Node.js Application","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_9","title":"Package.json","text":"<pre><code>{\n  \"name\": \"typescript-app\",\n  \"version\": \"1.0.0\",\n  \"main\": \"dist/index.js\",\n  \"scripts\": {\n    \"build\": \"tsc\",\n    \"start\": \"node dist/index.js\",\n    \"dev\": \"ts-node src/index.ts\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.18.0\"\n  },\n  \"devDependencies\": {\n    \"@types/express\": \"^4.17.0\",\n    \"@types/node\": \"^20.0.0\",\n    \"typescript\": \"^5.0.0\",\n    \"ts-node\": \"^10.9.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#srcindexts","title":"src/index.ts","text":"<pre><code>import express from \"express\";\n\nconst app = express();\nconst port = 3000;\n\napp.get(\"/\", (req, res) =&gt; {\n  res.send(\"Hello World from TypeScript!\");\n});\n\napp.listen(port, () =&gt; {\n  console.log(`TypeScript app listening at http://localhost:${port}`);\n});\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#tsconfigjson","title":"tsconfig.json","text":"<pre><code>{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"module\": \"commonjs\",\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\",\n    \"strict\": true,\n    \"esModuleInterop\": true\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_9","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nCOPY tsconfig.json ./\nRUN npm install\nCOPY src ./src\nRUN npm run build\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#11-microservice-voi-redis","title":"11. Microservice v\u1edbi Redis","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_10","title":"Package.json","text":"<pre><code>{\n  \"name\": \"microservice-redis\",\n  \"version\": \"1.0.0\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.18.0\",\n    \"redis\": \"^4.6.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#serverjs_4","title":"server.js","text":"<pre><code>const express = require(\"express\");\nconst redis = require(\"redis\");\n\nconst app = express();\nconst client = redis.createClient({\n  host: process.env.REDIS_HOST || \"localhost\",\n  port: process.env.REDIS_PORT || 6379,\n});\n\napp.get(\"/\", async (req, res) =&gt; {\n  try {\n    await client.set(\"message\", \"Hello World from Microservice with Redis!\");\n    const message = await client.get(\"message\");\n    res.json({ message });\n  } catch (error) {\n    res.json({ message: \"Hello World from Microservice!\" });\n  }\n});\n\napp.listen(3000, () =&gt; {\n  console.log(\"Microservice running on port 3000\");\n});\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_10","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#12-websocket-server","title":"12. WebSocket Server","text":""},{"location":"docker/dockerfile/nodejs/#packagejson_11","title":"Package.json","text":"<pre><code>{\n  \"name\": \"websocket-server\",\n  \"version\": \"1.0.0\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"ws\": \"^8.14.0\"\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#serverjs_5","title":"server.js","text":"<pre><code>const WebSocket = require(\"ws\");\n\nconst wss = new WebSocket.Server({ port: 3000 });\n\nwss.on(\"connection\", function connection(ws) {\n  console.log(\"Client connected\");\n\n  ws.send(\"Hello World from WebSocket Server!\");\n\n  ws.on(\"message\", function incoming(message) {\n    console.log(\"received: %s\", message);\n    ws.send(`Echo: ${message}`);\n  });\n\n  ws.on(\"close\", function close() {\n    console.log(\"Client disconnected\");\n  });\n});\n\nconsole.log(\"WebSocket server running on port 3000\");\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerfile_11","title":"Dockerfile","text":"<pre><code>FROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#docker-compose-examples","title":"Docker Compose Examples","text":""},{"location":"docker/dockerfile/nodejs/#basic-multi-service-setup","title":"Basic Multi-Service Setup","text":"<pre><code>version: \"3.8\"\nservices:\n  express-app:\n    build: ./express-app\n    ports:\n      - \"3001:3000\"\n\n  nextjs-app:\n    build: ./nextjs-app\n    ports:\n      - \"3002:3000\"\n\n  api-service:\n    build: ./rest-api-mongo\n    ports:\n      - \"3003:3000\"\n    depends_on:\n      - mongodb\n\n  mongodb:\n    image: mongo:latest\n    ports:\n      - \"27017:27017\"\n\n  redis:\n    image: redis:alpine\n    ports:\n      - \"6379:6379\"\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#production-ready-setup","title":"Production-Ready Setup","text":"<pre><code>version: \"3.8\"\nservices:\n  app:\n    build:\n      context: .\n      dockerfile: Dockerfile.prod\n    restart: unless-stopped\n    environment:\n      - NODE_ENV=production\n    ports:\n      - \"80:3000\"\n    depends_on:\n      - db\n      - redis\n\n  db:\n    image: postgres:15-alpine\n    restart: unless-stopped\n    environment:\n      POSTGRES_DB: myapp\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n  redis:\n    image: redis:alpine\n    restart: unless-stopped\n\nvolumes:\n  postgres_data:\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#optimization-tips","title":"Optimization Tips","text":""},{"location":"docker/dockerfile/nodejs/#multi-stage-dockerfile","title":"Multi-stage Dockerfile","text":"<pre><code># Build stage\nFROM node:18-alpine AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci --only=production\n\n# Production stage\nFROM node:18-alpine AS production\nWORKDIR /app\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY . .\nEXPOSE 3000\nUSER node\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker/dockerfile/nodejs/#dockerignore","title":".dockerignore","text":"<pre><code>node_modules\nnpm-debug.log\n.git\n.gitignore\nREADME.md\n.env\n.nyc_output\ncoverage\n.cache\n</code></pre> <p>T\u1ea5t c\u1ea3 c\u00e1c project tr\u00ean \u0111\u1ec1u c\u00f3 th\u1ec3 build v\u00e0 ch\u1ea1y v\u1edbi Docker. M\u1ed7i project \u0111\u1ea1i di\u1ec7n cho m\u1ed9t pattern ph\u1ed5 bi\u1ebfn trong Node.js development.</p>"},{"location":"docker/dockerfile/php/","title":"PHP Projects with Docker","text":""},{"location":"docker/dockerfile/php/#php-projects-with-docker","title":"PHP Projects with Docker","text":"<p>T\u1ed5ng h\u1ee3p c\u00e1c lo\u1ea1i project PHP ph\u1ed5 bi\u1ebfn v\u1edbi Dockerfile t\u01b0\u01a1ng \u1ee9ng.</p>"},{"location":"docker/dockerfile/php/#1-basic-php-application","title":"1. Basic PHP Application","text":""},{"location":"docker/dockerfile/php/#indexphp","title":"index.php","text":"<pre><code>&lt;?php\necho \"Hello World from PHP!\\n\";\necho \"Current time: \" . date('Y-m-d H:i:s') . \"\\n\";\necho \"PHP Version: \" . phpversion() . \"\\n\";\n\n// Keep script running for demonstration\nwhile (true) {\n    echo \"Application is running... \" . date('H:i:s') . \"\\n\";\n    sleep(10);\n}\n?&gt;\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM php:8.3-cli\nWORKDIR /app\nCOPY . .\nCMD [\"php\", \"index.php\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#2-apache-php-web-server","title":"2. Apache + PHP Web Server","text":""},{"location":"docker/dockerfile/php/#indexphp_1","title":"index.php","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Hello World PHP&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; text-align: center; margin-top: 50px; }\n        .container { max-width: 600px; margin: 0 auto; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1&gt;Hello World from PHP + Apache!&lt;/h1&gt;\n        &lt;p&gt;Current time: &lt;?php echo date('Y-m-d H:i:s'); ?&gt;&lt;/p&gt;\n        &lt;p&gt;PHP Version: &lt;?php echo phpversion(); ?&gt;&lt;/p&gt;\n        &lt;p&gt;Server: &lt;?php echo $_SERVER['SERVER_SOFTWARE']; ?&gt;&lt;/p&gt;\n\n        &lt;h2&gt;Server Information&lt;/h2&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Document Root: &lt;?php echo $_SERVER['DOCUMENT_ROOT']; ?&gt;&lt;/li&gt;\n            &lt;li&gt;Server Name: &lt;?php echo $_SERVER['SERVER_NAME']; ?&gt;&lt;/li&gt;\n            &lt;li&gt;Request Method: &lt;?php echo $_SERVER['REQUEST_METHOD']; ?&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerfile_1","title":"Dockerfile","text":"<pre><code>FROM php:8.3-apache\nWORKDIR /var/www/html\nCOPY . .\nRUN chown -R www-data:www-data /var/www/html\nEXPOSE 80\nCMD [\"apache2-foreground\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#3-laravel-application","title":"3. Laravel Application","text":""},{"location":"docker/dockerfile/php/#composerjson","title":"composer.json","text":"<pre><code>{\n  \"name\": \"laravel/laravel\",\n  \"type\": \"project\",\n  \"description\": \"Hello World Laravel Application\",\n  \"require\": {\n    \"php\": \"^8.1\",\n    \"laravel/framework\": \"^10.0\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"App\\\\\": \"app/\",\n      \"Database\\\\Factories\\\\\": \"database/factories/\",\n      \"Database\\\\Seeders\\\\\": \"database/seeders/\"\n    }\n  },\n  \"scripts\": {\n    \"post-autoload-dump\": [\n      \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\n      \"@php artisan package:discover --ansi\"\n    ]\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/php/#routeswebphp","title":"routes/web.php","text":"<pre><code>&lt;?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse Illuminate\\Http\\Request;\n\nRoute::get('/', function () {\n    return view('welcome');\n});\n\nRoute::get('/api/hello', function () {\n    return response()-&gt;json([\n        'message' =&gt; 'Hello World from Laravel API!',\n        'timestamp' =&gt; now()-&gt;toDateTimeString(),\n        'framework' =&gt; 'Laravel ' . app()-&gt;version()\n    ]);\n});\n\nRoute::post('/api/echo', function (Request $request) {\n    return response()-&gt;json([\n        'echo' =&gt; 'You said: ' . $request-&gt;input('message', 'No message provided'),\n        'timestamp' =&gt; now()-&gt;toDateTimeString()\n    ]);\n});\n\nRoute::get('/health', function () {\n    return response()-&gt;json([\n        'status' =&gt; 'healthy',\n        'framework' =&gt; 'Laravel',\n        'php_version' =&gt; phpversion()\n    ]);\n});\n</code></pre>"},{"location":"docker/dockerfile/php/#resourcesviewswelcomebladephp","title":"resources/views/welcome.blade.php","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Hello World Laravel&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; text-align: center; background: #f8f9fa; }\n        .container { max-width: 800px; margin: 50px auto; padding: 20px; }\n        .card { background: white; border-radius: 8px; padding: 30px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n        .btn { background: #007bff; color: white; padding: 10px 20px; border: none; border-radius: 4px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"card\"&gt;\n            &lt;h1&gt;Hello World from Laravel!&lt;/h1&gt;\n            &lt;p&gt;Welcome to your Laravel application&lt;/p&gt;\n            &lt;p&gt;Current time: {{ now()-&gt;format('Y-m-d H:i:s') }}&lt;/p&gt;\n            &lt;p&gt;Laravel Version: {{ app()-&gt;version() }}&lt;/p&gt;\n\n            &lt;div style=\"margin-top: 30px;\"&gt;\n                &lt;a href=\"/api/hello\" class=\"btn\"&gt;Test API&lt;/a&gt;\n                &lt;a href=\"/health\" class=\"btn\"&gt;Health Check&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerfile_2","title":"Dockerfile","text":"<pre><code>FROM php:8.3-fpm\n\n# Install dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    git \\\n    curl \\\n    libpng-dev \\\n    libonig-dev \\\n    libxml2-dev \\\n    zip \\\n    unzip \\\n    nginx\n\n# Install PHP extensions\nRUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd\n\n# Install Composer\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\nWORKDIR /var/www/html\n\n# Copy application files\nCOPY . .\n\n# Install Laravel dependencies\nRUN composer install --optimize-autoloader --no-dev\n\n# Set permissions\nRUN chown -R www-data:www-data /var/www/html \\\n    &amp;&amp; chmod -R 755 /var/www/html/storage\n\n# Nginx configuration\nCOPY nginx.conf /etc/nginx/sites-available/default\n\nEXPOSE 80\n\n# Start script\nCOPY start.sh /start.sh\nRUN chmod +x /start.sh\nCMD [\"/start.sh\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#nginxconf","title":"nginx.conf","text":"<pre><code>server {\n    listen 80;\n    server_name localhost;\n    root /var/www/html/public;\n    index index.php index.html;\n\n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n\n    location ~ \\.php$ {\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n        include fastcgi_params;\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/php/#startsh","title":"start.sh","text":"<pre><code>#!/bin/bash\nphp-fpm -D\nnginx -g \"daemon off;\"\n</code></pre>"},{"location":"docker/dockerfile/php/#4-symfony-application","title":"4. Symfony Application","text":""},{"location":"docker/dockerfile/php/#composerjson_1","title":"composer.json","text":"<pre><code>{\n  \"name\": \"symfony/hello-world\",\n  \"type\": \"project\",\n  \"require\": {\n    \"php\": \"&gt;=8.1\",\n    \"symfony/framework-bundle\": \"^6.0\",\n    \"symfony/runtime\": \"^6.0\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"App\\\\\": \"src/\"\n    }\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/php/#srccontrollerhellocontrollerphp","title":"src/Controller/HelloController.php","text":"<pre><code>&lt;?php\n\nnamespace App\\Controller;\n\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n\nclass HelloController extends AbstractController\n{\n    #[Route('/', name: 'home')]\n    public function index(): Response\n    {\n        return $this-&gt;render('hello.html.twig', [\n            'message' =&gt; 'Hello World from Symfony!',\n            'timestamp' =&gt; new \\DateTime()\n        ]);\n    }\n\n    #[Route('/api/hello', name: 'api_hello')]\n    public function apiHello(): JsonResponse\n    {\n        return $this-&gt;json([\n            'message' =&gt; 'Hello World from Symfony API!',\n            'timestamp' =&gt; (new \\DateTime())-&gt;format('Y-m-d H:i:s'),\n            'framework' =&gt; 'Symfony'\n        ]);\n    }\n\n    #[Route('/api/echo', name: 'api_echo', methods: ['POST'])]\n    public function echo(Request $request): JsonResponse\n    {\n        $data = json_decode($request-&gt;getContent(), true);\n\n        return $this-&gt;json([\n            'echo' =&gt; 'You said: ' . ($data['message'] ?? 'No message provided'),\n            'timestamp' =&gt; (new \\DateTime())-&gt;format('Y-m-d H:i:s')\n        ]);\n    }\n\n    #[Route('/health', name: 'health')]\n    public function health(): JsonResponse\n    {\n        return $this-&gt;json([\n            'status' =&gt; 'healthy',\n            'framework' =&gt; 'Symfony',\n            'php_version' =&gt; phpversion()\n        ]);\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/php/#templateshellohtmltwig","title":"templates/hello.html.twig","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Hello World Symfony&lt;/title&gt;\n    &lt;style&gt;\n      body {\n        font-family: Arial, sans-serif;\n        text-align: center;\n        background: #f8f9fa;\n      }\n      .container {\n        max-width: 800px;\n        margin: 50px auto;\n        padding: 20px;\n      }\n      .card {\n        background: white;\n        border-radius: 8px;\n        padding: 30px;\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div class=\"container\"&gt;\n      &lt;div class=\"card\"&gt;\n        &lt;h1&gt;{{ message }}&lt;/h1&gt;\n        &lt;p&gt;Welcome to your Symfony application&lt;/p&gt;\n        &lt;p&gt;Current time: {{ timestamp|date('Y-m-d H:i:s') }}&lt;/p&gt;\n        &lt;p&gt;Symfony Framework&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerfile_3","title":"Dockerfile","text":"<pre><code>FROM php:8.3-apache\n\n# Install dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    git \\\n    unzip \\\n    libicu-dev \\\n    libzip-dev\n\n# Install PHP extensions\nRUN docker-php-ext-install intl zip pdo_mysql\n\n# Install Composer\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\n# Enable Apache rewrite module\nRUN a2enmod rewrite\n\nWORKDIR /var/www/html\n\n# Copy application\nCOPY . .\n\n# Install dependencies\nRUN composer install --optimize-autoloader --no-dev\n\n# Set permissions\nRUN chown -R www-data:www-data /var/www/html\n\nEXPOSE 80\nCMD [\"apache2-foreground\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#5-codeigniter-4-application","title":"5. CodeIgniter 4 Application","text":""},{"location":"docker/dockerfile/php/#appcontrollershomephp","title":"app/Controllers/Home.php","text":"<pre><code>&lt;?php\n\nnamespace App\\Controllers;\n\nclass Home extends BaseController\n{\n    public function index()\n    {\n        return view('welcome_message', [\n            'message' =&gt; 'Hello World from CodeIgniter 4!',\n            'timestamp' =&gt; date('Y-m-d H:i:s')\n        ]);\n    }\n\n    public function apiHello()\n    {\n        return $this-&gt;response-&gt;setJSON([\n            'message' =&gt; 'Hello World from CodeIgniter 4 API!',\n            'timestamp' =&gt; date('Y-m-d H:i:s'),\n            'framework' =&gt; 'CodeIgniter 4'\n        ]);\n    }\n\n    public function echo()\n    {\n        $request = service('request');\n        $data = $request-&gt;getJSON(true);\n\n        return $this-&gt;response-&gt;setJSON([\n            'echo' =&gt; 'You said: ' . ($data['message'] ?? 'No message provided'),\n            'timestamp' =&gt; date('Y-m-d H:i:s')\n        ]);\n    }\n\n    public function health()\n    {\n        return $this-&gt;response-&gt;setJSON([\n            'status' =&gt; 'healthy',\n            'framework' =&gt; 'CodeIgniter 4',\n            'php_version' =&gt; phpversion()\n        ]);\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/php/#appconfigroutesphp","title":"app/Config/Routes.php","text":"<pre><code>&lt;?php\n\nuse CodeIgniter\\Router\\RouteCollection;\n\n/**\n * @var RouteCollection $routes\n */\n$routes-&gt;get('/', 'Home::index');\n$routes-&gt;get('/api/hello', 'Home::apiHello');\n$routes-&gt;post('/api/echo', 'Home::echo');\n$routes-&gt;get('/health', 'Home::health');\n</code></pre>"},{"location":"docker/dockerfile/php/#appviewswelcome_messagephp","title":"app/Views/welcome_message.php","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Hello World CodeIgniter&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; text-align: center; background: #f8f9fa; }\n        .container { max-width: 800px; margin: 50px auto; padding: 20px; }\n        .card { background: white; border-radius: 8px; padding: 30px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n        .btn { background: #dc3545; color: white; padding: 10px 20px; text-decoration: none; border-radius: 4px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"card\"&gt;\n            &lt;h1&gt;&lt;?= $message ?&gt;&lt;/h1&gt;\n            &lt;p&gt;Welcome to your CodeIgniter 4 application&lt;/p&gt;\n            &lt;p&gt;Current time: &lt;?= $timestamp ?&gt;&lt;/p&gt;\n            &lt;p&gt;CodeIgniter Framework&lt;/p&gt;\n\n            &lt;div style=\"margin-top: 30px;\"&gt;\n                &lt;a href=\"/api/hello\" class=\"btn\"&gt;Test API&lt;/a&gt;\n                &lt;a href=\"/health\" class=\"btn\"&gt;Health Check&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerfile_4","title":"Dockerfile","text":"<pre><code>FROM php:8.3-apache\n\n# Install dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    libicu-dev \\\n    libzip-dev \\\n    unzip\n\n# Install PHP extensions\nRUN docker-php-ext-install intl zip pdo_mysql\n\n# Install Composer\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\n# Enable Apache rewrite module\nRUN a2enmod rewrite\n\nWORKDIR /var/www/html\n\n# Copy application\nCOPY . .\n\n# Install dependencies (if using Composer)\nRUN if [ -f composer.json ]; then composer install --optimize-autoloader --no-dev; fi\n\n# Set permissions\nRUN chown -R www-data:www-data /var/www/html\n\nEXPOSE 80\nCMD [\"apache2-foreground\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#6-wordpress-application","title":"6. WordPress Application","text":""},{"location":"docker/dockerfile/php/#wp-configphp","title":"wp-config.php","text":"<pre><code>&lt;?php\ndefine('DB_NAME', getenv('WORDPRESS_DB_NAME') ?: 'wordpress');\ndefine('DB_USER', getenv('WORDPRESS_DB_USER') ?: 'wordpress');\ndefine('DB_PASSWORD', getenv('WORDPRESS_DB_PASSWORD') ?: 'password');\ndefine('DB_HOST', getenv('WORDPRESS_DB_HOST') ?: 'mysql');\ndefine('DB_CHARSET', 'utf8');\ndefine('DB_COLLATE', '');\n\n// Authentication Unique Keys and Salts\ndefine('AUTH_KEY',         'your-auth-key-here');\ndefine('SECURE_AUTH_KEY',  'your-secure-auth-key-here');\ndefine('LOGGED_IN_KEY',    'your-logged-in-key-here');\ndefine('NONCE_KEY',        'your-nonce-key-here');\n\n$table_prefix = 'wp_';\ndefine('WP_DEBUG', false);\n\nif (!defined('ABSPATH')) {\n    define('ABSPATH', __DIR__ . '/');\n}\n\nrequire_once ABSPATH . 'wp-settings.php';\n?&gt;\n</code></pre>"},{"location":"docker/dockerfile/php/#themeshello-worldindexphp","title":"themes/hello-world/index.php","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html &lt;?php language_attributes(); ?&gt;&gt;\n&lt;head&gt;\n    &lt;meta charset=\"&lt;?php bloginfo('charset'); ?&gt;\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n    &lt;title&gt;Hello World WordPress&lt;/title&gt;\n    &lt;?php wp_head(); ?&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; text-align: center; background: #f8f9fa; margin: 0; padding: 50px; }\n        .container { max-width: 800px; margin: 0 auto; }\n        .card { background: white; border-radius: 8px; padding: 30px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body &lt;?php body_class(); ?&gt;&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"card\"&gt;\n            &lt;h1&gt;Hello World from WordPress!&lt;/h1&gt;\n            &lt;p&gt;Welcome to your WordPress site&lt;/p&gt;\n            &lt;p&gt;Site URL: &lt;?php echo home_url(); ?&gt;&lt;/p&gt;\n            &lt;p&gt;WordPress Version: &lt;?php echo get_bloginfo('version'); ?&gt;&lt;/p&gt;\n            &lt;p&gt;Current time: &lt;?php echo current_time('Y-m-d H:i:s'); ?&gt;&lt;/p&gt;\n\n            &lt;?php if (have_posts()) : ?&gt;\n                &lt;h2&gt;Recent Posts&lt;/h2&gt;\n                &lt;?php while (have_posts()) : the_post(); ?&gt;\n                    &lt;div style=\"margin: 20px 0; padding: 20px; border: 1px solid #ddd;\"&gt;\n                        &lt;h3&gt;&lt;a href=\"&lt;?php the_permalink(); ?&gt;\"&gt;&lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/h3&gt;\n                        &lt;p&gt;&lt;?php the_excerpt(); ?&gt;&lt;/p&gt;\n                    &lt;/div&gt;\n                &lt;?php endwhile; ?&gt;\n            &lt;?php endif; ?&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;?php wp_footer(); ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerfile_5","title":"Dockerfile","text":"<pre><code>FROM wordpress:6.4-php8.3-apache\n\n# Install additional PHP extensions if needed\nRUN docker-php-ext-install mysqli pdo_mysql\n\n# Copy custom theme\nCOPY themes/hello-world /var/www/html/wp-content/themes/hello-world\n\n# Copy custom wp-config if needed\nCOPY wp-config.php /var/www/html/\n\n# Set proper permissions\nRUN chown -R www-data:www-data /var/www/html\n\nEXPOSE 80\nCMD [\"apache2-foreground\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#7-api-with-slim-framework","title":"7. API with Slim Framework","text":""},{"location":"docker/dockerfile/php/#composerjson_2","title":"composer.json","text":"<pre><code>{\n  \"require\": {\n    \"slim/slim\": \"^4.0\",\n    \"slim/psr7\": \"^1.6\",\n    \"slim/http\": \"^1.3\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"App\\\\\": \"src/\"\n    }\n  }\n}\n</code></pre>"},{"location":"docker/dockerfile/php/#publicindexphp","title":"public/index.php","text":"<pre><code>&lt;?php\nrequire __DIR__ . '/../vendor/autoload.php';\n\nuse Slim\\Factory\\AppFactory;\nuse Psr\\Http\\Message\\ResponseInterface as Response;\nuse Psr\\Http\\Message\\ServerRequestInterface as Request;\n\n$app = AppFactory::create();\n\n// Add error middleware\n$app-&gt;addErrorMiddleware(true, true, true);\n\n// Routes\n$app-&gt;get('/', function (Request $request, Response $response) {\n    $data = [\n        'message' =&gt; 'Hello World from Slim Framework!',\n        'timestamp' =&gt; date('Y-m-d H:i:s'),\n        'framework' =&gt; 'Slim'\n    ];\n\n    $response-&gt;getBody()-&gt;write(json_encode($data));\n    return $response-&gt;withHeader('Content-Type', 'application/json');\n});\n\n$app-&gt;get('/api/hello', function (Request $request, Response $response) {\n    $data = [\n        'message' =&gt; 'Hello World from Slim API!',\n        'timestamp' =&gt; date('Y-m-d H:i:s'),\n        'framework' =&gt; 'Slim Framework'\n    ];\n\n    $response-&gt;getBody()-&gt;write(json_encode($data));\n    return $response-&gt;withHeader('Content-Type', 'application/json');\n});\n\n$app-&gt;post('/api/echo', function (Request $request, Response $response) {\n    $body = $request-&gt;getBody()-&gt;getContents();\n    $data = json_decode($body, true);\n\n    $responseData = [\n        'echo' =&gt; 'You said: ' . ($data['message'] ?? 'No message provided'),\n        'timestamp' =&gt; date('Y-m-d H:i:s')\n    ];\n\n    $response-&gt;getBody()-&gt;write(json_encode($responseData));\n    return $response-&gt;withHeader('Content-Type', 'application/json');\n});\n\n$app-&gt;get('/health', function (Request $request, Response $response) {\n    $data = [\n        'status' =&gt; 'healthy',\n        'framework' =&gt; 'Slim',\n        'php_version' =&gt; phpversion()\n    ];\n\n    $response-&gt;getBody()-&gt;write(json_encode($data));\n    return $response-&gt;withHeader('Content-Type', 'application/json');\n});\n\n$app-&gt;run();\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerfile_6","title":"Dockerfile","text":"<pre><code>FROM php:8.3-apache\n\n# Install Composer\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\n# Enable Apache rewrite module\nRUN a2enmod rewrite\n\n# Set document root\nENV APACHE_DOCUMENT_ROOT /var/www/html/public\nRUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\n\nWORKDIR /var/www/html\n\n# Copy application\nCOPY . .\n\n# Install dependencies\nRUN composer install --optimize-autoloader --no-dev\n\n# Set permissions\nRUN chown -R www-data:www-data /var/www/html\n\nEXPOSE 80\nCMD [\"apache2-foreground\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#8-cakephp-application","title":"8. CakePHP Application","text":""},{"location":"docker/dockerfile/php/#srccontrollerhellocontrollerphp_1","title":"src/Controller/HelloController.php","text":"<pre><code>&lt;?php\nnamespace App\\Controller;\n\nuse Cake\\Controller\\Controller;\n\nclass HelloController extends Controller\n{\n    public function initialize(): void\n    {\n        parent::initialize();\n        $this-&gt;loadComponent('RequestHandler');\n    }\n\n    public function index()\n    {\n        $this-&gt;set([\n            'message' =&gt; 'Hello World from CakePHP!',\n            'timestamp' =&gt; date('Y-m-d H:i:s')\n        ]);\n    }\n\n    public function apiHello()\n    {\n        $this-&gt;viewBuilder()-&gt;setClassName('Json');\n\n        $this-&gt;set([\n            'message' =&gt; 'Hello World from CakePHP API!',\n            'timestamp' =&gt; date('Y-m-d H:i:s'),\n            'framework' =&gt; 'CakePHP'\n        ]);\n        $this-&gt;viewBuilder()-&gt;setOption('serialize', ['message', 'timestamp', 'framework']);\n    }\n\n    public function echo()\n    {\n        $this-&gt;viewBuilder()-&gt;setClassName('Json');\n        $this-&gt;request-&gt;allowMethod(['post']);\n\n        $data = $this-&gt;request-&gt;getData();\n\n        $this-&gt;set([\n            'echo' =&gt; 'You said: ' . ($data['message'] ?? 'No message provided'),\n            'timestamp' =&gt; date('Y-m-d H:i:s')\n        ]);\n        $this-&gt;viewBuilder()-&gt;setOption('serialize', ['echo', 'timestamp']);\n    }\n\n    public function health()\n    {\n        $this-&gt;viewBuilder()-&gt;setClassName('Json');\n\n        $this-&gt;set([\n            'status' =&gt; 'healthy',\n            'framework' =&gt; 'CakePHP',\n            'php_version' =&gt; phpversion()\n        ]);\n        $this-&gt;viewBuilder()-&gt;setOption('serialize', ['status', 'framework', 'php_version']);\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/php/#templateshelloindexphp","title":"templates/Hello/index.php","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Hello World CakePHP&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; text-align: center; background: #f8f9fa; }\n        .container { max-width: 800px; margin: 50px auto; padding: 20px; }\n        .card { background: white; border-radius: 8px; padding: 30px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }\n        .btn { background: #dc3545; color: white; padding: 10px 20px; text-decoration: none; border-radius: 4px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;div class=\"card\"&gt;\n            &lt;h1&gt;&lt;?= h($message) ?&gt;&lt;/h1&gt;\n            &lt;p&gt;Welcome to your CakePHP application&lt;/p&gt;\n            &lt;p&gt;Current time: &lt;?= h($timestamp) ?&gt;&lt;/p&gt;\n            &lt;p&gt;CakePHP Framework&lt;/p&gt;\n\n            &lt;div style=\"margin-top: 30px;\"&gt;\n                &lt;a href=\"/hello/api-hello\" class=\"btn\"&gt;Test API&lt;/a&gt;\n                &lt;a href=\"/hello/health\" class=\"btn\"&gt;Health Check&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerfile_7","title":"Dockerfile","text":"<pre><code>FROM php:8.3-apache\n\n# Install dependencies\nRUN apt-get update &amp;&amp; apt-get install -y \\\n    libicu-dev \\\n    libzip-dev \\\n    unzip\n\n# Install PHP extensions\nRUN docker-php-ext-install intl zip pdo_mysql\n\n# Install Composer\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\n# Enable Apache rewrite module\nRUN a2enmod rewrite\n\nWORKDIR /var/www/html\n\n# Copy application\nCOPY . .\n\n# Install dependencies\nRUN composer install --optimize-autoloader --no-dev\n\n# Set permissions\nRUN chown -R www-data:www-data /var/www/html \\\n    &amp;&amp; chmod -R 755 /var/www/html/tmp \\\n    &amp;&amp; chmod -R 755 /var/www/html/logs\n\nEXPOSE 80\nCMD [\"apache2-foreground\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#9-pure-php-rest-api","title":"9. Pure PHP REST API","text":""},{"location":"docker/dockerfile/php/#publicindexphp_1","title":"public/index.php","text":"<pre><code>&lt;?php\nheader('Content-Type: application/json');\nheader('Access-Control-Allow-Origin: *');\nheader('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\nheader('Access-Control-Allow-Headers: Content-Type');\n\nclass SimpleAPI {\n    private $data = [\n        ['id' =&gt; 1, 'name' =&gt; 'Hello World User', 'email' =&gt; 'hello@world.com'],\n        ['id' =&gt; 2, 'name' =&gt; 'PHP User', 'email' =&gt; 'php@user.com']\n    ];\n\n    public function handleRequest() {\n        $method = $_SERVER['REQUEST_METHOD'];\n        $path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n        $path = trim($path, '/');\n\n        switch ($path) {\n            case '':\n                $this-&gt;home();\n                break;\n            case 'api/hello':\n                $this-&gt;hello();\n                break;\n            case 'api/users':\n                if ($method === 'GET') {\n                    $this-&gt;getUsers();\n                } elseif ($method === 'POST') {\n                    $this-&gt;createUser();\n                }\n                break;\n            case 'health':\n                $this-&gt;health();\n                break;\n            default:\n                $this-&gt;notFound();\n        }\n    }\n\n    private function home() {\n        echo json_encode([\n            'message' =&gt; 'Hello World from Pure PHP API!',\n            'timestamp' =&gt; date('Y-m-d H:i:s'),\n            'endpoints' =&gt; [\n                'GET /' =&gt; 'This message',\n                'GET /api/hello' =&gt; 'Hello endpoint',\n                'GET /api/users' =&gt; 'Get all users',\n                'POST /api/users' =&gt; 'Create user',\n                'GET /health' =&gt; 'Health check'\n            ]\n        ]);\n    }\n\n    private function hello() {\n        echo json_encode([\n            'message' =&gt; 'Hello World from PHP API!',\n            'timestamp' =&gt; date('Y-m-d H:i:s'),\n            'framework' =&gt; 'Pure PHP'\n        ]);\n    }\n\n    private function getUsers() {\n        echo json_encode([\n            'users' =&gt; $this-&gt;data,\n            'count' =&gt; count($this-&gt;data)\n        ]);\n    }\n\n    private function createUser() {\n        $input = json_decode(file_get_contents('php://input'), true);\n\n        $newUser = [\n            'id' =&gt; count($this-&gt;data) + 1,\n            'name' =&gt; $input['name'] ?? 'Unknown',\n            'email' =&gt; $input['email'] ?? 'unknown@email.com'\n        ];\n\n        $this-&gt;data[] = $newUser;\n\n        echo json_encode([\n            'message' =&gt; 'User created successfully',\n            'user' =&gt; $newUser\n        ]);\n    }\n\n    private function health() {\n        echo json_encode([\n            'status' =&gt; 'healthy',\n            'framework' =&gt; 'Pure PHP',\n            'php_version' =&gt; phpversion(),\n            'timestamp' =&gt; date('Y-m-d H:i:s')\n        ]);\n    }\n\n    private function notFound() {\n        http_response_code(404);\n        echo json_encode(['error' =&gt; 'Endpoint not found']);\n    }\n}\n\n$api = new SimpleAPI();\n$api-&gt;handleRequest();\n?&gt;\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerfile_8","title":"Dockerfile","text":"<pre><code>FROM php:8.3-apache\n\n# Enable Apache rewrite module\nRUN a2enmod rewrite\n\n# Set document root\nENV APACHE_DOCUMENT_ROOT /var/www/html/public\nRUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\n\nWORKDIR /var/www/html\n\n# Copy application\nCOPY . .\n\n# Set permissions\nRUN chown -R www-data:www-data /var/www/html\n\nEXPOSE 80\nCMD [\"apache2-foreground\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#docker-compose-examples","title":"Docker Compose Examples","text":""},{"location":"docker/dockerfile/php/#laravel-mysql-redis","title":"Laravel + MySQL + Redis","text":"<pre><code>version: \"3.8\"\nservices:\n  app:\n    build: ./laravel-app\n    ports:\n      - \"8080:80\"\n    environment:\n      - DB_CONNECTION=mysql\n      - DB_HOST=mysql\n      - DB_DATABASE=laravel\n      - DB_USERNAME=laravel\n      - DB_PASSWORD=password\n      - REDIS_HOST=redis\n    depends_on:\n      - mysql\n      - redis\n    volumes:\n      - ./laravel-app:/var/www/html\n\n  mysql:\n    image: mysql:8.0\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpassword\n      MYSQL_DATABASE: laravel\n      MYSQL_USER: laravel\n      MYSQL_PASSWORD: password\n    volumes:\n      - mysql_data:/var/lib/mysql\n\n  redis:\n    image: redis:alpine\n\nvolumes:\n  mysql_data:\n</code></pre>"},{"location":"docker/dockerfile/php/#wordpress-mysql","title":"WordPress + MySQL","text":"<pre><code>version: \"3.8\"\nservices:\n  wordpress:\n    build: ./wordpress\n    ports:\n      - \"8080:80\"\n    environment:\n      WORDPRESS_DB_HOST: mysql\n      WORDPRESS_DB_NAME: wordpress\n      WORDPRESS_DB_USER: wordpress\n      WORDPRESS_DB_PASSWORD: password\n    depends_on:\n      - mysql\n    volumes:\n      - wordpress_data:/var/www/html\n\n  mysql:\n    image: mysql:8.0\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpassword\n      MYSQL_DATABASE: wordpress\n      MYSQL_USER: wordpress\n      MYSQL_PASSWORD: password\n    volumes:\n      - mysql_data:/var/lib/mysql\n\nvolumes:\n  wordpress_data:\n  mysql_data:\n</code></pre>"},{"location":"docker/dockerfile/php/#multi-framework-setup","title":"Multi-Framework Setup","text":"<pre><code>version: \"3.8\"\nservices:\n  laravel:\n    build: ./laravel-app\n    ports:\n      - \"8081:80\"\n\n  symfony:\n    build: ./symfony-app\n    ports:\n      - \"8082:80\"\n\n  codeigniter:\n    build: ./codeigniter-app\n    ports:\n      - \"8083:80\"\n\n  slim-api:\n    build: ./slim-api\n    ports:\n      - \"8084:80\"\n\n  nginx:\n    image: nginx:alpine\n    ports:\n      - \"8080:80\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n    depends_on:\n      - laravel\n      - symfony\n      - codeigniter\n      - slim-api\n</code></pre>"},{"location":"docker/dockerfile/php/#production-optimizations","title":"Production Optimizations","text":""},{"location":"docker/dockerfile/php/#multi-stage-build","title":"Multi-stage Build","text":"<pre><code>FROM composer:2.6 AS composer\nWORKDIR /app\nCOPY composer.json composer.lock ./\nRUN composer install --optimize-autoloader --no-dev --no-scripts\n\nFROM php:8.3-fpm-alpine AS production\nRUN apk add --no-cache nginx supervisor\n\n# Install PHP extensions\nRUN docker-php-ext-install pdo_mysql opcache\n\n# Copy application\nWORKDIR /var/www/html\nCOPY . .\nCOPY --from=composer /app/vendor ./vendor\n\n# Optimize for production\nRUN chown -R www-data:www-data /var/www/html \\\n    &amp;&amp; chmod -R 755 /var/www/html\n\n# Configure PHP for production\nCOPY php.ini /usr/local/etc/php/conf.d/custom.ini\n\nEXPOSE 80\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n</code></pre>"},{"location":"docker/dockerfile/php/#dockerignore","title":".dockerignore","text":"<pre><code>.git\n.gitignore\nREADME.md\n.env\n.env.local\n.env.*.local\nnode_modules/\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n.DS_Store\nThumbs.db\nvendor/\nstorage/logs/*\nstorage/framework/cache/*\nstorage/framework/sessions/*\nstorage/framework/views/*\nbootstrap/cache/*\n</code></pre>"},{"location":"docker/dockerfile/php/#health-check","title":"Health Check","text":"<pre><code>FROM php:8.3-apache\nWORKDIR /var/www/html\nCOPY . .\nEXPOSE 80\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost/health || exit 1\nCMD [\"apache2-foreground\"]\n</code></pre> <p>T\u1ea5t c\u1ea3 c\u00e1c project PHP tr\u00ean \u0111\u1ec1u c\u00f3 th\u1ec3 build v\u00e0 ch\u1ea1y v\u1edbi Docker. M\u1ed7i project \u0111\u1ea1i di\u1ec7n cho m\u1ed9t pattern ph\u1ed5 bi\u1ebfn trong PHP development, t\u1eeb web frameworks \u0111\u1ebfn CMS v\u00e0 APIs.</p>"},{"location":"docker/dockerfile/python/","title":"Python Projects with Docker","text":""},{"location":"docker/dockerfile/python/#python-projects-with-docker","title":"Python Projects with Docker","text":"<p>T\u1ed5ng h\u1ee3p c\u00e1c lo\u1ea1i project Python ph\u1ed5 bi\u1ebfn v\u1edbi Dockerfile t\u01b0\u01a1ng \u1ee9ng.</p>"},{"location":"docker/dockerfile/python/#1-basic-python-application","title":"1. Basic Python Application","text":""},{"location":"docker/dockerfile/python/#requirementstxt","title":"requirements.txt","text":"<pre><code># No dependencies for basic app\n</code></pre>"},{"location":"docker/dockerfile/python/#apppy","title":"app.py","text":"<pre><code>#!/usr/bin/env python3\nprint(\"Hello World from Python!\")\n\nif __name__ == \"__main__\":\n    print(\"Basic Python application is running...\")\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nCMD [\"python\", \"app.py\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#2-flask-web-application","title":"2. Flask Web Application","text":""},{"location":"docker/dockerfile/python/#requirementstxt_1","title":"requirements.txt","text":"<pre><code>Flask==2.3.3\nWerkzeug==2.3.7\n</code></pre>"},{"location":"docker/dockerfile/python/#apppy_1","title":"app.py","text":"<pre><code>from flask import Flask, jsonify\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Hello World from Flask!'\n\n@app.route('/api/health')\ndef health_check():\n    return jsonify({'status': 'healthy', 'message': 'Flask app is running'})\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=False)\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_1","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 5000\nCMD [\"python\", \"app.py\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#3-django-web-application","title":"3. Django Web Application","text":""},{"location":"docker/dockerfile/python/#requirementstxt_2","title":"requirements.txt","text":"<pre><code>Django==4.2.7\npsycopg2-binary==2.9.7\ngunicorn==21.2.0\n</code></pre>"},{"location":"docker/dockerfile/python/#myprojectsettingspy","title":"myproject/settings.py","text":"<pre><code>import os\nfrom pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nSECRET_KEY = os.environ.get('SECRET_KEY', 'your-secret-key-here')\nDEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'\nALLOWED_HOSTS = ['*']\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'myapp',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'myproject.urls'\nWSGI_APPLICATION = 'myproject.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n</code></pre>"},{"location":"docker/dockerfile/python/#myappviewspy","title":"myapp/views.py","text":"<pre><code>from django.http import HttpResponse\nfrom django.shortcuts import render\n\ndef index(request):\n    return HttpResponse(\"Hello World from Django!\")\n</code></pre>"},{"location":"docker/dockerfile/python/#managepy","title":"manage.py","text":"<pre><code>#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == '__main__':\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_2","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nRUN python manage.py collectstatic --noinput\nEXPOSE 8000\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"myproject.wsgi:application\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#4-fastapi-application","title":"4. FastAPI Application","text":""},{"location":"docker/dockerfile/python/#requirementstxt_3","title":"requirements.txt","text":"<pre><code>fastapi==0.104.1\nuvicorn[standard]==0.24.0\npydantic==2.5.0\n</code></pre>"},{"location":"docker/dockerfile/python/#mainpy","title":"main.py","text":"<pre><code>from fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom typing import Dict\n\napp = FastAPI(title=\"Hello World API\", version=\"1.0.0\")\n\nclass Message(BaseModel):\n    message: str\n\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"Hello World from FastAPI!\"}\n\n@app.get(\"/api/health\")\nasync def health_check():\n    return {\"status\": \"healthy\", \"framework\": \"FastAPI\"}\n\n@app.post(\"/api/echo\")\nasync def echo_message(message: Message):\n    return {\"echo\": f\"You said: {message.message}\"}\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_3","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 8000\nCMD [\"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#5-streamlit-data-app","title":"5. Streamlit Data App","text":""},{"location":"docker/dockerfile/python/#requirementstxt_4","title":"requirements.txt","text":"<pre><code>streamlit==1.28.1\npandas==2.1.3\nnumpy==1.25.2\nplotly==5.17.0\n</code></pre>"},{"location":"docker/dockerfile/python/#apppy_2","title":"app.py","text":"<pre><code>import streamlit as st\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\n\nst.title(\"Hello World from Streamlit!\")\n\nst.write(\"Welcome to this simple Streamlit app\")\n\n# Create sample data\ndata = {\n    'x': np.random.randn(100),\n    'y': np.random.randn(100),\n    'category': np.random.choice(['A', 'B', 'C'], 100)\n}\ndf = pd.DataFrame(data)\n\nst.subheader(\"Sample Data\")\nst.dataframe(df.head())\n\nst.subheader(\"Interactive Plot\")\nfig = px.scatter(df, x='x', y='y', color='category', title=\"Sample Scatter Plot\")\nst.plotly_chart(fig)\n\nif st.button(\"Say Hello\"):\n    st.success(\"Hello World! \ud83c\udf89\")\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_4","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 8501\nHEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health\nCMD [\"streamlit\", \"run\", \"app.py\", \"--server.port=8501\", \"--server.address=0.0.0.0\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#6-jupyter-notebook-server","title":"6. Jupyter Notebook Server","text":""},{"location":"docker/dockerfile/python/#requirementstxt_5","title":"requirements.txt","text":"<pre><code>jupyter==1.0.0\nnotebook==7.0.6\nmatplotlib==3.8.2\nseaborn==0.13.0\nscikit-learn==1.3.2\n</code></pre>"},{"location":"docker/dockerfile/python/#notebookshello_worldipynb","title":"notebooks/hello_world.ipynb","text":"<pre><code>{\n  \"cells\": [\n    {\n      \"cell_type\": \"markdown\",\n      \"metadata\": {},\n      \"source\": [\"# Hello World from Jupyter Notebook\"]\n    },\n    {\n      \"cell_type\": \"code\",\n      \"execution_count\": null,\n      \"metadata\": {},\n      \"source\": [\n        \"print(\\\"Hello World from Jupyter!\\\")\\n\",\n        \"import matplotlib.pyplot as plt\\n\",\n        \"import numpy as np\\n\",\n        \"\\n\",\n        \"x = np.linspace(0, 10, 100)\\n\",\n        \"y = np.sin(x)\\n\",\n        \"\\n\",\n        \"plt.figure(figsize=(10, 6))\\n\",\n        \"plt.plot(x, y)\\n\",\n        \"plt.title('Hello World - Sine Wave')\\n\",\n        \"plt.show()\"\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"kernelspec\": {\n      \"display_name\": \"Python 3\",\n      \"language\": \"python\",\n      \"name\": \"python3\"\n    }\n  },\n  \"nbformat\": 4,\n  \"nbformat_minor\": 4\n}\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_5","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 8888\nCMD [\"jupyter\", \"notebook\", \"--ip=0.0.0.0\", \"--port=8888\", \"--no-browser\", \"--allow-root\", \"--NotebookApp.token=''\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#7-rest-api-with-flask-restful","title":"7. REST API with Flask-RESTful","text":""},{"location":"docker/dockerfile/python/#requirementstxt_6","title":"requirements.txt","text":"<pre><code>Flask==2.3.3\nFlask-RESTful==0.3.10\nFlask-SQLAlchemy==3.1.1\n</code></pre>"},{"location":"docker/dockerfile/python/#apppy_3","title":"app.py","text":"<pre><code>from flask import Flask\nfrom flask_restful import Api, Resource, reqparse\nfrom flask_sqlalchemy import SQLAlchemy\n\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///hello.db'\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\n\ndb = SQLAlchemy(app)\napi = Api(app)\n\nclass Message(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    content = db.Column(db.String(200), nullable=False)\n\nclass HelloWorld(Resource):\n    def get(self):\n        return {'message': 'Hello World from Flask-RESTful!'}\n\nclass MessageAPI(Resource):\n    def get(self):\n        messages = Message.query.all()\n        return {'messages': [{'id': m.id, 'content': m.content} for m in messages]}\n\n    def post(self):\n        parser = reqparse.RequestParser()\n        parser.add_argument('content', required=True)\n        args = parser.parse_args()\n\n        message = Message(content=args['content'])\n        db.session.add(message)\n        db.session.commit()\n\n        return {'message': 'Created successfully', 'id': message.id}, 201\n\napi.add_resource(HelloWorld, '/')\napi.add_resource(MessageAPI, '/api/messages')\n\nif __name__ == '__main__':\n    with app.app_context():\n        db.create_all()\n        # Add sample data\n        if not Message.query.first():\n            sample = Message(content=\"Hello World from Database!\")\n            db.session.add(sample)\n            db.session.commit()\n\n    app.run(host='0.0.0.0', port=5000, debug=False)\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_6","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 5000\nCMD [\"python\", \"app.py\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#8-machine-learning-api-with-scikit-learn","title":"8. Machine Learning API with scikit-learn","text":""},{"location":"docker/dockerfile/python/#requirementstxt_7","title":"requirements.txt","text":"<pre><code>Flask==2.3.3\nscikit-learn==1.3.2\npandas==2.1.3\nnumpy==1.25.2\njoblib==1.3.2\n</code></pre>"},{"location":"docker/dockerfile/python/#apppy_4","title":"app.py","text":"<pre><code>from flask import Flask, request, jsonify\nimport numpy as np\nimport pandas as pd\nfrom sklearn.datasets import make_classification\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nimport joblib\nimport os\n\napp = Flask(__name__)\n\n# Train a simple model if not exists\nMODEL_PATH = 'model.joblib'\n\ndef train_model():\n    X, y = make_classification(n_samples=1000, n_features=20, n_informative=10, random_state=42)\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n    model = RandomForestClassifier(n_estimators=100, random_state=42)\n    model.fit(X_train, y_train)\n\n    joblib.dump(model, MODEL_PATH)\n    return model\n\n# Load or train model\nif os.path.exists(MODEL_PATH):\n    model = joblib.load(MODEL_PATH)\nelse:\n    model = train_model()\n\n@app.route('/')\ndef hello():\n    return jsonify({'message': 'Hello World from ML API!'})\n\n@app.route('/predict', methods=['POST'])\ndef predict():\n    try:\n        data = request.get_json()\n        features = np.array(data['features']).reshape(1, -1)\n        prediction = model.predict(features)[0]\n        probability = model.predict_proba(features)[0].max()\n\n        return jsonify({\n            'prediction': int(prediction),\n            'probability': float(probability),\n            'message': 'Prediction successful!'\n        })\n    except Exception as e:\n        return jsonify({'error': str(e)}), 400\n\n@app.route('/health')\ndef health():\n    return jsonify({'status': 'healthy', 'model_loaded': MODEL_PATH in os.listdir('.')})\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=False)\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_7","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 5000\nCMD [\"python\", \"app.py\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#9-celery-worker-with-redis","title":"9. Celery Worker with Redis","text":""},{"location":"docker/dockerfile/python/#requirementstxt_8","title":"requirements.txt","text":"<pre><code>celery[redis]==5.3.4\nredis==5.0.1\nFlask==2.3.3\n</code></pre>"},{"location":"docker/dockerfile/python/#taskspy","title":"tasks.py","text":"<pre><code>from celery import Celery\nimport time\n\napp = Celery('tasks', broker='redis://redis:6379/0')\n\n@app.task\ndef hello_world_task(name='World'):\n    time.sleep(2)  # Simulate work\n    return f'Hello {name} from Celery!'\n\n@app.task\ndef add_numbers(x, y):\n    time.sleep(1)\n    return x + y\n</code></pre>"},{"location":"docker/dockerfile/python/#flask_apppy","title":"flask_app.py","text":"<pre><code>from flask import Flask, jsonify, request\nfrom tasks import hello_world_task, add_numbers\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return jsonify({'message': 'Hello World from Flask + Celery!'})\n\n@app.route('/task/hello')\ndef start_hello_task():\n    name = request.args.get('name', 'World')\n    task = hello_world_task.delay(name)\n    return jsonify({'task_id': task.id, 'status': 'started'})\n\n@app.route('/task/add')\ndef start_add_task():\n    x = int(request.args.get('x', 0))\n    y = int(request.args.get('y', 0))\n    task = add_numbers.delay(x, y)\n    return jsonify({'task_id': task.id, 'status': 'started'})\n\n@app.route('/task/&lt;task_id&gt;')\ndef get_task_status(task_id):\n    task = hello_world_task.AsyncResult(task_id)\n    return jsonify({'task_id': task_id, 'status': task.status, 'result': task.result})\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=False)\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile-flask-app","title":"Dockerfile (Flask App)","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 5000\nCMD [\"python\", \"flask_app.py\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfileworker-celery-worker","title":"Dockerfile.worker (Celery Worker)","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nCMD [\"celery\", \"-A\", \"tasks\", \"worker\", \"--loglevel=info\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#10-graphql-api-with-graphene","title":"10. GraphQL API with Graphene","text":""},{"location":"docker/dockerfile/python/#requirementstxt_9","title":"requirements.txt","text":"<pre><code>graphene==3.3\nFlask==2.3.3\nFlask-GraphQL==2.0.1\n</code></pre>"},{"location":"docker/dockerfile/python/#apppy_5","title":"app.py","text":"<pre><code>from flask import Flask\nfrom flask_graphql import GraphQLView\nimport graphene\n\nclass Message(graphene.ObjectType):\n    id = graphene.Int()\n    content = graphene.String()\n\nclass Query(graphene.ObjectType):\n    hello = graphene.String(name=graphene.String(default_value=\"World\"))\n    messages = graphene.List(Message)\n\n    def resolve_hello(self, info, name):\n        return f'Hello {name} from GraphQL!'\n\n    def resolve_messages(self, info):\n        return [\n            Message(id=1, content=\"Hello World from GraphQL!\"),\n            Message(id=2, content=\"This is a sample message\")\n        ]\n\nclass CreateMessage(graphene.Mutation):\n    class Arguments:\n        content = graphene.String(required=True)\n\n    message = graphene.Field(Message)\n\n    def mutate(self, info, content):\n        message = Message(id=999, content=content)\n        return CreateMessage(message=message)\n\nclass Mutation(graphene.ObjectType):\n    create_message = CreateMessage.Field()\n\nschema = graphene.Schema(query=Query, mutation=Mutation)\n\napp = Flask(__name__)\napp.add_url_rule('/graphql', view_func=GraphQLView.as_view('graphql', schema=schema, graphiql=True))\n\n@app.route('/')\ndef index():\n    return 'Hello World! Visit /graphql for GraphQL interface'\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=False)\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_8","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 5000\nCMD [\"python\", \"app.py\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#11-discord-bot","title":"11. Discord Bot","text":""},{"location":"docker/dockerfile/python/#requirementstxt_10","title":"requirements.txt","text":"<pre><code>discord.py==2.3.2\npython-dotenv==1.0.0\n</code></pre>"},{"location":"docker/dockerfile/python/#botpy","title":"bot.py","text":"<pre><code>import discord\nfrom discord.ext import commands\nimport os\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\nintents = discord.Intents.default()\nintents.message_content = True\n\nbot = commands.Bot(command_prefix='!', intents=intents)\n\n@bot.event\nasync def on_ready():\n    print(f'{bot.user} has connected to Discord!')\n    print('Hello World from Discord Bot!')\n\n@bot.command(name='hello')\nasync def hello_command(ctx):\n    await ctx.send('Hello World from Discord Bot! \ud83e\udd16')\n\n@bot.command(name='ping')\nasync def ping_command(ctx):\n    latency = round(bot.latency * 1000)\n    await ctx.send(f'Pong! Latency: {latency}ms')\n\n@bot.event\nasync def on_message(message):\n    if message.author == bot.user:\n        return\n\n    if 'hello' in message.content.lower():\n        await message.channel.send('Hello World! \ud83d\udc4b')\n\n    await bot.process_commands(message)\n\nif __name__ == '__main__':\n    token = os.getenv('DISCORD_TOKEN', 'your-bot-token-here')\n    bot.run(token)\n</code></pre>"},{"location":"docker/dockerfile/python/#env","title":".env","text":"<pre><code>DISCORD_TOKEN=your-discord-bot-token-here\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_9","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nCMD [\"python\", \"bot.py\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#12-data-processing-with-pandas","title":"12. Data Processing with Pandas","text":""},{"location":"docker/dockerfile/python/#requirementstxt_11","title":"requirements.txt","text":"<pre><code>pandas==2.1.3\nnumpy==1.25.2\nrequests==2.31.0\nschedule==1.2.0\n</code></pre>"},{"location":"docker/dockerfile/python/#processorpy","title":"processor.py","text":"<pre><code>import pandas as pd\nimport numpy as np\nimport requests\nimport schedule\nimport time\nfrom datetime import datetime\n\ndef process_data():\n    print(\"Hello World from Data Processor!\")\n\n    # Create sample data\n    data = {\n        'timestamp': pd.date_range('2024-01-01', periods=100, freq='H'),\n        'value': np.random.randn(100),\n        'category': np.random.choice(['A', 'B', 'C'], 100)\n    }\n\n    df = pd.DataFrame(data)\n\n    # Process data\n    summary = df.groupby('category')['value'].agg(['mean', 'std', 'count'])\n    print(\"Data processing completed:\")\n    print(summary)\n\n    # Save results\n    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')\n    output_file = f'processed_data_{timestamp}.csv'\n    summary.to_csv(output_file)\n    print(f\"Results saved to {output_file}\")\n\ndef main():\n    print(\"Starting data processing service...\")\n\n    # Run immediately\n    process_data()\n\n    # Schedule to run every hour\n    schedule.every().hour.do(process_data)\n\n    while True:\n        schedule.run_pending()\n        time.sleep(60)\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerfile_10","title":"Dockerfile","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nCMD [\"python\", \"processor.py\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#docker-compose-examples","title":"Docker Compose Examples","text":""},{"location":"docker/dockerfile/python/#flask-redis-postgresql","title":"Flask + Redis + PostgreSQL","text":"<pre><code>version: \"3.8\"\nservices:\n  web:\n    build: ./flask-app\n    ports:\n      - \"5000:5000\"\n    environment:\n      - DATABASE_URL=postgresql://user:password@db:5432/myapp\n      - REDIS_URL=redis://redis:6379/0\n    depends_on:\n      - db\n      - redis\n\n  db:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_DB: myapp\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n  redis:\n    image: redis:alpine\n\nvolumes:\n  postgres_data:\n</code></pre>"},{"location":"docker/dockerfile/python/#fastapi-celery-redis","title":"FastAPI + Celery + Redis","text":"<pre><code>version: \"3.8\"\nservices:\n  api:\n    build: ./fastapi-app\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      - redis\n\n  worker:\n    build:\n      context: ./fastapi-app\n      dockerfile: Dockerfile.worker\n    depends_on:\n      - redis\n\n  redis:\n    image: redis:alpine\n    ports:\n      - \"6379:6379\"\n\n  flower:\n    image: mher/flower:0.9.7\n    command: flower --broker=redis://redis:6379/0 --port=5555\n    ports:\n      - \"5555:5555\"\n    depends_on:\n      - redis\n</code></pre>"},{"location":"docker/dockerfile/python/#ml-pipeline","title":"ML Pipeline","text":"<pre><code>version: \"3.8\"\nservices:\n  ml-api:\n    build: ./ml-app\n    ports:\n      - \"5000:5000\"\n    volumes:\n      - ./models:/app/models\n\n  data-processor:\n    build: ./data-processor\n    volumes:\n      - ./data:/app/data\n    environment:\n      - SCHEDULE_INTERVAL=3600\n\n  jupyter:\n    build: ./jupyter-app\n    ports:\n      - \"8888:8888\"\n    volumes:\n      - ./notebooks:/app/notebooks\n      - ./data:/app/data\n</code></pre>"},{"location":"docker/dockerfile/python/#production-optimizations","title":"Production Optimizations","text":""},{"location":"docker/dockerfile/python/#multi-stage-dockerfile","title":"Multi-stage Dockerfile","text":"<pre><code># Build stage\nFROM python:3.11-slim as builder\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --user --no-cache-dir -r requirements.txt\n\n# Production stage\nFROM python:3.11-slim\nWORKDIR /app\nCOPY --from=builder /root/.local /root/.local\nCOPY . .\nENV PATH=/root/.local/bin:$PATH\nUSER 1000\nCMD [\"python\", \"app.py\"]\n</code></pre>"},{"location":"docker/dockerfile/python/#dockerignore","title":".dockerignore","text":"<pre><code>__pycache__\n*.pyc\n*.pyo\n*.pyd\n.Python\nenv\npip-log.txt\npip-delete-this-directory.txt\n.tox\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.log\n.git\n.mypy_cache\n.pytest_cache\n.hypothesis\n.venv\n.env\n</code></pre>"},{"location":"docker/dockerfile/python/#health-check-example","title":"Health Check Example","text":"<pre><code>FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 5000\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost:5000/health || exit 1\nCMD [\"python\", \"app.py\"]\n</code></pre> <p>T\u1ea5t c\u1ea3 c\u00e1c project Python tr\u00ean \u0111\u1ec1u c\u00f3 th\u1ec3 build v\u00e0 ch\u1ea1y v\u1edbi Docker. M\u1ed7i project \u0111\u1ea1i di\u1ec7n cho m\u1ed9t pattern ph\u1ed5 bi\u1ebfn trong Python development, t\u1eeb web frameworks \u0111\u1ebfn machine learning v\u00e0 data processing.</p>"},{"location":"git/roadmap/","title":"Git Complete Learning Roadmap - Chi ti\u1ebft t\u1eebng topic","text":""},{"location":"git/roadmap/#git-complete-learning-roadmap-chi-tiet-tung-topic","title":"Git Complete Learning Roadmap - Chi ti\u1ebft t\u1eebng topic","text":""},{"location":"git/roadmap/#muc-tieu-master-git-tu-a-z-trong-6-8-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master Git t\u1eeb A-Z trong 6-8 th\u00e1ng","text":""},{"location":"git/roadmap/#giai-oan-1-git-foundation-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: GIT FOUNDATION (Th\u00e1ng 1-2)","text":""},{"location":"git/roadmap/#week-1-git-fundamentals","title":"Week 1: Git Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"What is Git version control system\"</li> <li>[ ] \"Git vs SVN vs Mercurial comparison\"</li> <li>[ ] \"Distributed version control vs centralized\"</li> <li>[ ] \"Git history and Linus Torvalds\"</li> <li>[ ] \"Why use version control system\"</li> <li>[ ] \"Git installation Windows MacOS Linux\"</li> <li>[ ] \"Git configuration first time setup\"</li> <li>[ ] \"Git working directory staging area repository\"</li> </ul> <p>Practical Setup:</p> <ul> <li>[ ] Install Git on your system</li> <li>[ ] Configure Git username and email</li> <li>[ ] Understand Git three-tree architecture</li> <li>[ ] Create first Git repository</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Installation verification\ngit --version\nwhich git\n\n# First-time configuration\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\ngit config --global init.defaultBranch main\ngit config --list\ngit config --global --edit\n</code></pre>"},{"location":"git/roadmap/#week-2-basic-git-operations","title":"Week 2: Basic Git Operations","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git init create new repository\"</li> <li>[ ] \"Git add staging area tutorial\"</li> <li>[ ] \"Git commit message best practices\"</li> <li>[ ] \"Git status check repository state\"</li> <li>[ ] \"Git log view commit history\"</li> <li>[ ] \"Git diff compare changes\"</li> <li>[ ] \"Git repository states working staging committed\"</li> <li>[ ] \"Git file lifecycle untracked modified staged\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Repository creation\ngit init\ngit init --bare\ngit clone &lt;url&gt;\n\n# Basic workflow\ngit status\ngit add filename\ngit add .\ngit add -A\ngit add -u\ngit commit -m \"commit message\"\ngit commit -am \"add and commit\"\n\n# Viewing changes\ngit diff\ngit diff --staged\ngit diff HEAD\ngit log\ngit log --oneline\ngit log --graph\n</code></pre>"},{"location":"git/roadmap/#week-3-working-with-files","title":"Week 3: Working with Files","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git add remove files from repository\"</li> <li>[ ] \"Git rm delete files from Git\"</li> <li>[ ] \"Git mv rename move files\"</li> <li>[ ] \"Git reset unstage files\"</li> <li>[ ] \"Git checkout discard changes\"</li> <li>[ ] \"Git restore new way to discard changes\"</li> <li>[ ] \"Gitignore file patterns tutorial\"</li> <li>[ ] \"Git clean remove untracked files\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># File operations\ngit rm filename\ngit rm --cached filename\ngit mv old_name new_name\n\n# Undoing changes\ngit reset HEAD filename\ngit checkout -- filename\ngit restore filename\ngit restore --staged filename\n\n# Cleaning\ngit clean -n\ngit clean -f\ngit clean -fd\n\n# Gitignore\necho \"*.log\" &gt;&gt; .gitignore\necho \"node_modules/\" &gt;&gt; .gitignore\ngit add .gitignore\n</code></pre>"},{"location":"git/roadmap/#week-4-commit-history-navigation","title":"Week 4: Commit History &amp; Navigation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git log advanced options formatting\"</li> <li>[ ] \"Git show display commit details\"</li> <li>[ ] \"Git reflog reference logs\"</li> <li>[ ] \"Git checkout navigate commit history\"</li> <li>[ ] \"Git HEAD pointer explanation\"</li> <li>[ ] \"Git detached HEAD state\"</li> <li>[ ] \"Git commit SHA hash explained\"</li> <li>[ ] \"Git relative commit references HEAD~1 HEAD^\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Viewing history\ngit log --pretty=format:\"%h %s\"\ngit log --graph --all\ngit log --author=\"name\"\ngit log --since=\"2 weeks ago\"\ngit log --grep=\"bug\"\ngit log filename\n\n# Navigation\ngit show HEAD\ngit show commit_hash\ngit checkout commit_hash\ngit checkout HEAD~1\ngit checkout HEAD^\ngit reflog\n</code></pre>"},{"location":"git/roadmap/#giai-oan-2-branching-merging-thang-3","title":"\ud83c\udf3f GIAI \u0110O\u1ea0N 2: BRANCHING &amp; MERGING (Th\u00e1ng 3)","text":""},{"location":"git/roadmap/#week-5-git-branching-basics","title":"Week 5: Git Branching Basics","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git branch create switch delete\"</li> <li>[ ] \"Git branching model workflow\"</li> <li>[ ] \"Git branch vs tag difference\"</li> <li>[ ] \"Git checkout vs switch command\"</li> <li>[ ] \"Git branch naming conventions\"</li> <li>[ ] \"Git local vs remote branches\"</li> <li>[ ] \"Git tracking branches upstream\"</li> <li>[ ] \"Git branch strategies GitFlow GitHub Flow\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Branch creation and switching\ngit branch\ngit branch new_branch\ngit checkout new_branch\ngit switch new_branch\ngit checkout -b feature_branch\ngit switch -c feature_branch\n\n# Branch management\ngit branch -v\ngit branch -a\ngit branch -r\ngit branch -d branch_name\ngit branch -D branch_name\ngit branch -m old_name new_name\n</code></pre>"},{"location":"git/roadmap/#week-6-merging-strategies","title":"Week 6: Merging Strategies","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git merge fast-forward vs three-way\"</li> <li>[ ] \"Git merge commit vs squash merge\"</li> <li>[ ] \"Git merge conflicts resolution\"</li> <li>[ ] \"Git rebase vs merge difference\"</li> <li>[ ] \"Git merge strategies recursive octopus\"</li> <li>[ ] \"Git merge tools configuration\"</li> <li>[ ] \"Git cherry-pick specific commits\"</li> <li>[ ] \"Git merge --no-ff preserve history\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Merging\ngit merge branch_name\ngit merge --no-ff branch_name\ngit merge --squash branch_name\n\n# Conflict resolution\ngit status (during conflict)\ngit add resolved_file\ngit commit (complete merge)\ngit merge --abort\n\n# Cherry-picking\ngit cherry-pick commit_hash\ngit cherry-pick -n commit_hash\n\n# Merge tools\ngit mergetool\ngit config --global merge.tool vimdiff\n</code></pre>"},{"location":"git/roadmap/#week-7-rebasing-mastery","title":"Week 7: Rebasing Mastery","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git rebase interactive tutorial\"</li> <li>[ ] \"Git rebase vs merge when to use\"</li> <li>[ ] \"Git rebase --onto advanced usage\"</li> <li>[ ] \"Git rebase conflicts resolution\"</li> <li>[ ] \"Git rebase --continue --skip --abort\"</li> <li>[ ] \"Git interactive rebase squash fixup\"</li> <li>[ ] \"Git rebase rewrite commit history\"</li> <li>[ ] \"Golden rule of rebasing public commits\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Basic rebase\ngit rebase master\ngit rebase --onto master server client\n\n# Interactive rebase\ngit rebase -i HEAD~3\ngit rebase -i commit_hash\n\n# Rebase operations\ngit rebase --continue\ngit rebase --skip\ngit rebase --abort\n\n# Rebase options in interactive mode\n# pick, reword, edit, squash, fixup, drop\n</code></pre>"},{"location":"git/roadmap/#week-8-advanced-history-manipulation","title":"Week 8: Advanced History Manipulation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git reset soft mixed hard difference\"</li> <li>[ ] \"Git revert vs reset vs checkout\"</li> <li>[ ] \"Git reflog recover lost commits\"</li> <li>[ ] \"Git filter-branch rewrite history\"</li> <li>[ ] \"Git BFG repo cleaner tool\"</li> <li>[ ] \"Git commit --amend modify last commit\"</li> <li>[ ] \"Git stash save work in progress\"</li> <li>[ ] \"Git bisect find bug-introducing commit\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Reset variations\ngit reset --soft HEAD~1\ngit reset --mixed HEAD~1\ngit reset --hard HEAD~1\n\n# Reverting\ngit revert commit_hash\ngit revert -n commit_hash\n\n# Stashing\ngit stash\ngit stash push -m \"message\"\ngit stash list\ngit stash apply\ngit stash pop\ngit stash drop\n\n# History rewriting\ngit commit --amend\ngit commit --amend --no-edit\ngit filter-branch --tree-filter 'rm -f password.txt' HEAD\n</code></pre>"},{"location":"git/roadmap/#giai-oan-3-remote-repositories-thang-4","title":"\ud83c\udf10 GIAI \u0110O\u1ea0N 3: REMOTE REPOSITORIES (Th\u00e1ng 4)","text":""},{"location":"git/roadmap/#week-9-remote-repositories-setup","title":"Week 9: Remote Repositories Setup","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git remote add origin push pull\"</li> <li>[ ] \"Git clone vs fork difference\"</li> <li>[ ] \"Git remote upstream downstream\"</li> <li>[ ] \"SSH keys for Git authentication\"</li> <li>[ ] \"HTTPS vs SSH Git authentication\"</li> <li>[ ] \"Git credential manager setup\"</li> <li>[ ] \"Git remote URL change update\"</li> <li>[ ] \"Multiple Git remotes management\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Remote management\ngit remote\ngit remote -v\ngit remote add origin &lt;url&gt;\ngit remote add upstream &lt;url&gt;\ngit remote set-url origin &lt;new_url&gt;\ngit remote remove origin\n\n# SSH setup\nssh-keygen -t rsa -b 4096 -C \"email@example.com\"\nssh-add ~/.ssh/id_rsa\nssh -T git@github.com\n\n# Credential setup\ngit config --global credential.helper cache\ngit config --global credential.helper store\n</code></pre>"},{"location":"git/roadmap/#week-10-push-pull-operations","title":"Week 10: Push &amp; Pull Operations","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git push pull fetch difference\"</li> <li>[ ] \"Git push force vs force-with-lease\"</li> <li>[ ] \"Git pull vs fetch and merge\"</li> <li>[ ] \"Git tracking branches setup\"</li> <li>[ ] \"Git push upstream set-upstream\"</li> <li>[ ] \"Git pull request workflow\"</li> <li>[ ] \"Git fetch all branches from remote\"</li> <li>[ ] \"Git push tags to remote repository\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Pushing\ngit push origin main\ngit push -u origin feature_branch\ngit push --all origin\ngit push --tags\ngit push --force-with-lease\n\n# Pulling and fetching\ngit fetch origin\ngit fetch --all\ngit pull origin main\ngit pull --rebase origin main\n\n# Tracking branches\ngit branch -u origin/main\ngit push --set-upstream origin feature_branch\ngit branch -vv\n</code></pre>"},{"location":"git/roadmap/#week-11-collaboration-workflows","title":"Week 11: Collaboration Workflows","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git workflow patterns comparison\"</li> <li>[ ] \"Centralized workflow Git\"</li> <li>[ ] \"Feature branch workflow\"</li> <li>[ ] \"Gitflow workflow branching model\"</li> <li>[ ] \"Forking workflow open source\"</li> <li>[ ] \"GitHub flow vs Git flow\"</li> <li>[ ] \"Git collaboration best practices\"</li> <li>[ ] \"Code review process with Git\"</li> </ul> <p>Workflow Patterns:</p> <pre><code># Feature Branch Workflow\ngit checkout -b feature/new-feature\n# ... make changes ...\ngit push -u origin feature/new-feature\n# ... create pull request ...\n\n# Gitflow commands (with git-flow extension)\ngit flow init\ngit flow feature start new-feature\ngit flow feature finish new-feature\ngit flow release start 1.0.0\ngit flow hotfix start critical-bug\n\n# Forking Workflow\ngit clone &lt;your-fork&gt;\ngit remote add upstream &lt;original-repo&gt;\ngit fetch upstream\ngit checkout -b feature-branch upstream/main\n</code></pre>"},{"location":"git/roadmap/#week-12-conflict-resolution-collaboration","title":"Week 12: Conflict Resolution &amp; Collaboration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git merge conflicts advanced resolution\"</li> <li>[ ] \"Git rebase conflicts during collaboration\"</li> <li>[ ] \"Git conflict resolution tools comparison\"</li> <li>[ ] \"Git merge vs rebase in team environment\"</li> <li>[ ] \"Git hooks for team collaboration\"</li> <li>[ ] \"Git attributes configuration\"</li> <li>[ ] \"Large file handling Git LFS\"</li> <li>[ ] \"Git submodules vs subtrees\"</li> </ul> <p>Advanced Conflict Resolution:</p> <pre><code># Merge conflict tools\ngit config --global merge.tool kdiff3\ngit config --global merge.tool vscode\ngit mergetool --tool=vimdiff\n\n# During conflicts\ngit status\ngit diff --ours filename\ngit diff --theirs filename\ngit checkout --ours filename\ngit checkout --theirs filename\n\n# Git LFS\ngit lfs install\ngit lfs track \"*.psd\"\ngit add .gitattributes\ngit add large_file.psd\ngit commit -m \"Add large file\"\n</code></pre>"},{"location":"git/roadmap/#giai-oan-4-advanced-git-techniques-thang-5-6","title":"\ud83d\udd27 GIAI \u0110O\u1ea0N 4: ADVANCED GIT TECHNIQUES (Th\u00e1ng 5-6)","text":""},{"location":"git/roadmap/#week-13-git-internals","title":"Week 13: Git Internals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git objects blob tree commit tag\"</li> <li>[ ] \"Git SHA-1 hash algorithm\"</li> <li>[ ] \"Git plumbing vs porcelain commands\"</li> <li>[ ] \"Git refs heads tags remotes\"</li> <li>[ ] \"Git packed objects and delta compression\"</li> <li>[ ] \"Git garbage collection and optimization\"</li> <li>[ ] \"Git repository structure .git folder\"</li> <li>[ ] \"Git index file format\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Plumbing commands\ngit cat-file -t &lt;hash&gt;\ngit cat-file -p &lt;hash&gt;\ngit ls-tree HEAD\ngit rev-parse HEAD\ngit symbolic-ref HEAD\n\n# Repository inspection\nfind .git/objects -type f\ngit count-objects -v\ngit fsck\ngit gc --aggressive\n\n# Low-level operations\ngit hash-object filename\ngit update-index --add filename\ngit write-tree\n</code></pre>"},{"location":"git/roadmap/#week-14-git-hooks-automation","title":"Week 14: Git Hooks &amp; Automation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git hooks tutorial pre-commit post-commit\"</li> <li>[ ] \"Client-side vs server-side Git hooks\"</li> <li>[ ] \"Git pre-push hook prevent bad commits\"</li> <li>[ ] \"Git commit-msg hook enforce standards\"</li> <li>[ ] \"Husky Git hooks for JavaScript projects\"</li> <li>[ ] \"Git hooks continuous integration\"</li> <li>[ ] \"Git hook scripts bash Python\"</li> <li>[ ] \"Git hooks security and validation\"</li> </ul> <p>Hook Examples:</p> <pre><code># Hook locations\nls .git/hooks/\n\n# Pre-commit hook example\n#!/bin/sh\n# .git/hooks/pre-commit\nnpm test\nif [ $? -ne 0 ]; then\n    echo \"Tests must pass before commit!\"\n    exit 1\nfi\n\n# Commit-msg hook\n#!/bin/sh\n# .git/hooks/commit-msg\ngrep -q \"^(feat|fix|docs|style|refactor|test|chore):\" \"$1\"\nif [ $? -ne 0 ]; then\n    echo \"Commit message must follow conventional commits format!\"\n    exit 1\nfi\n\n# Make hooks executable\nchmod +x .git/hooks/pre-commit\n</code></pre>"},{"location":"git/roadmap/#week-15-git-workflows-for-teams","title":"Week 15: Git Workflows for Teams","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git team workflows comparison\"</li> <li>[ ] \"Trunk-based development with Git\"</li> <li>[ ] \"Release management with Git tags\"</li> <li>[ ] \"Semantic versioning with Git\"</li> <li>[ ] \"Git monorepo vs multiple repositories\"</li> <li>[ ] \"Git strategies for microservices\"</li> <li>[ ] \"Git branching policies enforcement\"</li> <li>[ ] \"Code review best practices Git\"</li> </ul> <p>Team Workflow Commands:</p> <pre><code># Release management\ngit tag -a v1.0.0 -m \"Release version 1.0.0\"\ngit tag -l \"v*\"\ngit push origin --tags\ngit checkout v1.0.0\n\n# Semantic versioning\ngit describe --tags\ngit describe --tags --abbrev=0\n\n# Protected branch workflow\ngit checkout -b feature/JIRA-123\ngit push -u origin feature/JIRA-123\n# ... create pull request with required reviews ...\n\n# Squash merge workflow\ngit checkout main\ngit merge --squash feature/JIRA-123\ngit commit -m \"feat: add new feature (JIRA-123)\"\n</code></pre>"},{"location":"git/roadmap/#week-16-git-performance-optimization","title":"Week 16: Git Performance &amp; Optimization","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git large repository optimization\"</li> <li>[ ] \"Git shallow clone for CI/CD\"</li> <li>[ ] \"Git partial clone and sparse checkout\"</li> <li>[ ] \"Git LFS large file storage\"</li> <li>[ ] \"Git bundle for offline transfer\"</li> <li>[ ] \"Git maintenance and housekeeping\"</li> <li>[ ] \"Git alternates share objects\"</li> <li>[ ] \"Git worktree multiple working directories\"</li> </ul> <p>Performance Commands:</p> <pre><code># Shallow clones\ngit clone --depth 1 &lt;url&gt;\ngit clone --shallow-since=\"2 years ago\" &lt;url&gt;\n\n# Sparse checkout\ngit config core.sparseCheckout true\necho \"src/\" &gt; .git/info/sparse-checkout\ngit read-tree -m -u HEAD\n\n# Worktrees\ngit worktree add ../feature-branch feature-branch\ngit worktree list\ngit worktree remove ../feature-branch\n\n# Bundle operations\ngit bundle create repo.bundle HEAD main\ngit clone repo.bundle repo-copy\n</code></pre>"},{"location":"git/roadmap/#giai-oan-5-git-expertise-thang-7-8","title":"\ud83d\ude80 GIAI \u0110O\u1ea0N 5: GIT EXPERTISE (Th\u00e1ng 7-8)","text":""},{"location":"git/roadmap/#week-17-advanced-git-commands","title":"Week 17: Advanced Git Commands","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git blame annotate code changes\"</li> <li>[ ] \"Git grep search in repository history\"</li> <li>[ ] \"Git log advanced filtering options\"</li> <li>[ ] \"Git shortlog contributor statistics\"</li> <li>[ ] \"Git notes add metadata to commits\"</li> <li>[ ] \"Git archive create project snapshots\"</li> <li>[ ] \"Git describe version from tags\"</li> <li>[ ] \"Git bisect automated bug hunting\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Code investigation\ngit blame filename\ngit blame -L 10,20 filename\ngit annotate filename\n\n# Searching\ngit grep \"function_name\"\ngit grep -n \"TODO\"\ngit log -S \"search_term\" --oneline\ngit log --grep=\"bug\" --author=\"john\"\n\n# Statistics\ngit shortlog -s -n\ngit log --pretty=format:\"%an\" | sort | uniq -c | sort -nr\n\n# Automated debugging\ngit bisect start\ngit bisect bad HEAD\ngit bisect good v1.0\ngit bisect run test_script.sh\n</code></pre>"},{"location":"git/roadmap/#week-18-git-integration-tools","title":"Week 18: Git Integration &amp; Tools","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git IDE integration VSCode IntelliJ\"</li> <li>[ ] \"Git GUI tools comparison\"</li> <li>[ ] \"Git aliases and shortcuts\"</li> <li>[ ] \"Git and continuous integration\"</li> <li>[ ] \"Git with Docker containers\"</li> <li>[ ] \"Git server setup GitLab Gitea\"</li> <li>[ ] \"Git migration from SVN Perforce\"</li> <li>[ ] \"Git backup and disaster recovery\"</li> </ul> <p>Integration Setup:</p> <pre><code># Git aliases\ngit config --global alias.st status\ngit config --global alias.co checkout\ngit config --global alias.br branch\ngit config --global alias.ci commit\ngit config --global alias.unstage 'reset HEAD --'\ngit config --global alias.last 'log -1 HEAD'\ngit config --global alias.visual '!gitk'\n\n# Advanced aliases\ngit config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit\"\n\n# Git in CI/CD\n# .github/workflows/main.yml\ngit fetch --prune --unshallow\ngit describe --tags --exact-match 2&gt;/dev/null || git symbolic-ref -q --short HEAD\n</code></pre>"},{"location":"git/roadmap/#week-19-git-security-best-practices","title":"Week 19: Git Security &amp; Best Practices","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git security best practices\"</li> <li>[ ] \"Git commit signing GPG keys\"</li> <li>[ ] \"Git credential security management\"</li> <li>[ ] \"Git secrets detection prevention\"</li> <li>[ ] \"Git repository audit and compliance\"</li> <li>[ ] \"Git access control and permissions\"</li> <li>[ ] \"Git vulnerability assessment\"</li> <li>[ ] \"Git forensics and investigation\"</li> </ul> <p>Security Commands:</p> <pre><code># GPG signing\ngpg --gen-key\ngit config --global user.signingkey &lt;key-id&gt;\ngit config --global commit.gpgsign true\ngit commit -S -m \"signed commit\"\ngit log --show-signature\n\n# Credential security\ngit config --global credential.helper manager\ngit credential-manager-core configure\ngit-secrets --install\ngit-secrets --register-aws\n\n# Repository audit\ngit log --format=fuller\ngit log --all --full-history -- sensitive-file\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch sensitive-file' --prune-empty --tag-name-filter cat -- --all\n</code></pre>"},{"location":"git/roadmap/#week-20-git-mastery-projects","title":"Week 20: Git Mastery Projects","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git workflow automation scripts\"</li> <li>[ ] \"Git repository analysis tools\"</li> <li>[ ] \"Custom Git commands development\"</li> <li>[ ] \"Git extension development\"</li> <li>[ ] \"Git server administration\"</li> <li>[ ] \"Git migration strategies\"</li> <li>[ ] \"Git training and mentoring\"</li> <li>[ ] \"Git troubleshooting complex issues\"</li> </ul> <p>Master-level Projects:</p> <pre><code># Custom Git commands\n# Create script: git-feature\n#!/bin/bash\ngit checkout -b feature/$1\ngit push -u origin feature/$1\n\n# Make executable and add to PATH\nchmod +x git-feature\n# Now can use: git feature new-awesome-feature\n\n# Repository statistics script\n#!/bin/bash\necho \"Repository Statistics:\"\necho \"Total commits: $(git rev-list --all --count)\"\necho \"Contributors: $(git shortlog -s -n | wc -l)\"\necho \"Total files: $(git ls-files | wc -l)\"\necho \"Repository size: $(du -sh .git)\"\n</code></pre>"},{"location":"git/roadmap/#learning-resources-by-category","title":"\ud83d\udcda LEARNING RESOURCES BY CATEGORY","text":""},{"location":"git/roadmap/#video-courses","title":"\ud83c\udfa5 Video Courses","text":"<ul> <li>\"Git Complete: The Definitive Guide\" - Udemy</li> <li>\"Git Going Fast: One Hour Git Crash Course\" - Udemy</li> <li>\"Git and GitHub for Beginners - Crash Course\" - freeCodeCamp</li> <li>\"Advanced Git Tutorials\" - Atlassian</li> <li>\"Pro Git Concepts\" - Pluralsight</li> </ul>"},{"location":"git/roadmap/#books-to-read","title":"\ud83d\udcd6 Books to Read","text":"<ul> <li>\"Pro Git\" - Scott Chacon (Free online)</li> <li>\"Git Pocket Guide\" - Richard E. Silverman</li> <li>\"Version Control with Git\" - Jon Loeliger</li> <li>\"Git Internals\" - Scott Chacon</li> <li>\"Learn Version Control with Git\" - Tower</li> </ul>"},{"location":"git/roadmap/#practice-platforms","title":"\ud83d\udee0\ufe0f Practice Platforms","text":"<ul> <li>\"Learn Git Branching\" - Interactive visual tutorial</li> <li>\"Git-it Desktop App\" - Hands-on Git tutorial</li> <li>\"Katacoda Git Scenarios\" - Browser-based practice</li> <li>\"GitHub Learning Lab\" - Interactive courses</li> <li>\"Oh My Git!\" - Game to learn Git</li> </ul>"},{"location":"git/roadmap/#git-certifications-assessments","title":"\ud83c\udfc5 Git Certifications &amp; Assessments","text":"<ul> <li>GitHub Certified Developer</li> <li>Atlassian Git Skills Assessment</li> <li>GitLab Certified Git Associate</li> <li>Stack Overflow Developer Survey Git Section</li> </ul>"},{"location":"git/roadmap/#daily-practice-checklist","title":"\u2705 DAILY PRACTICE CHECKLIST","text":""},{"location":"git/roadmap/#morning-warm-up-15-mins","title":"Morning Warm-up (15 mins)","text":"<ul> <li>[ ] Practice 5 Git commands from memory</li> <li>[ ] Review Git status of current projects</li> <li>[ ] Read 1 Git tip or best practice</li> <li>[ ] Check Git configuration settings</li> </ul>"},{"location":"git/roadmap/#active-practice-30-45-mins","title":"Active Practice (30-45 mins)","text":"<ul> <li>[ ] Work on Git exercises from tutorial sites</li> <li>[ ] Practice advanced Git scenarios</li> <li>[ ] Experiment with new Git commands</li> <li>[ ] Contribute to open source projects</li> </ul>"},{"location":"git/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document new Git commands learned</li> <li>[ ] Review Git aliases and shortcuts</li> <li>[ ] Plan next day's Git learning topics</li> <li>[ ] Update personal Git cheat sheet</li> </ul>"},{"location":"git/roadmap/#git-mastery-milestones","title":"\ud83c\udfaf GIT MASTERY MILESTONES","text":""},{"location":"git/roadmap/#month-1-2-foundation","title":"Month 1-2: Foundation","text":"<ul> <li>[ ] Understand Git fundamentals</li> <li>[ ] Master basic Git workflow</li> <li>[ ] Comfortable with branching and merging</li> <li>[ ] Can resolve simple conflicts</li> </ul>"},{"location":"git/roadmap/#month-3-4-intermediate","title":"Month 3-4: Intermediate","text":"<ul> <li>[ ] Proficient with rebasing</li> <li>[ ] Understand remote repositories</li> <li>[ ] Can collaborate effectively</li> <li>[ ] Know multiple Git workflows</li> </ul>"},{"location":"git/roadmap/#month-5-6-advanced","title":"Month 5-6: Advanced","text":"<ul> <li>[ ] Understand Git internals</li> <li>[ ] Can write Git hooks</li> <li>[ ] Optimize Git performance</li> <li>[ ] Handle complex scenarios</li> </ul>"},{"location":"git/roadmap/#month-7-8-expert","title":"Month 7-8: Expert","text":"<ul> <li>[ ] Master all Git commands</li> <li>[ ] Can teach Git to others</li> <li>[ ] Automate Git workflows</li> <li>[ ] Contribute to Git ecosystem</li> </ul> <p>Git Mastery Philosophy: \"Version control is not just about code, it's about understanding the evolution of your project!\"</p>"},{"location":"git/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"git/roadmap/#day-1-setup-first-steps","title":"Day 1: Setup &amp; First Steps","text":"<ol> <li>Install Git and configure basic settings</li> <li>Create your first repository</li> <li>Make your first commits</li> <li>Connect to GitHub/GitLab</li> </ol>"},{"location":"git/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic Git tutorial</li> <li>[ ] Set up Git aliases for efficiency</li> <li>[ ] Join Git community forums</li> <li>[ ] Start using Git for personal projects</li> </ul>"},{"location":"git/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Master fundamental Git commands</li> <li>[ ] Complete first collaborative project</li> <li>[ ] Resolve first merge conflict</li> <li>[ ] Write first Git hook</li> </ul> <p>Remember: Git mastery comes from daily practice and real-world application. Break things in a safe environment to learn how to fix them!</p>"},{"location":"git/git-branch/00.git-branch-strategy/","title":"GIT BRANCH STRATEGY: CHI\u1ebeN L\u01af\u1ee2C QU\u1ea2N L\u00dd NH\u00c1NH HI\u1ec6U QU\u1ea2 CHO D\u1ef0 \u00c1N PH\u1ea6N M\u1ec0M","text":""},{"location":"git/git-branch/00.git-branch-strategy/#git-branch-strategy-chien-luoc-quan-ly-nhanh-hieu-qua-cho-du-an-phan-mem","title":"GIT BRANCH STRATEGY: CHI\u1ebeN L\u01af\u1ee2C QU\u1ea2N L\u00dd NH\u00c1NH HI\u1ec6U QU\u1ea2 CHO D\u1ef0 \u00c1N PH\u1ea6N M\u1ec0M","text":""},{"location":"git/git-branch/00.git-branch-strategy/#muc-luc","title":"M\u1ee5c l\u1ee5c","text":"<ol> <li>Gi\u1edbi thi\u1ec7u</li> <li>T\u1ea7m quan tr\u1ecdng c\u1ee7a chi\u1ebfn l\u01b0\u1ee3c qu\u1ea3n l\u00fd nh\u00e1nh</li> <li>C\u00e1c chi\u1ebfn l\u01b0\u1ee3c ph\u1ed5 bi\u1ebfn</li> <li>Git Flow</li> <li>GitHub Flow</li> <li>GitLab Flow</li> <li>Trunk Based Development</li> <li>One Flow</li> <li>Release Branching</li> <li>Forking Workflow</li> <li>So s\u00e1nh c\u00e1c chi\u1ebfn l\u01b0\u1ee3c</li> <li>Xu h\u01b0\u1edbng v\u00e0 DevOps</li> <li>C\u00e1ch ch\u1ecdn chi\u1ebfn l\u01b0\u1ee3c ph\u00f9 h\u1ee3p</li> <li>T\u1ed5ng k\u1ebft</li> </ol>"},{"location":"git/git-branch/00.git-branch-strategy/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m hi\u1ec7n \u0111\u1ea1i, Git \u0111\u00e3 tr\u1edf th\u00e0nh h\u1ec7 th\u1ed1ng qu\u1ea3n l\u00fd phi\u00ean b\u1ea3n ph\u1ed5 bi\u1ebfn nh\u1ea5t. Tuy nhi\u00ean, vi\u1ec7c qu\u1ea3n l\u00fd c\u00e1c nh\u00e1nh (branch) trong Git kh\u00f4ng ch\u1ec9 \u0111\u01a1n thu\u1ea7n l\u00e0 vi\u1ec7c t\u1ea1o v\u00e0 merge code. M\u1ed9t chi\u1ebfn l\u01b0\u1ee3c qu\u1ea3n l\u00fd nh\u00e1nh (Git Branch Strategy) h\u1ee3p l\u00fd l\u00e0 y\u1ebfu t\u1ed1 quan tr\u1ecdng gi\u00fap \u0111\u1ed9i ng\u0169 ph\u00e1t tri\u1ec3n l\u00e0m vi\u1ec7c hi\u1ec7u qu\u1ea3, \u0111\u1ea3m b\u1ea3o ch\u1ea5t l\u01b0\u1ee3ng code v\u00e0 t\u1ed1i \u01b0u quy tr\u00ecnh ph\u00e1t tri\u1ec3n s\u1ea3n ph\u1ea9m.</p> <p>B\u00e0i vi\u1ebft n\u00e0y s\u1ebd ph\u00e2n t\u00edch chi ti\u1ebft c\u00e1c chi\u1ebfn l\u01b0\u1ee3c qu\u1ea3n l\u00fd nh\u00e1nh Git ph\u1ed5 bi\u1ebfn, gi\u00fap b\u1ea1n hi\u1ec3u r\u00f5 nguy\u00ean l\u00fd ho\u1ea1t \u0111\u1ed9ng, \u01b0u nh\u01b0\u1ee3c \u0111i\u1ec3m v\u00e0 tr\u01b0\u1eddng h\u1ee3p \u00e1p d\u1ee5ng ph\u00f9 h\u1ee3p cho t\u1eebng chi\u1ebfn l\u01b0\u1ee3c.</p>"},{"location":"git/git-branch/00.git-branch-strategy/#tam-quan-trong-cua-chien-luoc-quan-ly-nhanh","title":"T\u1ea7m quan tr\u1ecdng c\u1ee7a chi\u1ebfn l\u01b0\u1ee3c qu\u1ea3n l\u00fd nh\u00e1nh","text":"<p>M\u1ed9t chi\u1ebfn l\u01b0\u1ee3c qu\u1ea3n l\u00fd nh\u00e1nh hi\u1ec7u qu\u1ea3 s\u1ebd mang l\u1ea1i nhi\u1ec1u l\u1ee3i \u00edch:</p> <ul> <li>Qu\u1ea3n l\u00fd phi\u00ean b\u1ea3n: Theo d\u00f5i l\u1ecbch s\u1eed c\u00e1c thay \u0111\u1ed5i, d\u1ec5 d\u00e0ng quay tr\u1edf l\u1ea1i c\u00e1c phi\u00ean b\u1ea3n tr\u01b0\u1edbc \u0111\u00f3</li> <li>L\u00e0m vi\u1ec7c song song: Cho ph\u00e9p nhi\u1ec1u ng\u01b0\u1eddi \u0111\u1ed3ng th\u1eddi ph\u00e1t tri\u1ec3n c\u00e1c t\u00ednh n\u0103ng kh\u00e1c nhau</li> <li>Qu\u1ea3n l\u00fd releases: Ki\u1ec3m so\u00e1t qu\u00e1 tr\u00ecnh ph\u00e1t h\u00e0nh ph\u1ea7n m\u1ec1m, \u0111\u1eb7c bi\u1ec7t v\u1edbi c\u00e1c h\u1ec7 th\u1ed1ng ph\u1ee9c t\u1ea1p</li> <li>Qu\u1ea3n l\u00fd ch\u1ea5t l\u01b0\u1ee3ng: Th\u00f4ng qua code review, testing tr\u00ean c\u00e1c nh\u00e1nh ri\u00eang bi\u1ec7t</li> <li>T\u00edch h\u1ee3p v\u1edbi CI/CD: N\u1ec1n t\u1ea3ng cho quy tr\u00ecnh t\u1ef1 \u0111\u1ed9ng h\u00f3a build, test v\u00e0 deploy</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#cac-chien-luoc-pho-bien","title":"C\u00e1c chi\u1ebfn l\u01b0\u1ee3c ph\u1ed5 bi\u1ebfn","text":""},{"location":"git/git-branch/00.git-branch-strategy/#1-git-flow","title":"1. Git Flow","text":"<p>Git Flow l\u00e0 m\u00f4 h\u00ecnh qu\u1ea3n l\u00fd nh\u00e1nh \u0111\u01b0\u1ee3c Vincent Driessen \u0111\u1ec1 xu\u1ea5t n\u0103m 2010, v\u1edbi c\u1ea5u tr\u00fac r\u00f5 r\u00e0ng cho t\u1eebng giai \u0111o\u1ea1n ph\u00e1t tri\u1ec3n.</p>"},{"location":"git/git-branch/00.git-branch-strategy/#cac-nhanh-chinh","title":"C\u00e1c nh\u00e1nh ch\u00ednh:","text":"<ul> <li><code>master</code>/<code>main</code>: Ch\u1ee9a code production, lu\u00f4n \u1ed5n \u0111\u1ecbnh</li> <li><code>develop</code>: Nh\u00e1nh ph\u00e1t tri\u1ec3n ch\u00ednh, t\u00edch h\u1ee3p c\u00e1c t\u00ednh n\u0103ng m\u1edbi</li> <li><code>feature/*</code>: C\u00e1c nh\u00e1nh t\u00ednh n\u0103ng, t\u00e1ch t\u1eeb <code>develop</code></li> <li><code>release/*</code>: Nh\u00e1nh chu\u1ea9n b\u1ecb ph\u00e1t h\u00e0nh, t\u1eeb <code>develop</code></li> <li><code>hotfix/*</code>: Nh\u00e1nh s\u1eeda l\u1ed7i kh\u1ea9n c\u1ea5p, t\u00e1ch t\u1eeb <code>master</code></li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#quy-trinh-lam-viec","title":"Quy tr\u00ecnh l\u00e0m vi\u1ec7c:","text":"<ol> <li>Ph\u00e1t tri\u1ec3n t\u00ednh n\u0103ng m\u1edbi tr\u00ean nh\u00e1nh <code>feature</code></li> <li>Merge nh\u00e1nh <code>feature</code> v\u00e0o <code>develop</code></li> <li>Khi \u0111\u1ee7 t\u00ednh n\u0103ng, t\u1ea1o nh\u00e1nh <code>release</code> t\u1eeb <code>develop</code></li> <li>Testing v\u00e0 s\u1eeda l\u1ed7i tr\u00ean nh\u00e1nh <code>release</code></li> <li>Merge nh\u00e1nh <code>release</code> v\u00e0o c\u1ea3 <code>master</code> v\u00e0 <code>develop</code></li> <li>N\u1ebfu production c\u00f3 l\u1ed7i, t\u1ea1o nh\u00e1nh <code>hotfix</code>, sau \u0111\u00f3 merge v\u00e0o c\u1ea3 <code>master</code> v\u00e0 <code>develop</code></li> </ol>"},{"location":"git/git-branch/00.git-branch-strategy/#uu-iem","title":"\u01afu \u0111i\u1ec3m:","text":"<ul> <li>C\u1ea5u tr\u00fac r\u00f5 r\u00e0ng, d\u1ec5 qu\u1ea3n l\u00fd c\u00e1c giai \u0111o\u1ea1n ph\u00e1t tri\u1ec3n</li> <li>Ph\u00f9 h\u1ee3p v\u1edbi d\u1ef1 \u00e1n c\u1ea7n ph\u00e1t h\u00e0nh theo l\u1ecbch, c\u00f3 version r\u00f5 r\u00e0ng</li> <li>Gi\u00fap qu\u1ea3n l\u00fd nhi\u1ec1u team l\u00e0m vi\u1ec7c song song</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#nhuoc-iem","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Ph\u1ee9c t\u1ea1p, nhi\u1ec1u nh\u00e1nh, kh\u00f3 cho ng\u01b0\u1eddi m\u1edbi</li> <li>Overhead khi t\u1ea1o v\u00e0 merge nhi\u1ec1u nh\u00e1nh</li> <li>Ch\u1eadm h\u01a1n c\u00e1c ph\u01b0\u01a1ng ph\u00e1p kh\u00e1c, kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi CI/CD</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#doanh-nghiep-su-dung","title":"Doanh nghi\u1ec7p s\u1eed d\u1ee5ng:","text":"<ul> <li>Atlassian, SAP, IBM</li> <li>C\u00e1c c\u00f4ng ty outsource l\u1edbn t\u1ea1i Vi\u1ec7t Nam</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#2-github-flow","title":"2. GitHub Flow","text":"<p>GitHub Flow l\u00e0 m\u00f4 h\u00ecnh \u0111\u01a1n gi\u1ea3n h\u00f3a, t\u1eadp trung v\u00e0o deployment li\u00ean t\u1ee5c, ph\u00f9 h\u1ee3p v\u1edbi ph\u00e1t tri\u1ec3n web v\u00e0 c\u00e1c \u1ee9ng d\u1ee5ng c\u1ea7n tri\u1ec3n khai nhanh.</p>"},{"location":"git/git-branch/00.git-branch-strategy/#quy-trinh-co-ban","title":"Quy tr\u00ecnh c\u01a1 b\u1ea3n:","text":"<ol> <li><code>main</code>/<code>master</code>: Lu\u00f4n ch\u1ee9a code \u1ed5n \u0111\u1ecbnh, c\u00f3 th\u1ec3 deploy b\u1ea5t k\u1ef3 l\u00fac n\u00e0o</li> <li>T\u1ea1o nh\u00e1nh m\u1edbi t\u1eeb <code>main</code> cho m\u1ed7i thay \u0111\u1ed5i (t\u00ednh n\u0103ng/bug)</li> <li>Commit th\u01b0\u1eddng xuy\u00ean tr\u00ean nh\u00e1nh</li> <li>T\u1ea1o Pull Request khi c\u1ea7n feedback ho\u1eb7c s\u1eb5n s\u00e0ng merge</li> <li>Review code, th\u1ea3o lu\u1eadn v\u00e0 s\u1eeda \u0111\u1ed5i</li> <li>Deploy v\u00e0 test nh\u00e1nh tr\u01b0\u1edbc khi merge (staging)</li> <li>Merge v\u00e0o <code>main</code> khi \u0111\u00e3 s\u1eb5n s\u00e0ng</li> </ol>"},{"location":"git/git-branch/00.git-branch-strategy/#uu-iem_1","title":"\u01afu \u0111i\u1ec3m:","text":"<ul> <li>\u0110\u01a1n gi\u1ea3n, d\u1ec5 h\u1ecdc, \u00edt quy t\u1eafc</li> <li>T\u00edch h\u1ee3p t\u1ed1t v\u1edbi CI/CD</li> <li>Th\u00fac \u0111\u1ea9y review code qua Pull Request</li> <li>Deploy th\u01b0\u1eddng xuy\u00ean</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#nhuoc-iem_1","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi nhi\u1ec1u phi\u00ean b\u1ea3n song song</li> <li>Kh\u00f3 qu\u1ea3n l\u00fd c\u00e1c b\u1ea3n release l\u1edbn</li> <li>Y\u00eau c\u1ea7u automated testing m\u1ea1nh</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#doanh-nghiep-su-dung_1","title":"Doanh nghi\u1ec7p s\u1eed d\u1ee5ng:","text":"<ul> <li>GitHub</li> <li>C\u00e1c startup c\u00f4ng ngh\u1ec7 t\u1ea1i Vi\u1ec7t Nam v\u00e0 th\u1ebf gi\u1edbi</li> <li>C\u00e1c c\u00f4ng ty web/mobile: Shopify, Netflix</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#3-gitlab-flow","title":"3. GitLab Flow","text":"<p>GitLab Flow l\u00e0 s\u1ef1 k\u1ebft h\u1ee3p gi\u1eefa Git Flow v\u00e0 GitHub Flow, h\u1ed7 tr\u1ee3 nhi\u1ec1u m\u00f4i tr\u01b0\u1eddng v\u00e0 quy tr\u00ecnh l\u00e0m vi\u1ec7c linh ho\u1ea1t.</p>"},{"location":"git/git-branch/00.git-branch-strategy/#cac-cach-trien-khai","title":"C\u00e1c c\u00e1ch tri\u1ec3n khai:","text":"<ol> <li>Environment Branches:</li> <li><code>main</code>/<code>master</code>: Code m\u1edbi nh\u1ea5t \u0111\u00e3 review</li> <li><code>pre-production</code>: M\u00f4i tr\u01b0\u1eddng staging/UAT</li> <li><code>production</code>: Code live</li> <li> <p>Quy t\u1eafc: Code ch\u1ec9 di chuy\u1ec3n t\u1eeb nh\u00e1nh th\u1ea5p l\u00ean cao</p> </li> <li> <p>Release Branches:</p> </li> <li>T\u1ea1o nh\u00e1nh release cho m\u1ed7i version</li> <li>Bug fixes \u0111i tr\u1ef1c ti\u1ebfp v\u00e0o nh\u00e1nh release</li> <li>Merge l\u1ea1i v\u00e0o <code>master</code> v\u00e0 <code>production</code></li> </ol>"},{"location":"git/git-branch/00.git-branch-strategy/#uu-iem_2","title":"\u01afu \u0111i\u1ec3m:","text":"<ul> <li>Linh ho\u1ea1t, th\u00edch \u1ee9ng v\u1edbi nhi\u1ec1u ki\u1ec3u d\u1ef1 \u00e1n</li> <li>Qu\u1ea3n l\u00fd nhi\u1ec1u m\u00f4i tr\u01b0\u1eddng d\u1ec5 d\u00e0ng</li> <li>D\u1ec5 k\u1ebft h\u1ee3p v\u1edbi CI/CD v\u00e0 feature flag</li> <li>Ph\u00f9 h\u1ee3p v\u1edbi DevOps</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#nhuoc-iem_2","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Ph\u1ee9c t\u1ea1p h\u01a1n GitHub Flow</li> <li>Y\u00eau c\u1ea7u team th\u1ed1ng nh\u1ea5t v\u00e0 hi\u1ec3u r\u00f5 workflow</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#doanh-nghiep-su-dung_2","title":"Doanh nghi\u1ec7p s\u1eed d\u1ee5ng:","text":"<ul> <li>GitLab</li> <li>C\u00e1c c\u00f4ng ty fintech, ng\u00e2n h\u00e0ng</li> <li>Doanh nghi\u1ec7p v\u1eeba v\u00e0 l\u1edbn v\u1edbi nhi\u1ec1u m\u00f4i tr\u01b0\u1eddng</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#4-trunk-based-development","title":"4. Trunk Based Development","text":"<p>Trunk Based Development t\u1eadp trung v\u00e0o m\u1ed9t nh\u00e1nh ch\u00ednh (trunk/main), v\u1edbi c\u00e1c nh\u00e1nh feature ng\u1eafn h\u1ea1n v\u00e0 t\u00edch h\u1ee3p li\u00ean t\u1ee5c.</p>"},{"location":"git/git-branch/00.git-branch-strategy/#quy-trinh-lam-viec_1","title":"Quy tr\u00ecnh l\u00e0m vi\u1ec7c:","text":"<ol> <li><code>main</code>/<code>trunk</code>: Nh\u00e1nh ch\u00ednh duy nh\u1ea5t</li> <li>Ph\u00e1t tri\u1ec3n nh\u00e1nh feature ng\u1eafn (1-2 ng\u00e0y), ho\u1eb7c l\u00e0m tr\u1ef1c ti\u1ebfp tr\u00ean main</li> <li>Merge li\u00ean t\u1ee5c (\u00edt nh\u1ea5t m\u1ed7i ng\u00e0y) v\u00e0o main</li> <li>S\u1eed d\u1ee5ng feature flags \u0111\u1ec3 b\u1eadt/t\u1eaft t\u00ednh n\u0103ng ch\u01b0a ho\u00e0n thi\u1ec7n</li> <li>CI/CD t\u1ef1 \u0111\u1ed9ng test v\u00e0 deploy m\u1ed7i commit</li> </ol>"},{"location":"git/git-branch/00.git-branch-strategy/#uu-iem_3","title":"\u01afu \u0111i\u1ec3m:","text":"<ul> <li>T\u00edch h\u1ee3p li\u00ean t\u1ee5c, ph\u00e1t hi\u1ec7n conflict s\u1edbm</li> <li>Gi\u1ea3m \"merge hell\" v\u00e0 \"integration debt\"</li> <li>Release li\u00ean t\u1ee5c, nhanh ch\u00f3ng</li> <li>Code m\u1edbi lu\u00f4n \u0111\u01b0\u1ee3c review s\u1edbm</li> <li>T\u1ed1i \u01b0u cho CI/CD</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#nhuoc-iem_3","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Y\u00eau c\u1ea7u automated testing m\u1ea1nh</li> <li>C\u1ea7n k\u1ef7 lu\u1eadt cao trong team</li> <li>Kh\u00f3 qu\u1ea3n l\u00fd nhi\u1ec1u phi\u00ean b\u1ea3n song song</li> <li>C\u1ea7n h\u1ea1 t\u1ea7ng CI/CD t\u1ed1t</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#doanh-nghiep-su-dung_3","title":"Doanh nghi\u1ec7p s\u1eed d\u1ee5ng:","text":"<ul> <li>Google, Facebook, Netflix</li> <li>C\u00e1c c\u00f4ng ty c\u00f4ng ngh\u1ec7 v\u1edbi t\u1ed1c \u0111\u1ed9 ph\u00e1t tri\u1ec3n nhanh</li> <li>C\u00e1c c\u00f4ng ty \u00e1p d\u1ee5ng DevOps tri\u1ec7t \u0111\u1ec3</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#5-one-flow","title":"5. One Flow","text":"<p>One Flow l\u00e0 s\u1ef1 \u0111\u01a1n gi\u1ea3n h\u00f3a c\u1ee7a Git Flow, t\u1eadp trung v\u00e0o m\u1ed9t nh\u00e1nh ch\u00ednh v\u1edbi qu\u1ea3n l\u00fd linh ho\u1ea1t.</p>"},{"location":"git/git-branch/00.git-branch-strategy/#nguyen-tac-co-ban","title":"Nguy\u00ean t\u1eafc c\u01a1 b\u1ea3n:","text":"<ol> <li><code>main</code>/<code>master</code>: Nh\u00e1nh duy nh\u1ea5t \u0111\u1ea1i di\u1ec7n tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i</li> <li>Feature branches: T\u00e1ch t\u1eeb main, ph\u00e1t tri\u1ec3n t\u00ednh n\u0103ng, merge tr\u1edf l\u1ea1i main</li> <li>Release branches: Ch\u1ec9 t\u1ea1o khi c\u1ea7n (kh\u00f4ng b\u1eaft bu\u1ed9c)</li> <li>Hotfix: T\u00e1ch t\u1eeb commit tag tr\u00ean main, sau \u0111\u00f3 merge l\u1ea1i</li> </ol>"},{"location":"git/git-branch/00.git-branch-strategy/#uu-iem_4","title":"\u01afu \u0111i\u1ec3m:","text":"<ul> <li>\u0110\u01a1n gi\u1ea3n h\u01a1n Git Flow nh\u01b0ng v\u1eabn c\u00f3 c\u1ea5u tr\u00fac r\u00f5 r\u00e0ng</li> <li>Linh ho\u1ea1t, d\u1ec5 \u0111i\u1ec1u ch\u1ec9nh theo nhu c\u1ea7u</li> <li>L\u1ecbch s\u1eed commit s\u1ea1ch v\u00e0 d\u1ec5 theo d\u00f5i</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#nhuoc-iem_4","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi d\u1ef1 \u00e1n c\u1ea7n nhi\u1ec1u m\u00f4i tr\u01b0\u1eddng ph\u1ee9c t\u1ea1p</li> <li>Y\u00eau c\u1ea7u team th\u1ed1ng nh\u1ea5t quy tr\u00ecnh</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#doanh-nghiep-su-dung_4","title":"Doanh nghi\u1ec7p s\u1eed d\u1ee5ng:","text":"<ul> <li>C\u00e1c c\u00f4ng ty ph\u1ea7n m\u1ec1m v\u1eeba v\u00e0 nh\u1ecf</li> <li>C\u00f4ng ty outsource v\u1edbi quy tr\u00ecnh \u0111\u01a1n gi\u1ea3n</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#6-release-branching","title":"6. Release Branching","text":"<p>Release Branching t\u1eadp trung v\u00e0o vi\u1ec7c duy tr\u00ec nhi\u1ec1u phi\u00ean b\u1ea3n song song, m\u1ed7i version ch\u00ednh c\u00f3 m\u1ed9t nh\u00e1nh ri\u00eang \u0111\u01b0\u1ee3c b\u1ea3o tr\u00ec \u0111\u1ed9c l\u1eadp.</p>"},{"location":"git/git-branch/00.git-branch-strategy/#quy-trinh-lam-viec_2","title":"Quy tr\u00ecnh l\u00e0m vi\u1ec7c:","text":"<ol> <li><code>main</code>/<code>master</code>: Ph\u00e1t tri\u1ec3n m\u1edbi nh\u1ea5t</li> <li><code>release/1.x</code>, <code>release/2.x</code>: Nh\u00e1nh cho t\u1eebng phi\u00ean b\u1ea3n l\u1edbn</li> <li>Bugfix: S\u1eeda l\u1ed7i tr\u00ean nh\u00e1nh release t\u01b0\u01a1ng \u1ee9ng</li> <li>Cherry-pick: \u00c1p d\u1ee5ng c\u00e1c s\u1eeda l\u1ed7i cho nhi\u1ec1u nh\u00e1nh n\u1ebfu c\u1ea7n</li> </ol>"},{"location":"git/git-branch/00.git-branch-strategy/#uu-iem_5","title":"\u01afu \u0111i\u1ec3m:","text":"<ul> <li>Duy tr\u00ec nhi\u1ec1u phi\u00ean b\u1ea3n song song hi\u1ec7u qu\u1ea3</li> <li>H\u1ed7 tr\u1ee3 t\u1ed1t cho s\u1ea3n ph\u1ea9m \u0111\u00e3 ph\u00e1t h\u00e0nh</li> <li>Kh\u00e1ch h\u00e0ng c\u00f3 th\u1ec3 ch\u1ecdn update version ho\u1eb7c gi\u1eef nguy\u00ean</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#nhuoc-iem_5","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Ph\u1ee9c t\u1ea1p khi qu\u1ea3n l\u00fd nhi\u1ec1u nh\u00e1nh</li> <li>\u0110\u1ed3ng b\u1ed9 s\u1eeda l\u1ed7i gi\u1eefa c\u00e1c nh\u00e1nh release l\u00e0 th\u00e1ch th\u1ee9c</li> <li>Overhead khi b\u1ea3o tr\u00ec nhi\u1ec1u version</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#doanh-nghiep-su-dung_5","title":"Doanh nghi\u1ec7p s\u1eed d\u1ee5ng:","text":"<ul> <li>Microsoft, Oracle</li> <li>C\u00e1c c\u00f4ng ty ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m B2B</li> <li>C\u00f4ng ty l\u00e0m ph\u1ea7n m\u1ec1m cho nhi\u1ec1u kh\u00e1ch h\u00e0ng v\u1edbi version ri\u00eang</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#7-forking-workflow","title":"7. Forking Workflow","text":"<p>Forking Workflow l\u00e0 ph\u01b0\u01a1ng ph\u00e1p ph\u00f9 h\u1ee3p v\u1edbi d\u1ef1 \u00e1n m\u1edf, nhi\u1ec1u ng\u01b0\u1eddi \u0111\u00f3ng g\u00f3p. M\u1ed7i ng\u01b0\u1eddi tham gia s\u1ebd fork to\u00e0n b\u1ed9 repository v\u1ec1 t\u00e0i kho\u1ea3n ri\u00eang.</p>"},{"location":"git/git-branch/00.git-branch-strategy/#quy-trinh-lam-viec_3","title":"Quy tr\u00ecnh l\u00e0m vi\u1ec7c:","text":"<ol> <li>Fork repository v\u1ec1 t\u00e0i kho\u1ea3n c\u00e1 nh\u00e2n</li> <li>Clone repo \u0111\u00e3 fork v\u1ec1 m\u00e1y local</li> <li>T\u1ea1o nh\u00e1nh cho t\u00ednh n\u0103ng/s\u1eeda l\u1ed7i</li> <li>Push nh\u00e1nh l\u00ean repo fork c\u00e1 nh\u00e2n</li> <li>T\u1ea1o Pull Request t\u1eeb repo fork v\u00e0o repo g\u1ed1c</li> <li>Review, th\u1ea3o lu\u1eadn, s\u1eeda \u0111\u1ed5i n\u1ebfu c\u1ea7n</li> <li>Merge v\u00e0o repo g\u1ed1c</li> </ol>"},{"location":"git/git-branch/00.git-branch-strategy/#uu-iem_6","title":"\u01afu \u0111i\u1ec3m:","text":"<ul> <li>An to\u00e0n: Ng\u01b0\u1eddi \u0111\u00f3ng g\u00f3p kh\u00f4ng c\u00f3 quy\u1ec1n push tr\u1ef1c ti\u1ebfp v\u00e0o repo ch\u00ednh</li> <li>Ph\u00e2n quy\u1ec1n r\u00f5 r\u00e0ng, d\u1ec5 qu\u1ea3n l\u00fd</li> <li>Ph\u00f9 h\u1ee3p v\u1edbi d\u1ef1 \u00e1n c\u00f3 nhi\u1ec1u ng\u01b0\u1eddi tham gia t\u1eeb b\u00ean ngo\u00e0i</li> <li>Th\u00fac \u0111\u1ea9y review code k\u1ef9 l\u01b0\u1ee1ng</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#nhuoc-iem_6","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Quy tr\u00ecnh d\u00e0i h\u01a1n cho team n\u1ed9i b\u1ed9</li> <li>\u0110\u1ed3ng b\u1ed9 h\u00f3a gi\u1eefa fork v\u00e0 repo g\u1ed1c \u0111\u00f2i h\u1ecfi th\u00eam c\u00f4ng vi\u1ec7c</li> <li>Kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi team nh\u1ecf l\u00e0m vi\u1ec7c th\u01b0\u1eddng xuy\u00ean</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#doanh-nghiep-su-dung_6","title":"Doanh nghi\u1ec7p s\u1eed d\u1ee5ng:","text":"<ul> <li>D\u1ef1 \u00e1n m\u00e3 ngu\u1ed3n m\u1edf: Linux, React, TensorFlow</li> <li>C\u1ed9ng \u0111\u1ed3ng ph\u00e1t tri\u1ec3n</li> <li>C\u00e1c c\u00f4ng ty v\u1edbi m\u00f4 h\u00ecnh Inner Source</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#so-sanh-cac-chien-luoc","title":"So s\u00e1nh c\u00e1c chi\u1ebfn l\u01b0\u1ee3c","text":"Chi\u1ebfn l\u01b0\u1ee3c \u0110\u1ed9 ph\u1ee9c t\u1ea1p Ph\u00f9 h\u1ee3p v\u1edbi CI/CD Nhi\u1ec1u phi\u00ean b\u1ea3n Quy m\u00f4 team T\u1ed1c \u0111\u1ed9 ph\u00e1t h\u00e0nh Git Flow Cao \u2605\u2605\u2606\u2606\u2606 \u2605\u2605\u2605\u2605\u2606 V\u1eeba-L\u1edbn \u0110\u1ecbnh k\u1ef3 GitHub Flow Th\u1ea5p \u2605\u2605\u2605\u2605\u2606 \u2605\u2606\u2606\u2606\u2606 Nh\u1ecf-V\u1eeba Li\u00ean t\u1ee5c GitLab Flow Trung b\u00ecnh \u2605\u2605\u2605\u2605\u2606 \u2605\u2605\u2605\u2606\u2606 V\u1eeba-L\u1edbn Theo m\u00f4i tr\u01b0\u1eddng Trunk Based Th\u1ea5p \u2605\u2605\u2605\u2605\u2605 \u2605\u2606\u2606\u2606\u2606 B\u1ea5t k\u1ef3 Li\u00ean t\u1ee5c One Flow Trung b\u00ecnh \u2605\u2605\u2605\u2606\u2606 \u2605\u2605\u2606\u2606\u2606 V\u1eeba Linh ho\u1ea1t Release Branching Cao \u2605\u2605\u2606\u2606\u2606 \u2605\u2605\u2605\u2605\u2605 L\u1edbn Theo phi\u00ean b\u1ea3n Forking Workflow Cao \u2605\u2605\u2605\u2606\u2606 \u2605\u2605\u2605\u2606\u2606 C\u1ed9ng \u0111\u1ed3ng Kh\u00f4ng th\u01b0\u1eddng xuy\u00ean"},{"location":"git/git-branch/00.git-branch-strategy/#xu-huong-va-devops","title":"Xu h\u01b0\u1edbng v\u00e0 DevOps","text":"<p>Trong m\u00f4i tr\u01b0\u1eddng DevOps hi\u1ec7n \u0111\u1ea1i, c\u00e1c chi\u1ebfn l\u01b0\u1ee3c qu\u1ea3n l\u00fd nh\u00e1nh \u0111ang ph\u00e1t tri\u1ec3n theo h\u01b0\u1edbng:</p> <ol> <li>\u0110\u01a1n gi\u1ea3n h\u00f3a: Nhi\u1ec1u t\u1ed5 ch\u1ee9c \u0111ang chuy\u1ec3n t\u1eeb Git Flow sang c\u00e1c m\u00f4 h\u00ecnh \u0111\u01a1n gi\u1ea3n h\u01a1n</li> <li>T\u00edch h\u1ee3p li\u00ean t\u1ee5c: Trunk Based Development ng\u00e0y c\u00e0ng ph\u1ed5 bi\u1ebfn</li> <li>Feature flags: T\u00e1ch bi\u1ec7t deployment v\u00e0 release t\u00ednh n\u0103ng</li> <li>Automated testing: Test t\u1ef1 \u0111\u1ed9ng tr\u1edf th\u00e0nh y\u00eau c\u1ea7u b\u1eaft bu\u1ed9c</li> <li>Deployment t\u1ef1 \u0111\u1ed9ng: CD pipelines ch\u1ea1y cho m\u1ed7i commit tr\u00ean nh\u00e1nh ch\u00ednh</li> </ol> <p>V\u1edbi DevOps, c\u00e1c chi\u1ebfn l\u01b0\u1ee3c t\u1ed1i \u01b0u nh\u1ea5t l\u00e0: - Trunk Based Development: T\u1ed1i \u01b0u nh\u1ea5t cho CI/CD - GitHub Flow: \u0110\u01a1n gi\u1ea3n, hi\u1ec7u qu\u1ea3 cho team nh\u1ecf v\u00e0 v\u1eeba - GitLab Flow: C\u00e2n b\u1eb1ng gi\u1eefa c\u1ea5u tr\u00fac v\u00e0 t\u1ef1 \u0111\u1ed9ng h\u00f3a</p>"},{"location":"git/git-branch/00.git-branch-strategy/#cach-chon-chien-luoc-phu-hop","title":"C\u00e1ch ch\u1ecdn chi\u1ebfn l\u01b0\u1ee3c ph\u00f9 h\u1ee3p","text":"<p>\u0110\u1ec3 ch\u1ecdn chi\u1ebfn l\u01b0\u1ee3c ph\u00f9 h\u1ee3p, c\u1ea7n xem x\u00e9t c\u00e1c y\u1ebfu t\u1ed1 sau:</p>"},{"location":"git/git-branch/00.git-branch-strategy/#1-quy-mo-va-phan-bo-team","title":"1. Quy m\u00f4 v\u00e0 ph\u00e2n b\u1ed1 team","text":"<ul> <li>Team nh\u1ecf, c\u00f9ng v\u1ecb tr\u00ed: GitHub Flow, Trunk Based</li> <li>Team l\u1edbn, ph\u00e2n t\u00e1n: GitLab Flow, Git Flow</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#2-chu-ky-phat-hanh","title":"2. Chu k\u1ef3 ph\u00e1t h\u00e0nh","text":"<ul> <li>Li\u00ean t\u1ee5c (nhi\u1ec1u l\u1ea7n/ng\u00e0y): Trunk Based, GitHub Flow</li> <li>Theo l\u1ecbch (tu\u1ea7n/th\u00e1ng): Git Flow, GitLab Flow</li> <li>Duy tr\u00ec nhi\u1ec1u phi\u00ean b\u1ea3n: Release Branching</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#3-loai-san-pham","title":"3. Lo\u1ea1i s\u1ea3n ph\u1ea9m","text":"<ul> <li>Web/Mobile app: GitHub Flow, Trunk Based</li> <li>Ph\u1ea7n m\u1ec1m doanh nghi\u1ec7p: Git Flow, GitLab Flow</li> <li>Open source: Forking Workflow</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#4-muc-o-ap-dung-devops","title":"4. M\u1ee9c \u0111\u1ed9 \u00e1p d\u1ee5ng DevOps","text":"<ul> <li>CI/CD ho\u00e0n ch\u1ec9nh: Trunk Based</li> <li>CI m\u1ea1nh, CD m\u1ed9t ph\u1ea7n: GitHub Flow, GitLab Flow</li> <li>Quy tr\u00ecnh truy\u1ec1n th\u1ed1ng: Git Flow</li> </ul>"},{"location":"git/git-branch/00.git-branch-strategy/#tong-ket","title":"T\u1ed5ng k\u1ebft","text":"<p>Kh\u00f4ng c\u00f3 chi\u1ebfn l\u01b0\u1ee3c qu\u1ea3n l\u00fd nh\u00e1nh n\u00e0o l\u00e0 ho\u00e0n h\u1ea3o cho m\u1ecdi d\u1ef1 \u00e1n. M\u1ed7i chi\u1ebfn l\u01b0\u1ee3c \u0111\u1ec1u c\u00f3 \u0111i\u1ec3m m\u1ea1nh v\u00e0 y\u1ebfu, ph\u00f9 h\u1ee3p v\u1edbi nh\u1eefng b\u1ed1i c\u1ea3nh kh\u00e1c nhau. Xu h\u01b0\u1edbng hi\u1ec7n nay l\u00e0 \u0111\u01a1n gi\u1ea3n h\u00f3a quy tr\u00ecnh, gi\u1ea3m th\u1eddi gian code n\u1eb1m tr\u00ean nh\u00e1nh ri\u00eang v\u00e0 t\u00edch h\u1ee3p th\u01b0\u1eddng xuy\u00ean v\u00e0o nh\u00e1nh ch\u00ednh.</p> <p>Vi\u1ec7c l\u1ef1a ch\u1ecdn chi\u1ebfn l\u01b0\u1ee3c ph\u00f9 h\u1ee3p ph\u1ee5 thu\u1ed9c v\u00e0o: - Quy m\u00f4 team v\u00e0 d\u1ef1 \u00e1n - Y\u00eau c\u1ea7u v\u1ec1 t\u1ea7n su\u1ea5t ph\u00e1t h\u00e0nh - M\u1ee9c \u0111\u1ed9 \u00e1p d\u1ee5ng CI/CD - V\u0103n h\u00f3a v\u00e0 k\u1ef7 lu\u1eadt c\u1ee7a team</p> <p>Tham kh\u1ea3o: - Atlassian: Git Workflow Options - GitHub: GitHub Flow - GitLab: Introduction to GitLab Flow - Trunk Based Development: trunkbaseddevelopment.com - GEEKFORGEEK</p>"},{"location":"git/git-branch/01.git-branch-enterprise/","title":"WORKFLOW THEO M\u00d4I TR\u01af\u1edcNG: DEV &gt; QA &gt; PPD &gt; PROD &gt; HOTFIX &gt; DR","text":""},{"location":"git/git-branch/01.git-branch-enterprise/#workflow-theo-moi-truong-dev-qa-ppd-prod-hotfix-dr","title":"WORKFLOW THEO M\u00d4I TR\u01af\u1edcNG: DEV &gt; QA &gt; PPD &gt; PROD &gt; HOTFIX &gt; DR","text":""},{"location":"git/git-branch/01.git-branch-enterprise/#ay-la-kieu-workflow-khac-biet-nhu-the-nao","title":"\u0110\u00e2y l\u00e0 ki\u1ec3u workflow kh\u00e1c bi\u1ec7t nh\u01b0 th\u1ebf n\u00e0o?","text":""},{"location":"git/git-branch/01.git-branch-enterprise/#1-ac-iem-khac-biet-chinh","title":"1. \u0110\u1eb7c \u0111i\u1ec3m kh\u00e1c bi\u1ec7t ch\u00ednh","text":"<p>Workflow n\u00e0y kh\u00e1c v\u1edbi c\u00e1c m\u00f4 h\u00ecnh ph\u1ed5 bi\u1ebfn nh\u01b0 Git Flow, GitHub Flow hay Trunk Based Development \u1edf nh\u1eefng \u0111i\u1ec3m sau:</p> <ul> <li>Nhi\u1ec1u m\u00f4i tr\u01b0\u1eddng trung gian h\u01a1n: Thay v\u00ec ch\u1ec9 c\u00f3 development v\u00e0 production, workflow n\u00e0y c\u00f3 t\u1edbi 4-6 m\u00f4i tr\u01b0\u1eddng</li> <li>Lu\u1ed3ng di chuy\u1ec3n code m\u1ed9t chi\u1ec1u: Code lu\u00f4n di chuy\u1ec3n theo th\u1ee9 t\u1ef1 nh\u1ea5t \u0111\u1ecbnh qua nhi\u1ec1u \"c\u1ed5ng ki\u1ec3m so\u00e1t\"</li> <li>T\u00e1ch bi\u1ec7t r\u00f5 r\u00e0ng gi\u1eefa c\u00e1c vai tr\u00f2: Developer, QA, SysAdmin, DevOps \u0111\u1ec1u c\u00f3 m\u00f4i tr\u01b0\u1eddng v\u00e0 tr\u00e1ch nhi\u1ec7m ri\u00eang</li> <li>H\u01b0\u1edbng \u0111\u1ebfn s\u1ef1 \u1ed5n \u0111\u1ecbnh v\u00e0 an to\u00e0n h\u01a1n l\u00e0 t\u1ed1c \u0111\u1ed9: \u01afu ti\u00ean ki\u1ec3m so\u00e1t r\u1ee7i ro v\u00e0 ch\u1ea5t l\u01b0\u1ee3ng</li> </ul>"},{"location":"git/git-branch/01.git-branch-enterprise/#2-giai-thich-tung-thanh-phan","title":"2. Gi\u1ea3i th\u00edch t\u1eebng th\u00e0nh ph\u1ea7n","text":"<ul> <li>DEV: M\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n, n\u01a1i developers l\u00e0m vi\u1ec7c v\u00e0 t\u00edch h\u1ee3p code</li> <li>QA: M\u00f4i tr\u01b0\u1eddng ki\u1ec3m th\u1eed, n\u01a1i QA team th\u1ef1c hi\u1ec7n test k\u1ef9 l\u01b0\u1ee1ng</li> <li>PPD (Pre-Production/Pre-Deployment): M\u00f4i tr\u01b0\u1eddng g\u1ea7n gi\u1ed1ng production, d\u00f9ng \u0111\u1ec3 ki\u1ec3m tra t\u00edch h\u1ee3p cu\u1ed1i c\u00f9ng</li> <li>PROD: M\u00f4i tr\u01b0\u1eddng s\u1ea3n xu\u1ea5t, ph\u1ee5c v\u1ee5 ng\u01b0\u1eddi d\u00f9ng th\u1eadt</li> <li>HOTFIX: Nh\u00e1nh \u0111\u1eb7c bi\u1ec7t \u0111\u1ec3 x\u1eed l\u00fd l\u1ed7i kh\u1ea9n c\u1ea5p tr\u00ean production</li> <li>DR (Disaster Recovery): M\u00f4i tr\u01b0\u1eddng d\u1ef1 ph\u00f2ng khi c\u00f3 s\u1ef1 c\u1ed1, \u0111\u1ea3m b\u1ea3o t\u00ednh li\u00ean t\u1ee5c c\u1ee7a d\u1ecbch v\u1ee5</li> </ul>"},{"location":"git/git-branch/01.git-branch-enterprise/#luong-lam-viec-ien-hinh","title":"Lu\u1ed3ng l\u00e0m vi\u1ec7c \u0111i\u1ec3n h\u00ecnh","text":"<pre><code>Feature Branch \u2192 DEV \u2192 QA \u2192 PPD \u2192 PROD\n                 \u2191                  \u2193\n                 \u2514\u2500\u2500\u2500\u2500 HOTFIX \u2190\u2500\u2500\u2500\u2500\u2500\u2518\n                                    \u2193\n                                   DR (sync)\n</code></pre> <ol> <li>Developer t\u1ea1o Feature Branch t\u1eeb DEV</li> <li>Sau khi ho\u00e0n th\u00e0nh, merge v\u00e0o DEV v\u00e0 deploy \u0111\u1ec3 team test n\u1ed9i b\u1ed9</li> <li>Khi \u1ed5n \u0111\u1ecbnh, deploy l\u00ean QA \u0111\u1ec3 QA team test k\u1ef9 l\u01b0\u1ee1ng</li> <li>Sau khi QA ch\u1ea5p nh\u1eadn, deploy l\u00ean PPD \u0111\u1ec3 UAT (User Acceptance Testing)</li> <li>Cu\u1ed1i c\u00f9ng, deploy l\u00ean PROD khi m\u1ecdi b\u00ean \u0111\u00e3 ch\u1ea5p thu\u1eadn</li> <li>HOTFIX \u0111\u01b0\u1ee3c t\u1ea1o tr\u1ef1c ti\u1ebfp t\u1eeb PROD khi c\u00f3 l\u1ed7i kh\u1ea9n c\u1ea5p, sau khi s\u1eeda s\u1ebd merge ng\u01b0\u1ee3c v\u1ec1 c\u00e1c m\u00f4i tr\u01b0\u1eddng kh\u00e1c</li> <li>DR \u0111\u01b0\u1ee3c \u0111\u1ed3ng b\u1ed9 v\u1edbi PROD \u0111\u1ec3 s\u1eb5n s\u00e0ng thay th\u1ebf khi c\u1ea7n</li> </ol>"},{"location":"git/git-branch/01.git-branch-enterprise/#to-chuc-nao-thuong-ap-dung-workflow-nay","title":"T\u1ed5 ch\u1ee9c n\u00e0o th\u01b0\u1eddng \u00e1p d\u1ee5ng workflow n\u00e0y?","text":"<ul> <li>Ng\u00e2n h\u00e0ng v\u00e0 t\u1ed5 ch\u1ee9c t\u00e0i ch\u00ednh: VCB, BIDV, TPBank</li> <li>B\u1ea3o hi\u1ec3m: B\u1ea3o Vi\u1ec7t, Manulife</li> <li>Ch\u00ednh ph\u1ee7 v\u00e0 c\u01a1 quan nh\u00e0 n\u01b0\u1edbc</li> <li>H\u1ec7 th\u1ed1ng y t\u1ebf</li> <li>C\u00e1c doanh nghi\u1ec7p l\u1edbn v\u1edbi y\u00eau c\u1ea7u compliance cao</li> </ul>"},{"location":"git/git-branch/01.git-branch-enterprise/#uu-iem-cua-workflow-nay","title":"\u01afu \u0111i\u1ec3m c\u1ee7a workflow n\u00e0y","text":"<ul> <li>An to\u00e0n cao: Nhi\u1ec1u l\u1edbp ki\u1ec3m tra tr\u01b0\u1edbc khi l\u00ean production</li> <li>Ph\u00f9 h\u1ee3p v\u1edbi quy tr\u00ecnh approval ph\u1ee9c t\u1ea1p: Nhi\u1ec1u stakeholder ph\u1ea3i duy\u1ec7t tr\u01b0\u1edbc khi release</li> <li>Ki\u1ec3m so\u00e1t ch\u1ea5t l\u01b0\u1ee3ng t\u1ed1t: Ph\u00e1t hi\u1ec7n l\u1ed7i s\u1edbm \u1edf m\u00f4i tr\u01b0\u1eddng th\u1ea5p</li> <li>\u0110\u00e1p \u1ee9ng quy \u0111\u1ecbnh tu\u00e2n th\u1ee7: Audit trail r\u00f5 r\u00e0ng, ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c ti\u00eau chu\u1ea9n nh\u01b0 SOX, PCI-DSS</li> </ul>"},{"location":"git/git-branch/01.git-branch-enterprise/#nhuoc-iem-cua-workflow-nay","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a workflow n\u00e0y","text":"<ul> <li>Ch\u1eadm: Th\u1eddi gian t\u1eeb khi ph\u00e1t tri\u1ec3n \u0111\u1ebfn khi ra production c\u00f3 th\u1ec3 k\u00e9o d\u00e0i</li> <li>Ph\u1ee9c t\u1ea1p: Nhi\u1ec1u m\u00f4i tr\u01b0\u1eddng, nhi\u1ec1u quy tr\u00ecnh c\u1ea7n theo d\u00f5i</li> <li>Chi ph\u00ed cao: Duy tr\u00ec nhi\u1ec1u m\u00f4i tr\u01b0\u1eddng \u0111\u00f2i h\u1ecfi nhi\u1ec1u t\u00e0i nguy\u00ean</li> <li>Kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi agile/fast delivery: Kh\u00f3 \u00e1p d\u1ee5ng cho startup ho\u1eb7c s\u1ea3n ph\u1ea9m c\u1ea7n ph\u00e1t tri\u1ec3n nhanh</li> </ul> <p>n\u00f3 ch\u1ec9 ph\u00f9 h\u1ee3p v\u1edbi nh\u1eefng t\u1ed5 ch\u1ee9c c\u00f3 y\u00eau c\u1ea7u ki\u1ec3m so\u00e1t ch\u1eb7t ch\u1ebd v\u00e0 \u01b0u ti\u00ean \u0111\u1ed9 an to\u00e0n, \u1ed5n \u0111\u1ecbnh h\u01a1n l\u00e0 t\u1ed1c \u0111\u1ed9 ph\u00e1t h\u00e0nh.</p>"},{"location":"git/git-branch/02.github-RBAC/","title":"02.github RBAC","text":"<p>  chi ti\u1ebft v\u1ec1 RBAC (Role-Based Access Control) trong GitHub, GitLab v\u00e0 Jenkins \u2013 ba n\u1ec1n t\u1ea3ng DevOps ph\u1ed5 bi\u1ebfn nh\u1ea5t hi\u1ec7n nay:</p>"},{"location":"git/git-branch/02.github-RBAC/#1-rbac-la-gi","title":"1. RBAC l\u00e0 g\u00ec?","text":"<ul> <li>RBAC (Role-Based Access Control) l\u00e0 m\u00f4 h\u00ecnh ph\u00e2n quy\u1ec1n truy c\u1eadp d\u1ef1a tr\u00ean vai tr\u00f2. Ng\u01b0\u1eddi d\u00f9ng \u0111\u01b0\u1ee3c g\u00e1n v\u00e0o c\u00e1c vai tr\u00f2 (role), m\u1ed7i vai tr\u00f2 c\u00f3 quy\u1ec1n (permission) c\u1ee5 th\u1ec3 v\u1edbi h\u1ec7 th\u1ed1ng ho\u1eb7c t\u00e0i nguy\u00ean.</li> <li>Gi\u00fap ki\u1ec3m so\u00e1t, b\u1ea3o m\u1eadt, v\u00e0 tu\u00e2n th\u1ee7 quy tr\u00ecnh trong doanh nghi\u1ec7p.</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#2-rbac-trong-github","title":"2. RBAC trong GitHub","text":""},{"location":"git/git-branch/02.github-RBAC/#a-cac-cap-o-phan-quyen","title":"a. C\u00e1c c\u1ea5p \u0111\u1ed9 ph\u00e2n quy\u1ec1n","text":"<p>Tr\u00ean repository (repo): - Read: Xem code, clone repo, m\u1edf issue. - Triage: (M\u1edbi) \u0110\u01b0\u1ee3c ph\u00e9p g\u1eafn label, close/reopen issue, manage pull request m\u00e0 kh\u00f4ng c\u1ea7n quy\u1ec1n ghi code. - Write: Read + push/pull code, merge pull request, t\u1ea1o branch. - Maintain: Write + qu\u1ea3n l\u00fd settings, th\u00eam/x\u00f3a labels, manage repo settings (kh\u00f4ng x\u00f3a repo). - Admin: Full quy\u1ec1n, thay \u0111\u1ed5i t\u1ea5t c\u1ea3 settings, x\u00f3a repo, manage team, ph\u00e2n quy\u1ec1n cho ng\u01b0\u1eddi kh\u00e1c.</p> <p>Tr\u00ean organization: - Member: Quy\u1ec1n c\u01a1 b\u1ea3n, truy c\u1eadp repo \u0111\u01b0\u1ee3c chia s\u1ebb. - Owner: To\u00e0n quy\u1ec1n v\u1edbi org, qu\u1ea3n l\u00fd team, billing, security, repo, members. - Team Maintainer: Qu\u1ea3n l\u00fd team nh\u1ecf trong org.</p>"},{"location":"git/git-branch/02.github-RBAC/#b-cach-hoat-ong","title":"b. C\u00e1ch ho\u1ea1t \u0111\u1ed9ng","text":"<ul> <li>Ph\u00e2n quy\u1ec1n theo t\u1eebng repo ho\u1eb7c to\u00e0n b\u1ed9 organization</li> <li>C\u00f3 th\u1ec3 m\u1eddi user v\u00e0o t\u1eebng repo ho\u1eb7c g\u00e1n v\u00e0o team</li> <li>Team c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u00e1n role ri\u00eang cho t\u1eebng repo</li> <li>Qu\u1ea3n l\u00fd b\u1eb1ng UI ho\u1eb7c qua API</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#c-vi-du","title":"c. V\u00ed d\u1ee5","text":"<ul> <li>Developer ch\u1ec9 c\u1ea7n quy\u1ec1n Write \u0111\u1ec3 push code.</li> <li>Team QA g\u00e1n quy\u1ec1n Triage \u0111\u1ec3 qu\u1ea3n l\u00fd issue, pull request m\u00e0 kh\u00f4ng \u0111\u01b0\u1ee3c push code.</li> <li>DevOps ho\u1eb7c Admin gi\u1eef quy\u1ec1n Maintain/Admin \u0111\u1ec3 qu\u1ea3n l\u00fd settings, secrets, branch protection.</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#3-rbac-trong-gitlab","title":"3. RBAC trong GitLab","text":""},{"location":"git/git-branch/02.github-RBAC/#a-cac-muc-quyen-role-mac-inh","title":"a. C\u00e1c m\u1ee9c quy\u1ec1n (Role) m\u1eb7c \u0111\u1ecbnh","text":"<ul> <li>Guest: Ch\u1ec9 xem, comment issue/merge request.</li> <li>Reporter: Xem code, clone, xem pipeline/job log.</li> <li>Developer: Push code, merge request, trigger pipeline.</li> <li>Maintainer: Qu\u1ea3n l\u00fd repo settings, merge code, qu\u1ea3n l\u00fd branch/tag/protected branch.</li> <li>Owner: To\u00e0n quy\u1ec1n v\u1edbi group/project (ch\u1ec9 c\u00f3 \u1edf group, kh\u00f4ng c\u00f3 \u1edf project).</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#b-cach-hoat-ong_1","title":"b. C\u00e1ch ho\u1ea1t \u0111\u1ed9ng","text":"<ul> <li>G\u00e1n vai tr\u00f2 cho user \u1edf m\u1ee9c Group ho\u1eb7c Project.</li> <li>C\u00f3 th\u1ec3 qu\u1ea3n l\u00fd ph\u00e2n quy\u1ec1n chi ti\u1ebft cho t\u1eebng branch (protected branch).</li> <li>C\u00f3 th\u1ec3 k\u1ebft h\u1ee3p v\u1edbi SSO, LDAP, SCIM \u0111\u1ec3 ki\u1ec3m so\u00e1t user n\u1ed9i b\u1ed9 doanh nghi\u1ec7p.</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#c-vi-du_1","title":"c. V\u00ed d\u1ee5","text":"<ul> <li>Developer ch\u1ec9 c\u1ea7n quy\u1ec1n Developer \u0111\u1ec3 ph\u00e1t tri\u1ec3n b\u00ecnh th\u01b0\u1eddng.</li> <li>Tr\u01b0\u1edfng nh\u00f3m/leader c\u1ea7n quy\u1ec1n Maintainer \u0111\u1ec3 review, merge code, qu\u1ea3n l\u00fd branch.</li> <li>Owner d\u00f9ng cho admin h\u1ec7 th\u1ed1ng, qu\u1ea3n l\u00fd billing, c\u1ea5u h\u00ecnh CI/CD shared runner, b\u1ea3o m\u1eadt.</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#4-rbac-trong-jenkins","title":"4. RBAC trong Jenkins","text":""},{"location":"git/git-branch/02.github-RBAC/#a-plugin-pho-bien-role-strategy-plugin","title":"a. Plugin ph\u1ed5 bi\u1ebfn: Role Strategy Plugin","text":"<ul> <li>Jenkins m\u1eb7c \u0111\u1ecbnh ch\u1ec9 c\u00f3 qu\u1ea3n tr\u1ecb vi\u00ean (admin). N\u1ebfu mu\u1ed1n RBAC, ph\u1ea3i c\u00e0i plugin Role Strategy.</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#b-cac-loai-role","title":"b. C\u00e1c lo\u1ea1i role","text":"<ul> <li>Global roles: \u00c1p d\u1ee5ng cho to\u00e0n b\u1ed9 Jenkins (admin, read, build, v.v.)</li> <li>Project roles: \u00c1p d\u1ee5ng cho t\u1eebng job/project c\u1ee5 th\u1ec3 (v\u00ed d\u1ee5, ch\u1ec9 \u0111\u01b0\u1ee3c build ho\u1eb7c xem log c\u1ee7a m\u1ed9t job nh\u1ea5t \u0111\u1ecbnh)</li> <li>Agent roles: Qu\u1ea3n l\u00fd quy\u1ec1n v\u1edbi t\u1eebng agent/slave node.</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#c-cach-hoat-ong","title":"c. C\u00e1ch ho\u1ea1t \u0111\u1ed9ng","text":"<ul> <li>T\u1ea1o role (v\u00ed d\u1ee5: <code>developer</code>, <code>qa</code>, <code>viewer</code>)</li> <li>G\u00e1n quy\u1ec1n cho role (build, configure, read\u2026)</li> <li>G\u00e1n user/group v\u00e0o role \u0111\u00f3</li> <li>C\u00f3 th\u1ec3 t\u00edch h\u1ee3p LDAP/Active Directory \u0111\u1ec3 t\u1ef1 \u0111\u1ed9ng ph\u00e2n quy\u1ec1n</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#d-vi-du","title":"d. V\u00ed d\u1ee5","text":"<ul> <li>Developer ch\u1ec9 c\u00f3 quy\u1ec1n build job, xem log, kh\u00f4ng \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh pipeline.</li> <li>QA ch\u1ec9 c\u00f3 quy\u1ec1n \u0111\u1ecdc log ho\u1eb7c trigger test jobs.</li> <li>Admin c\u00f3 full quy\u1ec1n, c\u1ea5u h\u00ecnh Jenkins, c\u00e0i plugin, x\u00f3a job.</li> </ul>"},{"location":"git/git-branch/02.github-RBAC/#5-so-sanh-ngan-gon","title":"5. So s\u00e1nh ng\u1eafn g\u1ecdn","text":"N\u1ec1n t\u1ea3ng Ph\u00e2n quy\u1ec1n repo/project Ph\u00e2n quy\u1ec1n nh\u00f3m/org Ph\u00e2n quy\u1ec1n chi ti\u1ebft (branch/job) T\u00edch h\u1ee3p LDAP/SSO Granular RBAC GitHub C\u00f3 C\u00f3 C\u00f3 (branch protection, secrets) C\u00f3 Trung b\u00ecnh GitLab C\u00f3 C\u00f3 C\u00f3 (protected branch, pipeline) C\u00f3 Cao Jenkins C\u00f3 (plugin) C\u00f3 (plugin) C\u00f3 (job, agent) C\u00f3 (plugin) R\u1ea5t cao"},{"location":"git/git-branch/02.github-RBAC/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<ul> <li>RBAC gi\u00fap ki\u1ec3m so\u00e1t b\u1ea3o m\u1eadt, ph\u00e2n chia tr\u00e1ch nhi\u1ec7m r\u00f5 r\u00e0ng, ph\u00f9 h\u1ee3p v\u1edbi doanh nghi\u1ec7p v\u00e0 team l\u1edbn.</li> <li>GitLab v\u00e0 Jenkins c\u00f3 kh\u1ea3 n\u0103ng t\u00f9y bi\u1ebfn RBAC s\u00e2u h\u01a1n GitHub, ph\u00f9 h\u1ee3p cho DevOps chuy\u00ean nghi\u1ec7p ho\u1eb7c l\u0129nh v\u1ef1c nh\u1ea1y c\u1ea3m.</li> <li>GitHub l\u1ea1i \u0111\u01a1n gi\u1ea3n, d\u1ec5 d\u00f9ng, ph\u00f9 h\u1ee3p team nh\u1ecf/v\u1eeba ho\u1eb7c open source.</li> </ul> <p>Mu\u1ed1n xem v\u00ed d\u1ee5 c\u1ea5u h\u00ecnh RBAC th\u1ef1c t\u1ebf tr\u00ean n\u1ec1n t\u1ea3ng n\u00e0o? H\u00e3y h\u1ecfi th\u00eam nh\u00e9!</p>"},{"location":"iac/roadmap/","title":"Infrastructure as Code Complete Learning Roadmap","text":""},{"location":"iac/roadmap/#infrastructure-as-code-complete-learning-roadmap","title":"Infrastructure as Code Complete Learning Roadmap","text":""},{"location":"iac/roadmap/#muc-tieu-master-infrastructure-as-code-trong-10-12-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master Infrastructure as Code trong 10-12 th\u00e1ng","text":""},{"location":"iac/roadmap/#giai-oan-1-iac-foundation-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: IAC FOUNDATION (Th\u00e1ng 1-2)","text":""},{"location":"iac/roadmap/#week-1-infrastructure-as-code-fundamentals","title":"Week 1: Infrastructure as Code Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"What is Infrastructure as Code IaC\"</li> <li>[ ] \"IaC benefits vs traditional infrastructure\"</li> <li>[ ] \"Declarative vs imperative infrastructure\"</li> <li>[ ] \"IaC tools comparison Terraform Ansible CloudFormation\"</li> <li>[ ] \"Infrastructure automation best practices\"</li> <li>[ ] \"Configuration management vs infrastructure provisioning\"</li> <li>[ ] \"Immutable infrastructure principles\"</li> <li>[ ] \"Infrastructure drift detection prevention\"</li> </ul> <p>Core Concepts:</p> <ul> <li>[ ] Infrastructure versioning</li> <li>[ ] Repeatability and consistency</li> <li>[ ] Disaster recovery automation</li> <li>[ ] Infrastructure testing</li> <li>[ ] Configuration drift management</li> </ul>"},{"location":"iac/roadmap/#week-2-cloud-fundamentals-for-iac","title":"Week 2: Cloud Fundamentals for IaC","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"AWS services overview for IaC\"</li> <li>[ ] \"Azure services for infrastructure automation\"</li> <li>[ ] \"Google Cloud Platform IaC services\"</li> <li>[ ] \"Multi-cloud infrastructure management\"</li> <li>[ ] \"Cloud provider APIs and SDKs\"</li> <li>[ ] \"Cloud resource naming conventions\"</li> <li>[ ] \"Cloud tagging strategies\"</li> <li>[ ] \"Cloud cost optimization with IaC\"</li> </ul> <p>Cloud Provider Setup:</p> <pre><code># AWS CLI setup\naws configure\naws sts get-caller-identity\n\n# Azure CLI setup\naz login\naz account show\n\n# GCP CLI setup\ngcloud auth login\ngcloud config set project PROJECT_ID\n</code></pre>"},{"location":"iac/roadmap/#week-3-version-control-for-infrastructure","title":"Week 3: Version Control for Infrastructure","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git workflow for infrastructure code\"</li> <li>[ ] \"Infrastructure code repository structure\"</li> <li>[ ] \"Branching strategies for IaC\"</li> <li>[ ] \"Code review process for infrastructure\"</li> <li>[ ] \"Gitignore patterns for IaC tools\"</li> <li>[ ] \"Infrastructure documentation standards\"</li> <li>[ ] \"Secrets management in IaC repositories\"</li> <li>[ ] \"Infrastructure change management\"</li> </ul> <p>Repository Structure:</p> <pre><code>infrastructure/\n\u251c\u2500\u2500 environments/\n\u2502   \u251c\u2500\u2500 dev/\n\u2502   \u251c\u2500\u2500 staging/\n\u2502   \u2514\u2500\u2500 prod/\n\u251c\u2500\u2500 modules/\n\u251c\u2500\u2500 policies/\n\u251c\u2500\u2500 scripts/\n\u2514\u2500\u2500 docs/\n</code></pre>"},{"location":"iac/roadmap/#week-4-iac-testing-validation","title":"Week 4: IaC Testing &amp; Validation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure testing strategies\"</li> <li>[ ] \"Terraform testing tools Terratest\"</li> <li>[ ] \"Ansible testing with Molecule\"</li> <li>[ ] \"CloudFormation testing and validation\"</li> <li>[ ] \"Infrastructure compliance testing\"</li> <li>[ ] \"Security testing for IaC\"</li> <li>[ ] \"Performance testing infrastructure\"</li> <li>[ ] \"Infrastructure smoke testing\"</li> </ul>"},{"location":"iac/roadmap/#giai-oan-2-terraform-mastery-thang-3-5","title":"\ud83c\udfd7\ufe0f GIAI \u0110O\u1ea0N 2: TERRAFORM MASTERY (Th\u00e1ng 3-5)","text":""},{"location":"iac/roadmap/#week-5-terraform-fundamentals","title":"Week 5: Terraform Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform installation and setup\"</li> <li>[ ] \"Terraform HCL syntax basics\"</li> <li>[ ] \"Terraform providers and resources\"</li> <li>[ ] \"Terraform state management\"</li> <li>[ ] \"Terraform plan apply destroy workflow\"</li> <li>[ ] \"Terraform variables and outputs\"</li> <li>[ ] \"Terraform data sources\"</li> <li>[ ] \"Terraform workspace management\"</li> </ul> <p>Basic Terraform Commands:</p> <pre><code># Terraform basics\nterraform init\nterraform plan\nterraform apply\nterraform destroy\nterraform show\nterraform state list\nterraform state show\nterraform workspace list\n</code></pre> <p>First Terraform Configuration:</p> <pre><code># main.tf\nterraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~&gt; 5.0\"\n    }\n  }\n}\n\nprovider \"aws\" {\n  region = var.aws_region\n}\n\nresource \"aws_instance\" \"web\" {\n  ami           = var.ami_id\n  instance_type = var.instance_type\n\n  tags = {\n    Name = \"Web Server\"\n  }\n}\n</code></pre>"},{"location":"iac/roadmap/#week-6-terraform-state-management","title":"Week 6: Terraform State Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform state file explained\"</li> <li>[ ] \"Terraform remote state backend\"</li> <li>[ ] \"Terraform state locking mechanisms\"</li> <li>[ ] \"Terraform state import existing resources\"</li> <li>[ ] \"Terraform state file encryption\"</li> <li>[ ] \"Terraform state backup strategies\"</li> <li>[ ] \"Terraform state collaboration\"</li> <li>[ ] \"Terraform state troubleshooting\"</li> </ul> <p>State Backend Configuration:</p> <pre><code># backend.tf\nterraform {\n  backend \"s3\" {\n    bucket         = \"my-terraform-state\"\n    key            = \"terraform.tfstate\"\n    region         = \"us-west-2\"\n    encrypt        = true\n    dynamodb_table = \"terraform-locks\"\n  }\n}\n</code></pre>"},{"location":"iac/roadmap/#week-7-terraform-modules","title":"Week 7: Terraform Modules","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform modules creation tutorial\"</li> <li>[ ] \"Terraform module structure best practices\"</li> <li>[ ] \"Terraform module registry usage\"</li> <li>[ ] \"Terraform module versioning\"</li> <li>[ ] \"Terraform module composition\"</li> <li>[ ] \"Terraform module testing\"</li> <li>[ ] \"Terraform module documentation\"</li> <li>[ ] \"Terraform module dependency management\"</li> </ul> <p>Module Structure:</p> <pre><code>modules/\n\u251c\u2500\u2500 vpc/\n\u2502   \u251c\u2500\u2500 main.tf\n\u2502   \u251c\u2500\u2500 variables.tf\n\u2502   \u251c\u2500\u2500 outputs.tf\n\u2502   \u2514\u2500\u2500 README.md\n\u251c\u2500\u2500 ec2/\n\u2514\u2500\u2500 rds/\n</code></pre> <p>Module Example:</p> <pre><code># modules/vpc/main.tf\nresource \"aws_vpc\" \"main\" {\n  cidr_block           = var.cidr_block\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n\n  tags = merge(\n    var.tags,\n    {\n      Name = var.name\n    }\n  )\n}\n\n# Using module\nmodule \"vpc\" {\n  source = \"./modules/vpc\"\n\n  name       = \"my-vpc\"\n  cidr_block = \"10.0.0.0/16\"\n  tags       = local.common_tags\n}\n</code></pre>"},{"location":"iac/roadmap/#week-8-terraform-advanced-features","title":"Week 8: Terraform Advanced Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform functions and expressions\"</li> <li>[ ] \"Terraform conditional expressions\"</li> <li>[ ] \"Terraform loops for_each count\"</li> <li>[ ] \"Terraform dynamic blocks\"</li> <li>[ ] \"Terraform local values\"</li> <li>[ ] \"Terraform data transformation\"</li> <li>[ ] \"Terraform validation rules\"</li> <li>[ ] \"Terraform lifecycle management\"</li> </ul> <p>Advanced Terraform Patterns:</p> <pre><code># Dynamic blocks\ndynamic \"ingress\" {\n  for_each = var.ingress_rules\n  content {\n    from_port   = ingress.value.from_port\n    to_port     = ingress.value.to_port\n    protocol    = ingress.value.protocol\n    cidr_blocks = ingress.value.cidr_blocks\n  }\n}\n\n# Conditional resources\nresource \"aws_instance\" \"web\" {\n  count = var.create_instance ? 1 : 0\n  # ... other configuration\n}\n\n# For each with map\nresource \"aws_instance\" \"servers\" {\n  for_each = var.servers\n\n  ami           = each.value.ami\n  instance_type = each.value.type\n\n  tags = {\n    Name = each.key\n  }\n}\n</code></pre>"},{"location":"iac/roadmap/#week-9-terraform-enterprise-features","title":"Week 9: Terraform Enterprise Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform Cloud workspace management\"</li> <li>[ ] \"Terraform Enterprise features\"</li> <li>[ ] \"Terraform policy as code Sentinel\"</li> <li>[ ] \"Terraform cost estimation\"</li> <li>[ ] \"Terraform VCS integration\"</li> <li>[ ] \"Terraform team collaboration\"</li> <li>[ ] \"Terraform governance and compliance\"</li> <li>[ ] \"Terraform drift detection\"</li> </ul>"},{"location":"iac/roadmap/#week-10-terraform-multi-cloud","title":"Week 10: Terraform Multi-Cloud","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform multi-cloud deployment\"</li> <li>[ ] \"Terraform AWS provider advanced\"</li> <li>[ ] \"Terraform Azure provider tutorial\"</li> <li>[ ] \"Terraform GCP provider examples\"</li> <li>[ ] \"Terraform provider authentication\"</li> <li>[ ] \"Terraform cross-cloud networking\"</li> <li>[ ] \"Terraform cloud-agnostic modules\"</li> <li>[ ] \"Terraform hybrid cloud management\"</li> </ul>"},{"location":"iac/roadmap/#giai-oan-3-ansible-mastery-thang-6-7","title":"\ud83e\udd16 GIAI \u0110O\u1ea0N 3: ANSIBLE MASTERY (Th\u00e1ng 6-7)","text":""},{"location":"iac/roadmap/#week-11-ansible-fundamentals","title":"Week 11: Ansible Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Ansible installation and setup\"</li> <li>[ ] \"Ansible inventory management\"</li> <li>[ ] \"Ansible playbook syntax YAML\"</li> <li>[ ] \"Ansible modules and tasks\"</li> <li>[ ] \"Ansible ad-hoc commands\"</li> <li>[ ] \"Ansible SSH key management\"</li> <li>[ ] \"Ansible facts gathering\"</li> <li>[ ] \"Ansible idempotency principles\"</li> </ul> <p>Basic Ansible Setup:</p> <pre><code># Ansible installation\npip install ansible\n\n# Inventory file\necho \"[webservers]\" &gt; inventory\necho \"web1.example.com\" &gt;&gt; inventory\necho \"web2.example.com\" &gt;&gt; inventory\n\n# First playbook\nansible-playbook -i inventory playbook.yml\n</code></pre> <p>Simple Playbook:</p> <pre><code># playbook.yml\n---\n- name: Configure web servers\n  hosts: webservers\n  become: yes\n\n  tasks:\n    - name: Install nginx\n      package:\n        name: nginx\n        state: present\n\n    - name: Start nginx service\n      service:\n        name: nginx\n        state: started\n        enabled: yes\n</code></pre>"},{"location":"iac/roadmap/#week-12-ansible-advanced-playbooks","title":"Week 12: Ansible Advanced Playbooks","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Ansible playbook variables and facts\"</li> <li>[ ] \"Ansible conditionals and loops\"</li> <li>[ ] \"Ansible handlers and notifications\"</li> <li>[ ] \"Ansible templates with Jinja2\"</li> <li>[ ] \"Ansible vault for secrets\"</li> <li>[ ] \"Ansible error handling strategies\"</li> <li>[ ] \"Ansible debugging techniques\"</li> <li>[ ] \"Ansible performance optimization\"</li> </ul> <p>Advanced Playbook Features:</p> <pre><code># Advanced playbook example\n---\n- name: Deploy application\n  hosts: webservers\n  vars:\n    app_name: myapp\n    app_version: \"{{ lookup('env', 'APP_VERSION') | default('latest') }}\"\n\n  tasks:\n    - name: Create app directory\n      file:\n        path: \"/opt/{{ app_name }}\"\n        state: directory\n        mode: \"0755\"\n\n    - name: Deploy application\n      template:\n        src: app.conf.j2\n        dest: \"/opt/{{ app_name }}/app.conf\"\n        backup: yes\n      notify: restart application\n\n    - name: Install dependencies\n      package:\n        name: \"{{ item }}\"\n        state: present\n      loop: \"{{ app_dependencies }}\"\n      when: app_dependencies is defined\n\n  handlers:\n    - name: restart application\n      service:\n        name: \"{{ app_name }}\"\n        state: restarted\n</code></pre>"},{"location":"iac/roadmap/#week-13-ansible-roles-galaxy","title":"Week 13: Ansible Roles &amp; Galaxy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Ansible roles structure and creation\"</li> <li>[ ] \"Ansible Galaxy usage and publishing\"</li> <li>[ ] \"Ansible role dependencies\"</li> <li>[ ] \"Ansible role testing with Molecule\"</li> <li>[ ] \"Ansible role best practices\"</li> <li>[ ] \"Ansible role versioning\"</li> <li>[ ] \"Ansible Collections overview\"</li> <li>[ ] \"Custom Ansible modules development\"</li> </ul> <p>Role Structure:</p> <pre><code>roles/\n\u251c\u2500\u2500 webserver/\n\u2502   \u251c\u2500\u2500 tasks/\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 handlers/\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 templates/\n\u2502   \u251c\u2500\u2500 files/\n\u2502   \u251c\u2500\u2500 vars/\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 defaults/\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u2514\u2500\u2500 meta/\n\u2502       \u2514\u2500\u2500 main.yml\n</code></pre>"},{"location":"iac/roadmap/#week-14-ansible-for-infrastructure","title":"Week 14: Ansible for Infrastructure","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Ansible cloud modules AWS Azure GCP\"</li> <li>[ ] \"Ansible infrastructure provisioning\"</li> <li>[ ] \"Ansible with Terraform integration\"</li> <li>[ ] \"Ansible network automation\"</li> <li>[ ] \"Ansible container management\"</li> <li>[ ] \"Ansible orchestration patterns\"</li> <li>[ ] \"Ansible Tower AWX automation\"</li> <li>[ ] \"Ansible dynamic inventory\"</li> </ul> <p>Infrastructure Playbook:</p> <pre><code># infrastructure.yml\n---\n- name: Provision AWS infrastructure\n  hosts: localhost\n  gather_facts: no\n\n  tasks:\n    - name: Create VPC\n      amazon.aws.ec2_vpc_net:\n        name: \"{{ vpc_name }}\"\n        cidr_block: \"{{ vpc_cidr }}\"\n        state: present\n        tags:\n          Environment: \"{{ env }}\"\n      register: vpc\n\n    - name: Create security group\n      amazon.aws.ec2_group:\n        name: \"{{ sg_name }}\"\n        description: Security group for web servers\n        vpc_id: \"{{ vpc.vpc.id }}\"\n        rules:\n          - proto: tcp\n            ports:\n              - 80\n              - 443\n            cidr_ip: 0.0.0.0/0\n</code></pre>"},{"location":"iac/roadmap/#giai-oan-4-cloud-specific-iac-thang-8-9","title":"\u2601\ufe0f GIAI \u0110O\u1ea0N 4: CLOUD-SPECIFIC IAC (Th\u00e1ng 8-9)","text":""},{"location":"iac/roadmap/#week-15-aws-cloudformation","title":"Week 15: AWS CloudFormation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"AWS CloudFormation tutorial basics\"</li> <li>[ ] \"CloudFormation template syntax JSON YAML\"</li> <li>[ ] \"CloudFormation stacks and nested stacks\"</li> <li>[ ] \"CloudFormation parameters and outputs\"</li> <li>[ ] \"CloudFormation intrinsic functions\"</li> <li>[ ] \"CloudFormation conditions and mappings\"</li> <li>[ ] \"CloudFormation custom resources\"</li> <li>[ ] \"CloudFormation drift detection\"</li> </ul> <p>CloudFormation Template:</p> <pre><code># template.yml\nAWSTemplateFormatVersion: \"2010-09-09\"\nDescription: \"Web server infrastructure\"\n\nParameters:\n  InstanceType:\n    Type: String\n    Default: t3.micro\n    AllowedValues: [t3.micro, t3.small, t3.medium]\n\n  KeyName:\n    Type: AWS::EC2::KeyPair::KeyName\n    Description: EC2 Key Pair\n\nResources:\n  WebServerInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      ImageId: ami-0abcdef1234567890\n      InstanceType: !Ref InstanceType\n      KeyName: !Ref KeyName\n      SecurityGroupIds:\n        - !Ref WebServerSecurityGroup\n      UserData:\n        Fn::Base64: !Sub |\n          #!/bin/bash\n          yum update -y\n          yum install -y httpd\n          systemctl start httpd\n          systemctl enable httpd\n\n  WebServerSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Security group for web server\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: 80\n          ToPort: 80\n          CidrIp: 0.0.0.0/0\n\nOutputs:\n  WebsiteURL:\n    Description: URL of the website\n    Value: !Sub \"http://${WebServerInstance.PublicDnsName}\"\n</code></pre>"},{"location":"iac/roadmap/#week-16-azure-resource-manager-arm","title":"Week 16: Azure Resource Manager (ARM)","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Azure Resource Manager ARM templates\"</li> <li>[ ] \"ARM template syntax and functions\"</li> <li>[ ] \"Azure Bicep language tutorial\"</li> <li>[ ] \"ARM template parameters and variables\"</li> <li>[ ] \"ARM template linked templates\"</li> <li>[ ] \"ARM template deployment modes\"</li> <li>[ ] \"Azure Policy with ARM templates\"</li> <li>[ ] \"ARM template best practices\"</li> </ul> <p>ARM Template Example:</p> <pre><code>{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"vmName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"myVM\"\n    },\n    \"adminUsername\": {\n      \"type\": \"string\"\n    },\n    \"adminPassword\": {\n      \"type\": \"securestring\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Compute/virtualMachines\",\n      \"apiVersion\": \"2021-11-01\",\n      \"name\": \"[parameters('vmName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"properties\": {\n        \"hardwareProfile\": {\n          \"vmSize\": \"Standard_B2s\"\n        },\n        \"osProfile\": {\n          \"computerName\": \"[parameters('vmName')]\",\n          \"adminUsername\": \"[parameters('adminUsername')]\",\n          \"adminPassword\": \"[parameters('adminPassword')]\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"iac/roadmap/#week-17-google-cloud-deployment-manager","title":"Week 17: Google Cloud Deployment Manager","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Google Cloud Deployment Manager tutorial\"</li> <li>[ ] \"GCP Deployment Manager YAML templates\"</li> <li>[ ] \"GCP Deployment Manager Python templates\"</li> <li>[ ] \"GCP Deployment Manager Jinja2 templates\"</li> <li>[ ] \"GCP resource configuration management\"</li> <li>[ ] \"GCP Deployment Manager imports\"</li> <li>[ ] \"GCP infrastructure automation\"</li> <li>[ ] \"GCP Deployment Manager vs Terraform\"</li> </ul>"},{"location":"iac/roadmap/#week-18-pulumi-modern-iac","title":"Week 18: Pulumi Modern IaC","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Pulumi infrastructure as code tutorial\"</li> <li>[ ] \"Pulumi vs Terraform comparison\"</li> <li>[ ] \"Pulumi programming languages support\"</li> <li>[ ] \"Pulumi state management\"</li> <li>[ ] \"Pulumi stacks and configuration\"</li> <li>[ ] \"Pulumi secrets management\"</li> <li>[ ] \"Pulumi testing and validation\"</li> <li>[ ] \"Pulumi CI/CD integration\"</li> </ul> <p>Pulumi Example:</p> <pre><code># __main__.py\nimport pulumi\nimport pulumi_aws as aws\n\n# Create a VPC\nvpc = aws.ec2.Vpc(\"my-vpc\",\n    cidr_block=\"10.0.0.0/16\",\n    enable_dns_hostnames=True,\n    enable_dns_support=True,\n    tags={\"Name\": \"my-vpc\"}\n)\n\n# Create an internet gateway\nigw = aws.ec2.InternetGateway(\"my-igw\",\n    vpc_id=vpc.id,\n    tags={\"Name\": \"my-igw\"}\n)\n\n# Export the VPC ID\npulumi.export(\"vpc_id\", vpc.id)\n</code></pre>"},{"location":"iac/roadmap/#giai-oan-5-advanced-iac-patterns-thang-10-12","title":"\ud83d\udd27 GIAI \u0110O\u1ea0N 5: ADVANCED IAC PATTERNS (Th\u00e1ng 10-12)","text":""},{"location":"iac/roadmap/#week-19-iac-cicd-integration","title":"Week 19: IaC CI/CD Integration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure CI/CD pipelines\"</li> <li>[ ] \"Terraform automation GitHub Actions\"</li> <li>[ ] \"Ansible automation GitLab CI\"</li> <li>[ ] \"Infrastructure testing in CI/CD\"</li> <li>[ ] \"IaC security scanning automation\"</li> <li>[ ] \"Infrastructure drift detection CI/CD\"</li> <li>[ ] \"IaC deployment strategies\"</li> <li>[ ] \"Infrastructure rollback procedures\"</li> </ul> <p>Terraform CI/CD Pipeline:</p> <pre><code># .github/workflows/terraform.yml\nname: Terraform CI/CD\non:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n\njobs:\n  terraform:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup Terraform\n        uses: hashicorp/setup-terraform@v2\n        with:\n          terraform_version: 1.5.0\n\n      - name: Terraform Init\n        run: terraform init\n\n      - name: Terraform Plan\n        run: terraform plan\n\n      - name: Terraform Apply\n        if: github.ref == 'refs/heads/main'\n        run: terraform apply -auto-approve\n</code></pre>"},{"location":"iac/roadmap/#week-20-iac-security-compliance","title":"Week 20: IaC Security &amp; Compliance","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure security scanning tools\"</li> <li>[ ] \"Terraform security best practices\"</li> <li>[ ] \"IaC compliance automation\"</li> <li>[ ] \"Infrastructure policy as code\"</li> <li>[ ] \"IaC secrets management\"</li> <li>[ ] \"Infrastructure vulnerability scanning\"</li> <li>[ ] \"IaC governance frameworks\"</li> <li>[ ] \"Infrastructure security testing\"</li> </ul> <p>Security Tools:</p> <pre><code># Terraform security scanning\ntfsec .\ncheckov -f main.tf\nterrascan scan -t terraform\n\n# Ansible security\nansible-lint playbook.yml\n</code></pre>"},{"location":"iac/roadmap/#week-21-multi-environment-management","title":"Week 21: Multi-Environment Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"IaC multi-environment strategies\"</li> <li>[ ] \"Environment-specific configurations\"</li> <li>[ ] \"IaC environment promotion\"</li> <li>[ ] \"Infrastructure environment isolation\"</li> <li>[ ] \"IaC configuration management\"</li> <li>[ ] \"Environment drift prevention\"</li> <li>[ ] \"Blue-green infrastructure deployment\"</li> <li>[ ] \"Infrastructure canary deployments\"</li> </ul>"},{"location":"iac/roadmap/#week-22-iac-monitoring-observability","title":"Week 22: IaC Monitoring &amp; Observability","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure monitoring automation\"</li> <li>[ ] \"IaC deployment monitoring\"</li> <li>[ ] \"Infrastructure cost monitoring\"</li> <li>[ ] \"IaC performance metrics\"</li> <li>[ ] \"Infrastructure alerting automation\"</li> <li>[ ] \"IaC audit and compliance reporting\"</li> <li>[ ] \"Infrastructure dashboard creation\"</li> <li>[ ] \"IaC troubleshooting strategies\"</li> </ul>"},{"location":"iac/roadmap/#week-23-advanced-iac-patterns","title":"Week 23: Advanced IaC Patterns","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure as Code patterns\"</li> <li>[ ] \"Microservices infrastructure automation\"</li> <li>[ ] \"IaC for container orchestration\"</li> <li>[ ] \"Serverless infrastructure automation\"</li> <li>[ ] \"IaC for data infrastructure\"</li> <li>[ ] \"Infrastructure composition patterns\"</li> <li>[ ] \"IaC for disaster recovery\"</li> <li>[ ] \"Infrastructure scaling automation\"</li> </ul>"},{"location":"iac/roadmap/#week-24-iac-leadership-strategy","title":"Week 24: IaC Leadership &amp; Strategy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"IaC adoption strategies\"</li> <li>[ ] \"Infrastructure automation ROI\"</li> <li>[ ] \"IaC team organization\"</li> <li>[ ] \"Infrastructure governance models\"</li> <li>[ ] \"IaC training and education\"</li> <li>[ ] \"Infrastructure automation culture\"</li> <li>[ ] \"IaC vendor evaluation\"</li> <li>[ ] \"Infrastructure transformation strategy\"</li> </ul>"},{"location":"iac/roadmap/#hands-on-projects-by-tool","title":"\ud83d\udcda HANDS-ON PROJECTS BY TOOL","text":""},{"location":"iac/roadmap/#terraform-projects","title":"\ud83c\udfd7\ufe0f Terraform Projects","text":"<ol> <li> <p>Multi-Tier Web Application</p> </li> <li> <p>VPC with public/private subnets</p> </li> <li>Load balancer and auto-scaling</li> <li>RDS database with read replicas</li> <li> <p>Search: \"Terraform multi-tier architecture AWS\"</p> </li> <li> <p>Kubernetes Cluster Infrastructure</p> </li> <li> <p>EKS cluster with managed node groups</p> </li> <li>Networking and security groups</li> <li>Monitoring and logging setup</li> <li> <p>Search: \"Terraform EKS cluster deployment\"</p> </li> <li> <p>Multi-Cloud Infrastructure</p> </li> <li>Resources across AWS, Azure, GCP</li> <li>Cross-cloud networking</li> <li>Unified monitoring and management</li> <li>Search: \"Terraform multi-cloud deployment\"</li> </ol>"},{"location":"iac/roadmap/#ansible-projects","title":"\ud83e\udd16 Ansible Projects","text":"<ol> <li> <p>Application Deployment Pipeline</p> </li> <li> <p>Multi-stage deployment automation</p> </li> <li>Configuration management</li> <li>Service discovery and load balancing</li> <li> <p>Search: \"Ansible application deployment\"</p> </li> <li> <p>Infrastructure Hardening</p> </li> <li> <p>Security baseline implementation</p> </li> <li>Compliance automation</li> <li>Monitoring and alerting setup</li> <li> <p>Search: \"Ansible security hardening\"</p> </li> <li> <p>Container Orchestration</p> </li> <li>Docker Swarm setup and management</li> <li>Service deployment and scaling</li> <li>Health checks and monitoring</li> <li>Search: \"Ansible Docker Swarm automation\"</li> </ol>"},{"location":"iac/roadmap/#cloud-specific-projects","title":"\u2601\ufe0f Cloud-Specific Projects","text":"<ol> <li> <p>AWS CloudFormation Stack</p> </li> <li> <p>Nested stacks architecture</p> </li> <li>Cross-stack references</li> <li>Custom resources and Lambda functions</li> <li> <p>Search: \"CloudFormation nested stacks\"</p> </li> <li> <p>Azure ARM Template</p> </li> <li> <p>Resource group management</p> </li> <li>Azure Key Vault integration</li> <li>Deployment slots and traffic routing</li> <li> <p>Search: \"ARM template best practices\"</p> </li> <li> <p>GCP Deployment Manager</p> </li> <li>Template hierarchy and imports</li> <li>Python template development</li> <li>Service account management</li> <li>Search: \"GCP Deployment Manager Python\"</li> </ol>"},{"location":"iac/roadmap/#skill-assessment-checklist","title":"\ud83d\udccb SKILL ASSESSMENT CHECKLIST","text":""},{"location":"iac/roadmap/#terraform-mastery","title":"Terraform Mastery","text":"<ul> <li>[ ] Write complex Terraform configurations</li> <li>[ ] Design reusable modules</li> <li>[ ] Implement state management strategies</li> <li>[ ] Automate Terraform workflows</li> <li>[ ] Troubleshoot Terraform issues</li> <li>[ ] Optimize Terraform performance</li> </ul>"},{"location":"iac/roadmap/#ansible-mastery","title":"Ansible Mastery","text":"<ul> <li>[ ] Create comprehensive playbooks</li> <li>[ ] Develop custom Ansible roles</li> <li>[ ] Implement dynamic inventories</li> <li>[ ] Integrate with external systems</li> <li>[ ] Optimize Ansible performance</li> <li>[ ] Troubleshoot Ansible issues</li> </ul>"},{"location":"iac/roadmap/#cloud-platform-expertise","title":"Cloud Platform Expertise","text":"<ul> <li>[ ] Master native IaC tools</li> <li>[ ] Implement cross-cloud solutions</li> <li>[ ] Design scalable architectures</li> <li>[ ] Optimize cloud costs</li> <li>[ ] Implement security best practices</li> <li>[ ] Automate compliance processes</li> </ul>"},{"location":"iac/roadmap/#certifications-learning","title":"\ud83c\udf93 CERTIFICATIONS &amp; LEARNING","text":""},{"location":"iac/roadmap/#terraform-certifications","title":"Terraform Certifications","text":"<ul> <li>[ ] HashiCorp Certified: Terraform Associate</li> <li>[ ] HashiCorp Certified: Terraform Professional</li> </ul>"},{"location":"iac/roadmap/#ansible-certifications","title":"Ansible Certifications","text":"<ul> <li>[ ] Red Hat Certified Specialist in Ansible Automation</li> <li>[ ] Red Hat Certified Engineer (RHCE)</li> </ul>"},{"location":"iac/roadmap/#cloud-certifications","title":"Cloud Certifications","text":"<ul> <li>[ ] AWS Certified DevOps Engineer</li> <li>[ ] Azure DevOps Engineer Expert</li> <li>[ ] Google Cloud Professional DevOps Engineer</li> </ul>"},{"location":"iac/roadmap/#learning-resources","title":"Learning Resources","text":"<ul> <li>\"Terraform: Up &amp; Running\" - Yevgeniy Brikman</li> <li>\"Ansible for DevOps\" - Jeff Geerling</li> <li>\"Infrastructure as Code\" - Kief Morris</li> <li>\"Cloud Native Infrastructure\" - Justin Garrison</li> </ul>"},{"location":"iac/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"iac/roadmap/#morning-setup-20-mins","title":"Morning Setup (20 mins)","text":"<ul> <li>[ ] Review IaC code changes</li> <li>[ ] Check infrastructure status</li> <li>[ ] Read IaC best practices</li> <li>[ ] Plan daily IaC experiments</li> </ul>"},{"location":"iac/roadmap/#active-development-60-90-mins","title":"Active Development (60-90 mins)","text":"<ul> <li>[ ] Work on IaC projects</li> <li>[ ] Refactor existing code</li> <li>[ ] Test new IaC features</li> <li>[ ] Contribute to IaC communities</li> </ul>"},{"location":"iac/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document lessons learned</li> <li>[ ] Update IaC templates</li> <li>[ ] Review infrastructure costs</li> <li>[ ] Plan tomorrow's work</li> </ul>"},{"location":"iac/roadmap/#mastery-milestones","title":"\ud83c\udfaf MASTERY MILESTONES","text":""},{"location":"iac/roadmap/#month-2-foundation","title":"Month 2: Foundation","text":"<ul> <li>[ ] Understand IaC principles</li> <li>[ ] Basic Terraform and Ansible skills</li> <li>[ ] Version control for infrastructure</li> <li>[ ] Simple automation scripts</li> </ul>"},{"location":"iac/roadmap/#month-5-intermediate","title":"Month 5: Intermediate","text":"<ul> <li>[ ] Complex Terraform configurations</li> <li>[ ] Advanced Ansible playbooks</li> <li>[ ] Multi-environment management</li> <li>[ ] Infrastructure testing</li> </ul>"},{"location":"iac/roadmap/#month-7-advanced","title":"Month 7: Advanced","text":"<ul> <li>[ ] Multi-cloud deployments</li> <li>[ ] Custom modules and roles</li> <li>[ ] CI/CD integration</li> <li>[ ] Security and compliance</li> </ul>"},{"location":"iac/roadmap/#month-9-expert","title":"Month 9: Expert","text":"<ul> <li>[ ] Infrastructure architecture design</li> <li>[ ] Performance optimization</li> <li>[ ] Disaster recovery automation</li> <li>[ ] Team leadership</li> </ul>"},{"location":"iac/roadmap/#month-12-master","title":"Month 12: Master","text":"<ul> <li>[ ] Strategic planning</li> <li>[ ] Tool evaluation and selection</li> <li>[ ] Organizational transformation</li> <li>[ ] Innovation and research</li> </ul> <p>IaC Philosophy: \"Infrastructure should be versioned, tested, and deployed like application code!\"</p>"},{"location":"iac/roadmap/#quick-start-checklist","title":"\ud83d\ude80 Quick Start Checklist","text":""},{"location":"iac/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ul> <li>[ ] Install Terraform, Ansible, cloud CLIs</li> <li>[ ] Set up version control repository</li> <li>[ ] Configure cloud provider credentials</li> <li>[ ] Create first \"Hello World\" infrastructure</li> </ul>"},{"location":"iac/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Deploy first infrastructure with Terraform</li> <li>[ ] Configure servers with Ansible</li> <li>[ ] Set up basic CI/CD pipeline</li> <li>[ ] Join IaC communities</li> </ul>"},{"location":"iac/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Build multi-tier application infrastructure</li> <li>[ ] Implement infrastructure testing</li> <li>[ ] Set up monitoring and alerting</li> <li>[ ] Document infrastructure decisions</li> </ul> <p>Remember: Infrastructure as Code mastery requires consistent practice and real-world application. Start with simple projects and gradually increase complexity!</p>"},{"location":"k8s/","title":"Index","text":""},{"location":"k8s/cheatsheet/","title":"Kubernetes Complete Knowledge Base","text":""},{"location":"k8s/cheatsheet/#kubernetes-complete-knowledge-base","title":"Kubernetes Complete Knowledge Base","text":""},{"location":"k8s/cheatsheet/#muc-tieu","title":"\ud83c\udfaf M\u1ee5c ti\u00eau","text":"<p>Tr\u1edf th\u00e0nh Kubernetes Expert v\u1edbi ki\u1ebfn th\u1ee9c to\u00e0n di\u1ec7n v\u1ec1 container orchestration, t\u1eeb c\u01a1 b\u1ea3n \u0111\u1ebfn n\u00e2ng cao.</p>"},{"location":"k8s/cheatsheet/#1-kubernetes-fundamentals","title":"\ud83d\udcda 1. KUBERNETES FUNDAMENTALS","text":""},{"location":"k8s/cheatsheet/#11-kubernetes-architecture","title":"1.1 Kubernetes Architecture","text":"<pre><code># Kubernetes Components\nMaster Node (Control Plane):\n\u251c\u2500\u2500 API Server (kube-apiserver)     # REST API endpoint\n\u251c\u2500\u2500 etcd                            # Key-value store\n\u251c\u2500\u2500 Scheduler (kube-scheduler)      # Pod placement\n\u251c\u2500\u2500 Controller Manager              # Control loops\n\u2514\u2500\u2500 Cloud Controller Manager       # Cloud-specific controllers\n\nWorker Node:\n\u251c\u2500\u2500 kubelet                         # Node agent\n\u251c\u2500\u2500 kube-proxy                      # Network proxy\n\u251c\u2500\u2500 Container Runtime               # Docker/containerd/CRI-O\n\u2514\u2500\u2500 Pods                           # Smallest deployable units\n\n# Kubernetes Object Hierarchy\nCluster\n\u251c\u2500\u2500 Namespaces\n\u2502   \u251c\u2500\u2500 Pods\n\u2502   \u2502   \u2514\u2500\u2500 Containers\n\u2502   \u251c\u2500\u2500 Services\n\u2502   \u251c\u2500\u2500 Deployments\n\u2502   \u251c\u2500\u2500 ConfigMaps\n\u2502   \u251c\u2500\u2500 Secrets\n\u2502   \u2514\u2500\u2500 PersistentVolumes\n</code></pre>"},{"location":"k8s/cheatsheet/#12-installation-setup","title":"1.2 Installation &amp; Setup","text":"<pre><code># kubectl Installation\n# Linux\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nsudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\n\n# macOS\nbrew install kubectl\n\n# Windows\nchoco install kubernetes-cli\n\n# Verify Installation\nkubectl version --client\nkubectl cluster-info\n\n# Cluster Setup Options\nminikube start                      # Local development\nkind create cluster                 # Kubernetes in Docker\nkubeadm init                       # Production cluster\n</code></pre>"},{"location":"k8s/cheatsheet/#2-kubectl-commands-complete-reference","title":"\ud83d\ude80 2. KUBECTL COMMANDS - COMPLETE REFERENCE","text":""},{"location":"k8s/cheatsheet/#21-cluster-management","title":"2.1 Cluster Management","text":"<pre><code># Cluster Information\nkubectl cluster-info                # Cluster endpoints\nkubectl cluster-info dump          # Detailed cluster info\nkubectl get nodes                  # List nodes\nkubectl get nodes -o wide          # Detailed node info\nkubectl describe node &lt;node-name&gt;  # Node details\nkubectl top nodes                  # Node resource usage\nkubectl get componentstatuses      # Component health\nkubectl get events                 # Cluster events\nkubectl get events --sort-by=.metadata.creationTimestamp\n\n# Context Management\nkubectl config view                 # View kubeconfig\nkubectl config current-context     # Current context\nkubectl config get-contexts        # List contexts\nkubectl config use-context &lt;context&gt;  # Switch context\nkubectl config set-context &lt;context&gt; --namespace=&lt;namespace&gt;\nkubectl config delete-context &lt;context&gt;\n\n# Cluster Access\nkubectl auth can-i &lt;verb&gt; &lt;resource&gt;  # Check permissions\nkubectl auth can-i create pods       # Can I create pods?\nkubectl auth can-i \"*\" \"*\" --all-namespaces  # Check all permissions\n</code></pre>"},{"location":"k8s/cheatsheet/#22-namespace-management","title":"2.2 Namespace Management","text":"<pre><code># Namespace Operations\nkubectl get namespaces              # List namespaces\nkubectl get ns                      # Short form\nkubectl create namespace &lt;name&gt;     # Create namespace\nkubectl delete namespace &lt;name&gt;     # Delete namespace\nkubectl describe namespace &lt;name&gt;   # Namespace details\n\n# Working with Namespaces\nkubectl get pods -n &lt;namespace&gt;     # Pods in namespace\nkubectl get all -n &lt;namespace&gt;      # All resources in namespace\nkubectl get all --all-namespaces   # All resources in all namespaces\nkubectl config set-context --current --namespace=&lt;namespace&gt;  # Set default namespace\n\n# Namespace Resource Quotas\nkubectl get resourcequota -n &lt;namespace&gt;\nkubectl describe resourcequota -n &lt;namespace&gt;\n</code></pre>"},{"location":"k8s/cheatsheet/#23-pod-management","title":"2.3 Pod Management","text":"<pre><code># Pod Operations\nkubectl get pods                    # List pods\nkubectl get pods -o wide            # Detailed pod info\nkubectl get pods --show-labels      # Show labels\nkubectl get pods -l app=myapp       # Filter by label\nkubectl get pods --field-selector=status.phase=Running\nkubectl get pods --sort-by=.metadata.creationTimestamp\n\n# Pod Details\nkubectl describe pod &lt;pod-name&gt;     # Pod details\nkubectl get pod &lt;pod-name&gt; -o yaml  # Pod YAML\nkubectl get pod &lt;pod-name&gt; -o json  # Pod JSON\nkubectl logs &lt;pod-name&gt;             # Pod logs\nkubectl logs &lt;pod-name&gt; -c &lt;container&gt;  # Container logs\nkubectl logs &lt;pod-name&gt; --previous  # Previous container logs\nkubectl logs -f &lt;pod-name&gt;          # Follow logs\nkubectl logs &lt;pod-name&gt; --tail=50   # Last 50 lines\n\n# Pod Execution\nkubectl exec &lt;pod-name&gt; -- &lt;command&gt;  # Execute command\nkubectl exec -it &lt;pod-name&gt; -- /bin/bash  # Interactive shell\nkubectl exec -it &lt;pod-name&gt; -c &lt;container&gt; -- /bin/sh  # Specific container\nkubectl port-forward &lt;pod-name&gt; 8080:80  # Port forwarding\nkubectl cp &lt;pod-name&gt;:/path/file ./file  # Copy from pod\nkubectl cp ./file &lt;pod-name&gt;:/path/file  # Copy to pod\n\n# Pod Lifecycle\nkubectl run nginx --image=nginx    # Create pod\nkubectl run nginx --image=nginx --dry-run=client -o yaml  # Generate YAML\nkubectl delete pod &lt;pod-name&gt;       # Delete pod\nkubectl delete pods --all          # Delete all pods\nkubectl delete pods -l app=myapp    # Delete by label\n</code></pre>"},{"location":"k8s/cheatsheet/#24-deployment-management","title":"2.4 Deployment Management","text":"<pre><code># Deployment Operations\nkubectl get deployments            # List deployments\nkubectl get deploy                 # Short form\nkubectl create deployment nginx --image=nginx  # Create deployment\nkubectl create deployment nginx --image=nginx --replicas=3\nkubectl delete deployment &lt;name&gt;   # Delete deployment\n\n# Deployment Details\nkubectl describe deployment &lt;name&gt;  # Deployment details\nkubectl get deployment &lt;name&gt; -o yaml  # Deployment YAML\nkubectl rollout status deployment/&lt;name&gt;  # Rollout status\nkubectl rollout history deployment/&lt;name&gt;  # Rollout history\n\n# Scaling\nkubectl scale deployment &lt;name&gt; --replicas=5  # Scale deployment\nkubectl autoscale deployment &lt;name&gt; --min=2 --max=10 --cpu-percent=80  # HPA\n\n# Rolling Updates\nkubectl set image deployment/&lt;name&gt; &lt;container&gt;=&lt;image&gt;  # Update image\nkubectl rollout restart deployment/&lt;name&gt;  # Restart deployment\nkubectl rollout undo deployment/&lt;name&gt;     # Rollback deployment\nkubectl rollout undo deployment/&lt;name&gt; --to-revision=2  # Rollback to revision\n\n# Deployment Strategies\nkubectl patch deployment &lt;name&gt; -p '{\"spec\":{\"strategy\":{\"type\":\"RollingUpdate\",\"rollingUpdate\":{\"maxUnavailable\":1,\"maxSurge\":1}}}}'\n</code></pre>"},{"location":"k8s/cheatsheet/#25-service-management","title":"2.5 Service Management","text":"<pre><code># Service Operations\nkubectl get services               # List services\nkubectl get svc                    # Short form\nkubectl create service clusterip nginx --tcp=80:80  # ClusterIP service\nkubectl expose deployment nginx --port=80 --target-port=8080  # Expose deployment\nkubectl delete service &lt;name&gt;      # Delete service\n\n# Service Types\nkubectl expose deployment nginx --type=NodePort --port=80\nkubectl expose deployment nginx --type=LoadBalancer --port=80\nkubectl create service nodeport nginx --tcp=80:80 --node-port=30000\n\n# Service Details\nkubectl describe service &lt;name&gt;    # Service details\nkubectl get endpoints              # Service endpoints\nkubectl get service &lt;name&gt; -o yaml # Service YAML\n</code></pre>"},{"location":"k8s/cheatsheet/#26-configmap-secret-management","title":"2.6 ConfigMap &amp; Secret Management","text":"<pre><code># ConfigMap Operations\nkubectl get configmaps             # List configmaps\nkubectl get cm                     # Short form\nkubectl create configmap &lt;name&gt; --from-file=&lt;file&gt;  # From file\nkubectl create configmap &lt;name&gt; --from-literal=key=value  # From literal\nkubectl describe configmap &lt;name&gt;  # ConfigMap details\nkubectl delete configmap &lt;name&gt;    # Delete configmap\n\n# ConfigMap Examples\nkubectl create configmap app-config --from-file=app.properties\nkubectl create configmap app-config --from-literal=database_url=mongodb://localhost:27017\nkubectl create configmap app-config --from-env-file=.env\n\n# Secret Operations\nkubectl get secrets                # List secrets\nkubectl create secret generic &lt;name&gt; --from-literal=password=secret123\nkubectl create secret docker-registry &lt;name&gt; --docker-username=&lt;user&gt; --docker-password=&lt;password&gt; --docker-email=&lt;email&gt;\nkubectl create secret tls &lt;name&gt; --cert=cert.crt --key=cert.key\nkubectl describe secret &lt;name&gt;     # Secret details\nkubectl get secret &lt;name&gt; -o yaml  # Secret YAML (base64 encoded)\n\n# Secret Types\nkubectl create secret generic mysecret --from-file=ssh-privatekey=~/.ssh/id_rsa --type=kubernetes.io/ssh-auth\nkubectl create secret docker-registry myregistrykey --docker-server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-password=DOCKER_PASSWORD\n</code></pre>"},{"location":"k8s/cheatsheet/#27-volume-storage-management","title":"2.7 Volume &amp; Storage Management","text":"<pre><code># PersistentVolume Operations\nkubectl get pv                     # List persistent volumes\nkubectl get persistentvolumes      # Full name\nkubectl describe pv &lt;name&gt;         # PV details\nkubectl delete pv &lt;name&gt;           # Delete PV\n\n# PersistentVolumeClaim Operations\nkubectl get pvc                    # List PVCs\nkubectl get persistentvolumeclaims # Full name\nkubectl describe pvc &lt;name&gt;        # PVC details\nkubectl delete pvc &lt;name&gt;          # Delete PVC\n\n# StorageClass Operations\nkubectl get storageclass           # List storage classes\nkubectl get sc                     # Short form\nkubectl describe storageclass &lt;name&gt;  # StorageClass details\nkubectl get sc -o yaml             # All StorageClasses YAML\n</code></pre>"},{"location":"k8s/cheatsheet/#28-ingress-management","title":"2.8 Ingress Management","text":"<pre><code># Ingress Operations\nkubectl get ingress                # List ingress\nkubectl get ing                    # Short form\nkubectl describe ingress &lt;name&gt;    # Ingress details\nkubectl delete ingress &lt;name&gt;      # Delete ingress\n\n# Ingress Controllers\nkubectl get pods -n ingress-nginx  # Nginx ingress controller\nkubectl logs -n ingress-nginx &lt;pod-name&gt;  # Ingress controller logs\n</code></pre>"},{"location":"k8s/cheatsheet/#29-resource-management","title":"2.9 Resource Management","text":"<pre><code># Resource Quotas\nkubectl get resourcequota          # List resource quotas\nkubectl describe resourcequota &lt;name&gt;  # Quota details\nkubectl top pods                   # Pod resource usage\nkubectl top nodes                  # Node resource usage\n\n# Limit Ranges\nkubectl get limitrange             # List limit ranges\nkubectl describe limitrange &lt;name&gt; # Limit range details\n\n# Horizontal Pod Autoscaler\nkubectl get hpa                    # List HPAs\nkubectl describe hpa &lt;name&gt;        # HPA details\nkubectl autoscale deployment nginx --min=1 --max=10 --cpu-percent=80\n</code></pre>"},{"location":"k8s/cheatsheet/#3-kubernetes-yaml-manifests","title":"\ud83d\udcdd 3. KUBERNETES YAML MANIFESTS","text":""},{"location":"k8s/cheatsheet/#31-pod-manifests","title":"3.1 Pod Manifests","text":"<pre><code># Basic Pod\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\n  labels:\n    app: nginx\nspec:\n  containers:\n    - name: nginx\n      image: nginx:1.21\n      ports:\n        - containerPort: 80\n      resources:\n        requests:\n          memory: \"64Mi\"\n          cpu: \"250m\"\n        limits:\n          memory: \"128Mi\"\n          cpu: \"500m\"\n      env:\n        - name: ENV_VAR\n          value: \"production\"\n      volumeMounts:\n        - name: config-volume\n          mountPath: /etc/config\n  volumes:\n    - name: config-volume\n      configMap:\n        name: app-config\n  restartPolicy: Always\n  nodeSelector:\n    kubernetes.io/os: linux\n</code></pre>"},{"location":"k8s/cheatsheet/#32-deployment-manifests","title":"3.2 Deployment Manifests","text":"<pre><code># Deployment with Rolling Update\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n      maxSurge: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:1.21\n          ports:\n            - containerPort: 80\n          livenessProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 30\n            periodSeconds: 10\n          readinessProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 5\n            periodSeconds: 5\n</code></pre>"},{"location":"k8s/cheatsheet/#33-service-manifests","title":"3.3 Service Manifests","text":"<pre><code># ClusterIP Service\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n  type: ClusterIP\n\n---\n# NodePort Service\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-nodeport\nspec:\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n      nodePort: 30000\n  type: NodePort\n\n---\n# LoadBalancer Service\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-loadbalancer\nspec:\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n  type: LoadBalancer\n</code></pre>"},{"location":"k8s/cheatsheet/#34-configmap-secret-manifests","title":"3.4 ConfigMap &amp; Secret Manifests","text":"<pre><code># ConfigMap\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n  database_url: \"mongodb://localhost:27017\"\n  api_key: \"your-api-key\"\n  config.yaml: |\n    server:\n      port: 8080\n      host: 0.0.0.0\n    database:\n      driver: postgres\n      host: localhost\n\n---\n# Secret\napiVersion: v1\nkind: Secret\nmetadata:\n  name: app-secret\ntype: Opaque\ndata:\n  username: YWRtaW4= # base64 encoded 'admin'\n  password: MWYyZDFlMmU2N2Rm # base64 encoded password\nstringData:\n  config.yaml: |\n    apiUrl: \"https://my.api.com/api/v1\"\n    username: \"admin\"\n    password: \"password\"\n</code></pre>"},{"location":"k8s/cheatsheet/#35-ingress-manifests","title":"3.5 Ingress Manifests","text":"<pre><code># Basic Ingress\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: nginx-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  rules:\n    - host: example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: nginx-service\n                port:\n                  number: 80\n\n---\n# TLS Ingress\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: tls-ingress\nspec:\n  tls:\n    - hosts:\n        - example.com\n      secretName: tls-secret\n  rules:\n    - host: example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: nginx-service\n                port:\n                  number: 80\n</code></pre>"},{"location":"k8s/cheatsheet/#36-persistentvolume-manifests","title":"3.6 PersistentVolume Manifests","text":"<pre><code># PersistentVolume\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-storage\nspec:\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: slow\n  hostPath:\n    path: /mnt/data\n\n---\n# PersistentVolumeClaim\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-storage\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi\n  storageClassName: slow\n</code></pre>"},{"location":"k8s/cheatsheet/#4-advanced-kubernetes-concepts","title":"\ud83d\udd27 4. ADVANCED KUBERNETES CONCEPTS","text":""},{"location":"k8s/cheatsheet/#41-statefulset","title":"4.1 StatefulSet","text":"<pre><code>apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: postgres-statefulset\nspec:\n  serviceName: postgres-service\n  replicas: 3\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n        - name: postgres\n          image: postgres:13\n          env:\n            - name: POSTGRES_DB\n              value: mydb\n            - name: POSTGRES_USER\n              value: admin\n            - name: POSTGRES_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: postgres-secret\n                  key: password\n          volumeMounts:\n            - name: postgres-storage\n              mountPath: /var/lib/postgresql/data\n  volumeClaimTemplates:\n    - metadata:\n        name: postgres-storage\n      spec:\n        accessModes: [\"ReadWriteOnce\"]\n        resources:\n          requests:\n            storage: 10Gi\n</code></pre>"},{"location":"k8s/cheatsheet/#42-daemonset","title":"4.2 DaemonSet","text":"<pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: fluentd-daemonset\nspec:\n  selector:\n    matchLabels:\n      app: fluentd\n  template:\n    metadata:\n      labels:\n        app: fluentd\n    spec:\n      containers:\n        - name: fluentd\n          image: fluentd:latest\n          volumeMounts:\n            - name: varlog\n              mountPath: /var/log\n            - name: varlibdockercontainers\n              mountPath: /var/lib/docker/containers\n              readOnly: true\n      volumes:\n        - name: varlog\n          hostPath:\n            path: /var/log\n        - name: varlibdockercontainers\n          hostPath:\n            path: /var/lib/docker/containers\n</code></pre>"},{"location":"k8s/cheatsheet/#43-job-cronjob","title":"4.3 Job &amp; CronJob","text":"<pre><code># Job\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: backup-job\nspec:\n  template:\n    spec:\n      containers:\n        - name: backup\n          image: backup-tool:latest\n          command: [\"sh\", \"-c\", \"backup-script.sh\"]\n      restartPolicy: Never\n  backoffLimit: 4\n\n---\n# CronJob\napiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: backup-cronjob\nspec:\n  schedule: \"0 2 * * *\" # Daily at 2 AM\n  jobTemplate:\n    spec:\n      template:\n        spec:\n          containers:\n            - name: backup\n              image: backup-tool:latest\n              command: [\"sh\", \"-c\", \"backup-script.sh\"]\n          restartPolicy: OnFailure\n</code></pre>"},{"location":"k8s/cheatsheet/#44-horizontalpodautoscaler","title":"4.4 HorizontalPodAutoscaler","text":"<pre><code>apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: nginx-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: nginx-deployment\n  minReplicas: 2\n  maxReplicas: 10\n  metrics:\n    - type: Resource\n      resource:\n        name: cpu\n        target:\n          type: Utilization\n          averageUtilization: 70\n    - type: Resource\n      resource:\n        name: memory\n        target:\n          type: Utilization\n          averageUtilization: 80\n</code></pre>"},{"location":"k8s/cheatsheet/#5-kubernetes-security","title":"\ud83d\udee1\ufe0f 5. KUBERNETES SECURITY","text":""},{"location":"k8s/cheatsheet/#51-rbac-role-based-access-control","title":"5.1 RBAC (Role-Based Access Control)","text":"<pre><code># Role\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  namespace: default\n  name: pod-reader\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"pods\"]\n    verbs: [\"get\", \"watch\", \"list\"]\n\n---\n# RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: read-pods\n  namespace: default\nsubjects:\n  - kind: User\n    name: jane\n    apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: pod-reader\n  apiGroup: rbac.authorization.k8s.io\n\n---\n# ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: secret-reader\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"watch\", \"list\"]\n\n---\n# ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: read-secrets-global\nsubjects:\n  - kind: User\n    name: manager\n    apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: secret-reader\n  apiGroup: rbac.authorization.k8s.io\n</code></pre>"},{"location":"k8s/cheatsheet/#52-security-commands","title":"5.2 Security Commands","text":"<pre><code># RBAC Commands\nkubectl get roles               # List roles\nkubectl get rolebindings        # List role bindings\nkubectl get clusterroles        # List cluster roles\nkubectl get clusterrolebindings # List cluster role bindings\nkubectl describe role &lt;name&gt;    # Role details\nkubectl auth can-i create pods  # Check permissions\nkubectl auth can-i create pods --as=jane  # Check as user\n\n# Service Account\nkubectl get serviceaccounts     # List service accounts\nkubectl get sa                  # Short form\nkubectl create serviceaccount &lt;name&gt;  # Create service account\nkubectl describe sa &lt;name&gt;      # Service account details\n\n# Security Context\nkubectl get pod &lt;name&gt; -o yaml | grep -A 10 securityContext\n</code></pre>"},{"location":"k8s/cheatsheet/#53-pod-security-standards","title":"5.3 Pod Security Standards","text":"<pre><code># Pod Security Policy\napiVersion: v1\nkind: Pod\nmetadata:\n  name: secure-pod\nspec:\n  securityContext:\n    runAsNonRoot: true\n    runAsUser: 1000\n    runAsGroup: 3000\n    fsGroup: 2000\n    seccompProfile:\n      type: RuntimeDefault\n  containers:\n    - name: app\n      image: nginx:1.21\n      securityContext:\n        allowPrivilegeEscalation: false\n        readOnlyRootFilesystem: true\n        capabilities:\n          drop:\n            - ALL\n          add:\n            - NET_BIND_SERVICE\n</code></pre>"},{"location":"k8s/cheatsheet/#6-monitoring-observability","title":"\ud83d\udcca 6. MONITORING &amp; OBSERVABILITY","text":""},{"location":"k8s/cheatsheet/#61-monitoring-commands","title":"6.1 Monitoring Commands","text":"<pre><code># Resource Usage\nkubectl top nodes               # Node resource usage\nkubectl top pods                # Pod resource usage\nkubectl top pods --containers   # Container resource usage\nkubectl top pods -l app=nginx   # Pods with label\nkubectl top pods --sort-by=cpu  # Sort by CPU\nkubectl top pods --sort-by=memory  # Sort by memory\n\n# Metrics Server\nkubectl get apiservices | grep metrics\nkubectl get --raw /apis/metrics.k8s.io/v1beta1/nodes\nkubectl get --raw /apis/metrics.k8s.io/v1beta1/pods\n\n# Events\nkubectl get events              # List events\nkubectl get events --sort-by=.metadata.creationTimestamp\nkubectl get events --field-selector type=Warning\nkubectl get events --watch     # Watch events\n</code></pre>"},{"location":"k8s/cheatsheet/#62-logging-commands","title":"6.2 Logging Commands","text":"<pre><code># Pod Logs\nkubectl logs &lt;pod-name&gt;         # Container logs\nkubectl logs &lt;pod-name&gt; -c &lt;container&gt;  # Specific container\nkubectl logs -f &lt;pod-name&gt;      # Follow logs\nkubectl logs --previous &lt;pod-name&gt;  # Previous container logs\nkubectl logs &lt;pod-name&gt; --tail=100  # Last 100 lines\nkubectl logs &lt;pod-name&gt; --since=1h  # Logs from last hour\nkubectl logs -l app=nginx       # Logs from all pods with label\n\n# Multiple Pods\nkubectl logs -l app=nginx --prefix=true  # With pod name prefix\nkubectl logs -f deployment/nginx        # Follow deployment logs\n</code></pre>"},{"location":"k8s/cheatsheet/#63-troubleshooting-commands","title":"6.3 Troubleshooting Commands","text":"<pre><code># Debug Pods\nkubectl describe pod &lt;pod-name&gt;  # Pod details and events\nkubectl get pod &lt;pod-name&gt; -o yaml  # Full pod specification\nkubectl explain pod.spec         # Pod specification help\nkubectl get events --field-selector involvedObject.name=&lt;pod-name&gt;\n\n# Debug Services\nkubectl describe service &lt;service-name&gt;\nkubectl get endpoints &lt;service-name&gt;\nkubectl run debug --image=busybox -it --rm -- /bin/sh  # Debug pod\n\n# Debug Networking\nkubectl exec &lt;pod-name&gt; -- nslookup &lt;service-name&gt;\nkubectl exec &lt;pod-name&gt; -- wget -qO- &lt;service-name&gt;:&lt;port&gt;\nkubectl port-forward &lt;pod-name&gt; 8080:80  # Port forwarding for testing\n\n# Debug Storage\nkubectl describe pv &lt;pv-name&gt;\nkubectl describe pvc &lt;pvc-name&gt;\nkubectl get events --field-selector reason=VolumeMount\n</code></pre>"},{"location":"k8s/cheatsheet/#7-helm-package-manager","title":"\ud83d\udd04 7. HELM PACKAGE MANAGER","text":""},{"location":"k8s/cheatsheet/#71-helm-commands","title":"7.1 Helm Commands","text":"<pre><code># Helm Installation\ncurl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\n\n# Repository Management\nhelm repo add stable https://charts.helm.sh/stable\nhelm repo add bitnami https://charts.bitnami.com/bitnami\nhelm repo update                # Update repositories\nhelm repo list                  # List repositories\nhelm search repo nginx          # Search charts\nhelm search hub wordpress       # Search Helm Hub\n\n# Chart Management\nhelm install nginx stable/nginx-ingress  # Install chart\nhelm install myrelease bitnami/nginx    # Install with release name\nhelm install myapp ./mychart            # Install local chart\nhelm install myapp ./mychart --values values.yaml  # With custom values\nhelm install myapp ./mychart --set image.tag=latest  # Set values\n\n# Release Management\nhelm list                       # List releases\nhelm list --all-namespaces     # All namespaces\nhelm status &lt;release-name&gt;      # Release status\nhelm get values &lt;release-name&gt;  # Release values\nhelm get manifest &lt;release-name&gt;  # Release manifests\nhelm history &lt;release-name&gt;     # Release history\n\n# Upgrade and Rollback\nhelm upgrade &lt;release-name&gt; &lt;chart&gt;  # Upgrade release\nhelm upgrade &lt;release-name&gt; &lt;chart&gt; --values values.yaml\nhelm rollback &lt;release-name&gt; 1      # Rollback to revision 1\nhelm uninstall &lt;release-name&gt;       # Uninstall release\n\n# Chart Development\nhelm create mychart             # Create new chart\nhelm template mychart           # Render templates locally\nhelm lint mychart               # Lint chart\nhelm package mychart            # Package chart\nhelm dependency update          # Update dependencies\n</code></pre>"},{"location":"k8s/cheatsheet/#72-helm-chart-structure","title":"7.2 Helm Chart Structure","text":"<pre><code>mychart/\n\u251c\u2500\u2500 Chart.yaml          # Chart metadata\n\u251c\u2500\u2500 values.yaml         # Default values\n\u251c\u2500\u2500 charts/             # Chart dependencies\n\u251c\u2500\u2500 templates/          # Kubernetes templates\n\u2502   \u251c\u2500\u2500 deployment.yaml\n\u2502   \u251c\u2500\u2500 service.yaml\n\u2502   \u251c\u2500\u2500 ingress.yaml\n\u2502   \u251c\u2500\u2500 configmap.yaml\n\u2502   \u251c\u2500\u2500 _helpers.tpl    # Template helpers\n\u2502   \u2514\u2500\u2500 NOTES.txt       # Installation notes\n\u2514\u2500\u2500 .helmignore         # Files to ignore\n</code></pre>"},{"location":"k8s/cheatsheet/#73-helm-chart-example","title":"7.3 Helm Chart Example","text":"<pre><code># Chart.yaml\napiVersion: v2\nname: myapp\ndescription: A Helm chart for myapp\ntype: application\nversion: 0.1.0\nappVersion: \"1.0\"\n\n# values.yaml\nreplicaCount: 2\nimage:\n  repository: nginx\n  tag: \"1.21\"\n  pullPolicy: IfNotPresent\nservice:\n  type: ClusterIP\n  port: 80\ningress:\n  enabled: false\n  annotations: {}\n  hosts:\n    - host: chart-example.local\n      paths: []\n  tls: []\nresources:\n  limits:\n    cpu: 100m\n    memory: 128Mi\n  requests:\n    cpu: 100m\n    memory: 128Mi\n</code></pre>"},{"location":"k8s/cheatsheet/#8-kubernetes-networking","title":"\ud83c\udfd7\ufe0f 8. KUBERNETES NETWORKING","text":""},{"location":"k8s/cheatsheet/#81-network-policies","title":"8.1 Network Policies","text":"<pre><code># Network Policy Example\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: web-netpol\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      app: web\n  policyTypes:\n    - Ingress\n    - Egress\n  ingress:\n    - from:\n        - podSelector:\n            matchLabels:\n              app: frontend\n        - namespaceSelector:\n            matchLabels:\n              name: production\n      ports:\n        - protocol: TCP\n          port: 80\n  egress:\n    - to:\n        - podSelector:\n            matchLabels:\n              app: database\n      ports:\n        - protocol: TCP\n          port: 5432\n</code></pre>"},{"location":"k8s/cheatsheet/#82-service-mesh-istio","title":"8.2 Service Mesh (Istio)","text":"<pre><code># Istio Installation\nistioctl install --set values.defaultRevision=default\nkubectl label namespace default istio-injection=enabled\n\n# Istio Resources\nkubectl get virtualservices\nkubectl get destinationrules\nkubectl get gateways\nkubectl get serviceentries\nkubectl get peerauthentication\n\n# Istio Traffic Management\nkubectl apply -f - &lt;&lt;EOF\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: reviews\n        subset: v2\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\nEOF\n</code></pre>"},{"location":"k8s/cheatsheet/#9-production-operations","title":"\ud83c\udfed 9. PRODUCTION OPERATIONS","text":""},{"location":"k8s/cheatsheet/#91-cluster-management","title":"9.1 Cluster Management","text":"<pre><code># Node Management\nkubectl cordon &lt;node-name&gt;      # Mark node unschedulable\nkubectl uncordon &lt;node-name&gt;    # Mark node schedulable\nkubectl drain &lt;node-name&gt;       # Evict pods and mark unschedulable\nkubectl drain &lt;node-name&gt; --ignore-daemonsets --delete-emptydir-data\n\n# Cluster Upgrade\nkubeadm upgrade plan            # Check upgrade options\nkubeadm upgrade apply v1.25.0   # Upgrade control plane\nkubectl get nodes               # Verify node versions\n\n# Backup and Restore\netcdctl snapshot save backup.db # Backup etcd\netcdctl snapshot restore backup.db  # Restore etcd\n</code></pre>"},{"location":"k8s/cheatsheet/#92-resource-management","title":"9.2 Resource Management","text":"<pre><code># Resource Quota\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: compute-quota\n  namespace: myapp\nspec:\n  hard:\n    requests.cpu: \"4\"\n    requests.memory: 8Gi\n    limits.cpu: \"8\"\n    limits.memory: 16Gi\n    persistentvolumeclaims: \"10\"\n    count/pods: \"20\"\n\n---\n# Limit Range\napiVersion: v1\nkind: LimitRange\nmetadata:\n  name: mem-limit-range\nspec:\n  limits:\n    - default:\n        memory: \"512Mi\"\n        cpu: \"500m\"\n      defaultRequest:\n        memory: \"256Mi\"\n        cpu: \"200m\"\n      type: Container\n</code></pre>"},{"location":"k8s/cheatsheet/#93-high-availability","title":"9.3 High Availability","text":"<pre><code># Pod Disruption Budget\napiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n  name: myapp-pdb\nspec:\n  minAvailable: 2\n  selector:\n    matchLabels:\n      app: myapp\n\n---\n# Anti-Affinity Example\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: web\n  template:\n    metadata:\n      labels:\n        app: web\n    spec:\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: app\n                    operator: In\n                    values:\n                      - web\n              topologyKey: \"kubernetes.io/hostname\"\n      containers:\n        - name: web\n          image: nginx:1.21\n</code></pre>"},{"location":"k8s/cheatsheet/#10-troubleshooting-guide","title":"\ud83d\udd0d 10. TROUBLESHOOTING GUIDE","text":""},{"location":"k8s/cheatsheet/#101-common-issues-solutions","title":"10.1 Common Issues &amp; Solutions","text":"<pre><code># Pod Issues\n# Pod stuck in Pending\nkubectl describe pod &lt;pod-name&gt;  # Check events\nkubectl get nodes                # Check node availability\nkubectl top nodes                # Check node resources\n\n# Pod stuck in CrashLoopBackOff\nkubectl logs &lt;pod-name&gt;          # Check logs\nkubectl logs &lt;pod-name&gt; --previous  # Previous container logs\nkubectl describe pod &lt;pod-name&gt;  # Check events\n\n# Image Pull Errors\nkubectl describe pod &lt;pod-name&gt;  # Check events\nkubectl get events | grep Failed # Failed events\ndocker pull &lt;image&gt;              # Test image locally\n\n# Service Issues\n# Service not accessible\nkubectl get endpoints &lt;service-name&gt;  # Check endpoints\nkubectl describe service &lt;service-name&gt;  # Service details\nkubectl get pods -l app=&lt;label&gt;  # Check pod labels\n\n# DNS Issues\nkubectl exec -it &lt;pod-name&gt; -- nslookup kubernetes.default\nkubectl exec -it &lt;pod-name&gt; -- cat /etc/resolv.conf\nkubectl get services -n kube-system | grep dns\n\n# Storage Issues\n# PVC stuck in Pending\nkubectl describe pvc &lt;pvc-name&gt;  # Check events\nkubectl get pv                   # Check available PVs\nkubectl get storageclass         # Check storage classes\n\n# Network Issues\nkubectl get networkpolicies      # Check network policies\nkubectl describe networkpolicy &lt;policy-name&gt;\nkubectl exec -it &lt;pod-name&gt; -- ping &lt;target-ip&gt;\n</code></pre>"},{"location":"k8s/cheatsheet/#102-debug-tools","title":"10.2 Debug Tools","text":"<pre><code># Debug Pod\nkubectl run debug --image=busybox -it --rm -- /bin/sh\nkubectl run debug --image=nicolaka/netshoot -it --rm -- /bin/bash\nkubectl run debug --image=alpine/curl -it --rm -- /bin/sh\n\n# Debug with specific privileges\nkubectl run debug --image=busybox --privileged -it --rm -- /bin/sh\nkubectl run debug --image=busybox --overrides='{\"spec\":{\"hostNetwork\":true}}' -it --rm -- /bin/sh\n\n# Copy files for debugging\nkubectl cp &lt;pod-name&gt;:/path/to/file ./local-file\nkubectl cp ./local-file &lt;pod-name&gt;:/path/to/file\n\n# Port forwarding for debugging\nkubectl port-forward pod/&lt;pod-name&gt; 8080:80\nkubectl port-forward service/&lt;service-name&gt; 8080:80\nkubectl port-forward deployment/&lt;deployment-name&gt; 8080:80\n</code></pre>"},{"location":"k8s/cheatsheet/#11-kubernetes-extensions-tools","title":"\ud83d\udcda 11. KUBERNETES EXTENSIONS &amp; TOOLS","text":""},{"location":"k8s/cheatsheet/#111-essential-tools","title":"11.1 Essential Tools","text":"<pre><code># kubectl Plugins\ncurl -LO https://github.com/ahmetb/kubectx/releases/download/v0.9.4/kubectx\ncurl -LO https://github.com/ahmetb/kubectx/releases/download/v0.9.4/kubens\nkubectx                         # Switch contexts\nkubens                          # Switch namespaces\n\n# kubectl aliases\nalias k=kubectl\nalias kgp='kubectl get pods'\nalias kgs='kubectl get services'\nalias kgd='kubectl get deployments'\nalias kdp='kubectl describe pod'\nalias kl='kubectl logs'\nalias ke='kubectl exec -it'\n\n# Useful Tools\nstern &lt;pod-pattern&gt;             # Multi-pod log tailing\nk9s                            # Terminal-based K8s UI\nlens                           # Desktop K8s IDE\nkubefwd                        # Port forwarding tool\n</code></pre>"},{"location":"k8s/cheatsheet/#112-operators","title":"11.2 Operators","text":"<pre><code># Operator Examples\nkubectl get operators           # List operators\nkubectl get csv                 # ClusterServiceVersions\nkubectl get crd                 # Custom Resource Definitions\nkubectl get customresources    # Custom resources\n\n# Popular Operators\n# Prometheus Operator\n# Grafana Operator\n# MongoDB Operator\n# PostgreSQL Operator\n# Cert-Manager Operator\n</code></pre>"},{"location":"k8s/cheatsheet/#113-custom-resources","title":"11.3 Custom Resources","text":"<pre><code># Custom Resource Definition\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: applications.example.com\nspec:\n  group: example.com\n  versions:\n    - name: v1\n      served: true\n      storage: true\n      schema:\n        openAPIV3Schema:\n          type: object\n          properties:\n            spec:\n              type: object\n              properties:\n                replicas:\n                  type: integer\n                image:\n                  type: string\n            status:\n              type: object\n  scope: Namespaced\n  names:\n    plural: applications\n    singular: application\n    kind: Application\n</code></pre>"},{"location":"k8s/cheatsheet/#12-learning-path-certification","title":"\ud83c\udf93 12. LEARNING PATH &amp; CERTIFICATION","text":""},{"location":"k8s/cheatsheet/#121-learning-timeline","title":"12.1 Learning Timeline","text":"<pre><code># Beginner (2-3 months)\nMonth 1: Kubernetes basics, Pods, Services\nMonth 2: Deployments, ConfigMaps, Secrets\nMonth 3: Volumes, Networking, Basic troubleshooting\n\n# Intermediate (3-4 months)\nMonth 4: Advanced workloads (StatefulSets, DaemonSets)\nMonth 5: Security (RBAC, Network Policies)\nMonth 6: Monitoring, Logging, Helm\nMonth 7: Operators, Custom Resources\n\n# Advanced (4-6 months)\nMonth 8: Multi-cluster management\nMonth 9: Service mesh (Istio/Linkerd)\nMonth 10: GitOps (ArgoCD/Flux)\nMonth 11: Platform engineering\nMonth 12: Certification preparation\n</code></pre>"},{"location":"k8s/cheatsheet/#122-certifications","title":"12.2 Certifications","text":"<pre><code># Kubernetes Certifications\n- Certified Kubernetes Administrator (CKA)\n- Certified Kubernetes Application Developer (CKAD)\n- Certified Kubernetes Security Specialist (CKS)\n\n# Related Certifications\n- Docker Certified Associate (DCA)\n- AWS Certified Solutions Architect\n- Google Cloud Professional Cloud Architect\n- Azure Solutions Architect Expert\n</code></pre>"},{"location":"k8s/cheatsheet/#123-practice-environments","title":"12.3 Practice Environments","text":"<pre><code># Local Development\nminikube start                  # Single-node cluster\nkind create cluster             # Kubernetes in Docker\nk3s                            # Lightweight Kubernetes\n\n# Cloud Platforms\n# Google Kubernetes Engine (GKE)\n# Amazon Elastic Kubernetes Service (EKS)\n# Azure Kubernetes Service (AKS)\n# DigitalOcean Kubernetes\n\n# Learning Platforms\n# Katacoda Kubernetes Scenarios\n# Play with Kubernetes\n# Kubernetes the Hard Way\n</code></pre>"},{"location":"k8s/cheatsheet/#13-best-practices","title":"\ud83d\udcd6 13. BEST PRACTICES","text":""},{"location":"k8s/cheatsheet/#131-deployment-best-practices","title":"13.1 Deployment Best Practices","text":"<pre><code># Production-Ready Deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp\n  labels:\n    app: myapp\n    version: v1.0.0\nspec:\n  replicas: 3\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n      maxSurge: 1\n  selector:\n    matchLabels:\n      app: myapp\n  template:\n    metadata:\n      labels:\n        app: myapp\n        version: v1.0.0\n    spec:\n      containers:\n        - name: myapp\n          image: myapp:1.0.0\n          ports:\n            - containerPort: 8080\n          resources:\n            requests:\n              memory: \"256Mi\"\n              cpu: \"200m\"\n            limits:\n              memory: \"512Mi\"\n              cpu: \"500m\"\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 8080\n            initialDelaySeconds: 30\n            periodSeconds: 10\n            timeoutSeconds: 5\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /ready\n              port: 8080\n            initialDelaySeconds: 5\n            periodSeconds: 5\n            timeoutSeconds: 3\n            failureThreshold: 3\n          securityContext:\n            runAsNonRoot: true\n            runAsUser: 1000\n            allowPrivilegeEscalation: false\n            readOnlyRootFilesystem: true\n          env:\n            - name: PORT\n              value: \"8080\"\n            - name: DATABASE_URL\n              valueFrom:\n                secretKeyRef:\n                  name: database-secret\n                  key: url\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 100\n              podAffinityTerm:\n                labelSelector:\n                  matchExpressions:\n                    - key: app\n                      operator: In\n                      values:\n                        - myapp\n                topologyKey: kubernetes.io/hostname\n</code></pre>"},{"location":"k8s/cheatsheet/#132-security-best-practices","title":"13.2 Security Best Practices","text":"<pre><code># Security Checklist\n1. Use non-root containers\n2. Set resource limits\n3. Use read-only root filesystem\n4. Drop unnecessary capabilities\n5. Use network policies\n6. Implement RBAC\n7. Scan images for vulnerabilities\n8. Use secrets for sensitive data\n9. Enable audit logging\n10. Keep Kubernetes updated\n</code></pre> <p>\u0110\u00e2y l\u00e0 t\u00e0i li\u1ec7u to\u00e0n di\u1ec7n v\u1ec1 Kubernetes. H\u00e3y th\u1ef1c h\u00e0nh th\u01b0\u1eddng xuy\u00ean v\u1edbi c\u00e1c cluster th\u1ef1c t\u1ebf v\u00e0 kh\u00f4ng ng\u1eebng c\u1eadp nh\u1eadt ki\u1ebfn th\u1ee9c v\u1ec1 container orchestration!</p>"},{"location":"k8s/roadmap/","title":"Roadmap","text":"<p>note cho kh\u00f3a h\u1ecdc tr\u00ean udemy v\u1ec1 k8s</p> <p>https://notes.kodekloud.com/docs/CKA-Certification-Course-Certified-Kubernetes-Administrator/Introduction/Course-Introduction</p> <p>https://github.com/kodekloudhub/certified-kubernetes-administrator-course\\</p>"},{"location":"k8s/00.k8s-manifests/","title":"Kubernetes Manifests - Complete Project Structure","text":""},{"location":"k8s/00.k8s-manifests/#kubernetes-manifests-complete-project-structure","title":"Kubernetes Manifests - Complete Project Structure","text":""},{"location":"k8s/00.k8s-manifests/#project-structure","title":"\ud83d\udcc1 Project Structure","text":"<pre><code>k8s-manifests/\n\u251c\u2500\u2500 namespaces/           # Namespace definitions\n\u251c\u2500\u2500 configmaps/          # Configuration data\n\u251c\u2500\u2500 secrets/             # Sensitive data\n\u251c\u2500\u2500 deployments/         # Application deployments\n\u251c\u2500\u2500 services/            # Service definitions\n\u251c\u2500\u2500 ingress/             # Ingress controllers and rules\n\u251c\u2500\u2500 volumes/             # PersistentVolumes and Claims\n\u251c\u2500\u2500 rbac/                # Role-based access control\n\u251c\u2500\u2500 monitoring/          # Monitoring stack (Prometheus, Grafana)\n\u251c\u2500\u2500 logging/             # Logging stack (ELK)\n\u251c\u2500\u2500 networking/          # Network policies\n\u251c\u2500\u2500 security/            # Security policies\n\u251c\u2500\u2500 autoscaling/         # HPA and VPA\n\u251c\u2500\u2500 jobs/                # Jobs and CronJobs\n\u251c\u2500\u2500 operators/           # Custom operators\n\u251c\u2500\u2500 helm-charts/         # Helm chart templates\n\u2514\u2500\u2500 environments/        # Environment-specific configs\n    \u251c\u2500\u2500 development/\n    \u251c\u2500\u2500 staging/\n    \u2514\u2500\u2500 production/\n</code></pre>"},{"location":"k8s/00.k8s-manifests/#quick-start","title":"\ud83d\ude80 Quick Start","text":"<ol> <li>Apply namespaces first:</li> </ol> <pre><code>kubectl apply -f namespaces/\n</code></pre> <ol> <li>Apply configurations:</li> </ol> <pre><code>kubectl apply -f configmaps/\nkubectl apply -f secrets/\n</code></pre> <ol> <li>Apply core resources:</li> </ol> <pre><code>kubectl apply -f deployments/\nkubectl apply -f services/\nkubectl apply -f ingress/\n</code></pre> <ol> <li>Apply monitoring and logging:    <pre><code>kubectl apply -f monitoring/\nkubectl apply -f logging/\n</code></pre></li> </ol>"},{"location":"k8s/00.k8s-manifests/#components-included","title":"\ud83d\udccb Components Included","text":"<ul> <li>Applications: Frontend, Backend, Database</li> <li>Monitoring: Prometheus, Grafana, AlertManager</li> <li>Logging: Elasticsearch, Logstash, Kibana</li> <li>Ingress: Nginx Ingress Controller</li> <li>Security: Network Policies, Pod Security Policies</li> <li>Autoscaling: Horizontal Pod Autoscaler</li> <li>Storage: Persistent Volumes and Claims</li> <li>RBAC: Role-based Access Control</li> </ul>"},{"location":"k8s/01.core/00/","title":"00","text":"<p>kubectl api-resources</p>"},{"location":"k8s/01.core/01.cluster-architecture/","title":"01.cluster architecture","text":""},{"location":"k8s/01.core/01.cluster-architecture/#kien-truc-kubernetes-qua-phep-so-sanh-tau-thuyen","title":"Ki\u1ebfn tr\u00fac Kubernetes qua ph\u00e9p so s\u00e1nh T\u00e0u Thuy\u1ec1n","text":"<p>M\u1ee5c \u0111\u00edch c\u1ee7a Kubernetes l\u00e0 t\u1ef1 \u0111\u1ed9ng h\u00f3a vi\u1ec7c tri\u1ec3n khai v\u00e0 qu\u1ea3n l\u00fd c\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n d\u01b0\u1edbi d\u1ea1ng container. H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng b\u1ea1n \u0111ang qu\u1ea3n l\u00fd m\u1ed9t h\u1ea1m \u0111\u1ed9i t\u00e0u bi\u1ec3n kh\u1ed5ng l\u1ed3:</p> <ul> <li>T\u00e0u H\u00e0ng (Cargo Ships) \ud83d\udea2: \u0110\u00e2y l\u00e0 nh\u1eefng con t\u00e0u l\u00e0m c\u00f4ng vi\u1ec7c th\u1ef1c t\u1ebf - chuy\u00ean ch\u1edf c\u00e1c container (\u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n). Trong Kubernetes, ch\u00fang ch\u00ednh l\u00e0 c\u00e1c Worker Node.</li> <li>T\u00e0u Ch\u1ec9 Huy (Control Ships) \u0110\u00e2y l\u00e0 nh\u1eefng con t\u00e0u \u0111\u1ea7u n\u00e3o, kh\u00f4ng ch\u1edf h\u00e0ng m\u00e0 l\u00e0m nhi\u1ec7m v\u1ee5 qu\u1ea3n l\u00fd, gi\u00e1m s\u00e1t, v\u00e0 \u0111i\u1ec1u ph\u1ed1i to\u00e0n b\u1ed9 h\u1ea1m \u0111\u1ed9i t\u00e0u h\u00e0ng. Trong Kubernetes, \u0111\u00e2y ch\u00ednh l\u00e0 Master Node.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#mot-cum-kubernetes-kubernetes-cluster-bao-gom-mot-hoac-nhieu-master-node-va-nhieu-worker-node","title":"M\u1ed9t c\u1ee5m Kubernetes (Kubernetes cluster) bao g\u1ed3m m\u1ed9t ho\u1eb7c nhi\u1ec1u Master Node v\u00e0 nhi\u1ec1u Worker Node.","text":""},{"location":"k8s/01.core/01.cluster-architecture/#ben-trong-tau-chi-huy-master-node-control-plane","title":"B\u00ean trong \"T\u00e0u Ch\u1ec9 Huy\" (Master Node Control Plane)","text":"<p>Master Node l\u00e0 b\u1ed9 n\u00e3o c\u1ee7a c\u1ea3 c\u1ee5m, n\u00f3 \u0111i\u1ec1u h\u00e0nh m\u1ecdi th\u1ee9 th\u00f4ng qua m\u1ed9t b\u1ed9 c\u00e1c th\u00e0nh ph\u1ea7n g\u1ecdi l\u00e0 Control Plane.</p>"},{"location":"k8s/01.core/01.cluster-architecture/#etcd-kho-du-lieu-cua-ham-oi","title":"<code>etcd</code> - Kho D\u1eef li\u1ec7u c\u1ee7a H\u1ea1m \u0111\u1ed9i","text":"<ul> <li>So s\u00e1nh: Gi\u1ed1ng nh\u01b0 cu\u1ed1n s\u1ed5 nh\u1eadt k\u00fd kh\u1ed5ng l\u1ed3 c\u1ee7a h\u1ea1m \u0111\u1ed9i, l\u01b0u tr\u1eef m\u1ecdi th\u00f4ng tin: c\u00f3 bao nhi\u00eau con t\u00e0u, t\u00e0u n\u00e0o \u0111ang ch\u1edf container g\u00ec, container \u0111\u01b0\u1ee3c x\u1ebfp l\u00ean l\u00fac n\u00e0o, v.v.</li> <li>Th\u1ef1c t\u1ebf: <code>etcd</code> l\u00e0 m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u d\u1ea1ng key-value c\u00f3 t\u00ednh s\u1eb5n s\u00e0ng cao (highly available). N\u00f3 l\u01b0u tr\u1eef to\u00e0n b\u1ed9 tr\u1ea1ng th\u00e1i v\u00e0 c\u1ea5u h\u00ecnh c\u1ee7a c\u1ee5m Kubernetes. M\u1ecdi th\u00f4ng tin v\u1ec1 nodes, pods (containers), services,... \u0111\u1ec1u n\u1eb1m trong <code>etcd</code>.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-scheduler-nguoi-ieu-phoi-xep-do","title":"<code>kube-scheduler</code> - Ng\u01b0\u1eddi \u0110i\u1ec1u Ph\u1ed1i X\u1ebfp D\u1ee1","text":"<ul> <li>So s\u00e1nh: Gi\u1ed1ng nh\u01b0 nh\u1eefng chi\u1ebfc c\u1ea7n c\u1ea9u th\u00f4ng minh \u1edf b\u1ebfn c\u1ea3ng. Khi c\u00f3 m\u1ed9t container c\u1ea7n x\u1ebfp l\u00ean t\u00e0u, c\u1ea7n c\u1ea9u s\u1ebd x\u00e1c \u0111\u1ecbnh con t\u00e0u n\u00e0o l\u00e0 ph\u00f9 h\u1ee3p nh\u1ea5t d\u1ef1a tr\u00ean k\u00edch th\u01b0\u1edbc, s\u1ee9c ch\u1ee9a c\u00f2n l\u1ea1i, lo\u1ea1i h\u00e0ng \u0111\u01b0\u1ee3c ph\u00e9p ch\u1edf, v.v.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-scheduler</code> c\u00f3 nhi\u1ec7m v\u1ee5 t\u00ecm m\u1ed9t Worker Node ph\u00f9 h\u1ee3p nh\u1ea5t \u0111\u1ec3 ch\u1ea1y m\u1ed9t Pod (m\u1ed9t ho\u1eb7c nhi\u1ec1u container) m\u1edbi \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u. N\u00f3 xem x\u00e9t c\u00e1c y\u1ebfu t\u1ed1 nh\u01b0 t\u00e0i nguy\u00ean y\u00eau c\u1ea7u c\u1ee7a Pod (CPU, memory) v\u00e0 t\u00e0i nguy\u00ean c\u00f2n tr\u1ed1ng c\u1ee7a c\u00e1c Node.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-controller-manager-ban-quan-ly-cac-phong-ban","title":"<code>kube-controller-manager</code> - Ban Qu\u1ea3n l\u00fd c\u00e1c Ph\u00f2ng ban","text":"<ul> <li>So s\u00e1nh: T\u00e0u ch\u1ec9 huy c\u00f3 nhi\u1ec1u ph\u00f2ng ban chuy\u00ean tr\u00e1ch: ph\u00f2ng \u0111i\u1ec1u h\u00e0nh lo vi\u1ec7c v\u1eadn t\u1ea3i, ph\u00f2ng h\u00e0ng h\u00f3a lo c\u00e1c container, ph\u00f2ng IT lo vi\u1ec7c li\u00ean l\u1ea1c.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-controller-manager</code> qu\u1ea3n l\u00fd nhi\u1ec1u \"b\u1ed9 \u0111i\u1ec1u khi\u1ec3n\" (controllers) kh\u00e1c nhau, m\u1ed7i controller l\u00e0 m\u1ed9t v\u00f2ng l\u1eb7p theo d\u00f5i tr\u1ea1ng th\u00e1i c\u1ee7a c\u1ee5m v\u00e0 c\u1ed1 g\u1eafng \u0111\u01b0a n\u00f3 v\u1ec1 tr\u1ea1ng th\u00e1i mong mu\u1ed1n.</li> <li>Node Controller: Ch\u0103m s\u00f3c c\u00e1c Node. N\u00f3 ch\u1ecbu tr\u00e1ch nhi\u1ec7m khi m\u1ed9t Node m\u1edbi tham gia v\u00e0o c\u1ee5m, ho\u1eb7c khi m\u1ed9t Node \"ch\u1ebft\" ho\u1eb7c kh\u00f4ng th\u1ec3 truy c\u1eadp.</li> <li>Replication Controller: \u0110\u1ea3m b\u1ea3o s\u1ed1 l\u01b0\u1ee3ng b\u1ea3n sao (replicas) c\u1ee7a m\u1ed9t \u1ee9ng d\u1ee5ng lu\u00f4n \u0111\u00fang nh\u01b0 b\u1ea1n \u0111\u00e3 khai b\u00e1o.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-api-server-tong-ai-giao-tiep-trung-tam","title":"<code>kube-api-server</code> - \"T\u1ed5ng \u0110\u00e0i\" Giao ti\u1ebfp Trung t\u00e2m","text":"<ul> <li>So s\u00e1nh: \u0110\u00e2y l\u00e0 trung t\u00e2m ch\u1ec9 huy, n\u01a1i t\u1ea5t c\u1ea3 c\u00e1c ph\u00f2ng ban, c\u00e1c t\u00e0u h\u00e0ng, v\u00e0 c\u1ea3 ng\u01b0\u1eddi qu\u1ea3n l\u00fd t\u1eeb b\u00ean ngo\u00e0i li\u00ean l\u1ea1c v\u1edbi nhau. M\u1ecdi m\u1ec7nh l\u1ec7nh \u0111\u1ec1u \u0111i qua \u0111\u00e2y.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-api-server</code> l\u00e0 th\u00e0nh ph\u1ea7n trung t\u00e2m v\u00e0 quan tr\u1ecdng nh\u1ea5t. N\u00f3 ph\u01a1i b\u00e0y ra Kubernetes API. M\u1ecdi t\u01b0\u01a1ng t\u00e1c v\u1edbi c\u1ee5m Kubernetes \u0111\u1ec1u ph\u1ea3i th\u00f4ng qua API Server.</li> <li>Ng\u01b0\u1eddi d\u00f9ng (d\u00f9ng <code>kubectl</code>), c\u00e1c controller, v\u00e0 c\u1ea3 c\u00e1c worker node \u0111\u1ec1u n\u00f3i chuy\u1ec7n v\u1edbi nhau th\u00f4ng qua <code>kube-api-server</code>.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#tren-tau-hang-worker-node","title":"Tr\u00ean \"T\u00e0u H\u00e0ng\" (Worker Node)","text":"<p>\u0110\u00e2y l\u00e0 n\u01a1i c\u00e1c container \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\u1ef1c s\u1ef1 ch\u1ea1y. M\u1ed7i Worker Node c\u0169ng c\u00f3 c\u00e1c th\u00e0nh ph\u1ea7n quan tr\u1ecdng ri\u00eang.</p>"},{"location":"k8s/01.core/01.cluster-architecture/#container-runtime-engine-vi-du-docker-ong-co-chay-container","title":"Container Runtime Engine (v\u00ed d\u1ee5: Docker) - \u0110\u1ed9ng c\u01a1 Ch\u1ea1y Container","text":"<ul> <li>So s\u00e1nh: \u0110\u1ec3 ch\u1edf \u0111\u01b0\u1ee3c container, con t\u00e0u ph\u1ea3i \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 t\u01b0\u01a1ng th\u00edch v\u1edbi container.</li> <li>Th\u1ef1c t\u1ebf: \u0110\u00e2y l\u00e0 ph\u1ea7n m\u1ec1m ch\u1ecbu tr\u00e1ch nhi\u1ec7m ch\u1ea1y c\u00e1c container. Docker l\u00e0 m\u1ed9t l\u1ef1a ch\u1ecdn ph\u1ed5 bi\u1ebfn, nh\u01b0ng Kubernetes c\u0169ng h\u1ed7 tr\u1ee3 c\u00e1c runtime kh\u00e1c nh\u01b0 ContainerD, Rocket (rkt). N\u00f3 ph\u1ea3i \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c node trong c\u1ee5m.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kubelet-thuyen-truong-cua-tau-hang","title":"<code>kubelet</code> - Thuy\u1ec1n tr\u01b0\u1edfng c\u1ee7a T\u00e0u H\u00e0ng","text":"<ul> <li>So s\u00e1nh: M\u1ed7i t\u00e0u h\u00e0ng c\u00f3 m\u1ed9t thuy\u1ec1n tr\u01b0\u1edfng, ch\u1ecbu tr\u00e1ch nhi\u1ec7m qu\u1ea3n l\u00fd m\u1ecdi ho\u1ea1t \u0111\u1ed9ng tr\u00ean t\u00e0u m\u00ecnh. Thuy\u1ec1n tr\u01b0\u1edfng nh\u1eadn l\u1ec7nh t\u1eeb t\u00e0u ch\u1ec9 huy, x\u1ebfp d\u1ee1 container theo y\u00eau c\u1ea7u, v\u00e0 b\u00e1o c\u00e1o t\u00ecnh tr\u1ea1ng c\u1ee7a t\u00e0u v\u00e0 h\u00e0ng h\u00f3a v\u1ec1 trung t\u00e2m.</li> <li>Th\u1ef1c t\u1ebf: <code>kubelet</code> l\u00e0 m\u1ed9t agent ch\u1ea1y tr\u00ean m\u1ed7i Worker Node. N\u00f3 l\u1eafng nghe ch\u1ec9 th\u1ecb t\u1eeb <code>kube-api-server</code> v\u00e0 \u0111\u1ea3m b\u1ea3o r\u1eb1ng c\u00e1c container \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 trong c\u00e1c Pod \u0111ang ch\u1ea1y v\u00e0 kh\u1ecfe m\u1ea1nh tr\u00ean node c\u1ee7a n\u00f3. N\u00f3 c\u0169ng g\u1eedi b\u00e1o c\u00e1o tr\u1ea1ng th\u00e1i c\u1ee7a node v\u00e0 c\u00e1c container v\u1ec1 cho Master Node.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-proxy-nguoi-dan-loi-mang","title":"<code>kube-proxy</code> - Ng\u01b0\u1eddi D\u1eabn L\u1ed1i M\u1ea1ng","text":"<ul> <li>So s\u00e1nh: C\u00e1c \u1ee9ng d\u1ee5ng tr\u00ean c\u00e1c t\u00e0u h\u00e0ng kh\u00e1c nhau c\u1ea7n n\u00f3i chuy\u1ec7n \u0111\u01b0\u1ee3c v\u1edbi nhau (v\u00ed d\u1ee5: web server tr\u00ean t\u00e0u A c\u1ea7n g\u1ecdi \u0111\u1ebfn database tr\u00ean t\u00e0u B). <code>kube-proxy</code> t\u1ea1o ra c\u00e1c tuy\u1ebfn \u0111\u01b0\u1eddng li\u00ean l\u1ea1c \u0111\u00f3.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-proxy</code> l\u00e0 m\u1ed9t network proxy ch\u1ea1y tr\u00ean m\u1ed7i node. N\u00f3 duy tr\u00ec c\u00e1c quy t\u1eafc m\u1ea1ng (network rules) tr\u00ean c\u00e1c node, cho ph\u00e9p giao ti\u1ebfp m\u1ea1ng \u0111\u1ebfn c\u00e1c Pod t\u1eeb b\u00ean trong ho\u1eb7c b\u00ean ngo\u00e0i c\u1ee5m. N\u00f3 l\u00e0 th\u00e0nh ph\u1ea7n ch\u00ednh gi\u00fap th\u1ef1c hi\u1ec7n c\u01a1 ch\u1ebf Service Discovery trong Kubernetes.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#tom-tat-kien-truc","title":"T\u00f3m t\u1eaft Ki\u1ebfn tr\u00fac","text":"<ul> <li>Master Node (Control Plane):</li> <li><code>etcd</code> (L\u01b0u tr\u1eef tr\u1ea1ng th\u00e1i)</li> <li><code>kube-scheduler</code> (Ch\u1ecdn Node cho Pod)</li> <li><code>kube-controller-manager</code> (Qu\u1ea3n l\u00fd c\u00e1c controller)</li> <li><code>kube-api-server</code> (C\u1ed5ng giao ti\u1ebfp ch\u00ednh)</li> <li>Worker Node:</li> <li><code>kubelet</code> (Agent qu\u1ea3n l\u00fd container tr\u00ean Node)</li> <li><code>kube-proxy</code> (Qu\u1ea3n l\u00fd m\u1ea1ng cho Node)</li> <li><code>Container Runtime</code> (Ph\u1ea7n m\u1ec1m ch\u1ea1y container)</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#chot-ha-cho-ky-thi","title":"\"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li>N\u1eafm v\u1eefng s\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa Master Node v\u00e0 Worker Node.</li> <li>Hi\u1ec3u r\u00f5 vai tr\u00f2 v\u00e0 tr\u00e1ch nhi\u1ec7m c\u1ee7a t\u1eebng th\u00e0nh ph\u1ea7n c\u1ed1t l\u00f5i: <code>etcd</code>, <code>api-server</code>, <code>scheduler</code>, <code>controller-manager</code>, <code>kubelet</code>, <code>kube-proxy</code>.</li> <li>H\u00e3y nh\u1edb r\u1eb1ng m\u1ecdi giao ti\u1ebfp \u0111\u1ec1u \u0111i qua <code>kube-api-server</code>.</li> <li><code>kubelet</code> l\u00e0 \"tay ch\u00e2n\" c\u1ee7a Master tr\u00ean m\u1ed7i Worker Node.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/","title":"02 03.docker containerd","text":""},{"location":"k8s/01.core/02-03.docker-containerd/#1-cau-chuyen-lich-su-docker-kubernetes-va-su-ra-oi-cua-cri","title":"1. C\u00e2u chuy\u1ec7n L\u1ecbch s\u1eed: Docker, Kubernetes v\u00e0 s\u1ef1 ra \u0111\u1eddi c\u1ee7a CRI","text":"<ul> <li>Thu\u1edf s\u01a1 khai: Docker l\u00e0 \"vua\" c\u1ee7a th\u1ebf gi\u1edbi container. Kubernetes ban \u0111\u1ea7u \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng \u0111\u1ec3 d\u00e0n d\u1ef1ng (orchestrate) chuy\u00ean bi\u1ec7t cho Docker. L\u00fac n\u00e0y, ch\u00fang \"d\u00ednh li\u1ec1n\" v\u1edbi nhau.</li> <li>S\u1ef1 tr\u1ed7i d\u1eady: Kubernetes ng\u00e0y c\u00e0ng ph\u1ed5 bi\u1ebfn, v\u00e0 c\u00e1c container runtime kh\u00e1c (nh\u01b0 <code>rkt</code>) c\u0169ng mu\u1ed1n \u0111\u01b0\u1ee3c Kubernetes h\u1ed7 tr\u1ee3. C\u1ed9ng \u0111\u1ed3ng c\u1ea7n Kubernetes ph\u1ea3i l\u00e0m vi\u1ec7c \u0111\u01b0\u1ee3c v\u1edbi nhi\u1ec1u runtime ch\u1ee9 kh\u00f4ng ch\u1ec9 ri\u00eang Docker.</li> <li> <p>Gi\u1ea3i ph\u00e1p: CRI (Container Runtime Interface): Kubernetes gi\u1edbi thi\u1ec7u CRI - m\u1ed9t giao di\u1ec7n chu\u1ea9n. B\u1ea5t k\u1ef3 container runtime n\u00e0o tu\u00e2n th\u1ee7 ti\u00eau chu\u1ea9n OCI (Open Container Initiative) \u0111\u1ec1u c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c v\u1edbi Kubernetes th\u00f4ng qua CRI.</p> </li> <li> <p>OCI \u0111\u1ecbnh ngh\u0129a ti\u00eau chu\u1ea9n v\u1ec1 c\u00e1ch build m\u1ed9t image (<code>imagespec</code>) v\u00e0 c\u00e1ch m\u1ed9t runtime ho\u1ea1t \u0111\u1ed9ng (<code>runtimespec</code>).</p> </li> <li> <p>V\u1ea5n \u0111\u1ec1 c\u1ee7a Docker: Docker ra \u0111\u1eddi tr\u01b0\u1edbc khi c\u00f3 CRI, n\u00ean n\u00f3 kh\u00f4ng t\u01b0\u01a1ng th\u00edch tr\u1ef1c ti\u1ebfp v\u1edbi chu\u1ea9n n\u00e0y.</p> </li> <li>Mi\u1ebfng v\u00e1 \"t\u1ea1m b\u1ee3\": <code>dockershim</code>: V\u00ec Docker qu\u00e1 ph\u1ed5 bi\u1ebfn, Kubernetes \u0111\u00e3 t\u1ea1o ra m\u1ed9t \"mi\u1ebfng v\u00e1\" t\u00ean l\u00e0 <code>dockershim</code>. \u0110\u00e2y l\u00e0 m\u1ed9t c\u1ea7u n\u1ed1i t\u1ea1m th\u1eddi \u0111\u1ec3 Kubernetes c\u00f3 th\u1ec3 ti\u1ebfp t\u1ee5c h\u1ed7 tr\u1ee3 Docker engine.</li> <li>Cu\u1ed9c chia ly \u0111\u1ecbnh m\u1ec7nh (Kubernetes v1.24): Vi\u1ec7c duy tr\u00ec <code>dockershim</code> ng\u00e0y c\u00e0ng tr\u1edf th\u00e0nh g\u00e1nh n\u1eb7ng. Do \u0111\u00f3, t\u1eeb phi\u00ean b\u1ea3n 1.24, Kubernetes \u0111\u00e3 lo\u1ea1i b\u1ecf ho\u00e0n to\u00e0n <code>dockershim</code>, \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c ch\u1ea5m d\u1ee9t h\u1ed7 tr\u1ee3 tr\u1ef1c ti\u1ebfp Docker engine nh\u01b0 m\u1ed9t container runtime.</li> </ul> <p>L\u01b0u \u00fd c\u1ef1c k\u1ef3 quan tr\u1ecdng: C\u00e1c Docker image m\u00e0 b\u1ea1n \u0111\u00e3 build v\u1eabn ho\u1ea1t \u0111\u1ed9ng b\u00ecnh th\u01b0\u1eddng! V\u00ec Docker build image theo chu\u1ea9n OCI <code>imagespec</code>, n\u00ean c\u00e1c runtime t\u01b0\u01a1ng th\u00edch CRI kh\u00e1c (nh\u01b0 Containerd) v\u1eabn c\u00f3 th\u1ec3 ch\u1ea1y ch\u00fang ngon l\u00e0nh. Ch\u1ec9 c\u00f3 Docker engine l\u00e0 kh\u00f4ng c\u00f2n \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 tr\u1ef1c ti\u1ebfp n\u1eefa th\u00f4i.</p>"},{"location":"k8s/01.core/02-03.docker-containerd/#2-hieu-ve-containerd-trai-tim-cua-docker","title":"2. Hi\u1ec3u v\u1ec1 Containerd - \"Tr\u00e1i tim\" c\u1ee7a Docker","text":"<ul> <li>Docker kh\u00f4ng ch\u1ec9 l\u00e0 m\u1ed9t runtime. N\u00f3 l\u00e0 m\u1ed9t b\u1ed9 c\u00f4ng c\u1ee5 bao g\u1ed3m Docker CLI, API, build tools,... v\u00e0 b\u00ean trong n\u00f3 ch\u00ednh l\u00e0 Containerd - th\u00e0nh ph\u1ea7n c\u1ed1t l\u00f5i ch\u1ecbu tr\u00e1ch nhi\u1ec7m ch\u1ea1y container.</li> <li>Containerd v\u1ed1n d\u0129 \u0111\u00e3 t\u01b0\u01a1ng th\u00edch v\u1edbi CRI. Hi\u1ec7n nay, n\u00f3 \u0111\u00e3 l\u00e0 m\u1ed9t d\u1ef1 \u00e1n \u0111\u1ed9c l\u1eadp, t\u1ed1t nghi\u1ec7p t\u1ea1i CNCF. B\u1ea1n c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t v\u00e0 s\u1eed d\u1ee5ng ri\u00eang Containerd m\u00e0 kh\u00f4ng c\u1ea7n c\u00e0i c\u1ea3 b\u1ed9 Docker engine.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#3-dung-cu-trong-ky-nguyen-moi-ctr-vs-nerdctl-vs-crictl","title":"3. \"D\u1ee5ng c\u1ee5\" trong K\u1ef7 nguy\u00ean m\u1edbi: <code>ctr</code> vs. <code>nerdctl</code> vs. <code>crictl</code>","text":"<p>Khi kh\u00f4ng c\u00f2n <code>docker</code> tr\u00ean c\u00e1c node Kubernetes, ch\u00fang ta s\u1ebd d\u00f9ng g\u00ec \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi container? \u0110\u00e2y l\u00e0 3 c\u00f4ng c\u1ee5 b\u1ea1n c\u1ea7n ph\u00e2n bi\u1ec7t:</p>"},{"location":"k8s/01.core/02-03.docker-containerd/#ctr","title":"<code>ctr</code>","text":"<ul> <li>Ngu\u1ed3n g\u1ed1c: \u0110i k\u00e8m khi b\u1ea1n c\u00e0i \u0111\u1eb7t Containerd.</li> <li>M\u1ee5c \u0111\u00edch: Ch\u1ec9 d\u00f9ng \u0111\u1ec3 debug Containerd. N\u00f3 c\u00f3 r\u1ea5t \u00edt t\u00ednh n\u0103ng v\u00e0 kh\u00f4ng th\u00e2n thi\u1ec7n v\u1edbi ng\u01b0\u1eddi d\u00f9ng.</li> <li>K\u1ebft lu\u1eadn: Trong th\u1ef1c t\u1ebf, b\u1ea1n g\u1ea7n nh\u01b0 s\u1ebd kh\u00f4ng d\u00f9ng \u0111\u1ebfn n\u00f3. C\u00f3 th\u1ec3 b\u1ecf qua.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#nerdctl-nerd-control","title":"<code>nerdctl</code> (Nerd Control)","text":"<ul> <li>Ngu\u1ed3n g\u1ed1c: T\u1eeb c\u1ed9ng \u0111\u1ed3ng Containerd.</li> <li>M\u1ee5c \u0111\u00edch: L\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 d\u00f2ng l\u1ec7nh gi\u1ed1ng h\u1ec7t Docker (Docker-like CLI) d\u00e0nh ri\u00eang cho Containerd. D\u00f9ng cho m\u1ee5c \u0111\u00edch ph\u1ed5 th\u00f4ng (general purpose).</li> <li>\u0110i\u1ec3m m\u1ea1nh: C\u00fa ph\u00e1p g\u1ea7n nh\u01b0 y h\u1ec7t <code>docker</code>. B\u1ea1n ch\u1ec9 c\u1ea7n thay <code>docker</code> b\u1eb1ng <code>nerdctl</code>. V\u00ed d\u1ee5: <code>nerdctl run</code>, <code>nerdctl ps</code>, <code>nerdctl images</code>. N\u00f3 c\u00f2n h\u1ed7 tr\u1ee3 c\u00e1c t\u00ednh n\u0103ng m\u1edbi h\u01a1n c\u1ee7a Containerd m\u00e0 Docker ch\u01b0a c\u00f3.</li> <li>K\u1ebft lu\u1eadn: \u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 b\u1ea1n n\u00ean d\u00f9ng n\u1ebfu mu\u1ed1n c\u00f3 tr\u1ea3i nghi\u1ec7m t\u01b0\u01a1ng t\u1ef1 Docker \u0111\u1ec3 qu\u1ea3n l\u00fd container khi ch\u1ec9 c\u00f3 Containerd.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#crictl-cri-control","title":"<code>crictl</code> (CRI Control)","text":"<ul> <li>Ngu\u1ed3n g\u1ed1c: T\u1eeb c\u1ed9ng \u0111\u1ed3ng Kubernetes.</li> <li>M\u1ee5c \u0111\u00edch: L\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 d\u00f2ng l\u1ec7nh \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u00e0 debug B\u1ea4T K\u1ef2 CRI-compatible runtime n\u00e0o (kh\u00f4ng ch\u1ec9 ri\u00eang Containerd). \u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 nh\u00ecn t\u1eeb \"g\u00f3c \u0111\u1ed9 c\u1ee7a Kubernetes\".</li> <li>\u0110i\u1ec3m m\u1ea1nh:</li> <li>Ho\u1ea1t \u0111\u1ed9ng tr\u00ean nhi\u1ec1u runtime kh\u00e1c nhau.</li> <li>C\u00fa ph\u00e1p c\u0169ng r\u1ea5t gi\u1ed1ng <code>docker</code> cho c\u00e1c l\u1ec7nh c\u01a1 b\u1ea3n (<code>ps</code>, <code>logs</code>, <code>exec</code>, <code>images</code>...).</li> <li>N\u00f3 \"hi\u1ec3u\" v\u1ec1 Pod (<code>crictl pods</code>), \u0111i\u1ec1u m\u00e0 Docker kh\u00f4ng c\u00f3.</li> <li>S\u1eed d\u1ee5ng:</li> <li>\u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 thay th\u1ebf cho <code>docker</code> khi b\u1ea1n c\u1ea7n troubleshoot container tr\u00ean m\u1ed9t Kubernetes node. V\u00ed d\u1ee5, ng\u00e0y x\u01b0a b\u1ea1n <code>ssh</code> v\u00e0o worker node v\u00e0 g\u00f5 <code>docker ps</code>, th\u00ec b\u00e2y gi\u1edd b\u1ea1n s\u1ebd g\u00f5 <code>crictl ps</code>.</li> <li>L\u01b0u \u00fd: <code>crictl</code> ch\u1ee7 y\u1ebfu d\u00f9ng \u0111\u1ec3 debug. B\u1ea1n kh\u00f4ng n\u00ean d\u00f9ng n\u00f3 \u0111\u1ec3 t\u1ea1o container th\u1ee7 c\u00f4ng, v\u00ec <code>kubelet</code> s\u1ebd kh\u00f4ng bi\u1ebft v\u1ec1 container \u0111\u00f3 v\u00e0 c\u00f3 th\u1ec3 s\u1ebd x\u00f3a n\u00f3 \u0111i.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#4-bang-so-sanh-nhanh","title":"4. B\u1ea3ng so s\u00e1nh \"Nhanh\"","text":"C\u00f4ng c\u1ee5 M\u1ee5c \u0111\u00edch C\u1ed9ng \u0111\u1ed3ng Ph\u1ea1m vi <code>ctr</code> Debugging Containerd Ch\u1ec9 Containerd <code>nerdctl</code> Ph\u1ed5 th\u00f4ng (Gi\u1ed1ng Docker) Containerd Ch\u1ec9 Containerd <code>crictl</code> Debugging (Tr\u00ean K8s node) Kubernetes M\u1ecdi CRI-compatible runtime"},{"location":"k8s/01.core/02-03.docker-containerd/#5-chot-ha-cho-ky-thi","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li>Hi\u1ec3u r\u00f5 qu\u00e1 tr\u00ecnh Kubernetes chuy\u1ec3n t\u1eeb ph\u1ee5 thu\u1ed9c <code>dockershim</code> sang th\u1ebf gi\u1edbi CRI thu\u1ea7n t\u00fay.</li> <li>Khi n\u00e0o d\u00f9ng g\u00ec?</li> <li><code>nerdctl</code>: D\u00f9ng khi b\u1ea1n mu\u1ed1n c\u00f3 m\u1ed9t tr\u1ea3i nghi\u1ec7m gi\u1ed1ng Docker \u0111\u1ec3 qu\u1ea3n l\u00fd container n\u00f3i chung v\u1edbi Containerd.</li> <li><code>crictl</code>: D\u00f9ng khi b\u1ea1n \u0111ang \u1edf tr\u00ean m\u1ed9t node Kubernetes v\u00e0 c\u1ea7n troubleshoot/debug c\u00e1c container v\u00e0 pod. \u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 ch\u1ea9n \u0111o\u00e1n ch\u00ednh c\u1ee7a b\u1ea1n tr\u00ean K8s node ng\u00e0y nay.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#docker-bi-khai-tu-trong-kubernetes-hieu-sao-cho-ung","title":"\"Docker b\u1ecb khai t\u1eed\" trong Kubernetes - Hi\u1ec3u sao cho \u0111\u00fang? \ud83e\udd14","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t \u0111i\u1ec3m g\u00e2y nhi\u1ec1u nh\u1ea7m l\u1eabn. \"Khai t\u1eed\" \u1edf \u0111\u00e2y kh\u00f4ng c\u00f3 ngh\u0129a l\u00e0 Docker \u0111\u00e3 \"ch\u1ebft\" ho\u00e0n to\u00e0n. N\u00f3 ch\u1ec9 c\u00f3 ngh\u0129a l\u00e0 \u0111\u00e3 c\u00f3 m\u1ed9t s\u1ef1 thay \u0111\u1ed5i l\u1edbn trong c\u00e1ch Kubernetes l\u00e0m vi\u1ec7c v\u1edbi container runtime.</p>"},{"location":"k8s/01.core/02-03.docker-containerd/#1-tom-tat-lai-cuoc-chia-ly","title":"1. T\u00f3m t\u1eaft l\u1ea1i \"Cu\u1ed9c chia ly\"","text":"<ul> <li> <p>Docker kh\u00f4ng ch\u1ec9 l\u00e0 m\u1ed9t runtime: B\u1ea1n c\u1ea7n nh\u1edb r\u1eb1ng, Docker l\u00e0 m\u1ed9t b\u1ed9 c\u00f4ng c\u1ee5 ho\u00e0n ch\u1ec9nh, bao g\u1ed3m:</p> </li> <li> <p>Docker CLI (d\u00f2ng l\u1ec7nh <code>docker</code>)</p> </li> <li>API</li> <li>C\u00f4ng c\u1ee5 build image</li> <li>Qu\u1ea3n l\u00fd volumes, networking, auth...</li> <li> <p>V\u00e0 quan tr\u1ecdng nh\u1ea5t, b\u00ean trong n\u00f3 ch\u1ee9a th\u00e0nh ph\u1ea7n runtime c\u1ed1t l\u00f5i l\u00e0 <code>Containerd</code>.</p> </li> <li> <p><code>Containerd</code> m\u1edbi l\u00e0 th\u1ee9 Kubernetes c\u1ea7n:</p> </li> <li> <p><code>Containerd</code> l\u00e0 ph\u1ea7n ch\u1ecbu tr\u00e1ch nhi\u1ec7m th\u1ef1c thi v\u00e0 qu\u1ea3n l\u00fd v\u00f2ng \u0111\u1eddi c\u1ee7a container.</p> </li> <li>N\u00f3 ho\u00e0n to\u00e0n t\u01b0\u01a1ng th\u00edch v\u1edbi CRI (Container Runtime Interface) - ti\u00eau chu\u1ea9n m\u00e0 Kubernetes d\u00f9ng \u0111\u1ec3 giao ti\u1ebfp v\u1edbi c\u00e1c container runtime.</li> <li> <p>Do \u0111\u00f3, Kubernetes c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c tr\u1ef1c ti\u1ebfp v\u1edbi <code>Containerd</code> (ho\u1eb7c c\u00e1c CRI-compatible runtime kh\u00e1c).</p> </li> <li> <p>V\u1eady t\u1ea1i sao Kubernetes kh\u00f4ng c\u1ea7n Docker Engine n\u1eefa?</p> </li> <li> <p>Kubernetes \u0111\u00e3 c\u00f3 c\u01a1 ch\u1ebf ri\u00eang \u0111\u1ec3 qu\u1ea3n l\u00fd m\u1ea1ng, volumes, v\u00e0 c\u00e1c t\u00e1c v\u1ee5 kh\u00e1c. N\u00f3 kh\u00f4ng c\u1ea7n \u0111\u1ebfn c\u00e1c c\u00f4ng c\u1ee5 ph\u1ee5 tr\u1ee3 \u0111i k\u00e8m trong b\u1ed9 Docker Engine.</p> </li> <li>Kubernetes ch\u1ec9 c\u1ea7n m\u1ed9t th\u1ee9 duy nh\u1ea5t t\u1eeb b\u1ed9 Docker: th\u00e0nh ph\u1ea7n runtime. V\u00e0 v\u00ec n\u00f3 c\u00f3 th\u1ec3 n\u00f3i chuy\u1ec7n tr\u1ef1c ti\u1ebfp v\u1edbi <code>Containerd</code>, vi\u1ec7c ph\u1ea3i \u0111i qua c\u1ea3 m\u1ed9t Docker Engine c\u1ed3ng k\u1ec1nh tr\u1edf n\u00ean kh\u00f4ng c\u1ea7n thi\u1ebft v\u00e0 ph\u1ee9c t\u1ea1p (ph\u1ea3i th\u00f4ng qua <code>dockershim</code>).</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#2-vay-docker-chet-that-hay-khong","title":"2. V\u1eady Docker \"ch\u1ebft\" th\u1eadt hay kh\u00f4ng? \ud83d\udc7b","text":"<p>C\u00e2u tr\u1ea3 l\u1eddi d\u1ee9t kho\u00e1t l\u00e0: KH\u00d4NG! \ud83d\udeab</p> <ul> <li>Docker v\u1eabn l\u00e0 c\u00f4ng c\u1ee5 container ph\u1ed5 bi\u1ebfn nh\u1ea5t v\u00e0 \u0111\u01b0\u1ee3c h\u00e0ng tri\u1ec7u l\u1eadp tr\u00ecnh vi\u00ean s\u1eed d\u1ee5ng h\u00e0ng ng\u00e0y cho vi\u1ec7c ph\u00e1t tri\u1ec3n c\u1ee5c b\u1ed9 (local development) v\u00e0 build image.</li> <li>S\u1ef1 thay \u0111\u1ed5i n\u00e0y ch\u1ec9 c\u00f3 ngh\u0129a l\u00e0: Kubernetes kh\u00f4ng c\u00f2n y\u00eau c\u1ea7u Docker Engine l\u00e0m container runtime cho n\u00f3 n\u1eefa.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#3-ap-dung-trong-khoa-hoc-nay-va-thuc-te","title":"3. \u00c1p d\u1ee5ng trong kh\u00f3a h\u1ecdc n\u00e0y v\u00e0 th\u1ef1c t\u1ebf","text":"<ul> <li>Trong c\u00e1c b\u00e0i h\u1ecdc, vi\u1ec7c ti\u1ebfp t\u1ee5c d\u00f9ng Docker l\u00e0m v\u00ed d\u1ee5 \u0111\u1ec3 gi\u1ea3ng d\u1ea1y c\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n v\u1ec1 container l\u00e0 ho\u00e0n to\u00e0n \u1ed5n. N\u00f3 gi\u00fap ch\u00fang ta hi\u1ec3u c\u00e1ch container ho\u1ea1t \u0111\u1ed9ng tr\u01b0\u1edbc khi \u0111i v\u00e0o th\u1ebf gi\u1edbi d\u00e0n d\u1ef1ng ph\u1ee9c t\u1ea1p c\u1ee7a Kubernetes.</li> <li>M\u1eb9o th\u1ef1c h\u00e0nh: N\u1ebfu m\u00e1y b\u1ea1n kh\u00f4ng c\u00e0i Docker m\u00e0 ch\u1ec9 c\u00e0i <code>Containerd</code> ri\u00eang l\u1ebb, b\u1ea1n v\u1eabn c\u00f3 th\u1ec3 l\u00e0m theo h\u1ea7u h\u1ebft c\u00e1c v\u00ed d\u1ee5 b\u1eb1ng c\u00e1ch thay th\u1ebf l\u1ec7nh <code>docker</code> b\u1eb1ng l\u1ec7nh <code>nerdctl</code>.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#chot-ha-cho-ky-thi","title":"\"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li>\"Docker deprecation\" c\u00f3 ngh\u0129a l\u00e0 Kubernetes \u0111\u00e3 lo\u1ea1i b\u1ecf h\u1ed7 tr\u1ee3 cho Docker Engine nh\u01b0 m\u1ed9t runtime, kh\u00f4ng ph\u1ea3i l\u00e0 khai t\u1eed Docker n\u00f3i chung.</li> <li>Docker images b\u1ea1n build v\u1eabn ho\u1ea1t \u0111\u1ed9ng 100% tr\u00ean Kubernetes v\u00ec ch\u00fang tu\u00e2n theo chu\u1ea9n OCI.</li> <li>K\u1ef9 n\u0103ng l\u00e0m vi\u1ec7c v\u1edbi Docker (build image, ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng trong container) v\u1eabn c\u1ef1c k\u1ef3 quan tr\u1ecdng v\u00e0 c\u1ea7n thi\u1ebft.</li> <li>Trong m\u00f4i tr\u01b0\u1eddng Kubernetes hi\u1ec7n \u0111\u1ea1i, runtime \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng tr\u1ef1c ti\u1ebfp l\u00e0 m\u1ed9t runtime t\u01b0\u01a1ng th\u00edch CRI, ph\u1ed5 bi\u1ebfn nh\u1ea5t ch\u00ednh l\u00e0 <code>Containerd</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/","title":"04.etcd","text":""},{"location":"k8s/01.core/04.etcd/#1-etcd-la-gi","title":"1. <code>etcd</code> l\u00e0 g\u00ec?","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 ngh\u0129 v\u1ec1 <code>etcd</code> nh\u01b0 m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u \u0111\u1eb7c bi\u1ec7t. Theo \u0111\u1ecbnh ngh\u0129a, n\u00f3 l\u00e0 m\u1ed9t kho l\u01b0u tr\u1eef kh\u00f3a-gi\u00e1 tr\u1ecb (key-value store) c\u00f3 c\u00e1c \u0111\u1eb7c t\u00ednh sau:</p> <ul> <li>Ph\u00e2n t\u00e1n (Distributed): D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c tr\u1ea3i r\u1ed9ng tr\u00ean nhi\u1ec1u m\u00e1y ch\u1ee7.</li> <li>\u0110\u00e1ng tin c\u1eady (Reliable): \u0110\u1ea3m b\u1ea3o d\u1eef li\u1ec7u kh\u00f4ng b\u1ecb m\u1ea5t m\u00e1t.</li> <li>\u0110\u01a1n gi\u1ea3n, an to\u00e0n v\u00e0 nhanh ch\u00f3ng.</li> </ul> <p>Trong Kubernetes, <code>etcd</code> ch\u00ednh l\u00e0 \"b\u1ed9 n\u00e3o\" l\u01b0u tr\u1eef to\u00e0n b\u1ed9 tr\u1ea1ng th\u00e1i v\u00e0 c\u1ea5u h\u00ecnh c\u1ee7a c\u1ea3 c\u1ee5m.</p>"},{"location":"k8s/01.core/04.etcd/#2-key-value-store-khac-gi-co-so-du-lieu-truyen-thong-sql","title":"2. Key-Value Store kh\u00e1c g\u00ec C\u01a1 s\u1edf d\u1eef li\u1ec7u truy\u1ec1n th\u1ed1ng (SQL)? \ud83e\udd14","text":"<p>\u0110\u00e2y l\u00e0 \u0111i\u1ec3m kh\u00e1c bi\u1ec7t c\u1ed1t l\u00f5i b\u1ea1n c\u1ea7n n\u1eafm:</p> <ul> <li> <p>C\u01a1 s\u1edf d\u1eef li\u1ec7u truy\u1ec1n th\u1ed1ng (SQL):</p> </li> <li> <p>L\u01b0u d\u1eef li\u1ec7u d\u01b0\u1edbi d\u1ea1ng b\u1ea3ng (table) v\u1edbi c\u00e1c h\u00e0ng (row) v\u00e0 c\u1ed9t (column) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nghi\u00eam ng\u1eb7t.</p> </li> <li> <p>V\u00ed d\u1ee5: M\u1ed9t b\u1ea3ng th\u00f4ng tin nh\u00e2n vi\u00ean. N\u1ebfu b\u1ea1n mu\u1ed1n th\u00eam m\u1ed9t lo\u1ea1i th\u00f4ng tin m\u1edbi (v\u00ed d\u1ee5: <code>l\u01b0\u01a1ng</code>), b\u1ea1n ph\u1ea3i th\u00eam m\u1ed9t c\u1ed9t m\u1edbi cho to\u00e0n b\u1ed9 b\u1ea3ng, \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c h\u00e0ng, k\u1ec3 c\u1ea3 nh\u1eefng ng\u01b0\u1eddi kh\u00f4ng c\u00f3 th\u00f4ng tin l\u01b0\u01a1ng (d\u1eabn \u0111\u1ebfn nhi\u1ec1u \u00f4 tr\u1ed1ng).</p> </li> <li> <p>Kho l\u01b0u tr\u1eef Key-Value (nh\u01b0 <code>etcd</code>):</p> </li> <li> <p>L\u01b0u th\u00f4ng tin d\u01b0\u1edbi d\u1ea1ng c\u00e1c c\u1eb7p Kh\u00f3a (Key) = Gi\u00e1 tr\u1ecb (Value), gi\u1ed1ng nh\u01b0 c\u00e1c t\u00e0i li\u1ec7u (document) ri\u00eang l\u1ebb.</p> </li> <li>V\u00ed d\u1ee5: M\u1ed7i ng\u01b0\u1eddi c\u00f3 m\u1ed9t \"t\u00e0i li\u1ec7u\" ri\u00eang. Ng\u01b0\u1eddi \u0111i l\u00e0m th\u00ec c\u00f3 tr\u01b0\u1eddng <code>l\u01b0\u01a1ng</code> trong t\u00e0i li\u1ec7u c\u1ee7a h\u1ecd. H\u1ecdc sinh th\u00ec c\u00f3 tr\u01b0\u1eddng <code>\u0111i\u1ec3m</code> trong t\u00e0i li\u1ec7u c\u1ee7a h\u1ecd.</li> <li>L\u1ee3i \u00edch: C\u1ea5u tr\u00fac r\u1ea5t linh ho\u1ea1t. B\u1ea1n c\u00f3 th\u1ec3 th\u00eam m\u1ed9t tr\u01b0\u1eddng m\u1edbi v\u00e0o m\u1ed9t t\u00e0i li\u1ec7u m\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng g\u00ec \u0111\u1ebfn c\u00e1c t\u00e0i li\u1ec7u kh\u00e1c. D\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p th\u01b0\u1eddng \u0111\u01b0\u1ee3c l\u01b0u d\u01b0\u1edbi d\u1ea1ng JSON ho\u1eb7c YAML.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#3-bat-au-voi-etcd","title":"3. B\u1eaft \u0111\u1ea7u v\u1edbi <code>etcd</code>","text":"<p>Vi\u1ec7c c\u00e0i \u0111\u1eb7t v\u00e0 ch\u1ea1y <code>etcd</code> r\u1ea5t \u0111\u01a1n gi\u1ea3n:</p> <ol> <li>T\u1ea3i v\u1ec1 (Download): L\u1ea5y file nh\u1ecb ph\u00e2n (binary) ph\u00f9 h\u1ee3p v\u1edbi h\u1ec7 \u0111i\u1ec1u h\u00e0nh c\u1ee7a b\u1ea1n t\u1eeb trang GitHub c\u1ee7a <code>etcd</code>.</li> <li>Gi\u1ea3i n\u00e9n (Unzip): Gi\u1ea3i n\u00e9n file v\u1eeba t\u1ea3i.</li> <li>Ch\u1ea1y (Run): Ch\u1ea1y file th\u1ef1c thi <code>etcd</code>.</li> <li>M\u1eb7c \u0111\u1ecbnh, <code>etcd</code> s\u1ebd kh\u1edfi \u0111\u1ed9ng m\u1ed9t d\u1ecbch v\u1ee5 v\u00e0 l\u1eafng nghe tr\u00ean c\u1ed5ng <code>2379</code>.</li> </ol> <p>Sau khi ch\u1ea1y, b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t \"client\" \u0111\u1ec3 giao ti\u1ebfp v\u1edbi n\u00f3. Client m\u1eb7c \u0111\u1ecbnh \u0111i k\u00e8m l\u00e0 <code>etcdctl</code>.</p>"},{"location":"k8s/01.core/04.etcd/#4-cu-lua-ve-phien-ban-etcdctl-v2-vs-v3","title":"4. \"C\u00fa l\u1eeba\" v\u1ec1 phi\u00ean b\u1ea3n: <code>etcdctl</code> v2 vs. v3 \u26a0\ufe0f","text":"<p>\u0110\u00e2y l\u00e0 ph\u1ea7n quan tr\u1ecdng nh\u1ea5t v\u00e0 d\u1ec5 g\u00e2y nh\u1ea7m l\u1eabn nh\u1ea5t cho ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u!</p> <p>Gi\u1eefa phi\u00ean b\u1ea3n <code>etcd</code> v2 v\u00e0 v3 c\u00f3 s\u1ef1 thay \u0111\u1ed5i l\u1edbn v\u1ec1 API, d\u1eabn \u0111\u1ebfn c\u00e1c l\u1ec7nh <code>etcdctl</code> c\u0169ng thay \u0111\u1ed5i theo.</p> <ul> <li> <p>L\u00e0m sao \u0111\u1ec3 bi\u1ebft <code>etcdctl</code> \u0111ang d\u00f9ng API phi\u00ean b\u1ea3n n\u00e0o?</p> </li> <li> <p>Ch\u1ea1y l\u1ec7nh: <code>etcdctl version</code></p> </li> <li> <p>L\u1ec7nh n\u00e0y s\u1ebd hi\u1ec3n th\u1ecb phi\u00ean b\u1ea3n c\u1ee7a c\u00f4ng c\u1ee5 <code>etcdctl</code> v\u00e0 quan tr\u1ecdng h\u01a1n l\u00e0 phi\u00ean b\u1ea3n API m\u00e0 n\u00f3 \u0111ang \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh \u0111\u1ec3 s\u1eed d\u1ee5ng (l\u00e0 <code>2</code> ho\u1eb7c <code>3</code>).</p> </li> <li> <p>L\u00e0m sao \u0111\u1ec3 chuy\u1ec3n sang d\u00f9ng API v3?</p> </li> <li> <p>C\u00e1c phi\u00ean b\u1ea3n <code>etcdctl</code> m\u1edbi h\u01a1n th\u01b0\u1eddng m\u1eb7c \u0111\u1ecbnh d\u00f9ng API v3. Nh\u01b0ng n\u1ebfu b\u1ea1n g\u1eb7p phi\u00ean b\u1ea3n c\u0169 h\u01a1n, b\u1ea1n c\u1ea7n ra l\u1ec7nh cho n\u00f3 d\u00f9ng API v3.</p> </li> <li> <p>C\u00e1ch t\u1ed1t nh\u1ea5t l\u00e0 \u0111\u1eb7t bi\u1ebfn m\u00f4i tr\u01b0\u1eddng cho to\u00e0n b\u1ed9 phi\u00ean l\u00e0m vi\u1ec7c c\u1ee7a b\u1ea1n b\u1eb1ng l\u1ec7nh:     </p><pre><code>export ETCDCTL_API=3\n</code></pre><p></p> </li> <li> <p>So s\u00e1nh l\u1ec7nh gi\u1eefa v2 v\u00e0 v3:</p> </li> </ul> T\u00e1c v\u1ee5 L\u1ec7nh API v2 L\u1ec7nh API v3 L\u01b0u gi\u00e1 tr\u1ecb <code>etcdctl set key1 value1</code> <code>etcdctl put key1 value1</code> L\u1ea5y gi\u00e1 tr\u1ecb <code>etcdctl get key1</code> <code>etcdctl get key1</code> Xem phi\u00ean b\u1ea3n <code>etcdctl --version</code> (l\u00e0 m\u1ed9t t\u00f9y ch\u1ecdn) <code>etcdctl version</code> (l\u00e0 m\u1ed9t l\u1ec7nh) <p>Vi\u1ec7c <code>set</code> \u0111\u1ed5i th\u00e0nh <code>put</code> l\u00e0 thay \u0111\u1ed5i d\u1ec5 nh\u1eadn th\u1ea5y nh\u1ea5t.</p>"},{"location":"k8s/01.core/04.etcd/#5-chot-ha-cho-nguoi-moi-bat-au","title":"5. \"Ch\u1ed1t h\u1ea1\" cho ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u \ud83d\udcdd","text":"<ul> <li><code>etcd</code> l\u00e0 m\u1ed9t kho l\u01b0u tr\u1eef key-value linh ho\u1ea1t, l\u00e0 \"b\u1ed9 n\u00e3o\" c\u1ee7a Kubernetes.</li> <li>Vi\u1ec7c c\u00e0i \u0111\u1eb7t v\u00e0 ch\u1ea1y n\u00f3 kh\u00e1 \u0111\u01a1n gi\u1ea3n, m\u1eb7c \u0111\u1ecbnh \u1edf c\u1ed5ng 2379.</li> <li>Khi s\u1eed d\u1ee5ng <code>etcdctl</code>, h\u00e3y lu\u00f4n ch\u1eafc ch\u1eafn r\u1eb1ng b\u1ea1n \u0111ang l\u00e0m vi\u1ec7c v\u1edbi API v3 b\u1eb1ng c\u00e1ch ki\u1ec3m tra (<code>etcdctl version</code>) v\u00e0 thi\u1ebft l\u1eadp bi\u1ebfn m\u00f4i tr\u01b0\u1eddng (<code>export ETCDCTL_API=3</code>). \u0110\u00e2y l\u00e0 m\u1eb9o th\u1ef1c t\u1ebf quan tr\u1ecdng nh\u1ea5t \u0111\u1ec3 tr\u00e1nh l\u1ed7i kh\u00f4ng \u0111\u00e1ng c\u00f3.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#1-vai-tro-cua-etcd-trong-kubernetes-bo-nao-cua-cum","title":"1. Vai tr\u00f2 c\u1ee7a <code>etcd</code> trong Kubernetes - \"B\u1ed9 n\u00e3o\" c\u1ee7a C\u1ee5m \ud83e\udde0","text":"<p>Trong m\u1ed9t c\u1ee5m Kubernetes, <code>etcd</code> ch\u00ednh l\u00e0 ngu\u1ed3n ch\u00e2n l\u00fd duy nh\u1ea5t (single source of truth) .</p> <ul> <li>N\u00f3 l\u01b0u tr\u1eef TO\u00c0N B\u1ed8 th\u00f4ng tin v\u1ec1 c\u1ee5m, bao g\u1ed3m:</li> <li>Nodes, Pods, Configs, Secrets, Accounts, Roles, Role Bindings, v\u00e0 nhi\u1ec1u th\u1ee9 kh\u00e1c.</li> <li>M\u1ecdi th\u00f4ng tin b\u1ea1n th\u1ea5y khi ch\u1ea1y l\u1ec7nh <code>kubectl get ...</code> \u0111\u1ec1u \u0111\u01b0\u1ee3c l\u1ea5y t\u1eeb <code>etcd</code>.</li> <li>M\u1ecdi thay \u0111\u1ed5i b\u1ea1n th\u1ef1c hi\u1ec7n v\u1edbi c\u1ee5m (th\u00eam node, tri\u1ec3n khai pod,...) ch\u1ec9 \u0111\u01b0\u1ee3c coi l\u00e0 ho\u00e0n t\u1ea5t khi n\u00f3 \u0111\u00e3 \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt th\u00e0nh c\u00f4ng v\u00e0o <code>etcd</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#2-cach-etcd-uoc-trien-khai-trong-kubernetes","title":"2. C\u00e1ch <code>etcd</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai trong Kubernetes","text":"<p><code>etcd</code> \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t nh\u01b0 th\u1ebf n\u00e0o c\u00f2n ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1ch b\u1ea1n d\u1ef1ng c\u1ee5m Kubernetes c\u1ee7a m\u00ecnh. C\u00f3 hai c\u00e1ch ch\u00ednh:</p>"},{"location":"k8s/01.core/04.etcd/#a-trien-khai-thu-cong-from-scratch","title":"a. Tri\u1ec3n khai \"Th\u1ee7 c\u00f4ng\" (From Scratch)","text":"<p>\u0110\u00e2y l\u00e0 c\u00e1ch b\u1ea1n t\u1ef1 tay l\u00e0m m\u1ecdi th\u1ee9.</p> <ul> <li>B\u1ea1n s\u1ebd ph\u1ea3i t\u1ef1 t\u1ea3i file nh\u1ecb ph\u00e2n (binary) c\u1ee7a <code>etcd</code> v\u1ec1.</li> <li>T\u1ef1 c\u00e0i \u0111\u1eb7t v\u00e0 c\u1ea5u h\u00ecnh <code>etcd</code> nh\u01b0 m\u1ed9t service ch\u1ea1y tr\u00ean Master Node.</li> <li>Khi c\u1ea5u h\u00ecnh, c\u00f3 m\u1ed9t tham s\u1ed1 r\u1ea5t quan tr\u1ecdng c\u1ea7n l\u01b0u \u00fd:</li> <li><code>--advertise-client-urls</code> : \u0110\u00e2y l\u00e0 \u0111\u1ecba ch\u1ec9 m\u00e0 <code>etcd</code> s\u1ebd l\u1eafng nghe c\u00e1c k\u1ebft n\u1ed1i t\u1eeb client (v\u00ed d\u1ee5: <code>https://&lt;IP-c\u1ee7a-master-node&gt;:2379</code>).</li> <li><code>kube-api-server</code> (th\u00e0nh ph\u1ea7n trung t\u00e2m c\u1ee7a Kubernetes) ph\u1ea3i \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh \u0111\u1ec3 tr\u1ecf \u0111\u1ebfn \u0111\u00fang URL n\u00e0y th\u00ec m\u1edbi c\u00f3 th\u1ec3 n\u00f3i chuy\u1ec7n \u0111\u01b0\u1ee3c v\u1edbi <code>etcd</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#b-trien-khai-bang-kubeadm-cach-de-hon","title":"b. Tri\u1ec3n khai b\u1eb1ng <code>kubeadm</code> (C\u00e1ch d\u1ec5 h\u01a1n)","text":"<p><code>kubeadm</code> l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 gi\u00fap t\u1ef1 \u0111\u1ed9ng h\u00f3a vi\u1ec7c c\u00e0i \u0111\u1eb7t c\u1ee5m Kubernetes.</p> <ul> <li>Khi b\u1ea1n d\u00f9ng <code>kubeadm</code>, n\u00f3 s\u1ebd t\u1ef1 \u0111\u1ed9ng tri\u1ec3n khai <code>etcd</code> cho b\u1ea1n .</li> <li>\u0110i\u1ec1u \u0111\u1eb7c bi\u1ec7t l\u00e0 <code>etcd</code> s\u1ebd \u0111\u01b0\u1ee3c tri\u1ec3n khai d\u01b0\u1edbi d\u1ea1ng m\u1ed9t Pod ch\u1ea1y trong namespace <code>kube-system</code> .</li> <li>N\u1ebfu mu\u1ed1n t\u01b0\u01a1ng t\u00e1c v\u1edbi <code>etcd</code> b\u1eb1ng <code>etcdctl</code>, b\u1ea1n s\u1ebd c\u1ea7n ph\u1ea3i th\u1ef1c hi\u1ec7n l\u1ec7nh b\u00ean trong Pod <code>etcd</code> \u0111\u00f3.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#3-du-lieu-uoc-luu-tru-nhu-the-nao","title":"3. D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef nh\u01b0 th\u1ebf n\u00e0o? \ud83d\udcc2","text":"<p>Kubernetes kh\u00f4ng l\u01b0u d\u1eef li\u1ec7u m\u1ed9t c\u00e1ch l\u1ed9n x\u1ed9n trong <code>etcd</code>. N\u00f3 t\u1ed5 ch\u1ee9c theo m\u1ed9t c\u1ea5u tr\u00fac th\u01b0 m\u1ee5c c\u1ee5 th\u1ec3:</p> <ul> <li>Th\u01b0 m\u1ee5c g\u1ed1c l\u00e0 <code>/registry</code>.</li> <li>B\u00ean d\u01b0\u1edbi l\u00e0 c\u00e1c th\u01b0 m\u1ee5c con cho t\u1eebng lo\u1ea1i t\u00e0i nguy\u00ean, v\u00ed d\u1ee5:</li> <li><code>/registry/nodes</code></li> <li><code>/registry/pods</code></li> <li><code>/registry/deployments</code></li> <li>...</li> </ul>"},{"location":"k8s/01.core/04.etcd/#4-etcd-trong-moi-truong-high-availability-ha","title":"4. <code>etcd</code> trong m\u00f4i tr\u01b0\u1eddng High Availability (HA) \ud83c\udff0","text":"<ul> <li>Trong m\u1ed9t m\u00f4i tr\u01b0\u1eddng HA, b\u1ea1n s\u1ebd c\u00f3 nhi\u1ec1u Master Node \u0111\u1ec3 d\u1ef1 ph\u00f2ng cho nhau.</li> <li>T\u01b0\u01a1ng \u1ee9ng, b\u1ea1n c\u0169ng s\u1ebd c\u00f3 nhi\u1ec1u instance <code>etcd</code> ch\u1ea1y tr\u00ean c\u00e1c Master Node n\u00e0y, t\u1ea1o th\u00e0nh m\u1ed9t c\u1ee5m <code>etcd</code> (etcd cluster).</li> <li>\u0110\u1ec3 c\u00e1c instance <code>etcd</code> n\u00e0y bi\u1ebft v\u1ec1 nhau v\u00e0 ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t c\u1ee5m, b\u1ea1n c\u1ea7n c\u1ea5u h\u00ecnh tham s\u1ed1 <code>--initial-cluster</code> . Tham s\u1ed1 n\u00e0y s\u1ebd li\u1ec7t k\u00ea \u0111\u1ecba ch\u1ec9 c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c th\u00e0nh vi\u00ean trong c\u1ee5m <code>etcd</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#5-chot-ha-cho-ky-thi","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li><code>etcd</code> l\u00e0 c\u01a1 s\u1edf d\u1eef li\u1ec7u, l\u00e0 tr\u00e1i tim, l\u00e0 b\u1ed9 n\u00e3o c\u1ee7a Kubernetes , l\u01b0u tr\u1eef m\u1ecdi tr\u1ea1ng th\u00e1i c\u1ee7a c\u1ee5m.</li> <li>Hi\u1ec3u r\u00f5 hai ph\u01b0\u01a1ng ph\u00e1p tri\u1ec3n khai ch\u00ednh:</li> <li>Th\u1ee7 c\u00f4ng (From Scratch): B\u1ea1n t\u1ef1 c\u00e0i, nh\u1edb tham s\u1ed1 <code>--advertise-client-urls</code>.</li> <li>D\u00f9ng <code>kubeadm</code>: <code>etcd</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0 m\u1ed9t Pod trong namespace <code>kube-system</code>.</li> <li>Trong m\u00f4i tr\u01b0\u1eddng HA, <code>etcd</code> ch\u1ea1y d\u01b0\u1edbi d\u1ea1ng m\u1ed9t c\u1ee5m (cluster) v\u00e0 \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh qua tham s\u1ed1 <code>--initial-cluster</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#1-etcdctl-vu-khi-tuong-tac-voi-etcd","title":"1. <code>etcdctl</code> - \"V\u0169 kh\u00ed\" t\u01b0\u01a1ng t\u00e1c v\u1edbi <code>etcd</code>","text":"<p>Nh\u01b0 ch\u00fang ta \u0111\u00e3 bi\u1ebft, <code>etcdctl</code> l\u00e0 c\u00f4ng c\u1ee5 d\u00f2ng l\u1ec7nh (CLI) \u0111\u1ec3 \"n\u00f3i chuy\u1ec7n\" v\u1edbi c\u01a1 s\u1edf d\u1eef li\u1ec7u <code>etcd</code>. Tuy nhi\u00ean, \u0111\u1ec3 \"n\u00f3i chuy\u1ec7n\" th\u00e0nh c\u00f4ng, b\u1ea1n c\u1ea7n bi\u1ebft hai \u0111i\u1ec1u quan tr\u1ecdng: \"ng\u00f4n ng\u1eef\" v\u00e0 \"gi\u1ea5y th\u00f4ng h\u00e0nh\".</p>"},{"location":"k8s/01.core/04.etcd/#2-hai-the-gioi-api-version-2-vs-version-3","title":"2. Hai \"Th\u1ebf gi\u1edbi\" API: Version 2 vs. Version 3","text":"<p><code>etcdctl</code> c\u00f3 th\u1ec3 giao ti\u1ebfp v\u1edbi <code>etcd</code> server b\u1eb1ng 2 phi\u00ean b\u1ea3n API: v2 v\u00e0 v3. \u0110i\u1ec1u quan tr\u1ecdng l\u00e0 b\u1ed9 l\u1ec7nh c\u1ee7a hai phi\u00ean b\u1ea3n n\u00e0y kh\u00e1c nhau .</p> T\u00e1c v\u1ee5 L\u1ec7nh API v2 L\u1ec7nh API v3 L\u01b0u gi\u00e1 tr\u1ecb <code>etcdctl set</code> <code>etcdctl put</code> Backup <code>etcdctl backup</code> <code>etcdctl snapshot save</code> Ki\u1ec3m tra \"s\u1ee9c kh\u1ecfe\" <code>etcdctl cluster-health</code> <code>etcdctl endpoint health</code> <p>M\u1eb7c \u0111\u1ecbnh, <code>etcdctl</code> c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh \u0111\u1ec3 d\u00f9ng API v2. Khi \u0111\u00f3, n\u1ebfu b\u1ea1n g\u00f5 l\u1ec7nh c\u1ee7a v3 (v\u00ed d\u1ee5: <code>put</code>), n\u00f3 s\u1ebd b\u00e1o l\u1ed7i v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.</p> <p>\ud83d\udc49 L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 ch\u1eafc ch\u1eafn d\u00f9ng API v3?</p> <p>C\u00e1ch t\u1ed1t nh\u1ea5t l\u00e0 \u0111\u1eb7t bi\u1ebfn m\u00f4i tr\u01b0\u1eddng sau cho phi\u00ean l\u00e0m vi\u1ec7c c\u1ee7a b\u1ea1n:</p> <p>Bash</p> <pre><code>export ETCDCTL_API=3\n</code></pre>"},{"location":"k8s/01.core/04.etcd/#3-giay-thong-hanh-xac-thuc-bang-certificate","title":"3. \"Gi\u1ea5y th\u00f4ng h\u00e0nh\" - X\u00e1c th\u1ef1c b\u1eb1ng Certificate \ud83d\udd11","text":"<p>Trong m\u1ed9t c\u1ee5m Kubernetes \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t \u0111\u00fang c\u00e1ch, <code>etcd</code> server s\u1ebd y\u00eau c\u1ea7u x\u00e1c th\u1ef1c an to\u00e0n. B\u1ea1n kh\u00f4ng th\u1ec3 \"tay kh\u00f4ng\" v\u00e0o n\u00f3i chuy\u1ec7n \u0111\u01b0\u1ee3c m\u00e0 c\u1ea7n c\u00f3 \"gi\u1ea5y th\u00f4ng h\u00e0nh\" l\u00e0 c\u00e1c file certificate.</p> <p><code>etcdctl</code> c\u1ea7n b\u1ea1n ch\u1ec9 \u0111\u1ecbnh \u0111\u01b0\u1eddng d\u1eabn \u0111\u1ebfn 3 file certificate quan tr\u1ecdng:</p> <ul> <li><code>--cacert</code>: \u0110\u01b0\u1eddng d\u1eabn \u0111\u1ebfn file CA certificate c\u1ee7a <code>etcd</code> (v\u00ed d\u1ee5: <code>/etc/kubernetes/pki/etcd/ca.crt</code>). D\u00f9ng \u0111\u1ec3 x\u00e1c th\u1ef1c <code>etcd</code> server.</li> <li><code>--cert</code>: \u0110\u01b0\u1eddng d\u1eabn \u0111\u1ebfn file certificate c\u1ee7a client (v\u00ed d\u1ee5: <code>/etc/kubernetes/pki/etcd/server.crt</code>). D\u00f9ng \u0111\u1ec3 <code>etcd</code> server x\u00e1c th\u1ef1c b\u1ea1n.</li> <li><code>--key</code>: \u0110\u01b0\u1eddng d\u1eabn \u0111\u1ebfn file key ri\u00eang c\u1ee7a client (v\u00ed d\u1ee5: <code>/etc/kubernetes/pki/etcd/server.key</code>).</li> </ul> <p>L\u01b0u \u00fd: Trong m\u1ed9t c\u1ee5m <code>kubeadm</code>, c\u00e1c file n\u00e0y th\u01b0\u1eddng n\u1eb1m \u1edf \u0111\u01b0\u1eddng d\u1eabn <code>/etc/kubernetes/pki/etcd/</code> tr\u00ean master node.</p>"},{"location":"k8s/01.core/04.etcd/#4-cu-phap-full-option-lenh-etcdctl-hoan-chinh","title":"4. C\u00fa ph\u00e1p \"Full Option\" - L\u1ec7nh <code>etcdctl</code> ho\u00e0n ch\u1ec9nh","text":"<p>K\u1ebft h\u1ee3p t\u1ea5t c\u1ea3 nh\u1eefng \u0111i\u1ec1u tr\u00ean, m\u1ed9t l\u1ec7nh <code>etcdctl</code> ho\u00e0n ch\u1ec9nh \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi <code>etcd</code> (\u0111ang ch\u1ea1y d\u01b0\u1edbi d\u1ea1ng Pod trong m\u1ed9t c\u1ee5m <code>kubeadm</code>) s\u1ebd tr\u00f4ng nh\u01b0 th\u1ebf n\u00e0y:</p> <p>Bash</p> <pre><code>kubectl exec etcd-master -n kube-system -- sh -c \"ETCDCTL_API=3 etcdctl get / --prefix --keys-only --limit=10 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key\"\n</code></pre> <p>H\u00e3y \"m\u1ed5 x\u1ebb\" n\u00f3:</p> <ul> <li><code>kubectl exec etcd-master -n kube-system --</code>: Ch\u1ea1y m\u1ed9t l\u1ec7nh b\u00ean trong Pod t\u00ean l\u00e0 <code>etcd-master</code> thu\u1ed9c namespace <code>kube-system</code>.</li> <li><code>sh -c \"...\"</code>: Th\u1ef1c thi chu\u1ed7i l\u1ec7nh b\u00ean trong d\u1ea5u ngo\u1eb7c k\u00e9p.</li> <li><code>ETCDCTL_API=3</code>: \u0110\u1ea3m b\u1ea3o ch\u00fang ta \u0111ang d\u00f9ng API v3.</li> <li><code>etcdctl get / --prefix --keys-only --limit=10</code>: L\u1ec7nh <code>etcdctl</code> th\u1ef1c t\u1ebf \u0111\u1ec3 l\u1ea5y 10 key \u0111\u1ea7u ti\u00ean t\u1eeb th\u01b0 m\u1ee5c g\u1ed1c.</li> <li><code>--cacert ... --cert ... --key ...</code>: Cung c\u1ea5p 3 \"gi\u1ea5y th\u00f4ng h\u00e0nh\" c\u1ea7n thi\u1ebft \u0111\u1ec3 x\u00e1c th\u1ef1c.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<p>Khi l\u00e0m b\u00e0i thi CKA, n\u1ebfu b\u1ea1n c\u1ea7n t\u01b0\u01a1ng t\u00e1c tr\u1ef1c ti\u1ebfp v\u1edbi <code>etcd</code> b\u1eb1ng <code>etcdctl</code>, h\u00e3y lu\u00f4n nh\u1edb \"th\u1ea7n ch\u00fa\" 3 \u0111i\u1ec1u sau:</p> <ol> <li>Phi\u00ean b\u1ea3n API: Lu\u00f4n \u0111\u1eb7t <code>ETCDCTL_API=3</code>.</li> <li>Certificate: Lu\u00f4n cung c\u1ea5p \u0111\u1ee7 3 tham s\u1ed1 <code>--cacert</code>, <code>--cert</code>, v\u00e0 <code>--key</code> v\u1edbi \u0111\u01b0\u1eddng d\u1eabn ch\u00ednh x\u00e1c.</li> <li>Th\u1ef1c thi trong Pod: N\u1ebfu <code>etcd</code> ch\u1ea1y nh\u01b0 m\u1ed9t Pod, b\u1ea1n ph\u1ea3i d\u00f9ng <code>kubectl exec</code> \u0111\u1ec3 v\u00e0o trong Pod \u0111\u00f3 v\u00e0 th\u1ef1c thi l\u1ec7nh.</li> </ol> <p>Qu\u00ean m\u1ed9t trong nh\u1eefng \u0111i\u1ec1u n\u00e0y g\u1ea7n nh\u01b0 ch\u1eafc ch\u1eafn s\u1ebd khi\u1ebfn l\u1ec7nh c\u1ee7a b\u1ea1n th\u1ea5t b\u1ea1i. Hy v\u1ecdng ph\u1ea7n gi\u1ea3i th\u00edch chi ti\u1ebft n\u00e0y s\u1ebd gi\u00fap b\u1ea1n t\u1ef1 tin h\u01a1n khi l\u00e0m vi\u1ec7c v\u1edbi <code>etcd</code>! Ch\u00fac b\u1ea1n bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/05.kube-api-server/","title":"05.kube api server","text":""},{"location":"k8s/01.core/05.kube-api-server/#1-kube-api-server-cong-giao-tiep-chinh-cua-kubernetes","title":"1. <code>kube-api-server</code> - \"C\u1ed5ng Giao ti\u1ebfp\" Ch\u00ednh c\u1ee7a Kubernetes \ud83d\udeaa","text":"<p><code>kube-api-server</code> l\u00e0 th\u00e0nh ph\u1ea7n qu\u1ea3n l\u00fd ch\u00ednh v\u00e0 l\u00e0 \"c\u1ed5ng v\u00e0o\" duy nh\u1ea5t c\u1ee7a c\u1ee5m Kubernetes. M\u1ecdi t\u01b0\u01a1ng t\u00e1c, t\u1eeb ng\u01b0\u1eddi d\u00f9ng cho \u0111\u1ebfn c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c trong c\u1ee5m, \u0111\u1ec1u ph\u1ea3i \u0111i qua n\u00f3.</p> <ul> <li>Khi b\u1ea1n ch\u1ea1y m\u1ed9t l\u1ec7nh <code>kubectl</code>, th\u1ef1c ch\u1ea5t <code>kubectl</code> \u0111ang g\u1eedi m\u1ed9t y\u00eau c\u1ea7u \u0111\u1ebfn <code>kube-api-server</code>.</li> <li>B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 g\u1ecdi tr\u1ef1c ti\u1ebfp API c\u1ee7a n\u00f3 m\u00e0 kh\u00f4ng c\u1ea7n <code>kubectl</code>. d\u00f9ng curl post</li> </ul>"},{"location":"k8s/01.core/05.kube-api-server/#2-luong-hoat-ong-cua-kube-api-server","title":"2. Lu\u1ed3ng Ho\u1ea1t \u0111\u1ed9ng c\u1ee7a <code>kube-api-server</code>","text":"<p>\u0110\u1ec3 hi\u1ec3u r\u00f5 vai tr\u00f2 trung t\u00e2m c\u1ee7a n\u00f3, h\u00e3y xem qua hai lu\u1ed3ng ho\u1ea1t \u0111\u1ed9ng ch\u00ednh:</p>"},{"location":"k8s/01.core/05.kube-api-server/#a-khi-ban-oc-du-lieu-vi-du-kubectl-get-pods","title":"a. Khi b\u1ea1n \u0111\u1ecdc d\u1eef li\u1ec7u (v\u00ed d\u1ee5: <code>kubectl get pods</code>)","text":"<ol> <li>L\u1ec7nh <code>kubectl</code> \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn <code>kube-api-server</code>.</li> <li><code>api-server</code> x\u00e1c th\u1ef1c (authenticates) v\u00e0 ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7 (validates) c\u1ee7a y\u00eau c\u1ea7u.</li> <li><code>api-server</code> truy xu\u1ea5t d\u1eef li\u1ec7u t\u1eeb kho l\u01b0u tr\u1eef <code>etcd</code>.</li> <li><code>api-server</code> tr\u1ea3 k\u1ebft qu\u1ea3 v\u1ec1 cho <code>kubectl</code>.</li> </ol>"},{"location":"k8s/01.core/05.kube-api-server/#b-khi-ban-thay-oi-cum-vi-du-tao-mot-pod-moi","title":"b. Khi b\u1ea1n thay \u0111\u1ed5i c\u1ee5m (v\u00ed d\u1ee5: t\u1ea1o m\u1ed9t Pod m\u1edbi)","text":"<p>\u0110\u00e2y l\u00e0 l\u00fac vai tr\u00f2 \"nh\u1ea1c tr\u01b0\u1edfng\" c\u1ee7a <code>api-server</code> th\u1ec3 hi\u1ec7n r\u00f5 nh\u1ea5t:</p> <ol> <li>Y\u00eau c\u1ea7u t\u1ea1o Pod \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn <code>api-server</code>.</li> <li><code>api-server</code> x\u00e1c th\u1ef1c v\u00e0 ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7.</li> <li><code>api-server</code> t\u1ea1o m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Pod (ch\u01b0a \u0111\u01b0\u1ee3c g\u00e1n cho Node n\u00e0o) v\u00e0 c\u1eadp nh\u1eadt th\u00f4ng tin n\u00e0y v\u00e0o <code>etcd</code>. N\u00f3 b\u00e1o l\u1ea1i cho ng\u01b0\u1eddi d\u00f9ng r\u1eb1ng Pod \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ea1o.</li> <li><code>kube-scheduler</code>, v\u1ed1n lu\u00f4n \"l\u1eafng nghe\" <code>api-server</code>, ph\u00e1t hi\u1ec7n ra c\u00f3 Pod m\u1edbi ch\u01b0a \u0111\u01b0\u1ee3c \u0111i\u1ec1u ph\u1ed1i.</li> <li><code>scheduler</code> t\u00ecm m\u1ed9t Node ph\u00f9 h\u1ee3p v\u00e0 b\u00e1o l\u1ea1i cho <code>api-server</code>.</li> <li><code>api-server</code> c\u1eadp nh\u1eadt th\u00f4ng tin Node \u0111\u01b0\u1ee3c g\u00e1n v\u00e0o <code>etcd</code>.</li> <li><code>api-server</code> truy\u1ec1n th\u00f4ng tin n\u00e0y \u0111\u1ebfn <code>kubelet</code> tr\u00ean Worker Node t\u01b0\u01a1ng \u1ee9ng.</li> <li><code>kubelet</code> nh\u1eadn l\u1ec7nh, t\u1ea1o Pod tr\u00ean Node c\u1ee7a m\u00ecnh (b\u1eb1ng c\u00e1ch ra l\u1ec7nh cho Container Runtime Engine) v\u00e0 c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i c\u1ee7a Pod v\u1ec1 l\u1ea1i cho <code>api-server</code>.</li> <li><code>api-server</code> m\u1ed9t l\u1ea7n n\u1eefa c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i cu\u1ed1i c\u00f9ng n\u00e0y v\u00e0o <code>etcd</code>.</li> </ol> <p>Qua lu\u1ed3ng tr\u00ean, b\u1ea1n c\u00f3 th\u1ec3 th\u1ea5y <code>api-server</code> \u0111\u1ee9ng \u1edf trung t\u00e2m c\u1ee7a m\u1ecdi ho\u1ea1t \u0111\u1ed9ng, \u0111i\u1ec1u ph\u1ed1i t\u1ea5t c\u1ea3 c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c.</p>"},{"location":"k8s/01.core/05.kube-api-server/#3-trach-nhiem-cot-loi","title":"3. Tr\u00e1ch nhi\u1ec7m C\u1ed1t l\u00f5i","text":"<ul> <li>X\u00e1c th\u1ef1c v\u00e0 ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a m\u1ecdi y\u00eau c\u1ea7u.</li> <li>Truy xu\u1ea5t v\u00e0 c\u1eadp nh\u1eadt d\u1eef li\u1ec7u trong <code>etcd</code>.</li> <li>\u0110i\u1ec3m quan tr\u1ecdng nh\u1ea5t: <code>kube-api-server</code> l\u00e0 th\u00e0nh ph\u1ea7n DUY NH\u1ea4T \u0111\u01b0\u1ee3c ph\u00e9p t\u01b0\u01a1ng t\u00e1c tr\u1ef1c ti\u1ebfp v\u1edbi kho d\u1eef li\u1ec7u <code>etcd</code>. T\u1ea5t c\u1ea3 c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c (<code>scheduler</code>, <code>controller-manager</code>, <code>kubelet</code>) \u0111\u1ec1u ph\u1ea3i th\u00f4ng qua <code>api-server</code>.</li> </ul>"},{"location":"k8s/01.core/05.kube-api-server/#4-cach-kube-api-server-uoc-trien-khai","title":"4. C\u00e1ch <code>kube-api-server</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai","text":"<ul> <li>\"Th\u1ee7 c\u00f4ng\" (From Scratch): B\u1ea1n s\u1ebd t\u1ea3i file binary c\u1ee7a <code>kube-api-server</code> v\u00e0 c\u1ea5u h\u00ecnh n\u00f3 ch\u1ea1y nh\u01b0 m\u1ed9t service tr\u00ean Master Node (v\u00ed d\u1ee5: file service t\u1ea1i <code>/etc/systemd/system/kube-apiserver.service</code>).</li> <li>D\u00f9ng <code>kubeadm</code>: <code>kubeadm</code> s\u1ebd tri\u1ec3n khai <code>kube-api-server</code> d\u01b0\u1edbi d\u1ea1ng m\u1ed9t static Pod trong namespace <code>kube-system</code>. File \u0111\u1ecbnh ngh\u0129a c\u1ee7a Pod n\u00e0y n\u1eb1m t\u1ea1i <code>/etc/kubernetes/manifests/</code>.</li> </ul>"},{"location":"k8s/01.core/05.kube-api-server/#5-xem-cac-tuy-chon-cau-hinh","title":"5. Xem c\u00e1c T\u00f9y ch\u1ecdn C\u1ea5u h\u00ecnh","text":"<p><code>kube-api-server</code> c\u00f3 r\u1ea5t nhi\u1ec1u t\u00f9y ch\u1ecdn (flag) khi kh\u1edfi ch\u1ea1y.</p> <ul> <li>M\u1ed9t t\u00f9y ch\u1ecdn c\u1ef1c k\u1ef3 quan tr\u1ecdng l\u00e0 <code>--etcd-servers</code>. N\u00f3 ch\u1ec9 cho <code>api-server</code> bi\u1ebft \u0111\u1ecba ch\u1ec9 c\u1ee7a <code>etcd</code> cluster \u0111\u1ec3 k\u1ebft n\u1ed1i.</li> <li>C\u00e1ch xem c\u00e1c t\u00f9y ch\u1ecdn \u0111ang ch\u1ea1y:</li> <li>V\u1edbi c\u1ee5m <code>kubeadm</code>: Xem file manifest c\u1ee7a Pod <code>kube-api-server</code> t\u1ea1i <code>/etc/kubernetes/manifests/</code>.</li> <li>V\u1edbi c\u1ee5m c\u00e0i th\u1ee7 c\u00f4ng: Xem file service t\u1ea1i <code>/etc/systemd/system/</code>.</li> <li>C\u00e1ch chung: Li\u1ec7t k\u00ea c\u00e1c ti\u1ebfn tr\u00ecnh \u0111ang ch\u1ea1y tr\u00ean Master Node v\u00e0 t\u00ecm <code>kube-api-server</code> (v\u00ed d\u1ee5: <code>ps aux | grep kube-apiserver</code>).</li> </ul>"},{"location":"k8s/01.core/05.kube-api-server/#6-chot-ha-cho-ky-thi-cka","title":"6. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>kube-api-server</code> l\u00e0 trung t\u00e2m \u0111i\u1ec1u ph\u1ed1i, l\u00e0 c\u1ed5ng v\u00e0o c\u1ee7a c\u1ee5m Kubernetes.</li> <li>N\u00f3 l\u00e0 th\u00e0nh ph\u1ea7n duy nh\u1ea5t \u0111\u01b0\u1ee3c n\u00f3i chuy\u1ec7n tr\u1ef1c ti\u1ebfp v\u1edbi <code>etcd</code>.</li> <li>Hi\u1ec3u r\u00f5 vai tr\u00f2 c\u1ee7a n\u00f3 trong v\u00f2ng \u0111\u1eddi t\u1ea1o Pod l\u00e0 r\u1ea5t quan tr\u1ecdng.</li> <li>Bi\u1ebft c\u00e1ch t\u00ecm file c\u1ea5u h\u00ecnh c\u1ee7a <code>api-server</code> trong m\u1ed9t c\u1ee5m \u0111\u01b0\u1ee3c d\u1ef1ng b\u1eb1ng <code>kubeadm</code> (n\u00f3 l\u00e0 m\u1ed9t static Pod).</li> </ul>"},{"location":"k8s/01.core/06.kube-controller-manager/","title":"06.kube controller manager","text":""},{"location":"k8s/01.core/06.kube-controller-manager/#1-kube-controller-manager-bo-nao-ieu-hanh-cua-kubernetes","title":"1. <code>kube-controller-manager</code> - \"B\u1ed9 n\u00e3o\" \u0110i\u1ec1u h\u00e0nh c\u1ee7a Kubernetes \ud83e\udde0","text":"<p>H\u00e3y ti\u1ebfp t\u1ee5c v\u1edbi ph\u00e9p so s\u00e1nh v\u1ec1 h\u1ea1m \u0111\u1ed9i t\u00e0u. N\u1ebfu <code>kube-api-server</code> l\u00e0 \"t\u1ed5ng \u0111\u00e0i\" trung t\u00e2m, th\u00ec <code>kube-controller-manager</code> gi\u1ed1ng nh\u01b0 l\u00e0 t\u1eadp h\u1ee3p c\u00e1c ph\u00f2ng ban chuy\u00ean tr\u00e1ch tr\u00ean t\u00e0u ch\u1ec9 huy. M\u1ed7i ph\u00f2ng ban (m\u1ed7i \"controller\") c\u00f3 m\u1ed9t nhi\u1ec7m v\u1ee5 ri\u00eang v\u00e0 l\u00e0m vi\u1ec7c kh\u00f4ng ng\u1eebng ngh\u1ec9.</p> <p>V\u1ec1 c\u01a1 b\u1ea3n, <code>kube-controller-manager</code> l\u00e0 m\u1ed9t ti\u1ebfn tr\u00ecnh (process) duy nh\u1ea5t, nh\u01b0ng b\u00ean trong n\u00f3 l\u1ea1i ch\u1ee9a v\u00e0 qu\u1ea3n l\u00fd r\u1ea5t nhi\u1ec1u controller kh\u00e1c nhau.</p>"},{"location":"k8s/01.core/06.kube-controller-manager/#2-controller-la-gi-vong-lap-oi-chieu","title":"2. Controller l\u00e0 g\u00ec? (V\u00f2ng l\u1eb7p \u0110\u1ed1i chi\u1ebfu) \ud83d\udd04","text":"<p>\u0110\u00e2y l\u00e0 kh\u00e1i ni\u1ec7m c\u1ed1t l\u00f5i b\u1ea1n c\u1ea7n n\u1eafm:</p> <p>M\u1ed9t controller trong Kubernetes l\u00e0 m\u1ed9t ti\u1ebfn tr\u00ecnh li\u00ean t\u1ee5c th\u1ef1c hi\u1ec7n m\u1ed9t v\u00f2ng l\u1eb7p \u0111i\u1ec1u khi\u1ec3n (control loop):</p> <ol> <li>Theo d\u00f5i (Watch): N\u00f3 li\u00ean t\u1ee5c theo d\u00f5i tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ed9t lo\u1ea1i t\u00e0i nguy\u00ean n\u00e0o \u0111\u00f3 trong c\u1ee5m (th\u00f4ng qua <code>kube-api-server</code>).</li> <li>\u0110\u1ed1i chi\u1ebfu (Reconcile): N\u00f3 so s\u00e1nh tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i (current state) v\u1edbi tr\u1ea1ng th\u00e1i mong mu\u1ed1n (desired state) m\u00e0 b\u1ea1n \u0111\u00e3 khai b\u00e1o.</li> <li>H\u00e0nh \u0111\u1ed9ng (Act): N\u1ebfu hai tr\u1ea1ng th\u00e1i n\u00e0y kh\u00f4ng kh\u1edbp nhau, controller s\u1ebd th\u1ef1c hi\u1ec7n c\u00e1c h\u00e0nh \u0111\u1ed9ng c\u1ea7n thi\u1ebft \u0111\u1ec3 \u0111\u01b0a tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i v\u1ec1 g\u1ea7n v\u1edbi tr\u1ea1ng th\u00e1i mong mu\u1ed1n.</li> </ol> <p>T\u1ea5t c\u1ea3 \"tr\u00ed th\u00f4ng minh\" c\u1ee7a c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng Kubernetes nh\u01b0 Deployment, Service, Namespace... \u0111\u1ec1u \u0111\u01b0\u1ee3c hi\u1ec7n th\u1ef1c h\u00f3a th\u00f4ng qua c\u00e1c controller n\u00e0y.</p>"},{"location":"k8s/01.core/06.kube-controller-manager/#3-cac-phong-ban-tieu-bieu-vi-du-ve-controller","title":"3. C\u00e1c \"Ph\u00f2ng ban\" ti\u00eau bi\u1ec3u (V\u00ed d\u1ee5 v\u1ec1 Controller)","text":"<p><code>kube-controller-manager</code> qu\u1ea3n l\u00fd r\u1ea5t nhi\u1ec1u controller. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 hai v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh:</p>"},{"location":"k8s/01.core/06.kube-controller-manager/#a-node-controller-phong-quan-ly-node","title":"a. Node Controller - \"Ph\u00f2ng Qu\u1ea3n l\u00fd Node\"","text":"<ul> <li>Nhi\u1ec7m v\u1ee5: Theo d\u00f5i \"s\u1ee9c kh\u1ecfe\" c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c Worker Node trong c\u1ee5m.</li> <li>C\u00e1ch ho\u1ea1t \u0111\u1ed9ng:</li> <li>C\u1ee9 m\u1ed7i 5 gi\u00e2y, n\u00f3 ki\u1ec3m tra tr\u1ea1ng th\u00e1i c\u1ee7a c\u00e1c node.</li> <li>N\u1ebfu m\u1ed9t node kh\u00f4ng g\u1eedi \"t\u00edn hi\u1ec7u s\u1ef1 s\u1ed1ng\" (heartbeat) v\u1ec1, controller s\u1ebd \u0111\u1ee3i 40 gi\u00e2y r\u1ed3i \u0111\u00e1nh d\u1ea5u node \u0111\u00f3 l\u00e0 <code>Unreachable</code>.</li> <li>Sau khi \u0111\u00e1nh d\u1ea5u <code>Unreachable</code>, n\u00f3 cho node \u0111\u00f3 th\u00eam 5 ph\u00fat \u0111\u1ec3 \"h\u1ed3i sinh\".</li> <li>N\u1ebfu sau 5 ph\u00fat m\u00e0 node v\u1eabn kh\u00f4ng quay l\u1ea1i, Node Controller s\u1ebd ti\u1ebfn h\u00e0nh \"tr\u1ee5c xu\u1ea5t\" (evict) c\u00e1c Pod \u0111ang ch\u1ea1y tr\u00ean node h\u1ecfng \u0111\u00f3 v\u00e0 y\u00eau c\u1ea7u <code>kube-scheduler</code> t\u00ecm nh\u00e0 m\u1edbi cho ch\u00fang tr\u00ean c\u00e1c node kh\u1ecfe m\u1ea1nh kh\u00e1c (v\u1edbi \u0111i\u1ec1u ki\u1ec7n c\u00e1c Pod \u0111\u00f3 \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd b\u1edfi m\u1ed9t ReplicaSet ho\u1eb7c Deployment).</li> </ul>"},{"location":"k8s/01.core/06.kube-controller-manager/#b-replication-controller-phong-am-bao-so-luong","title":"b. Replication Controller - \"Ph\u00f2ng \u0110\u1ea3m b\u1ea3o S\u1ed1 l\u01b0\u1ee3ng\"","text":"<ul> <li>Nhi\u1ec7m v\u1ee5: \u0110\u1ea3m b\u1ea3o s\u1ed1 l\u01b0\u1ee3ng b\u1ea3n sao (replicas) c\u1ee7a m\u1ed9t Pod lu\u00f4n \u0111\u00fang nh\u01b0 b\u1ea1n \u0111\u00e3 khai b\u00e1o trong \u0111\u1ed1i t\u01b0\u1ee3ng ReplicaSet.</li> <li>C\u00e1ch ho\u1ea1t \u0111\u1ed9ng:</li> <li>N\u1ebfu n\u00f3 th\u1ea5y s\u1ed1 l\u01b0\u1ee3ng Pod hi\u1ec7n t\u1ea1i \u00edt h\u01a1n s\u1ed1 l\u01b0\u1ee3ng mong mu\u1ed1n (v\u00ed d\u1ee5: m\u1ed9t Pod b\u1ecb ch\u1ebft), n\u00f3 s\u1ebd ngay l\u1eadp t\u1ee9c t\u1ea1o ra m\u1ed9t Pod m\u1edbi \u0111\u1ec3 b\u00f9 v\u00e0o.</li> </ul>"},{"location":"k8s/01.core/06.kube-controller-manager/#4-cai-at-va-xem-cau-hinh","title":"4. C\u00e0i \u0111\u1eb7t v\u00e0 Xem C\u1ea5u h\u00ecnh","text":"<ul> <li><code>kube-controller-manager</code> l\u00e0 m\u1ed9t file th\u1ef1c thi (binary) duy nh\u1ea5t, ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c controller b\u00ean trong n\u00f3.</li> <li>C\u00e1ch xem c\u00e1c t\u00f9y ch\u1ecdn c\u1ea5u h\u00ecnh \u0111ang ch\u1ea1y:</li> <li>V\u1edbi c\u1ee5m <code>kubeadm</code>: N\u00f3 \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0 m\u1ed9t static Pod trong namespace <code>kube-system</code>. B\u1ea1n c\u00f3 th\u1ec3 xem c\u1ea5u h\u00ecnh trong file manifest c\u1ee7a Pod t\u1ea1i <code>/etc/kubernetes/manifests/</code>.</li> <li>V\u1edbi c\u1ee5m c\u00e0i th\u1ee7 c\u00f4ng: Xem trong file service t\u1ea1i <code>/etc/systemd/system/</code>.</li> <li>C\u00e1ch chung: D\u00f9ng l\u1ec7nh <code>ps aux | grep kube-controller-manager</code> tr\u00ean Master Node \u0111\u1ec3 xem ti\u1ebfn tr\u00ecnh \u0111ang ch\u1ea1y v\u00e0 c\u00e1c tham s\u1ed1 c\u1ee7a n\u00f3.</li> <li>T\u00f9y ch\u1ecdn c\u1ea5u h\u00ecnh: B\u1ea1n c\u00f3 th\u1ec3 t\u00f9y ch\u1ec9nh ho\u1ea1t \u0111\u1ed9ng c\u1ee7a c\u00e1c controller. V\u00ed d\u1ee5, v\u1edbi Node Controller, b\u1ea1n c\u00f3 th\u1ec3 thay \u0111\u1ed5i c\u00e1c tham s\u1ed1 th\u1eddi gian nh\u01b0 <code>--pod-eviction-timeout</code>. B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 d\u00f9ng c\u1edd <code>--controllers</code> \u0111\u1ec3 b\u1eadt/t\u1eaft m\u1ed9t s\u1ed1 controller c\u1ee5 th\u1ec3 (m\u1eb7c \u0111\u1ecbnh l\u00e0 b\u1eadt t\u1ea5t c\u1ea3).</li> </ul>"},{"location":"k8s/01.core/06.kube-controller-manager/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>kube-controller-manager</code> l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u1ee7a nhi\u1ec1u v\u00f2ng l\u1eb7p \u0111i\u1ec1u khi\u1ec3n (control loops).</li> <li>Nhi\u1ec7m v\u1ee5 ch\u00ednh c\u1ee7a n\u00f3 l\u00e0 theo d\u00f5i tr\u1ea1ng th\u00e1i c\u1ee7a c\u1ee5m th\u00f4ng qua API Server v\u00e0 th\u1ef1c hi\u1ec7n c\u00e1c h\u00e0nh \u0111\u1ed9ng c\u1ea7n thi\u1ebft \u0111\u1ec3 \u0111\u01b0a tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i v\u1ec1 tr\u1ea1ng th\u00e1i mong mu\u1ed1n.</li> <li>Hi\u1ec3u r\u00f5 ho\u1ea1t \u0111\u1ed9ng c\u1ee7a c\u00e1c controller ti\u00eau bi\u1ec3u nh\u01b0 Node Controller (v\u00e0 c\u00e1c m\u1ed1c th\u1eddi gian c\u1ee7a n\u00f3) v\u00e0 Replication Controller.</li> <li>Bi\u1ebft c\u00e1ch t\u00ecm file c\u1ea5u h\u00ecnh c\u1ee7a n\u00f3 trong m\u1ed9t c\u1ee5m <code>kubeadm</code> (n\u00f3 l\u00e0 m\u1ed9t static Pod).</li> </ul> <p><code>kube-controller-manager</code> ch\u00ednh l\u00e0 ng\u01b0\u1eddi h\u00f9ng th\u1ea7m l\u1eb7ng, \u0111\u1ea3m b\u1ea3o cho c\u1ee5m Kubernetes c\u1ee7a b\u1ea1n lu\u00f4n ho\u1ea1t \u0111\u1ed9ng \u0111\u00fang nh\u01b0 nh\u1eefng g\u00ec b\u1ea1n k\u1ef3 v\u1ecdng. Ch\u00fac b\u1ea1n m\u1ed9t bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/07.KubeScheduler/","title":"07.KubeScheduler","text":""},{"location":"k8s/01.core/07.KubeScheduler/#1-kube-scheduler-nha-ieu-phoi-thong-minh-cua-kubernetes","title":"1. <code>kube-scheduler</code> - \"Nh\u00e0 \u0110i\u1ec1u ph\u1ed1i\" Th\u00f4ng minh c\u1ee7a Kubernetes \ud83e\udde0","text":"<ul> <li>Nhi\u1ec7m v\u1ee5 ch\u00ednh: <code>kube-scheduler</code> ch\u1ecbu tr\u00e1ch nhi\u1ec7m QUY\u1ebeT \u0110\u1ecaNH xem m\u1ed9t Pod m\u1edbi n\u00ean \u0111\u01b0\u1ee3c ch\u1ea1y tr\u00ean Worker Node n\u00e0o.</li> <li> <p>\u0110i\u1ec3m kh\u00e1c bi\u1ec7t quan tr\u1ecdng c\u1ea7n nh\u1edb:</p> </li> <li> <p>Scheduler ch\u1ec9 c\u00f3 vai tr\u00f2 l\u00e0 \"ch\u1ec9 \u0111\u1ecbnh\". N\u00f3 ra quy\u1ebft \u0111\u1ecbnh: \"Pod A s\u1ebd ch\u1ea1y tr\u00ean Node B\".</p> </li> <li>N\u00f3 KH\u00d4NG ph\u1ea3i l\u00e0 ng\u01b0\u1eddi th\u1ef1c s\u1ef1 \u0111\u1eb7t Pod l\u00ean Node \u0111\u00f3. C\u00f4ng vi\u1ec7c \u0111\u00f3 thu\u1ed9c v\u1ec1 <code>kubelet</code> tr\u00ean Node B.</li> </ul>"},{"location":"k8s/01.core/07.KubeScheduler/#2-tai-sao-chung-ta-can-scheduler","title":"2. T\u1ea1i sao ch\u00fang ta c\u1ea7n Scheduler? \ud83e\udd14","text":"<p>H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng b\u1ea1n c\u00f3 r\u1ea5t nhi\u1ec1u container (h\u00e0ng h\u00f3a) v\u00e0 r\u1ea5t nhi\u1ec1u node (t\u00e0u). B\u1ea1n c\u1ea7n m\u1ed9t ng\u01b0\u1eddi \u0111i\u1ec1u ph\u1ed1i th\u00f4ng minh \u0111\u1ec3:</p> <ul> <li>\u0110\u1ea3m b\u1ea3o container kh\u00f4ng b\u1ecb \u0111\u1eb7t l\u00ean con t\u00e0u \u0111\u00e3 qu\u00e1 t\u1ea3i.</li> <li>\u0110\u1ea3m b\u1ea3o container c\u1ea7n nhi\u1ec1u \"kh\u00f4ng gian\" (t\u00e0i nguy\u00ean) \u0111\u01b0\u1ee3c \u0111\u1eb7t l\u00ean con t\u00e0u \u0111\u1ee7 l\u1edbn.</li> <li>\u0110\u1ea3m b\u1ea3o container c\u00f3 y\u00eau c\u1ea7u \u0111\u1eb7c bi\u1ec7t (v\u00ed d\u1ee5: ch\u1ec9 \u0111i \u0111\u1ebfn c\u1ea3ng X) \u0111\u01b0\u1ee3c \u0111\u1eb7t l\u00ean \u0111\u00fang con t\u00e0u c\u00f3 l\u1ed9 tr\u00ecnh \u0111\u00f3.</li> </ul> <p>Trong Kubernetes c\u0169ng v\u1eady, Scheduler \u0111\u1ea3m b\u1ea3o c\u00e1c Pod \u0111\u01b0\u1ee3c \u0111\u1eb7t l\u00ean c\u00e1c Node ph\u00f9 h\u1ee3p nh\u1ea5t d\u1ef1a tr\u00ean nhi\u1ec1u ti\u00eau ch\u00ed kh\u00e1c nhau.</p>"},{"location":"k8s/01.core/07.KubeScheduler/#3-quy-trinh-tuyen-chon-node-cua-scheduler-2-giai-oan","title":"3. Quy tr\u00ecnh \"Tuy\u1ec3n ch\u1ecdn\" Node c\u1ee7a Scheduler (2 Giai \u0111o\u1ea1n) \u2705","text":"<p>Khi c\u00f3 m\u1ed9t Pod m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o v\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c g\u00e1n cho Node n\u00e0o, <code>kube-scheduler</code> s\u1ebd b\u1eaft \u0111\u1ea7u quy tr\u00ecnh \"tuy\u1ec3n ch\u1ecdn\" qua 2 giai \u0111o\u1ea1n:</p>"},{"location":"k8s/01.core/07.KubeScheduler/#a-giai-oan-1-loc-filtering","title":"a. Giai \u0111o\u1ea1n 1: L\u1ecdc (Filtering)","text":"<ul> <li>\u1ede giai \u0111o\u1ea1n n\u00e0y, scheduler s\u1ebd lo\u1ea1i b\u1ecf t\u1ea5t c\u1ea3 c\u00e1c Node KH\u00d4NG PH\u00d9 H\u1ee2P.</li> <li>V\u00ed d\u1ee5: Pod c\u1ee7a b\u1ea1n y\u00eau c\u1ea7u 2 CPU v\u00e0 4GB RAM. Scheduler s\u1ebd l\u1ecdc ra t\u1ea5t c\u1ea3 c\u00e1c Node kh\u00f4ng c\u00f2n \u0111\u1ee7 2 CPU ho\u1eb7c 4GB RAM tr\u1ed1ng.</li> <li>K\u1ebft th\u00fac giai \u0111o\u1ea1n n\u00e0y, ch\u00fang ta s\u1ebd c\u00f3 m\u1ed9t danh s\u00e1ch c\u00e1c Node \"ti\u1ec1m n\u0103ng\" c\u00f3 th\u1ec3 ch\u1ea1y \u0111\u01b0\u1ee3c Pod.</li> </ul>"},{"location":"k8s/01.core/07.KubeScheduler/#b-giai-oan-2-cham-iem-xep-hang-scoring-ranking","title":"b. Giai \u0111o\u1ea1n 2: Ch\u1ea5m \u0111i\u1ec3m &amp; X\u1ebfp h\u1ea1ng (Scoring &amp; Ranking)","text":"<ul> <li>T\u1eeb danh s\u00e1ch c\u00e1c Node ti\u1ec1m n\u0103ng \u1edf tr\u00ean, scheduler s\u1ebd ti\u1ebfn h\u00e0nh ch\u1ea5m \u0111i\u1ec3m cho t\u1eebng Node theo thang \u0111i\u1ec3m t\u1eeb 0 \u0111\u1ebfn 10.</li> <li>N\u00f3 s\u1eed d\u1ee5ng c\u00e1c h\u00e0m \u01b0u ti\u00ean (priority functions) \u0111\u1ec3 t\u00ednh \u0111i\u1ec3m.</li> <li>V\u00ed d\u1ee5: M\u1ed9t h\u00e0m c\u00f3 th\u1ec3 ch\u1ea5m \u0111i\u1ec3m cao h\u01a1n cho Node n\u00e0o m\u00e0 sau khi \u0111\u1eb7t Pod l\u00ean v\u1eabn c\u00f2n d\u01b0 nhi\u1ec1u t\u00e0i nguy\u00ean nh\u1ea5t.</li> <li>Cu\u1ed1i c\u00f9ng, Node c\u00f3 s\u1ed1 \u0111i\u1ec3m cao nh\u1ea5t s\u1ebd \u0111\u01b0\u1ee3c ch\u1ecdn \u0111\u1ec3 ch\u1ea1y Pod.</li> </ul> <p>Quy tr\u00ecnh n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00f9y ch\u1ec9nh v\u00e0 th\u1eadm ch\u00ed b\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 vi\u1ebft scheduler c\u1ee7a ri\u00eang m\u00ecnh. C\u00f3 r\u1ea5t nhi\u1ec1u kh\u00e1i ni\u1ec7m n\u00e2ng cao li\u00ean quan nh\u01b0 Taints &amp; Tolerations, Node Selectors, Affinity,... s\u1ebd \u0111\u01b0\u1ee3c t\u00ecm hi\u1ec3u s\u00e2u h\u01a1n sau n\u00e0y.</p>"},{"location":"k8s/01.core/07.KubeScheduler/#4-cai-at-va-xem-cau-hinh","title":"4. C\u00e0i \u0111\u1eb7t v\u00e0 Xem C\u1ea5u h\u00ecnh","text":"<ul> <li>V\u1edbi c\u1ee5m <code>kubeadm</code>: <code>kube-scheduler</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0 m\u1ed9t static Pod trong namespace <code>kube-system</code>. B\u1ea1n c\u00f3 th\u1ec3 xem c\u1ea5u h\u00ecnh trong file manifest c\u1ee7a Pod t\u1ea1i <code>/etc/kubernetes/manifests/</code>.</li> <li>C\u00e1ch chung: D\u00f9ng l\u1ec7nh <code>ps aux | grep kube-scheduler</code> tr\u00ean Master Node \u0111\u1ec3 xem ti\u1ebfn tr\u00ecnh \u0111ang ch\u1ea1y v\u00e0 c\u00e1c tham s\u1ed1 c\u1ee7a n\u00f3.</li> </ul>"},{"location":"k8s/01.core/07.KubeScheduler/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>Nhi\u1ec7m v\u1ee5 c\u1ee7a <code>kube-scheduler</code> l\u00e0 QUY\u1ebeT \u0110\u1ecaNH, c\u00f2n nhi\u1ec7m v\u1ee5 c\u1ee7a <code>kubelet</code> l\u00e0 TH\u1ef0C THI vi\u1ec7c \u0111\u1eb7t Pod l\u00ean Node. Ph\u1ea3i ph\u00e2n bi\u1ec7t r\u00f5 r\u00e0ng hai vai tr\u00f2 n\u00e0y.</li> <li>N\u1eafm v\u1eefng quy tr\u00ecnh 2 giai \u0111o\u1ea1n: L\u1ecdc (Filtering) \u0111\u1ec3 lo\u1ea1i b\u1ecf c\u00e1c node kh\u00f4ng ph\u00f9 h\u1ee3p v\u00e0 Ch\u1ea5m \u0111i\u1ec3m (Scoring) \u0111\u1ec3 ch\u1ecdn ra node t\u1ed1t nh\u1ea5t.</li> <li>Bi\u1ebft c\u00e1ch t\u00ecm file c\u1ea5u h\u00ecnh c\u1ee7a scheduler trong m\u1ed9t c\u1ee5m <code>kubeadm</code> (n\u00f3 l\u00e0 m\u1ed9t static Pod).</li> </ul> <p>Scheduler \u0111\u00f3ng vai tr\u00f2 then ch\u1ed1t trong vi\u1ec7c \u0111\u1ea3m b\u1ea3o c\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed5 m\u1ed9t c\u00e1ch t\u1ed1i \u01b0u v\u00e0 hi\u1ec7u qu\u1ea3 tr\u00ean to\u00e0n b\u1ed9 c\u1ee5m. Ch\u00fac b\u1ea1n m\u1ed9t bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/08.kubelet/","title":"08.kubelet","text":""},{"location":"k8s/01.core/08.kubelet/#1-kubelet-thuyen-truong-tren-moi-worker-node","title":"1. <code>kubelet</code> - \"Thuy\u1ec1n tr\u01b0\u1edfng\" tr\u00ean m\u1ed7i Worker Node \ud83d\udc68\u200d\u2708\ufe0f","text":"<p>N\u1ebfu <code>Master Node</code> l\u00e0 \"T\u00e0u Ch\u1ec9 Huy\", th\u00ec m\u1ed7i <code>Worker Node</code> l\u00e0 m\u1ed9t \"T\u00e0u H\u00e0ng\", v\u00e0 <code>kubelet</code> ch\u00ednh l\u00e0 thuy\u1ec1n tr\u01b0\u1edfng c\u1ee7a con t\u00e0u \u0111\u00f3. N\u00f3 l\u00e0 agent ch\u00ednh, ch\u1ecbu tr\u00e1ch nhi\u1ec7m cho m\u1ecdi ho\u1ea1t \u0111\u1ed9ng di\u1ec5n ra tr\u00ean node c\u1ee7a m\u00ecnh.</p> <p><code>kubelet</code> l\u00e0 \u0111i\u1ec3m li\u00ean l\u1ea1c duy nh\u1ea5t c\u1ee7a Master Node tr\u00ean m\u1ed7i Worker Node. M\u1ecdi m\u1ec7nh l\u1ec7nh t\u1eeb <code>kube-api-server</code> xu\u1ed1ng Worker Node \u0111\u1ec1u do <code>kubelet</code> ti\u1ebfp nh\u1eadn v\u00e0 th\u1ef1c thi.</p>"},{"location":"k8s/01.core/08.kubelet/#2-cac-nhiem-vu-chinh-cua-thuyen-truong-kubelet","title":"2. C\u00e1c Nhi\u1ec7m v\u1ee5 ch\u00ednh c\u1ee7a \"Thuy\u1ec1n tr\u01b0\u1edfng\" <code>kubelet</code>","text":"<p><code>kubelet</code> c\u00f3 3 nhi\u1ec7m v\u1ee5 c\u1ed1t l\u00f5i:</p> <ol> <li> <p>\u0110\u0103ng k\u00fd Node (Node Registration):</p> </li> <li> <p>Khi m\u1ed9t Worker Node m\u1edbi kh\u1edfi \u0111\u1ed9ng, <code>kubelet</code> s\u1ebd l\u00e0m \"th\u1ee7 t\u1ee5c gi\u1ea5y t\u1edd\" c\u1ea7n thi\u1ebft \u0111\u1ec3 \u0111\u0103ng k\u00fd Node n\u00e0y v\u1edbi c\u1ee5m Kubernetes, b\u00e1o c\u00e1o r\u1eb1ng: \"Thuy\u1ec1n tr\u01b0\u1edfng xin b\u00e1o, t\u00e0u h\u00e0ng s\u1ed1 hi\u1ec7u X \u0111\u00e3 s\u1eb5n s\u00e0ng nh\u1eadn nhi\u1ec7m v\u1ee5!\".</p> </li> <li> <p>T\u1ea1o v\u00e0 Qu\u1ea3n l\u00fd V\u00f2ng \u0111\u1eddi Pod (Pod Lifecycle):</p> </li> <li> <p>Sau khi <code>kube-scheduler</code> \u0111\u00e3 quy\u1ebft \u0111\u1ecbnh m\u1ed9t Pod s\u1ebd ch\u1ea1y tr\u00ean Node n\u00e0y, <code>kube-api-server</code> s\u1ebd g\u1eedi ch\u1ec9 th\u1ecb \u0111\u1ebfn <code>kubelet</code>.</p> </li> <li><code>kubelet</code> nh\u1eadn l\u1ec7nh v\u00e0 ra ch\u1ec9 th\u1ecb cho Container Runtime Engine (v\u00ed d\u1ee5: Docker, ContainerD) \u0111\u1ec3 k\u00e9o image c\u1ea7n thi\u1ebft v\u00e0 kh\u1edfi ch\u1ea1y c\u00e1c container b\u00ean trong Pod.</li> <li> <p>N\u00f3 c\u0169ng ch\u1ecbu tr\u00e1ch nhi\u1ec7m h\u1ee7y Pod khi c\u00f3 l\u1ec7nh.</p> </li> <li> <p>B\u00e1o c\u00e1o Tr\u1ea1ng th\u00e1i (Status Reporting):</p> </li> <li> <p><code>kubelet</code> li\u00ean t\u1ee5c theo d\u00f5i \"s\u1ee9c kh\u1ecfe\" c\u1ee7a c\u00e1c Pod v\u00e0 container \u0111ang ch\u1ea1y tr\u00ean node c\u1ee7a m\u00ecnh.</p> </li> <li>N\u00f3 \u0111\u1ec1u \u0111\u1eb7n g\u1eedi c\u00e1c b\u00e1o c\u00e1o tr\u1ea1ng th\u00e1i n\u00e0y v\u1ec1 cho <code>kube-api-server</code>, th\u00f4ng b\u00e1o t\u00ecnh h\u00ecnh c\u1ee7a \"con t\u00e0u\" v\u00e0 c\u00e1c \"th\u00f9ng h\u00e0ng\" tr\u00ean \u0111\u00f3.</li> </ol>"},{"location":"k8s/01.core/08.kubelet/#3-cai-at-kubelet-mot-iem-ac-biet","title":"3. C\u00e0i \u0111\u1eb7t <code>kubelet</code> - M\u1ed9t \u0111i\u1ec3m \"\u0110\u1eb7c bi\u1ec7t\" \u26a0\ufe0f","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t \u0111i\u1ec3m r\u1ea5t quan tr\u1ecdng b\u1ea1n c\u1ea7n nh\u1edb, kh\u00e1c bi\u1ec7t so v\u1edbi c\u00e1c th\u00e0nh ph\u1ea7n Master Node kh\u00e1c:</p> <ul> <li>Ngay c\u1ea3 khi b\u1ea1n s\u1eed d\u1ee5ng c\u00f4ng c\u1ee5 <code>kubeadm</code> \u0111\u1ec3 d\u1ef1ng c\u1ee5m, <code>kubeadm</code> KH\u00d4NG t\u1ef1 \u0111\u1ed9ng c\u00e0i \u0111\u1eb7t <code>kubelet</code> cho b\u1ea1n.</li> <li>B\u1ea1n ph\u1ea3i lu\u00f4n lu\u00f4n c\u00e0i \u0111\u1eb7t <code>kubelet</code> m\u1ed9t c\u00e1ch th\u1ee7 c\u00f4ng tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c Worker Node (v\u00e0 c\u1ea3 Master Node).</li> <li>Qu\u00e1 tr\u00ecnh c\u00e0i \u0111\u1eb7t th\u01b0\u1eddng bao g\u1ed3m vi\u1ec7c t\u1ea3i file c\u00e0i \u0111\u1eb7t, gi\u1ea3i n\u00e9n v\u00e0 c\u1ea5u h\u00ecnh n\u00f3 ch\u1ea1y nh\u01b0 m\u1ed9t service h\u1ec7 th\u1ed1ng.</li> </ul>"},{"location":"k8s/01.core/08.kubelet/#4-xem-tien-trinh-kubelet-ang-chay","title":"4. Xem ti\u1ebfn tr\u00ecnh <code>kubelet</code> \u0111ang ch\u1ea1y","text":"<p>\u0110\u1ec3 xem <code>kubelet</code> c\u00f3 \u0111ang ch\u1ea1y tr\u00ean m\u1ed9t node hay kh\u00f4ng v\u00e0 v\u1edbi c\u00e1c t\u00f9y ch\u1ecdn n\u00e0o, b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng l\u1ec7nh sau tr\u00ean node \u0111\u00f3:</p> <pre><code>ps -aux | grep kubelet\n</code></pre>"},{"location":"k8s/01.core/08.kubelet/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>kubelet</code> l\u00e0 agent ch\u00ednh, ch\u1ea1y tr\u00ean m\u1ed7i Worker Node (v\u00e0 c\u1ea3 Master Node).</li> <li>N\u00f3 l\u00e0 ng\u01b0\u1eddi th\u1ef1c thi - nh\u1eadn l\u1ec7nh t\u1eeb <code>api-server</code> v\u00e0 ra l\u1ec7nh cho Container Runtime \u0111\u1ec3 ch\u1ea1y/d\u1eebng container.</li> <li>N\u00f3 l\u00e0 ng\u01b0\u1eddi b\u00e1o c\u00e1o - li\u00ean t\u1ee5c g\u1eedi tr\u1ea1ng th\u00e1i c\u1ee7a Node v\u00e0 c\u00e1c Pod v\u1ec1 cho Master.</li> <li>Quan tr\u1ecdng: <code>kubeadm</code> kh\u00f4ng t\u1ef1 c\u00e0i <code>kubelet</code>. B\u1ea1n ph\u1ea3i lu\u00f4n c\u00e0i \u0111\u1eb7t n\u00f3 th\u1ee7 c\u00f4ng.</li> </ul> <p>Hi\u1ec3u r\u00f5 vai tr\u00f2 c\u1ee7a <code>kubelet</code> l\u00e0 b\u1ea1n \u0111\u00e3 hi\u1ec3u \u0111\u01b0\u1ee3c \"c\u00e1nh tay n\u1ed1i d\u00e0i\" c\u1ee7a Master Node ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o tr\u00ean t\u1eebng Worker Node r\u1ed3i \u0111\u00f3. Ch\u00fac b\u1ea1n bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/09.kube-proxy/","title":"09.kube proxy","text":""},{"location":"k8s/01.core/09.kube-proxy/#1-bai-toan-giao-tiep-giua-cac-pod-va-su-ky-dieu-cua-service","title":"1. B\u00e0i to\u00e1n: Giao ti\u1ebfp gi\u1eefa c\u00e1c Pod v\u00e0 s\u1ef1 \"k\u1ef3 di\u1ec7u\" c\u1ee7a Service","text":"<p>Trong m\u1ed9t c\u1ee5m Kubernetes, c\u00e1c Pod c\u00f3 th\u1ec3 giao ti\u1ebfp v\u1edbi nhau. Tuy nhi\u00ean, \u0111\u1ecba ch\u1ec9 IP c\u1ee7a Pod kh\u00f4ng \u1ed5n \u0111\u1ecbnh, ch\u00fang c\u00f3 th\u1ec3 thay \u0111\u1ed5i khi Pod \u0111\u01b0\u1ee3c t\u1ea1o l\u1ea1i. V\u00ec v\u1eady, ch\u00fang ta kh\u00f4ng n\u00ean \u0111\u1ec3 m\u1ed9t Pod g\u1ecdi tr\u1ef1c ti\u1ebfp \u0111\u1ebfn IP c\u1ee7a Pod kh\u00e1c.</p> <p>\ud83d\udc49 Gi\u1ea3i ph\u00e1p l\u00e0 d\u00f9ng <code>Service</code>. Service cung c\u1ea5p m\u1ed9t \"\u0111\u1ecba ch\u1ec9\" \u1ed5n \u0111\u1ecbnh (d\u01b0\u1edbi d\u1ea1ng t\u00ean ho\u1eb7c m\u1ed9t \u0111\u1ecba ch\u1ec9 IP \u1ea3o g\u1ecdi l\u00e0 ClusterIP) \u0111\u1ec3 c\u00e1c Pod kh\u00e1c c\u00f3 th\u1ec3 t\u00ecm \u0111\u1ebfn.</p> <p>C\u00e2u h\u1ecfi \u0111\u1eb7t ra: Service ch\u1ec9 l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng \"\u1ea3o\" trong b\u1ed9 nh\u1edb c\u1ee7a Kubernetes, n\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t Pod hay container th\u1ef1c s\u1ef1. V\u1eady l\u00e0m th\u1ebf n\u00e0o m\u00e0 traffic c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn m\u1ed9t \u0111\u1ecba ch\u1ec9 IP \"\u1ea3o\" v\u00e0 \u0111\u1ebfn \u0111\u01b0\u1ee3c \u0111\u00fang Pod th\u1eadt?</p>"},{"location":"k8s/01.core/09.kube-proxy/#2-kube-proxy-ao-thuat-gia-mang-cua-kubernetes","title":"2. <code>kube-proxy</code> - \"\u1ea2o thu\u1eadt gia\" M\u1ea1ng c\u1ee7a Kubernetes \ud83c\udfa9\u2728","text":"<p><code>kube-proxy</code> ch\u00ednh l\u00e0 c\u00e2u tr\u1ea3 l\u1eddi! N\u00f3 l\u00e0 \"nh\u00e0 \u1ea3o thu\u1eadt\" bi\u1ebfn c\u00e1c Service \"\u1ea3o\" tr\u1edf n\u00ean \"th\u1eadt\".</p> <ul> <li><code>kube-proxy</code> l\u00e0 g\u00ec? N\u00f3 l\u00e0 m\u1ed9t ti\u1ebfn tr\u00ecnh (process) ch\u1ea1y tr\u00ean M\u1ed6I NODE trong c\u1ee5m Kubernetes (c\u1ea3 master v\u00e0 worker).</li> <li>Nhi\u1ec7m v\u1ee5 c\u1ee7a n\u00f3 l\u00e0 g\u00ec?</li> <li>N\u00f3 li\u00ean t\u1ee5c theo d\u00f5i <code>kube-api-server</code> \u0111\u1ec3 xem c\u00f3 Service n\u00e0o m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o, s\u1eeda, hay x\u00f3a kh\u00f4ng.</li> <li>M\u1ed7i khi c\u00f3 m\u1ed9t Service m\u1edbi, <code>kube-proxy</code> s\u1ebd t\u1ea1o ra c\u00e1c quy t\u1eafc m\u1ea1ng (network rules) tr\u00ean ch\u00ednh c\u00e1i Node m\u00e0 n\u00f3 \u0111ang ch\u1ea1y.</li> </ul>"},{"location":"k8s/01.core/09.kube-proxy/#3-man-ao-thuat-hoat-ong-nhu-the-nao","title":"3. \"M\u00e0n \u1ea3o thu\u1eadt\" ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o?","text":"<ul> <li>M\u1ed9t trong nh\u1eefng c\u00e1ch <code>kube-proxy</code> th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y l\u00e0 s\u1eed d\u1ee5ng <code>iptables</code> (m\u1ed9t c\u00f4ng c\u1ee5 t\u01b0\u1eddng l\u1eeda/\u0111\u1ecbnh tuy\u1ebfn r\u1ea5t ph\u1ed5 bi\u1ebfn tr\u00ean Linux).</li> <li>V\u00ed d\u1ee5:</li> <li>B\u1ea1n t\u1ea1o m\u1ed9t Service t\u00ean <code>db-service</code> v\u1edbi IP \u1ea3o l\u00e0 <code>10.96.0.12</code>.</li> <li>Service n\u00e0y tr\u1ecf \u0111\u1ebfn m\u1ed9t Pod database c\u00f3 IP th\u1eadt l\u00e0 <code>10.32.0.15</code>.</li> <li><code>kube-proxy</code> tr\u00ean m\u1ed7i node s\u1ebd t\u1ea1o m\u1ed9t rule <code>iptables</code> c\u00f3 n\u1ed9i dung \u0111\u1ea1i lo\u1ea1i nh\u01b0: \"N\u00e0y h\u1ec7 \u0111i\u1ec1u h\u00e0nh, n\u1ebfu c\u00f3 b\u1ea5t k\u1ef3 g\u00f3i tin n\u00e0o g\u1eedi \u0111\u1ebfn \u0111\u1ecba ch\u1ec9 <code>10.96.0.12</code>, h\u00e3y chuy\u1ec3n h\u01b0\u1edbng (redirect) n\u00f3 \u0111\u1ebfn \u0111\u1ecba ch\u1ec9 <code>10.32.0.15</code> nh\u00e9!\"</li> <li>Nh\u1edd v\u1eady, t\u1eeb b\u1ea5t k\u1ef3 node n\u00e0o trong c\u1ee5m, khi m\u1ed9t Pod kh\u00e1c g\u1eedi request \u0111\u1ebfn IP c\u1ee7a <code>db-service</code>, request \u0111\u00f3 s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n h\u01b0\u1edbng m\u1ed9t c\u00e1ch k\u1ef3 di\u1ec7u \u0111\u1ebfn \u0111\u00fang Pod database th\u1eadt s\u1ef1.</li> </ul>"},{"location":"k8s/01.core/09.kube-proxy/#4-cach-kube-proxy-uoc-trien-khai","title":"4. C\u00e1ch <code>kube-proxy</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai","text":"<ul> <li>\"Th\u1ee7 c\u00f4ng\" (From Scratch): B\u1ea1n t\u1ea3i file binary c\u1ee7a <code>kube-proxy</code> v\u00e0 ch\u1ea1y n\u00f3 nh\u01b0 m\u1ed9t service.</li> <li>D\u00f9ng <code>kubeadm</code>: <code>kubeadm</code> s\u1ebd tri\u1ec3n khai <code>kube-proxy</code> d\u01b0\u1edbi d\u1ea1ng c\u00e1c Pod tr\u00ean m\u1ed7i node.</li> <li>C\u1ee5 th\u1ec3 h\u01a1n, n\u00f3 \u0111\u01b0\u1ee3c tri\u1ec3n khai b\u1eb1ng m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Kubernetes g\u1ecdi l\u00e0 <code>DaemonSet</code>.</li> <li><code>DaemonSet</code> \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed9t b\u1ea3n sao c\u1ee7a Pod (trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 Pod <code>kube-proxy</code>) s\u1ebd lu\u00f4n ch\u1ea1y tr\u00ean m\u1ed7i node c\u1ee7a c\u1ee5m. \u0110\u00e2y l\u00e0 c\u00e1ch ho\u00e0n h\u1ea3o \u0111\u1ec3 tri\u1ec3n khai c\u00e1c agent c\u1ea7n c\u00f3 m\u1eb7t \u1edf kh\u1eafp m\u1ecdi n\u01a1i nh\u01b0 <code>kube-proxy</code>.</li> </ul>"},{"location":"k8s/01.core/09.kube-proxy/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>kube-proxy</code> ch\u1ea1y tr\u00ean m\u1ed7i node trong c\u1ee5m.</li> <li>Nhi\u1ec7m v\u1ee5 ch\u00ednh c\u1ee7a n\u00f3 l\u00e0 hi\u1ec7n th\u1ef1c h\u00f3a c\u01a1 ch\u1ebf c\u1ee7a Kubernetes Service.</li> <li>N\u00f3 l\u00e0m \u0111i\u1ec1u n\u00e0y b\u1eb1ng c\u00e1ch theo d\u00f5i API Server v\u00e0 t\u1ea1o ra c\u00e1c quy t\u1eafc m\u1ea1ng (v\u00ed d\u1ee5: <code>iptables</code>) tr\u00ean node \u0111\u1ec3 \u0111\u1ecbnh tuy\u1ebfn traffic t\u1eeb IP \u1ea3o c\u1ee7a Service \u0111\u1ebfn IP th\u1eadt c\u1ee7a c\u00e1c Pod.</li> <li>Trong m\u1ed9t c\u1ee5m <code>kubeadm</code>, <code>kube-proxy</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0 m\u1ed9t <code>DaemonSet</code>.</li> </ul>"},{"location":"k8s/01.core/10.pods/","title":"10.pods","text":""},{"location":"k8s/01.core/10.pods/#1-pod-la-gi-on-vi-co-ban-nhat-trong-kubernetes","title":"1. Pod l\u00e0 g\u00ec? \u0110\u01a1n v\u1ecb c\u01a1 b\u1ea3n nh\u1ea5t trong Kubernetes \ud83c\udf31","text":"<p>\u0110i\u1ec3m \u0111\u1ea7u ti\u00ean v\u00e0 quan tr\u1ecdng nh\u1ea5t b\u1ea1n c\u1ea7n nh\u1edb: Kubernetes kh\u00f4ng tri\u1ec3n khai container m\u1ed9t c\u00e1ch tr\u1ef1c ti\u1ebfp. Thay v\u00e0o \u0111\u00f3, c\u00e1c container \u0111\u01b0\u1ee3c \"\u0111\u00f3ng g\u00f3i\" v\u00e0o b\u00ean trong m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ee7a Kubernetes g\u1ecdi l\u00e0 Pod.</p> <ul> <li>Pod l\u00e0 m\u1ed9t th\u1ef1c th\u1ec3 (instance) duy nh\u1ea5t c\u1ee7a m\u1ed9t \u1ee9ng d\u1ee5ng.</li> <li>Pod l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng nh\u1ecf nh\u1ea5t b\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o v\u00e0 qu\u1ea3n l\u00fd trong Kubernetes.</li> </ul> <p>H\u00e3y coi Pod nh\u01b0 m\u1ed9t c\u00e1i \"v\u1ecf b\u1ecdc\" cho container c\u1ee7a b\u1ea1n. Ngay c\u1ea3 khi b\u1ea1n ch\u1ec9 c\u00f3 m\u1ed9t container, n\u00f3 v\u1eabn ph\u1ea3i n\u1eb1m b\u00ean trong m\u1ed9t Pod.</p>"},{"location":"k8s/01.core/10.pods/#2-mo-rong-quy-mo-scaling-ung-dung","title":"2. M\u1edf r\u1ed9ng quy m\u00f4 (Scaling) \u1ee9ng d\u1ee5ng \ud83d\udcc8","text":"<p>Khi \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n c\u1ea7n x\u1eed l\u00fd nhi\u1ec1u ng\u01b0\u1eddi d\u00f9ng h\u01a1n, b\u1ea1n c\u1ea7n ph\u1ea3i m\u1edf r\u1ed9ng (scale up) n\u00f3. C\u00e1ch Kubernetes th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y l\u00e0:</p> <ul> <li>\u0110\u1ec3 scale up: B\u1ea1n t\u1ea1o ra c\u00e1c Pod m\u1edbi.</li> <li>\u0110\u1ec3 scale down: B\u1ea1n x\u00f3a b\u1edbt c\u00e1c Pod hi\u1ec7n c\u00f3.</li> </ul> <p>Quy t\u1eafc v\u00e0ng: B\u1ea1n KH\u00d4NG th\u00eam container m\u1edbi v\u00e0o m\u1ed9t Pod \u0111ang c\u00f3 s\u1eb5n \u0111\u1ec3 scale \u1ee9ng d\u1ee5ng. Thay v\u00e0o \u0111\u00f3, b\u1ea1n t\u1ea1o ra nhi\u1ec1u Pod h\u01a1n. \u0110i\u1ec1u n\u00e0y d\u1eabn \u0111\u1ebfn m\u1ed9t m\u1ed1i quan h\u1ec7 ph\u1ed5 bi\u1ebfn l\u00e0 1 Pod : 1 Container cho \u1ee9ng d\u1ee5ng ch\u00ednh c\u1ee7a b\u1ea1n.</p>"},{"location":"k8s/01.core/10.pods/#3-truong-hop-ac-biet-pod-a-container-multi-container-pods","title":"3. Tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t: Pod \u0111a Container (Multi-Container Pods) \ud83e\udd13","text":"<p>M\u1eb7c d\u00f9 1 Pod th\u01b0\u1eddng ch\u1ec9 ch\u1ee9a 1 container ch\u00ednh, nh\u01b0ng m\u1ed9t Pod c\u00f3 th\u1ec3 ch\u1ee9a nhi\u1ec1u container. Tr\u01b0\u1eddng h\u1ee3p n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi b\u1ea1n c\u00f3:</p> <ul> <li>M\u1ed9t container \u1ee9ng d\u1ee5ng ch\u00ednh (main application container).</li> <li>M\u1ed9t ho\u1eb7c nhi\u1ec1u container ph\u1ee5 tr\u1ee3 (helper/sidecar containers) l\u00e0m c\u00e1c t\u00e1c v\u1ee5 h\u1ed7 tr\u1ee3, v\u00ed d\u1ee5 nh\u01b0 x\u1eed l\u00fd file, thu th\u1eadp log, ho\u1eb7c l\u00e0m proxy.</li> </ul> <p>L\u1ee3i \u00edch c\u1ee7a vi\u1ec7c \u0111\u1eb7t nhi\u1ec1u container trong c\u00f9ng m\u1ed9t Pod:</p> <ol> <li>Chung V\u00f2ng \u0111\u1eddi (Shared Lifecycle): T\u1ea5t c\u1ea3 c\u00e1c container trong c\u00f9ng m\u1ed9t Pod s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o ra c\u00f9ng nhau v\u00e0 \"ch\u1ebft\" c\u00f9ng nhau.</li> <li>Chung Kh\u00f4ng gian M\u1ea1ng (Shared Network Namespace): Ch\u00fang c\u00f3 th\u1ec3 giao ti\u1ebfp v\u1edbi nhau qua <code>localhost</code> nh\u01b0 th\u1ec3 ch\u00fang \u0111ang ch\u1ea1y tr\u00ean c\u00f9ng m\u1ed9t m\u00e1y.</li> <li>Chung Kh\u00f4ng gian L\u01b0u tr\u1eef (Shared Storage): Ch\u00fang c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng chia s\u1ebb c\u00f9ng m\u1ed9t v\u00f9ng l\u01b0u tr\u1eef (volume).</li> </ol> <p>Pod gi\u00fap t\u1ef1 \u0111\u1ed9ng h\u00f3a t\u1ea5t c\u1ea3 nh\u1eefng vi\u1ec7c ph\u1ee9c t\u1ea1p n\u00e0y. Tuy nhi\u00ean, h\u00e3y nh\u1edb r\u1eb1ng Pod \u0111a container l\u00e0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng kh\u00f4ng qu\u00e1 ph\u1ed5 bi\u1ebfn.</p>"},{"location":"k8s/01.core/10.pods/#4-cach-trien-khai-va-xem-pods-lenh-co-ban","title":"4. C\u00e1ch Tri\u1ec3n khai v\u00e0 Xem Pods (L\u1ec7nh c\u01a1 b\u1ea3n) \ud83d\udcbb","text":"<ul> <li> <p>\u0110\u1ec3 t\u1ea1o m\u1ed9t Pod (m\u1ed9t c\u00e1ch nhanh ch\u00f3ng):</p> </li> <li> <p>S\u1eed d\u1ee5ng l\u1ec7nh <code>kubectl run</code>. L\u1ec7nh n\u00e0y th\u1ef1c ch\u1ea5t s\u1ebd t\u1ea1o ra m\u1ed9t Pod v\u00e0 sau \u0111\u00f3 tri\u1ec3n khai container image b\u1ea1n ch\u1ec9 \u0111\u1ecbnh v\u00e0o b\u00ean trong n\u00f3.</p> </li> <li>C\u00fa ph\u00e1p: <code>kubectl run &lt;t\u00ean-pod&gt; --image=&lt;t\u00ean-image&gt;</code></li> <li> <p>V\u00ed d\u1ee5: <code>kubectl run my-nginx-pod --image=nginx</code></p> </li> <li> <p>\u0110\u1ec3 xem danh s\u00e1ch c\u00e1c Pod:</p> </li> <li>S\u1eed d\u1ee5ng l\u1ec7nh <code>kubectl get pods</code>.</li> <li>L\u1ec7nh n\u00e0y s\u1ebd hi\u1ec3n th\u1ecb c\u00e1c Pod \u0111ang c\u00f3 trong cluster v\u00e0 tr\u1ea1ng th\u00e1i c\u1ee7a ch\u00fang (v\u00ed d\u1ee5: <code>ContainerCreating</code>, <code>Running</code>, <code>Completed</code>, <code>Error</code>).</li> </ul>"},{"location":"k8s/01.core/10.pods/#5-mot-luu-y-quan-trong-ve-mang","title":"5. M\u1ed9t l\u01b0u \u00fd quan tr\u1ecdng v\u1ec1 M\u1ea1ng \ud83c\udf10","text":"<p>Vi\u1ec7c t\u1ea1o ra m\u1ed9t Pod kh\u00f4ng t\u1ef1 \u0111\u1ed9ng l\u00e0m cho \u1ee9ng d\u1ee5ng b\u00ean trong n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c truy c\u1eadp t\u1eeb b\u00ean ngo\u00e0i. \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3, ch\u00fang ta c\u1ea7n m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c l\u00e0 Service, ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u v\u1ec1 n\u00f3 sau. Hi\u1ec7n t\u1ea1i, Pod ch\u1ec9 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c truy c\u1eadp t\u1eeb b\u00ean trong node m\u00e0 n\u00f3 \u0111ang ch\u1ea1y.</p>"},{"location":"k8s/01.core/10.pods/#6-chot-ha-cho-ky-thi-cka","title":"6. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>Pod l\u00e0 \u0111\u01a1n v\u1ecb nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3 tri\u1ec3n khai trong Kubernetes. N\u00f3 l\u00e0 m\u1ed9t \"l\u1edbp b\u1ecdc\" cho m\u1ed9t ho\u1eb7c nhi\u1ec1u container.</li> <li>Scaling \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng c\u00e1ch thay \u0111\u1ed5i s\u1ed1 l\u01b0\u1ee3ng Pod, kh\u00f4ng ph\u1ea3i s\u1ed1 l\u01b0\u1ee3ng container trong m\u1ed9t Pod.</li> <li>M\u00f4 h\u00ecnh 1 Pod : 1 Container l\u00e0 ph\u1ed5 bi\u1ebfn nh\u1ea5t.</li> <li>Pod \u0111a container r\u1ea5t h\u1eefu \u00edch cho c\u00e1c m\u1eabu thi\u1ebft k\u1ebf \"sidecar\", v\u00ec ch\u00fang chia s\u1ebb chung m\u1ea1ng v\u00e0 l\u01b0u tr\u1eef.</li> <li>Bi\u1ebft c\u00e1c l\u1ec7nh c\u01a1 b\u1ea3n: <code>kubectl run</code> \u0111\u1ec3 t\u1ea1o Pod v\u00e0 <code>kubectl get pods</code> \u0111\u1ec3 li\u1ec7t k\u00ea ch\u00fang.</li> </ul> <p>Hi\u1ec3u r\u00f5 v\u1ec1 Pod l\u00e0 n\u1ec1n t\u1ea3ng \u0111\u1ec3 b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m ch\u1ee7 \u0111\u01b0\u1ee3c c\u00e1c kh\u00e1i ni\u1ec7m ph\u1ee9c t\u1ea1p h\u01a1n trong Kubernetes. Ch\u00fac b\u1ea1n bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/11-12.pods-yml-demo/","title":"11 12.pods yml demo","text":""},{"location":"k8s/01.core/11-12.pods-yml-demo/#1-bon-tru-cot-cua-mot-file-yaml-trong-kubernetes","title":"1. B\u1ed1n \"Tr\u1ee5 c\u1ed9t\" c\u1ee7a m\u1ed9t file YAML trong Kubernetes","text":"<p>M\u1ecdi file \u0111\u1ecbnh ngh\u0129a \u0111\u1ed1i t\u01b0\u1ee3ng trong Kubernetes (d\u00f9 l\u00e0 Pod, Service, hay Deployment,...) \u0111\u1ec1u ph\u1ea3i c\u00f3 4 tr\u01b0\u1eddng (fields) \u1edf c\u1ea5p cao nh\u1ea5t. \u0110\u00e2y l\u00e0 c\u00e1c tr\u01b0\u1eddng b\u1eaft bu\u1ed9c:</p> <ol> <li> <p><code>apiVersion</code>:</p> </li> <li> <p>L\u00e0 g\u00ec? Phi\u00ean b\u1ea3n c\u1ee7a Kubernetes API m\u00e0 b\u1ea1n \u0111ang s\u1eed d\u1ee5ng \u0111\u1ec3 t\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng.</p> </li> <li> <p>V\u00ed d\u1ee5 (cho Pod): <code>v1</code></p> </li> <li> <p><code>kind</code>:</p> </li> <li> <p>L\u00e0 g\u00ec? Lo\u1ea1i \u0111\u1ed1i t\u01b0\u1ee3ng m\u00e0 b\u1ea1n \u0111ang mu\u1ed1n t\u1ea1o.</p> </li> <li> <p>V\u00ed d\u1ee5 (cho Pod): <code>Pod</code></p> </li> <li> <p><code>metadata</code>:</p> </li> <li> <p>L\u00e0 g\u00ec? \"D\u1eef li\u1ec7u v\u1ec1 d\u1eef li\u1ec7u\" - t\u1ee9c l\u00e0 c\u00e1c th\u00f4ng tin m\u00f4 t\u1ea3 v\u1ec1 \u0111\u1ed1i t\u01b0\u1ee3ng, nh\u01b0 t\u00ean, nh\u00e3n,... \u0110\u00e2y l\u00e0 m\u1ed9t dictionary (\u0111\u1ed1i t\u01b0\u1ee3ng).</p> </li> <li><code>name</code>: T\u00ean c\u1ee7a Pod (v\u00ed d\u1ee5: <code>my-app-pod</code>).</li> <li> <p><code>labels</code>: M\u1ed9t dictionary ch\u1ee9a c\u00e1c c\u1eb7p key-value (nh\u00e3n). Labels c\u1ef1c k\u1ef3 quan tr\u1ecdng, gi\u00fap b\u1ea1n l\u1ecdc v\u00e0 nh\u00f3m c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng sau n\u00e0y (v\u00ed d\u1ee5: <code>app: my-app</code>, <code>env: production</code>).</p> </li> <li> <p><code>spec</code> (vi\u1ebft t\u1eaft c\u1ee7a Specification):</p> </li> <li> <p>L\u00e0 g\u00ec? \u0110\u00e2y l\u00e0 ph\u1ea7n quan tr\u1ecdng nh\u1ea5t, n\u01a1i b\u1ea1n \u0111\u1ecbnh ngh\u0129a tr\u1ea1ng th\u00e1i mong mu\u1ed1n c\u1ee7a \u0111\u1ed1i t\u01b0\u1ee3ng.</p> </li> <li>C\u1ea5u tr\u00fac c\u1ee7a <code>spec</code> s\u1ebd kh\u00e1c nhau t\u00f9y thu\u1ed9c v\u00e0o <code>kind</code> c\u1ee7a \u0111\u1ed1i t\u01b0\u1ee3ng.</li> </ol> <p>\u26a0\ufe0f L\u01b0u \u00fd v\u1ec1 th\u1ee5t \u0111\u1ea7u d\u00f2ng (indentation) trong YAML: YAML r\u1ea5t nh\u1ea1y c\u1ea3m v\u1edbi kho\u1ea3ng tr\u1eafng. C\u00e1c thu\u1ed9c t\u00ednh con ph\u1ea3i \u0111\u01b0\u1ee3c th\u1ee5t v\u00e0o so v\u1edbi thu\u1ed9c t\u00ednh cha, v\u00e0 c\u00e1c thu\u1ed9c t\u00ednh ngang h\u00e0ng ph\u1ea3i c\u00f3 c\u00f9ng m\u1ee9c th\u1ee5t l\u1ec1.</p>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#2-mo-xe-phan-spec-cua-mot-pod","title":"2. \"M\u1ed5 x\u1ebb\" ph\u1ea7n <code>spec</code> c\u1ee7a m\u1ed9t Pod","text":"<p>\u0110\u1ed1i v\u1edbi m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 <code>kind: Pod</code>, ph\u1ea7n <code>spec</code> s\u1ebd m\u00f4 t\u1ea3 c\u00e1c container s\u1ebd ch\u1ea1y b\u00ean trong Pod \u0111\u00f3.</p> <ul> <li><code>spec</code> ch\u1ee9a m\u1ed9t thu\u1ed9c t\u00ednh quan tr\u1ecdng l\u00e0 <code>containers</code>.</li> <li><code>containers</code> l\u00e0 m\u1ed9t danh s\u00e1ch (list/array). L\u00fd do n\u00f3 l\u00e0 m\u1ed9t danh s\u00e1ch v\u00ec m\u1ed9t Pod c\u00f3 th\u1ec3 ch\u1ee9a nhi\u1ec1u container.</li> <li>M\u1ed7i m\u1ee5c trong danh s\u00e1ch <code>containers</code> l\u00e0 m\u1ed9t dictionary m\u00f4 t\u1ea3 m\u1ed9t container, v\u1edbi hai thu\u1ed9c t\u00ednh b\u1eaft bu\u1ed9c:</li> <li><code>name</code>: T\u00ean b\u1ea1n \u0111\u1eb7t cho container (v\u00ed d\u1ee5: <code>nginx-container</code>).</li> <li><code>image</code>: T\u00ean c\u1ee7a Docker image s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ch\u1ea1y container (v\u00ed d\u1ee5: <code>nginx</code>).</li> </ul>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#3-vi-du-mot-file-pod-definitionyaml-hoan-chinh","title":"3. V\u00ed d\u1ee5 m\u1ed9t file <code>pod-definition.yaml</code> ho\u00e0n ch\u1ec9nh","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t file YAML \u0111\u1ea7y \u0111\u1ee7 \u0111\u1ec3 t\u1ea1o m\u1ed9t Pod \u0111\u01a1n gi\u1ea3n ch\u1ea1y NGINX:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-app-pod\n  labels:\n    app: my-app\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#4-thuc-thi-va-quan-ly-pod-trong-kubernetes","title":"4. Th\u1ef1c thi v\u00e0 Qu\u1ea3n l\u00fd Pod trong Kubernetes","text":""},{"location":"k8s/01.core/11-12.pods-yml-demo/#41-tao-pod-tu-file-yaml","title":"4.1. T\u1ea1o Pod t\u1eeb file YAML","text":"<pre><code># T\u1ea1o Pod (b\u00e1o l\u1ed7i n\u1ebfu \u0111\u00e3 t\u1ed3n t\u1ea1i)\nkubectl create -f pod-definition.yaml\n\n# T\u1ea1o ho\u1eb7c c\u1eadp nh\u1eadt Pod (khuy\u1ebfn ngh\u1ecb)\nkubectl apply -f pod-definition.yaml\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#42-kiem-tra-va-giam-sat-pod","title":"4.2. Ki\u1ec3m tra v\u00e0 Gi\u00e1m s\u00e1t Pod","text":"<pre><code># Xem danh s\u00e1ch Pod\nkubectl get pods\nkubectl get pods -o wide                    # Th\u00f4ng tin chi ti\u1ebft\nkubectl get pods -l app=my-app             # L\u1ecdc theo label\nkubectl get pods -A                        # T\u1ea5t c\u1ea3 namespace\n\n# Xem th\u00f4ng tin chi ti\u1ebft\nkubectl describe pod my-app-pod\n\n# Theo d\u00f5i logs\nkubectl logs my-app-pod\nkubectl logs -f my-app-pod                 # Theo th\u1eddi gian th\u1ef1c\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#43-tuong-tac-voi-pod","title":"4.3. T\u01b0\u01a1ng t\u00e1c v\u1edbi Pod","text":"<pre><code># Truy c\u1eadp v\u00e0o container\nkubectl exec -it my-app-pod -- /bin/bash\n\n# Ch\u1ea1y l\u1ec7nh trong container\nkubectl exec my-app-pod -- ls -la\n\n# Port forwarding\nkubectl port-forward my-app-pod 8080:80\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#44-xoa-pod","title":"4.4. X\u00f3a Pod","text":"<pre><code>kubectl delete pod my-app-pod\nkubectl delete -f pod-definition.yaml\nkubectl delete pods -l app=my-app          # X\u00f3a theo label\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#5-tao-pod-nhanh-voi-kubectl-run","title":"5. T\u1ea1o Pod nhanh v\u1edbi kubectl run","text":""},{"location":"k8s/01.core/11-12.pods-yml-demo/#51-cac-lenh-co-ban","title":"5.1. C\u00e1c l\u1ec7nh c\u01a1 b\u1ea3n","text":"<pre><code># T\u1ea1o Pod \u0111\u01a1n gi\u1ea3n\nkubectl run nginx-pod --image=nginx\n\n# T\u1ea1o Pod v\u1edbi labels v\u00e0 port\nkubectl run webapp --image=nginx --port=80 --labels=\"app=web,env=prod\"\n\n# T\u1ea1o file YAML (kh\u00f4ng t\u1ea1o Pod th\u1ef1c t\u1ebf)\nkubectl run redis-pod --image=redis --dry-run=client -o yaml &gt; redis-pod.yaml\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#52-pod-voi-cau-hinh-nang-cao","title":"5.2. Pod v\u1edbi c\u1ea5u h\u00ecnh n\u00e2ng cao","text":"<pre><code># nginx-advanced.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-advanced\n  labels:\n    app: nginx\n    tier: frontend\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx:1.21\n      ports:\n        - containerPort: 80\n      resources:\n        requests:\n          memory: \"64Mi\"\n          cpu: \"250m\"\n        limits:\n          memory: \"128Mi\"\n          cpu: \"500m\"\n      env:\n        - name: NGINX_PORT\n          value: \"80\"\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#6-troubleshooting-va-debug-pod","title":"6. Troubleshooting v\u00e0 Debug Pod","text":""},{"location":"k8s/01.core/11-12.pods-yml-demo/#61-kiem-tra-trang-thai","title":"6.1. Ki\u1ec3m tra tr\u1ea1ng th\u00e1i","text":"<pre><code># Xem Pod c\u00f3 v\u1ea5n \u0111\u1ec1\nkubectl get pods --field-selector=status.phase!=Running\n\n# Xem events h\u1ec7 th\u1ed1ng\nkubectl get events --sort-by=.metadata.creationTimestamp\n\n# Theo d\u00f5i tr\u1ea1ng th\u00e1i realtime\nkubectl get pods -w\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#62-phan-tich-va-debug","title":"6.2. Ph\u00e2n t\u00edch v\u00e0 Debug","text":"<pre><code># Xem resource usage\nkubectl top pods\n\n# Xem c\u1ea5u h\u00ecnh Pod \u1edf d\u1ea1ng YAML\nkubectl get pod nginx-pod -o yaml\n\n# Xem logs container tr\u01b0\u1edbc \u0111\u00f3\nkubectl logs nginx-pod --previous\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#7-lab-thuc-hanh-tong-hop","title":"7. Lab th\u1ef1c h\u00e0nh t\u1ed5ng h\u1ee3p","text":"<pre><code># 1. T\u1ea1o Pod v\u1edbi labels\nkubectl run webapp --image=nginx:1.21 --port=80 --labels=\"app=webapp,env=prod\"\n\n# 2. Ki\u1ec3m tra v\u00e0 theo d\u00f5i\nkubectl get pods -l app=webapp\nkubectl describe pod webapp\nkubectl logs webapp\n\n# 3. Test k\u1ebft n\u1ed1i\nkubectl port-forward webapp 8080:80 &amp;\ncurl localhost:8080\n\n# 4. Backup v\u00e0 cleanup\nkubectl get pod webapp -o yaml &gt; webapp-backup.yaml\nkubectl delete pod webapp\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#8-tom-tat-cho-ky-thi-cka","title":"8. T\u00f3m t\u1eaft cho k\u1ef3 thi CKA \ud83d\udcdd","text":"<p>4 tr\u01b0\u1eddng b\u1eaft bu\u1ed9c c\u1ee7a YAML:</p> <ul> <li><code>apiVersion: v1</code> (cho Pod)</li> <li><code>kind: Pod</code></li> <li><code>metadata</code>: name, labels</li> <li><code>spec</code>: containers (name, image)</li> </ul> <p>L\u1ec7nh quan tr\u1ecdng:</p> <ul> <li><code>kubectl apply -f file.yaml</code> - T\u1ea1o/c\u1eadp nh\u1eadt</li> <li><code>kubectl get pods -o wide</code> - Xem danh s\u00e1ch</li> <li><code>kubectl describe pod &lt;name&gt;</code> - Debug</li> <li><code>kubectl logs &lt;pod&gt;</code> - Xem logs</li> <li><code>kubectl exec -it &lt;pod&gt; -- /bin/bash</code> - Truy c\u1eadp container</li> </ul> <p>Tips:</p> <ul> <li>Lu\u00f4n s\u1eed d\u1ee5ng <code>apply</code> thay v\u00ec <code>create</code></li> <li>Labels quan tr\u1ecdng cho vi\u1ec7c qu\u1ea3n l\u00fd</li> <li>S\u1eed d\u1ee5ng <code>describe</code> \u0111\u1ec3 troubleshoot</li> <li><code>dry-run</code> \u0111\u1ec3 t\u1ea1o YAML template nhanh</li> </ul>"},{"location":"k8s/01.core/13.replicaset-demo/","title":"13.replicaset demo","text":"<p>\"ng\u01b0\u1eddi h\u00f9ng\" th\u1ea7m l\u1eb7ng c\u1ee7a Kubernetes, gi\u00fap \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n lu\u00f4n s\u1eb5n s\u00e0ng v\u00e0 c\u00f3 th\u1ec3 m\u1edf r\u1ed9ng. \u0110\u00f3 ch\u00ednh l\u00e0 Replication Controller v\u00e0 \"h\u1eadu du\u1ec7\" c\u1ee7a n\u00f3, ReplicaSet.</p>"},{"location":"k8s/01.core/13.replicaset-demo/#1-tai-sao-can-nhan-ban-replication","title":"1. T\u1ea1i sao c\u1ea7n \"Nh\u00e2n b\u1ea3n\" (Replication)? \ud83e\udd14","text":"<p>Trong th\u1ef1c t\u1ebf, vi\u1ec7c ch\u1ec9 ch\u1ea1y m\u1ed9t Pod duy nh\u1ea5t cho \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n r\u1ea5t r\u1ee7i ro. Ch\u00fang ta c\u1ea7n \"nh\u00e2n b\u1ea3n\" v\u00ec hai l\u00fd do ch\u00ednh:</p> <ol> <li> <p>T\u00ednh S\u1eb5n s\u00e0ng cao (High Availability):</p> </li> <li> <p>N\u1ebfu m\u1ed9t Pod b\u1ecb l\u1ed7i ho\u1eb7c \"ch\u1ebft\", \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n s\u1ebd ng\u1eebng ho\u1ea1t \u0111\u1ed9ng.</p> </li> <li> <p>B\u1eb1ng c\u00e1ch ch\u1ea1y nhi\u1ec1u b\u1ea3n sao (replicas) c\u1ee7a Pod, n\u1ebfu m\u1ed9t Pod g\u1eb7p s\u1ef1 c\u1ed1, nh\u1eefng Pod c\u00f2n l\u1ea1i v\u1eabn ti\u1ebfp t\u1ee5c ph\u1ee5c v\u1ee5 ng\u01b0\u1eddi d\u00f9ng. Controller s\u1ebd t\u1ef1 \u0111\u1ed9ng t\u1ea1o m\u1ed9t Pod m\u1edbi \u0111\u1ec3 thay th\u1ebf Pod \u0111\u00e3 h\u1ecfng.</p> </li> <li> <p>C\u00e2n b\u1eb1ng t\u1ea3i &amp; M\u1edf r\u1ed9ng quy m\u00f4 (Load Balancing &amp; Scaling):</p> </li> <li> <p>Khi l\u01b0\u1ee3ng ng\u01b0\u1eddi d\u00f9ng t\u0103ng l\u00ean, m\u1ed9t Pod c\u00f3 th\u1ec3 b\u1ecb qu\u00e1 t\u1ea3i.</p> </li> <li>B\u1eb1ng c\u00e1ch t\u1ea1o th\u00eam nhi\u1ec1u Pod, b\u1ea1n c\u00f3 th\u1ec3 ph\u00e2n b\u1ed5 (load balance) l\u01b0\u1ee3ng truy c\u1eadp tr\u00ean nhi\u1ec1u Pod, gi\u00fap \u1ee9ng d\u1ee5ng ch\u1ea1y m\u01b0\u1ee3t m\u00e0 h\u01a1n v\u00e0 c\u00f3 th\u1ec3 x\u1eed l\u00fd nhi\u1ec1u y\u00eau c\u1ea7u h\u01a1n.</li> <li>n\u1ebfu s\u1ed1 l\u01b0\u1ee3ng pod trong 1 node n\u1eb7ng qu\u00e1 th\u00ec n\u00f3 \u0111\u01b0a sang node kh\u00e1c \u0111\u1ec3      </li> </ol>"},{"location":"k8s/01.core/13.replicaset-demo/#2-replication-controller-vs-replicaset","title":"2. Replication Controller vs. ReplicaSet","text":"<p>C\u1ea3 hai \u0111\u1ec1u c\u00f3 c\u00f9ng m\u1ee5c \u0111\u00edch: \u0111\u1ea3m b\u1ea3o m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng Pod nh\u1ea5t \u0111\u1ecbnh lu\u00f4n ch\u1ea1y. Tuy nhi\u00ean:</p> <ul> <li>Replication Controller: L\u00e0 c\u00f4ng ngh\u1ec7 c\u0169 h\u01a1n.</li> <li>ReplicaSet: L\u00e0 c\u00f4ng ngh\u1ec7 m\u1edbi h\u01a1n v\u00e0 \u0111\u01b0\u1ee3c khuy\u1ebfn kh\u00edch s\u1eed d\u1ee5ng.</li> </ul> <p>Trong b\u00e0i n\u00e0y v\u00e0 v\u1ec1 sau, ch\u00fang ta s\u1ebd t\u1eadp trung v\u00e0o ReplicaSet.</p>"},{"location":"k8s/01.core/13.replicaset-demo/#3-giai-phau-mot-file-yaml-cua-replicaset","title":"3. \"Gi\u1ea3i ph\u1eabu\" m\u1ed9t file YAML c\u1ee7a ReplicaSet \ud83e\uddec","text":"<p>\u0110\u1ec3 t\u1ea1o m\u1ed9t ReplicaSet, ch\u00fang ta s\u1ebd \u0111\u1ecbnh ngh\u0129a n\u00f3 trong m\u1ed9t file YAML. C\u1ea5u tr\u00fac c\u1ee7a n\u00f3 r\u1ea5t gi\u1ed1ng v\u1edbi Pod, nh\u01b0ng c\u00f3 th\u00eam v\u00e0i ph\u1ea7n quan tr\u1ecdng:</p> <pre><code>apiVersion: apps/v1 # Kh\u00e1c v\u1edbi Pod (v1)\nkind: ReplicaSet\nmetadata:\n  name: myapp-replicaset\n  labels:\n    app: myapp\nspec:\n  replicas: 3 # 1. S\u1ed1 l\u01b0\u1ee3ng b\u1ea3n sao mong mu\u1ed1n\n  selector: # 2. \"B\u1ed9 l\u1ecdc\" \u0111\u1ec3 t\u00ecm Pod, B\u1eaeT BU\u1ed8C\n    matchLabels:\n      app: myapp\n  template: # 3. \"Khu\u00f4n m\u1eabu\" \u0111\u1ec3 t\u1ea1o Pod m\u1edbi\n    metadata:\n      labels:\n        app: myapp\n    spec:\n      containers:\n        - name: nginx-container\n          image: nginx\n</code></pre> <p>H\u00e3y \"m\u1ed5 x\u1ebb\" ph\u1ea7n <code>spec</code>:</p> <ol> <li><code>replicas</code>: B\u1ea1n mu\u1ed1n c\u00f3 bao nhi\u00eau b\u1ea3n sao c\u1ee7a Pod \u0111ang ch\u1ea1y. Trong v\u00ed d\u1ee5 n\u00e0y l\u00e0 <code>3</code>.</li> <li><code>selector</code>: \u0110\u00e2y l\u00e0 ph\u1ea7n c\u1ef1c k\u1ef3 quan tr\u1ecdng v\u00e0 b\u1eaft bu\u1ed9c trong ReplicaSet. N\u00f3 gi\u00fap ReplicaSet bi\u1ebft \u0111\u01b0\u1ee3c \"nh\u1eefng Pod n\u00e0o thu\u1ed9c v\u1ec1 m\u00ecnh\".</li> <li><code>matchLabels</code>: ReplicaSet s\u1ebd t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c Pod c\u00f3 nh\u00e3n (label) kh\u1edbp v\u1edbi nh\u1eefng g\u00ec \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a match \u1edf ch\u1ed7 template , ph\u1ea7n t\u1ea1o ra pod \u1ea5y (trong v\u00ed d\u1ee5 l\u00e0 <code>app: myapp</code>). (l\u01b0u \u00fd label g\u1eafn cho ch\u00ednh b\u1ea3n th\u00e2n ReplicaSet , gi\u1ed1ng nh\u01b0 \"tag\" \u0111\u1ec3: Nh\u1eadn di\u1ec7n ReplicaSet d\u1ec5 h\u01a1n th\u00f4i)</li> <li><code>template</code>: \u0110\u00e2y ch\u00ednh l\u00e0 \"khu\u00f4n m\u1eabu\" \u0111\u1ecbnh ngh\u0129a Pod. N\u1ebfu ReplicaSet th\u1ea5y s\u1ed1 l\u01b0\u1ee3ng Pod hi\u1ec7n t\u1ea1i \u00edt h\u01a1n <code>replicas</code>, n\u00f3 s\u1ebd d\u00f9ng \"khu\u00f4n\" n\u00e0y \u0111\u1ec3 t\u1ea1o ra Pod m\u1edbi. V\u1ec1 c\u01a1 b\u1ea3n, b\u1ea1n c\u00f3 th\u1ec3 sao ch\u00e9p ph\u1ea7n <code>metadata</code> v\u00e0 <code>spec</code> c\u1ee7a m\u1ed9t file \u0111\u1ecbnh ngh\u0129a Pod v\u00e0o \u0111\u00e2y.</li> </ol>"},{"location":"k8s/01.core/13.replicaset-demo/#4-co-che-ky-dieu-cua-labels-va-selectors","title":"4. C\u01a1 ch\u1ebf \"K\u1ef3 di\u1ec7u\" c\u1ee7a Labels v\u00e0 Selectors \ud83c\udff7\ufe0f\ud83d\udd0e","text":"<ul> <li>Labels (Nh\u00e3n): L\u00e0 c\u00e1c c\u1eb7p key-value b\u1ea1n g\u1eafn v\u00e0o c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng (nh\u01b0 Pod) \u0111\u1ec3 ph\u00e2n lo\u1ea1i ch\u00fang.</li> <li>Selectors (B\u1ed9 ch\u1ecdn): L\u00e0 c\u00e1ch c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c (nh\u01b0 ReplicaSet, Service) t\u00ecm v\u00e0 l\u00e0m vi\u1ec7c v\u1edbi c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 nh\u00e3n t\u01b0\u01a1ng \u1ee9ng.</li> </ul> <p>M\u1ed1i quan h\u1ec7 n\u00e0y l\u00e0 \"x\u01b0\u01a1ng s\u1ed1ng\" c\u1ee7a Kubernetes. ReplicaSet d\u00f9ng <code>selector</code> \u0111\u1ec3 \"qu\u1ea3n l\u00fd\" c\u00e1c Pod c\u00f3 <code>labels</code> ph\u00f9 h\u1ee3p.</p> <p>C\u00e2u h\u1ecfi hay: N\u1ebfu Pod \u0111\u00e3 t\u1ed3n t\u1ea1i s\u1eb5n, ReplicaSet c\u00f3 c\u1ea7n <code>template</code> kh\u00f4ng? C\u00d3! V\u00ec n\u1ebfu m\u1ed9t trong c\u00e1c Pod \u0111\u00f3 b\u1ecb l\u1ed7i trong t\u01b0\u01a1ng lai, ReplicaSet c\u1ea7n <code>template</code> \u0111\u1ec3 bi\u1ebft c\u00e1ch t\u1ea1o ra m\u1ed9t Pod m\u1edbi thay th\u1ebf.</p>"},{"location":"k8s/01.core/13.replicaset-demo/#5-mo-rong-quy-mo-scaling-replicaset","title":"5. M\u1edf r\u1ed9ng quy m\u00f4 (Scaling) ReplicaSet \ud83d\udcc8","text":"<p>Khi b\u1ea1n mu\u1ed1n thay \u0111\u1ed5i s\u1ed1 l\u01b0\u1ee3ng replicas (v\u00ed d\u1ee5 t\u1eeb 3 l\u00ean 6), c\u00f3 hai c\u00e1ch ch\u00ednh:</p> <ol> <li> <p>C\u00e1ch 1 (Declarative - Khai b\u00e1o):</p> </li> <li> <p>S\u1eeda gi\u00e1 tr\u1ecb <code>replicas</code> trong file YAML (v\u00ed d\u1ee5: <code>replicas: 6</code>).</p> </li> <li> <p>Ch\u1ea1y l\u1ec7nh: <code>kubectl replace -f &lt;t\u00ean-file.yaml&gt;</code></p> </li> <li> <p>C\u00e1ch 2 (Imperative - M\u1ec7nh l\u1ec7nh):</p> </li> <li> <p>D\u00f9ng l\u1ec7nh <code>kubectl scale</code> tr\u1ef1c ti\u1ebfp:</p> <pre><code># C\u00e1ch 1: D\u00f9ng t\u00ean c\u1ee7a ReplicaSet\nkubectl scale --replicas=6 replicaset myapp-replicaset\n\n# C\u00e1ch 2: D\u00f9ng file \u0111\u1ecbnh ngh\u0129a\nkubectl scale --replicas=6 -f &lt;t\u00ean-file.yaml&gt;\n</code></pre> </li> <li> <p>L\u01b0u \u00fd: C\u00e1ch n\u00e0y ch\u1ec9 thay \u0111\u1ed5i tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a ReplicaSet tr\u00ean c\u1ee5m, n\u00f3 kh\u00f4ng c\u1eadp nh\u1eadt l\u1ea1i file YAML g\u1ed1c c\u1ee7a b\u1ea1n.</p> </li> <li>n\u1ebfu update image qua edit hay qua file . Mu\u1ed1n c\u1eadp nh\u1eadt, b\u1ea1n ph\u1ea3i x\u00f3a Pod c\u0169 \u0111\u1ec3 n\u00f3 t\u1ea1o Pod m\u1edbi v\u1edbi image m\u1edbi. qua deployment s\u1ebd x\u1ecbn h\u01a1n</li> </ol>"},{"location":"k8s/01.core/13.replicaset-demo/#6-chot-ha-cho-ky-thi-cka","title":"6. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>ReplicaSet c\u00f3 nhi\u1ec7m v\u1ee5 duy tr\u00ec m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng Pod \u1ed5n \u0111\u1ecbnh.</li> <li>C\u01a1 ch\u1ebf c\u1ed1t l\u00f5i l\u00e0 s\u1ef1 k\u1ebft h\u1ee3p gi\u1eefa <code>labels</code> (tr\u00ean Pod) v\u00e0 <code>selector</code> (trong ReplicaSet).</li> <li>N\u1eafm v\u1eefng c\u00e1c tr\u01b0\u1eddng b\u1eaft bu\u1ed9c trong file YAML c\u1ee7a ReplicaSet: <code>apiVersion: apps/v1</code>, <code>kind: ReplicaSet</code>, <code>metadata</code>, v\u00e0 m\u1ed9t <code>spec</code> ch\u1ee9a <code>replicas</code>, <code>selector</code>, v\u00e0 <code>pod template</code>.</li> <li>Bi\u1ebft c\u00e1ch scale m\u1ed9t ReplicaSet b\u1eb1ng c\u1ea3 <code>kubectl replace</code> v\u00e0 <code>kubectl scale</code>.</li> </ul>"},{"location":"k8s/01.core/13.replicaset-demo/#replicaset-demo-detailed-commands-and-examples","title":"ReplicaSet Demo - Detailed Commands and Examples","text":""},{"location":"k8s/01.core/13.replicaset-demo/#1-view-replicasets","title":"1. View ReplicaSets","text":""},{"location":"k8s/01.core/13.replicaset-demo/#list-all-replicasets","title":"List all ReplicaSets","text":"<pre><code>kubectl get replicaset\n# or short form\nkubectl get rs\n</code></pre> <p>Output example:</p> <pre><code>NAME              DESIRED   CURRENT   READY   AGE\nnew-replica-set   3         3         3       5m\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#view-with-more-details","title":"View with more details","text":"<pre><code>kubectl get rs -o wide\n</code></pre> <p>Output example:</p> <pre><code>NAME              DESIRED   CURRENT   READY   AGE   CONTAINERS   IMAGES         SELECTOR\nnew-replica-set   3         3         3       5m    nginx        nginx:1.20     app=nginx\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#2-describe-replicaset","title":"2. Describe ReplicaSet","text":"<pre><code>kubectl describe rs new-replica-set\n</code></pre> <p>Output example:</p> <pre><code>Name:         new-replica-set\nNamespace:    default\nSelector:     app=nginx\nLabels:       &lt;none&gt;\nAnnotations:  &lt;none&gt;\nReplicas:     3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n    Image:        nginx:1.20\n    Port:         80/TCP\n    Host Port:    0/TCP\nEvents:\n  Type    Reason            Age   From                   Message\n  ----    ------            ----  ----                   -------\n  Normal  SuccessfulCreate  5m    replicaset-controller  Created pod: new-replica-set-abc123\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#3-edit-replicaset","title":"3. Edit ReplicaSet","text":""},{"location":"k8s/01.core/13.replicaset-demo/#edit-interactively","title":"Edit interactively","text":"<pre><code>kubectl edit rs new-replica-set\n</code></pre> <p>This opens the ReplicaSet configuration in your default editor (vi/nano)</p>"},{"location":"k8s/01.core/13.replicaset-demo/#apply-changes-from-file","title":"Apply changes from file","text":"<pre><code>kubectl apply -f new-replica-set.yml\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#4-scale-replicaset","title":"4. Scale ReplicaSet","text":""},{"location":"k8s/01.core/13.replicaset-demo/#scale-using-file","title":"Scale using file","text":"<pre><code>kubectl scale --replicas=5 -f new-replica-set.yml\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#scale-using-resource-name","title":"Scale using resource name","text":"<pre><code>kubectl scale --replicas=5 rs new-replica-set\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#verify-scaling","title":"Verify scaling","text":"<pre><code>kubectl get rs new-replica-set\nkubectl get pods -l app=nginx\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#5-delete-replicaset","title":"5. Delete ReplicaSet","text":""},{"location":"k8s/01.core/13.replicaset-demo/#delete-replicaset-and-its-pods","title":"Delete ReplicaSet and its pods","text":"<pre><code>kubectl delete rs new-replica-set\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#delete-replicaset-but-keep-pods","title":"Delete ReplicaSet but keep pods","text":"<pre><code>kubectl delete rs new-replica-set --cascade=orphan\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#6-complete-demo-workflow","title":"6. Complete Demo Workflow","text":""},{"location":"k8s/01.core/13.replicaset-demo/#step-1-create-replicaset","title":"Step 1: Create ReplicaSet","text":"<pre><code>apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: new-replica-set\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:1.20\n          ports:\n            - containerPort: 80\n</code></pre> <pre><code>kubectl create -f new-replica-set.yml\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#step-2-monitor-replicaset","title":"Step 2: Monitor ReplicaSet","text":"<pre><code># Watch ReplicaSet status\nkubectl get rs -w\n\n# Check pods created by ReplicaSet\nkubectl get pods -l app=nginx\n\n# View detailed information\nkubectl describe rs new-replica-set\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#step-3-scale-operations","title":"Step 3: Scale Operations","text":"<pre><code># Scale up to 5 replicas\nkubectl scale --replicas=5 rs new-replica-set\n\n# Verify scaling\nkubectl get rs new-replica-set\nkubectl get pods -l app=nginx\n\n# Scale down to 2 replicas\nkubectl scale --replicas=2 rs new-replica-set\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#step-4-test-self-healing","title":"Step 4: Test Self-Healing","text":"<pre><code># Delete a pod to test self-healing\nkubectl delete pod &lt;pod-name&gt;\n\n# Watch ReplicaSet recreate the pod\nkubectl get pods -l app=nginx -w\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#step-5-cleanup","title":"Step 5: Cleanup","text":"<pre><code>kubectl delete rs new-replica-set\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#7-useful-additional-commands","title":"7. Useful Additional Commands","text":""},{"location":"k8s/01.core/13.replicaset-demo/#view-replicaset-yaml","title":"View ReplicaSet YAML","text":"<pre><code>kubectl get rs new-replica-set -o yaml\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#view-replicaset-json","title":"View ReplicaSet JSON","text":"<pre><code>kubectl get rs new-replica-set -o json\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#filter-by-labels","title":"Filter by labels","text":"<pre><code>kubectl get rs -l app=nginx\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#view-events-related-to-replicaset","title":"View events related to ReplicaSet","text":"<pre><code>kubectl get events --field-selector involvedObject.name=new-replica-set\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#monitor-resource-usage","title":"Monitor resource usage","text":"<pre><code>kubectl top pods -l app=nginx\n</code></pre>"},{"location":"k8s/01.core/13.replicaset-demo/#key-points-to-remember","title":"Key Points to Remember","text":"<ul> <li>ReplicaSet ensures desired number of pods are running</li> <li>Pods are recreated automatically if deleted</li> <li>Scaling can be done via file or direct command</li> <li>Use labels to identify and group related resources</li> <li>Always verify operations with <code>kubectl get</code> commands</li> </ul>"},{"location":"k8s/01.core/14.deployment/","title":"14.deployment","text":"<p>\u0111\u1ed1i t\u01b0\u1ee3ng m\u1ea1nh m\u1ebd v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u nh\u1ea5t \u0111\u1ec3 qu\u1ea3n l\u00fd \u1ee9ng d\u1ee5ng, \u0111\u00f3 l\u00e0 Kubernetes Deployment.</p>"},{"location":"k8s/01.core/14.deployment/#1-bai-toan-quan-ly-ung-dung-trong-the-gioi-thuc","title":"1. B\u00e0i to\u00e1n Qu\u1ea3n l\u00fd \u1ee8ng d\u1ee5ng trong \"Th\u1ebf gi\u1edbi Th\u1ef1c\" \ud83c\udf0d","text":"<p> Khi tri\u1ec3n khai \u1ee9ng d\u1ee5ng trong m\u00f4i tr\u01b0\u1eddng th\u1ef1c t\u1ebf (production), ch\u00fang ta th\u01b0\u1eddng \u0111\u1ed1i m\u1eb7t v\u1edbi c\u00e1c y\u00eau c\u1ea7u sau:</p> <ul> <li>Nhi\u1ec1u b\u1ea3n sao: C\u1ea7n ch\u1ea1y nhi\u1ec1u instance c\u1ee7a \u1ee9ng d\u1ee5ng \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\u00ednh s\u1eb5n s\u00e0ng cao v\u00e0 c\u00e2n b\u1eb1ng t\u1ea3i.</li> <li>C\u1eadp nh\u1eadt li\u1ec1n m\u1ea1ch: Khi c\u00f3 phi\u00ean b\u1ea3n m\u1edbi, c\u1ea7n n\u00e2ng c\u1ea5p \u1ee9ng d\u1ee5ng m\u00e0 kh\u00f4ng g\u00e2y gi\u00e1n \u0111o\u1ea1n d\u1ecbch v\u1ee5. \u0110\u00e2y g\u1ecdi l\u00e0 Rolling Updates.</li> <li>Quay lui (Rollback): N\u1ebfu phi\u00ean b\u1ea3n m\u1edbi b\u1ecb l\u1ed7i, c\u1ea7n c\u00f3 kh\u1ea3 n\u0103ng quay tr\u1edf l\u1ea1i phi\u00ean b\u1ea3n c\u0169 m\u1ed9t c\u00e1ch nhanh ch\u00f3ng.</li> <li>T\u1ea1m d\u1eebng &amp; Ti\u1ebfp t\u1ee5c: \u0110\u00f4i khi c\u1ea7n t\u1ea1m d\u1eebng qu\u00e1 tr\u00ecnh thay \u0111\u1ed5i, th\u1ef1c hi\u1ec7n nhi\u1ec1u c\u1ea5u h\u00ecnh c\u00f9ng l\u00fac, r\u1ed3i m\u1edbi ti\u1ebfp t\u1ee5c \u0111\u1ec3 t\u1ea5t c\u1ea3 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng m\u1ed9t l\u1ea7n.</li> </ul>"},{"location":"k8s/01.core/14.deployment/#2-deployment-vi-tuong-chi-huy-toi-cao","title":"2. <code>Deployment</code> - \"V\u1ecb t\u01b0\u1edbng\" Ch\u1ec9 huy T\u1ed1i cao \ud83c\udf96\ufe0f","text":"<p>Deployment ch\u00ednh l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng Kubernetes \u0111\u01b0\u1ee3c sinh ra \u0111\u1ec3 gi\u1ea3i quy\u1ebft t\u1ea5t c\u1ea3 c\u00e1c b\u00e0i to\u00e1n tr\u00ean. N\u00f3 l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng qu\u1ea3n l\u00fd c\u1ea5p cao h\u01a1n, \u0111\u1ee9ng tr\u00ean c\u1ea3 ReplicaSet v\u00e0 Pod.</p> <p>\u0110\u00e2y l\u00e0 h\u1ec7 th\u1ed1ng ph\u00e2n c\u1ea5p b\u1ea1n c\u1ea7n nh\u1edb:</p> <p>Deployment \u27a1\ufe0f qu\u1ea3n l\u00fd \u27a1\ufe0f ReplicaSet \u27a1\ufe0f qu\u1ea3n l\u00fd \u27a1\ufe0f Pods</p> <p>\u0110i\u1ec3m m\u1ea5u ch\u1ed1t: M\u1ed9t Deployment kh\u00f4ng qu\u1ea3n l\u00fd tr\u1ef1c ti\u1ebfp c\u00e1c Pod. Thay v\u00e0o \u0111\u00f3, n\u00f3 qu\u1ea3n l\u00fd c\u00e1c ReplicaSet. Khi b\u1ea1n t\u1ea1o ho\u1eb7c c\u1eadp nh\u1eadt m\u1ed9t Deployment, n\u00f3 s\u1ebd t\u1ea1o ra m\u1ed9t ReplicaSet m\u1edbi, v\u00e0 ch\u00ednh ReplicaSet \u0111\u00f3 s\u1ebd ch\u1ecbu tr\u00e1ch nhi\u1ec7m t\u1ea1o ra c\u00e1c Pod.</p>"},{"location":"k8s/01.core/14.deployment/#3-giai-phau-mot-file-yaml-cua-deployment","title":"3. \"Gi\u1ea3i ph\u1eabu\" m\u1ed9t file YAML c\u1ee7a Deployment \ud83e\uddec","text":"<p>Tin vui l\u00e0 file \u0111\u1ecbnh ngh\u0129a c\u1ee7a Deployment g\u1ea7n nh\u01b0 y h\u1ec7t file \u0111\u1ecbnh ngh\u0129a c\u1ee7a ReplicaSet!</p> <ul> <li>S\u1ef1 kh\u00e1c bi\u1ec7t ch\u00ednh v\u00e0 duy nh\u1ea5t b\u1ea1n c\u1ea7n thay \u0111\u1ed5i l\u00e0 <code>kind</code>.</li> <li><code>kind: Deployment</code></li> </ul> <p>M\u1ecdi th\u1ee9 kh\u00e1c nh\u01b0 <code>apiVersion: apps/v1</code>, <code>metadata</code>, v\u00e0 <code>spec</code> (v\u1edbi <code>replicas</code>, <code>selector</code>, <code>template</code>) \u0111\u1ec1u gi\u1eef nguy\u00ean.</p> <pre><code>apiVersion: apps/v1\nkind: Deployment # &lt;-- Ch\u1ec9 thay \u0111\u1ed5i \u1edf \u0111\u00e2y\nmetadata:\n  name: myapp-deployment\n  labels:\n    app: myapp\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: myapp\n  template:\n    metadata:\n      labels:\n        app: myapp\n    spec:\n      containers:\n        - name: nginx-container\n          image: nginx\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#4-ieu-gi-xay-ra-khi-ban-tao-mot-deployment","title":"4. \u0110i\u1ec1u g\u00ec x\u1ea3y ra khi b\u1ea1n t\u1ea1o m\u1ed9t Deployment? \ud83d\ude80","text":"<p>Khi b\u1ea1n ch\u1ea1y l\u1ec7nh <code>kubectl create -f deployment-definition.yaml</code>, m\u1ed9t chu\u1ed7i ph\u1ea3n \u1ee9ng s\u1ebd x\u1ea3y ra:</p> <ol> <li>M\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Deployment \u0111\u01b0\u1ee3c t\u1ea1o.</li> <li>Deployment controller ngay l\u1eadp t\u1ee9c t\u1ea1o ra m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng ReplicaSet m\u1edbi d\u1ef1a tr\u00ean <code>template</code> c\u1ee7a Deployment.</li> <li>ReplicaSet controller ti\u1ebfp qu\u1ea3n v\u00e0 t\u1ea1o ra \u0111\u1ee7 s\u1ed1 l\u01b0\u1ee3ng Pods theo y\u00eau c\u1ea7u (<code>replicas: 3</code>).</li> </ol>"},{"location":"k8s/01.core/14.deployment/#5-cac-lenh-kiem-tra-huu-ich","title":"5. C\u00e1c L\u1ec7nh Ki\u1ec3m tra H\u1eefu \u00edch \u2705","text":"<ul> <li>Xem Deployment: <code>kubectl get deployment</code></li> <li>Xem ReplicaSet: <code>kubectl get replicaset</code> (B\u1ea1n s\u1ebd th\u1ea5y m\u1ed9t ReplicaSet m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi Deployment , c\u00f3 prefix c\u1ee7a Deployment).</li> <li>Xem Pods: <code>kubectl get pods</code> (T\u00ean c\u00e1c Pod s\u1ebd c\u00f3 prefix c\u1ee7a Deployment v\u00e0 ReplicaSet).</li> <li>Xem t\u1ea5t c\u1ea3: M\u1ed9t l\u1ec7nh r\u1ea5t ti\u1ec7n l\u1ee3i l\u00e0 <code>kubectl get all</code>. N\u00f3 s\u1ebd li\u1ec7t k\u00ea t\u1ea5t c\u1ea3 c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng li\u00ean quan (Deployment, ReplicaSet, Pods, v\u00e0 c\u1ea3 Service n\u1ebfu c\u00f3).</li> </ul>"},{"location":"k8s/01.core/14.deployment/#6-chot-ha-cho-ky-thi-cka","title":"6. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>Deployment l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c khuy\u1ebfn kh\u00edch s\u1eed d\u1ee5ng \u0111\u1ec3 qu\u1ea3n l\u00fd c\u00e1c \u1ee9ng d\u1ee5ng kh\u00f4ng tr\u1ea1ng th\u00e1i (stateless applications).</li> <li>N\u00f3 cung c\u1ea5p c\u00e1c t\u00ednh n\u0103ng qu\u1ea3n l\u00fd v\u00f2ng \u0111\u1eddi \u1ee9ng d\u1ee5ng n\u00e2ng cao nh\u01b0 rolling updates v\u00e0 rollbacks (s\u1ebd t\u00ecm hi\u1ec3u chi ti\u1ebft sau).</li> <li>H\u00e3y nh\u1edb k\u1ef9 h\u1ec7 th\u1ed1ng ph\u00e2n c\u1ea5p: Deployment qu\u1ea3n l\u00fd ReplicaSet, ReplicaSet qu\u1ea3n l\u00fd Pods.</li> <li>C\u1ea5u tr\u00fac file YAML c\u1ee7a Deployment g\u1ea7n nh\u01b0 gi\u1ed1ng h\u1ec7t ReplicaSet, ch\u1ec9 c\u1ea7n \u0111\u1ed5i <code>kind</code> th\u00e0nh <code>Deployment</code>.</li> </ul>"},{"location":"k8s/01.core/14.deployment/#7-lab-thuc-hanh-deployment-trong-kubernetes","title":"7. Lab Th\u1ef1c h\u00e0nh: Deployment trong Kubernetes \ud83e\uddea","text":"<p>Ch\u00fang ta s\u1ebd th\u1ef1c h\u00e0nh t\u1eebng b\u01b0\u1edbc \u0111\u1ec3 hi\u1ec3u r\u00f5 c\u00e1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a Deployment:</p>"},{"location":"k8s/01.core/14.deployment/#buoc-1-tao-pod-on-gian-voi-nginx","title":"B\u01b0\u1edbc 1: T\u1ea1o Pod \u0111\u01a1n gi\u1ea3n v\u1edbi NGINX","text":"<pre><code>kubectl run nginx --image=nginx\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#buoc-2-tao-file-yaml-cho-pod-khong-deploy","title":"B\u01b0\u1edbc 2: T\u1ea1o file YAML cho Pod (kh\u00f4ng deploy)","text":"<pre><code>kubectl run nginx --image=nginx --dry-run=client -o yaml\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#buoc-3-tao-deployment-on-gian","title":"B\u01b0\u1edbc 3: T\u1ea1o Deployment \u0111\u01a1n gi\u1ea3n","text":"<pre><code>kubectl create deployment --image=nginx nginx\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#buoc-4-tao-file-yaml-cho-deployment-khong-deploy","title":"B\u01b0\u1edbc 4: T\u1ea1o file YAML cho Deployment (kh\u00f4ng deploy)","text":"<pre><code>kubectl create deployment --image=nginx nginx --dry-run=client -o yaml\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#buoc-5-luu-file-yaml-va-chinh-sua","title":"B\u01b0\u1edbc 5: L\u01b0u file YAML v\u00e0 ch\u1ec9nh s\u1eeda","text":"<pre><code>kubectl create deployment --image=nginx nginx --dry-run=client -o yaml &gt; nginx-deployment.yaml\n</code></pre> <p>Sau \u0111\u00f3 ch\u1ec9nh s\u1eeda file <code>nginx-deployment.yaml</code> \u0111\u1ec3 th\u00eam s\u1ed1 replica:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n      name: nginx\nspec:\n      replicas: 3  # Thay \u0111\u1ed5i t\u1eeb 1 th\u00e0nh 3\n      selector:\n            matchLabels:\n                  app: nginx\n      template:\n            metadata:\n                  labels:\n                        app: nginx\n            spec:\n                  containers:\n                  - image: nginx\n                        name: nginx\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#buoc-6-deploy-tu-file-yaml","title":"B\u01b0\u1edbc 6: Deploy t\u1eeb file YAML","text":"<pre><code>kubectl create -f nginx-deployment.yaml\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#buoc-7-tao-deployment-voi-replica-ngay-tu-au-k8s-119","title":"B\u01b0\u1edbc 7: T\u1ea1o Deployment v\u1edbi replica ngay t\u1eeb \u0111\u1ea7u (k8s 1.19+)","text":"<pre><code>kubectl create deployment --image=nginx nginx --replicas=4 --dry-run=client -o yaml &gt; nginx-deployment.yaml\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#buoc-8-kiem-tra-ket-qua","title":"B\u01b0\u1edbc 8: Ki\u1ec3m tra k\u1ebft qu\u1ea3","text":"<pre><code># Xem t\u1ea5t c\u1ea3 objects\nkubectl get all\n\n# Xem chi ti\u1ebft Deployment\nkubectl get deployment\n\n# Xem chi ti\u1ebft ReplicaSet (\u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi Deployment)\nkubectl get replicaset\n\n# Xem chi ti\u1ebft Pods\nkubectl get pods\n\n# Xem th\u00f4ng tin chi ti\u1ebft c\u1ee7a Deployment\nkubectl describe deployment nginx\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#buoc-9-thu-nghiem-scale-updown","title":"B\u01b0\u1edbc 9: Th\u1eed nghi\u1ec7m Scale Up/Down","text":"<pre><code># Scale up to 6 replicas\nkubectl scale deployment nginx --replicas=6\n\n# Scale down to 2 replicas\nkubectl scale deployment nginx --replicas=2\n\n# Ki\u1ec3m tra\nkubectl get pods\n</code></pre>"},{"location":"k8s/01.core/14.deployment/#buoc-10-don-dep","title":"B\u01b0\u1edbc 10: D\u1ecdn d\u1eb9p","text":"<pre><code>kubectl delete deployment nginx\n</code></pre> <p>\ud83d\udca1 Ghi ch\u00fa quan tr\u1ecdng: Khi b\u1ea1n x\u00f3a Deployment, t\u1ea5t c\u1ea3 ReplicaSet v\u00e0 Pod con c\u1ee7a n\u00f3 c\u0169ng s\u1ebd b\u1ecb x\u00f3a theo. \u0110\u00e2y ch\u00ednh l\u00e0 s\u1ee9c m\u1ea1nh c\u1ee7a h\u1ec7 th\u1ed1ng ph\u00e2n c\u1ea5p trong Kubernetes!</p>"},{"location":"k8s/01.core/15.services-nodeport/","title":"15.services nodeport","text":""},{"location":"k8s/01.core/15.services-nodeport/#1-bai-toan-lam-sao-e-the-gioi-ben-ngoai-noi-chuyen-voi-pod","title":"1. B\u00e0i to\u00e1n: L\u00e0m sao \u0111\u1ec3 \"Th\u1ebf gi\u1edbi b\u00ean ngo\u00e0i\" n\u00f3i chuy\u1ec7n v\u1edbi Pod? \ud83c\udf10","text":"<p>Ch\u00fang ta \u0111\u00e3 bi\u1ebft Pod l\u00e0 n\u01a1i ch\u1ea1y \u1ee9ng d\u1ee5ng, nh\u01b0ng Pod c\u00f3 nh\u1eefng v\u1ea5n \u0111\u1ec1:</p> <ul> <li>N\u00f3 c\u00f3 \u0111\u1ecba ch\u1ec9 IP n\u1ed9i b\u1ed9, kh\u00f4ng th\u1ec3 truy c\u1eadp tr\u1ef1c ti\u1ebfp t\u1eeb b\u00ean ngo\u00e0i c\u1ee5m.</li> <li>IP c\u1ee7a Pod kh\u00f4ng \u1ed5n \u0111\u1ecbnh, n\u00f3 s\u1ebd thay \u0111\u1ed5i n\u1ebfu Pod \u0111\u01b0\u1ee3c t\u1ea1o l\u1ea1i.</li> </ul> <p>V\u1eady l\u00e0m sao \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng b\u00ean ngo\u00e0i c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0o \u1ee9ng d\u1ee5ng \u0111ang ch\u1ea1y trong Pod? Ho\u1eb7c l\u00e0m sao \u0111\u1ec3 c\u00e1c Pod frontend c\u00f3 th\u1ec3 n\u00f3i chuy\u1ec7n \u1ed5n \u0111\u1ecbnh v\u1edbi c\u00e1c Pod backend? Service ch\u00ednh l\u00e0 c\u00e2u tr\u1ea3 l\u1eddi.</p> <p></p>"},{"location":"k8s/01.core/15.services-nodeport/#2-gioi-thieu-cac-loai-dich-vu-services","title":"2. Gi\u1edbi thi\u1ec7u c\u00e1c lo\u1ea1i \"D\u1ecbch v\u1ee5\" (Services)","text":"<p>Kubernetes cung c\u1ea5p m\u1ed9t v\u00e0i lo\u1ea1i Service ch\u00ednh:</p> <p></p> <ol> <li><code>NodePort</code>: \"M\u1edf m\u1ed9t c\u1ed5ng\" tr\u00ean m\u1ed7i Node trong c\u1ee5m \u0111\u1ec3 th\u1ebf gi\u1edbi b\u00ean ngo\u00e0i c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0o \u1ee9ng d\u1ee5ng. (Ch\u00fang ta s\u1ebd t\u1eadp trung v\u00e0o lo\u1ea1i n\u00e0y trong b\u00e0i h\u00f4m nay).</li> </ol> <p></p> <ol> <li><code>ClusterIP</code>: T\u1ea1o ra m\u1ed9t IP \"\u1ea3o\" ch\u1ec9 c\u00f3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c t\u1eeb b\u00ean trong c\u1ee5m. D\u00f9ng cho vi\u1ec7c giao ti\u1ebfp gi\u1eefa c\u00e1c Pod v\u1edbi nhau (v\u00ed d\u1ee5: frontend g\u1ecdi backend).</li> <li><code>LoadBalancer</code>: T\u1ea1o ra m\u1ed9t b\u1ed9 c\u00e2n b\u1eb1ng t\u1ea3i (Load Balancer) c\u1ee7a nh\u00e0 cung c\u1ea5p d\u1ecbch v\u1ee5 \u0111\u00e1m m\u00e2y (nh\u01b0 AWS, Google Cloud) \u0111\u1ec3 ph\u00e2n ph\u1ed1i traffic t\u1eeb internet v\u00e0o \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n.</li> </ol>"},{"location":"k8s/01.core/15.services-nodeport/#3-mo-xe-nodeport-service","title":"3. \"M\u1ed5 x\u1ebb\" <code>NodePort</code> Service \ud83d\udd0d","text":"<p>Khi l\u00e0m vi\u1ec7c v\u1edbi <code>NodePort</code>, c\u00f3 3 lo\u1ea1i port b\u1ea1n c\u1ea7n ph\u00e2n bi\u1ec7t r\u00f5:</p> <p></p> <ul> <li><code>targetPort</code>: \u0110\u00e2y l\u00e0 port m\u00e0 container c\u1ee7a b\u1ea1n \u0111ang th\u1ef1c s\u1ef1 l\u1eafng nghe b\u00ean trong Pod. V\u00ed d\u1ee5: web server c\u1ee7a b\u1ea1n ch\u1ea1y \u1edf port <code>80</code>.</li> <li><code>port</code>: \u0110\u00e2y l\u00e0 port \u0111\u01b0\u1ee3c m\u1edf tr\u00ean ch\u00ednh c\u00e1i Service (tr\u00ean \u0111\u1ecba ch\u1ec9 IP \u1ea3o ClusterIP c\u1ee7a n\u00f3).</li> <li><code>nodePort</code>: \u0110\u00e2y l\u00e0 port \u0111\u01b0\u1ee3c m\u1edf tr\u00ean m\u1ed7i Worker Node. Ng\u01b0\u1eddi d\u00f9ng b\u00ean ngo\u00e0i s\u1ebd truy c\u1eadp \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n qua \u0111\u1ecba ch\u1ec9 <code>&lt;IP-c\u1ee7a-Node&gt;:&lt;nodePort&gt;</code>.</li> <li>L\u01b0u \u00fd: <code>nodePort</code> ch\u1ec9 c\u00f3 th\u1ec3 n\u1eb1m trong m\u1ed9t d\u1ea3i nh\u1ea5t \u0111\u1ecbnh, m\u1eb7c \u0111\u1ecbnh l\u00e0 30000 - 32767.</li> </ul>"},{"location":"k8s/01.core/15.services-nodeport/#4-tao-nodeport-service-bang-yaml","title":"4. T\u1ea1o <code>NodePort</code> Service b\u1eb1ng YAML","text":"<p>\u0110\u1ec3 t\u1ea1o m\u1ed9t Service, ch\u00fang ta c\u0169ng d\u00f9ng file YAML. C\u1ea5u tr\u00fac c\u1ee7a n\u00f3 nh\u01b0 sau:</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: myapp-service\nspec:\n  type: NodePort # 1. Khai b\u00e1o lo\u1ea1i Service l\u00e0 NodePort\n\n  ports:\n    - port: 80 # 2. Port tr\u00ean ch\u00ednh Service\n      targetPort: 80 # 3. Port tr\u00ean Pod m\u00e0 Service s\u1ebd tr\u1ecf t\u1edbi\n      nodePort: 30008 # 4. Port tr\u00ean Node \u0111\u1ec3 b\u00ean ngo\u00e0i truy c\u1eadp\n\n  selector: # 5. M\u1ea5u ch\u1ed1t: K\u1ebft n\u1ed1i Service v\u1edbi Pod!\n    app: myapp\n</code></pre> <p>Gi\u1ea3i th\u00edch c\u00e1c ph\u1ea7n trong <code>spec</code>:</p> <ol> <li><code>type: NodePort</code>: Ch\u1ec9 \u0111\u1ecbnh r\u00f5 \u0111\u00e2y l\u00e0 m\u1ed9t NodePort Service.</li> <li><code>port</code>: Port tr\u00ean Service. \u0110\u00e2y l\u00e0 tr\u01b0\u1eddng b\u1eaft bu\u1ed9c.</li> <li><code>targetPort</code>: Port tr\u00ean Pod \u0111\u00edch. N\u1ebfu kh\u00f4ng khai b\u00e1o, n\u00f3 s\u1ebd m\u1eb7c \u0111\u1ecbnh b\u1eb1ng gi\u00e1 tr\u1ecb c\u1ee7a <code>port</code>.</li> <li><code>nodePort</code>: Port tr\u00ean Node. N\u1ebfu kh\u00f4ng khai b\u00e1o, Kubernetes s\u1ebd t\u1ef1 ch\u1ecdn m\u1ed9t port tr\u1ed1ng trong d\u1ea3i cho ph\u00e9p.</li> <li><code>selector</code>: \u0110\u00e2y l\u00e0 ph\u1ea7n QUAN TR\u1eccNG NH\u1ea4T. N\u00f3 n\u00f3i cho Service bi\u1ebft: \"H\u00e3y t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c Pod n\u00e0o c\u00f3 nh\u00e3n (label) l\u00e0 <code>app: myapp</code> v\u00e0 chuy\u1ec3n traffic \u0111\u1ebfn cho ch\u00fang\". C\u01a1 ch\u1ebf labels v\u00e0 selectors n\u00e0y ch\u00ednh l\u00e0 c\u1ea7u n\u1ed1i gi\u1eefa Service v\u00e0 Pods.</li> </ol>"},{"location":"k8s/01.core/15.services-nodeport/#5-service-va-sieu-nang-luc-load-balancing","title":"5. Service v\u00e0 \"Si\u00eau n\u0103ng l\u1ef1c\" Load Balancing \u2696\ufe0f","text":"<ul> <li>N\u1ebfu <code>selector</code> c\u1ee7a Service kh\u1edbp v\u1edbi nhi\u1ec1u Pod (v\u00ed d\u1ee5: b\u1ea1n c\u00f3 3 Pod frontend c\u00f9ng c\u00f3 label <code>app: myapp</code>), Service s\u1ebd t\u1ef1 \u0111\u1ed9ng ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t b\u1ed9 c\u00e2n b\u1eb1ng t\u1ea3i.</li> <li>N\u00f3 s\u1ebd ph\u00e2n ph\u1ed1i traffic \u0111\u1ebfn c\u00e1c Pod n\u00e0y m\u1ed9t c\u00e1ch ng\u1eabu nhi\u00ean (random algorithm). B\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i l\u00e0m g\u00ec th\u00eam!</li> </ul>"},{"location":"k8s/01.core/15.services-nodeport/#6-service-tren-nhieu-node","title":"6. Service tr\u00ean nhi\u1ec1u Node","text":"<ul> <li>Khi b\u1ea1n t\u1ea1o m\u1ed9t <code>NodePort</code> Service, Kubernetes s\u1ebd t\u1ef1 \u0111\u1ed9ng m\u1edf c\u00f9ng m\u1ed9t <code>nodePort</code> \u0111\u00f3 tr\u00ean T\u1ea4T C\u1ea2 c\u00e1c Node trong c\u1ee5m.</li> <li>\u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 b\u1ea1n c\u00f3 th\u1ec3 truy c\u1eadp \u1ee9ng d\u1ee5ng c\u1ee7a m\u00ecnh b\u1eb1ng c\u00e1ch d\u00f9ng IP c\u1ee7a b\u1ea5t k\u1ef3 Node n\u00e0o trong c\u1ee5m, k\u1ebft h\u1ee3p v\u1edbi <code>nodePort</code> \u0111\u00f3.</li> </ul>"},{"location":"k8s/01.core/15.services-nodeport/#7-chot-ha-cho-ky-thi-cka","title":"7. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>Service l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng d\u00f9ng \u0111\u1ec3 t\u1ea1o ra m\u1ed9t \u0111i\u1ec3m truy c\u1eadp (endpoint) \u1ed5n \u0111\u1ecbnh cho c\u00e1c Pod.</li> <li><code>NodePort</code> l\u00e0 lo\u1ea1i Service d\u00f9ng \u0111\u1ec3 \"m\u1edf c\u1ed5ng\" tr\u00ean Node, cho ph\u00e9p truy c\u1eadp t\u1eeb b\u00ean ngo\u00e0i.</li> <li>S\u1ef1 k\u1ebft n\u1ed1i gi\u1eefa Service v\u00e0 Pod \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n th\u00f4ng qua labels v\u00e0 selectors. \u0110\u00e2y l\u00e0 c\u01a1 ch\u1ebf n\u1ec1n t\u1ea3ng c\u1ee7a Kubernetes.</li> <li>M\u1ed9t Service c\u00f3 th\u1ec3 t\u1ef1 \u0111\u1ed9ng c\u00e2n b\u1eb1ng t\u1ea3i cho nhi\u1ec1u Pod.</li> <li>M\u1ed9t <code>NodePort</code> Service s\u1ebd c\u00f3 hi\u1ec7u l\u1ef1c tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c Node trong c\u1ee5m.</li> </ul>"},{"location":"k8s/01.core/16.services-clusterIP/","title":"16.services clusterIP","text":""},{"location":"k8s/01.core/16.services-clusterIP/#1-bai-toan-giao-tiep-noi-bo-trong-kien-truc-microservices","title":"1. B\u00e0i to\u00e1n: Giao ti\u1ebfp \"N\u1ed9i b\u1ed9\" trong Ki\u1ebfn tr\u00fac Microservices \ud83d\udde3\ufe0f","text":"<p>H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng m\u1ed9t \u1ee9ng d\u1ee5ng web ho\u00e0n ch\u1ec9nh th\u01b0\u1eddng c\u00f3 nhi\u1ec1u t\u1ea7ng (tiers):</p> <ul> <li>M\u1ed9t nh\u00f3m Pod ch\u1ea1y frontend (giao di\u1ec7n ng\u01b0\u1eddi d\u00f9ng).</li> <li>M\u1ed9t nh\u00f3m Pod ch\u1ea1y backend (x\u1eed l\u00fd logic).</li> <li>M\u1ed9t nh\u00f3m Pod ch\u1ea1y c\u01a1 s\u1edf d\u1eef li\u1ec7u (v\u00ed d\u1ee5: database, Redis).</li> </ul> <p>C\u00e2u h\u1ecfi \u0111\u1eb7t ra l\u00e0: L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 c\u00e1c Pod frontend c\u00f3 th\u1ec3 n\u00f3i chuy\u1ec7n m\u1ed9t c\u00e1ch \u1ed5n \u0111\u1ecbnh v\u00e0 \u0111\u00e1ng tin c\u1eady v\u1edbi c\u00e1c Pod backend, khi m\u00e0 \u0111\u1ecba ch\u1ec9 IP c\u1ee7a c\u00e1c Pod backend c\u00f3 th\u1ec3 thay \u0111\u1ed5i li\u00ean t\u1ee5c?</p>"},{"location":"k8s/01.core/16.services-clusterIP/#2-clusterip-service-tong-ai-noi-bo-cua-kubernetes","title":"2. <code>ClusterIP</code> Service - \"T\u1ed5ng \u0111\u00e0i n\u1ed9i b\u1ed9\" c\u1ee7a Kubernetes \u260e\ufe0f","text":"<p><code>ClusterIP</code> ch\u00ednh l\u00e0 gi\u1ea3i ph\u00e1p cho v\u1ea5n \u0111\u1ec1 n\u00e0y.</p> <ul> <li>N\u00f3 l\u00e0 g\u00ec? \u0110\u00e2y l\u00e0 lo\u1ea1i Service m\u1eb7c \u0111\u1ecbnh trong Kubernetes. Khi b\u1ea1n t\u1ea1o m\u1ed9t Service m\u00e0 kh\u00f4ng ch\u1ec9 \u0111\u1ecbnh <code>type</code>, n\u00f3 s\u1ebd t\u1ef1 \u0111\u1ed9ng l\u00e0 <code>ClusterIP</code>.</li> <li>N\u00f3 l\u00e0m g\u00ec? N\u00f3 s\u1ebd t\u1ea1o ra m\u1ed9t \u0111\u1ecba ch\u1ec9 IP \u1ea3o (g\u1ecdi l\u00e0 ClusterIP) v\u00e0 m\u1ed9t t\u00ean DNS \u1ed5n \u0111\u1ecbnh, ch\u1ec9 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c truy c\u1eadp t\u1eeb b\u00ean trong c\u1ee5m Kubernetes.</li> <li>L\u1ee3i \u00edch:</li> <li>C\u00e1c Pod kh\u00e1c (v\u00ed d\u1ee5: frontend) c\u00f3 th\u1ec3 giao ti\u1ebfp v\u1edbi m\u1ed9t nh\u00f3m Pod (v\u00ed d\u1ee5: backend) th\u00f4ng qua m\u1ed9t \"\u0111\u1ecba ch\u1ec9\" duy nh\u1ea5t v\u00e0 kh\u00f4ng \u0111\u1ed5i n\u00e0y.</li> <li>N\u00f3 ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t b\u1ed9 c\u00e2n b\u1eb1ng t\u1ea3i n\u1ed9i b\u1ed9, t\u1ef1 \u0111\u1ed9ng ph\u00e2n ph\u1ed1i c\u00e1c y\u00eau c\u1ea7u \u0111\u1ebfn m\u1ed9t trong c\u00e1c Pod backend m\u1ed9t c\u00e1ch ng\u1eabu nhi\u00ean.</li> <li>Gi\u00fap t\u1ea1o ra c\u00e1c ki\u1ebfn tr\u00fac microservices d\u00e9couple (\u00edt ph\u1ee5 thu\u1ed9c) v\u00e0 linh ho\u1ea1t.</li> </ul>"},{"location":"k8s/01.core/16.services-clusterIP/#3-giai-phau-mot-file-yaml-cua-clusterip-service","title":"3. \"Gi\u1ea3i ph\u1eabu\" m\u1ed9t file YAML c\u1ee7a <code>ClusterIP</code> Service \ud83e\uddec","text":"<p>Vi\u1ec7c t\u1ea1o m\u1ed9t <code>ClusterIP</code> Service r\u1ea5t \u0111\u01a1n gi\u1ea3n.</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: backend-service # T\u00ean c\u1ee7a Service\nspec:\n  # type: ClusterIP     # \u0110\u00e2y l\u00e0 lo\u1ea1i m\u1eb7c \u0111\u1ecbnh, n\u00ean c\u00f3 th\u1ec3 b\u1ecf qua\n  ports:\n    - port: 80 # Port m\u00e0 Service s\u1ebd l\u1eafng nghe\n      targetPort: 80 # Port tr\u00ean c\u00e1c Pod \u0111\u00edch\n  selector:\n    app: my-backend # T\u00ecm t\u1ea5t c\u1ea3 c\u00e1c Pod c\u00f3 label n\u00e0y\n</code></pre> <p>Gi\u1ea3i th\u00edch c\u00e1c ph\u1ea7n trong <code>spec</code>:</p> <ul> <li><code>type: ClusterIP</code>: B\u1ea1n c\u00f3 th\u1ec3 ghi t\u01b0\u1eddng minh, nh\u01b0ng n\u1ebfu b\u1ecf tr\u1ed1ng tr\u01b0\u1eddng <code>type</code>, Kubernetes s\u1ebd t\u1ef1 hi\u1ec3u \u0111\u00e2y l\u00e0 <code>ClusterIP</code>.</li> <li><code>ports</code>:</li> <li><code>port</code>: Port m\u00e0 Service n\u00e0y s\u1ebd m\u1edf tr\u00ean \u0111\u1ecba ch\u1ec9 ClusterIP c\u1ee7a n\u00f3.</li> <li><code>targetPort</code>: Port m\u00e0 c\u00e1c container trong Pod \u0111\u00edch \u0111ang l\u1eafng nghe.</li> <li><code>selector</code>: M\u1ea5u ch\u1ed1t c\u1ee7a v\u1ea5n \u0111\u1ec1! N\u00f3 n\u00f3i cho Service bi\u1ebft: \"H\u00e3y t\u00ecm v\u00e0 chuy\u1ec3n traffic \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c Pod c\u00f3 nh\u00e3n l\u00e0 <code>app: my-backend</code>\".</li> </ul>"},{"location":"k8s/01.core/16.services-clusterIP/#4-cach-su-dung","title":"4. C\u00e1ch s\u1eed d\u1ee5ng","text":"<p>Sau khi Service <code>backend-service</code> \u0111\u01b0\u1ee3c t\u1ea1o, c\u00e1c Pod frontend trong c\u00f9ng c\u1ee5m c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng truy c\u1eadp v\u00e0o c\u00e1c Pod backend b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng t\u00ean DNS c\u1ee7a Service:</p> <p><code>http://backend-service</code></p> <p>Kubernetes s\u1ebd t\u1ef1 \u0111\u1ed9ng ph\u00e2n gi\u1ea3i t\u00ean n\u00e0y th\u00e0nh \u0111\u1ecba ch\u1ec9 ClusterIP t\u01b0\u01a1ng \u1ee9ng v\u00e0 chuy\u1ec3n y\u00eau c\u1ea7u \u0111\u1ebfn m\u1ed9t trong c\u00e1c Pod backend kh\u1ecfe m\u1ea1nh.</p>"},{"location":"k8s/01.core/16.services-clusterIP/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>ClusterIP</code> l\u00e0 lo\u1ea1i Service m\u1eb7c \u0111\u1ecbnh trong Kubernetes.</li> <li>N\u00f3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho vi\u1ec7c giao ti\u1ebfp b\u00ean trong c\u1ee5m (internal communication), v\u00ed d\u1ee5: gi\u1eefa frontend v\u00e0 backend.</li> <li>N\u00f3 KH\u00d4NG th\u1ec3 \u0111\u01b0\u1ee3c truy c\u1eadp t\u1eeb b\u00ean ngo\u00e0i c\u1ee5m.</li> <li>N\u00f3 s\u1eed d\u1ee5ng <code>selector</code> \u0111\u1ec3 t\u00ecm c\u00e1c Pod m\u00e0 n\u00f3 s\u1ebd qu\u1ea3n l\u00fd v\u00e0 chuy\u1ec3n traffic \u0111\u1ebfn.</li> </ul>"},{"location":"k8s/01.core/17.services-loadbalancer/","title":"17.services loadbalancer","text":""},{"location":"k8s/01.core/17.services-loadbalancer/#1-bai-toan-tu-nodeport-en-mot-url-than-thien-voi-nguoi-dung","title":"1. B\u00e0i to\u00e1n: T\u1eeb <code>NodePort</code> \u0111\u1ebfn m\u1ed9t URL th\u00e2n thi\u1ec7n v\u1edbi ng\u01b0\u1eddi d\u00f9ng \ud83e\udd14","text":"<p>\u1ede b\u00e0i tr\u01b0\u1edbc, ch\u00fang ta \u0111\u00e3 d\u00f9ng <code>NodePort</code> \u0111\u1ec3 truy c\u1eadp \u1ee9ng d\u1ee5ng. Tuy nhi\u00ean, n\u00f3 c\u00f3 m\u1ed9t v\u1ea5n \u0111\u1ec1 l\u1edbn:</p> <ul> <li>\u0110\u1ec3 truy c\u1eadp, b\u1ea1n ph\u1ea3i d\u00f9ng \u0111\u1ecba ch\u1ec9 <code>&lt;IP-c\u1ee7a-Node&gt;:&lt;nodePort&gt;</code>.</li> <li>N\u1ebfu c\u1ee5m c\u1ee7a b\u1ea1n c\u00f3 4 node, b\u1ea1n s\u1ebd c\u00f3 t\u1edbi 4 \u0111\u1ecba ch\u1ec9 IP kh\u00e1c nhau \u0111\u1ec3 truy c\u1eadp c\u00f9ng m\u1ed9t \u1ee9ng d\u1ee5ng.</li> <li>B\u1ea1n kh\u00f4ng th\u1ec3 \u0111\u01b0a cho ng\u01b0\u1eddi d\u00f9ng cu\u1ed1i m\u1ed9t danh s\u00e1ch c\u00e1c IP nh\u01b0 v\u1eady. C\u00e1i h\u1ecd c\u1ea7n l\u00e0 m\u1ed9t URL duy nh\u1ea5t, th\u00e2n thi\u1ec7n, v\u00ed d\u1ee5: <code>votingapp.com</code>.</li> </ul> <p>Gi\u1ea3i ph\u00e1p truy\u1ec1n th\u1ed1ng l\u00e0 g\u00ec? B\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 d\u1ef1ng m\u1ed9t m\u00e1y ch\u1ee7 VM ri\u00eang, c\u00e0i \u0111\u1eb7t m\u1ed9t b\u1ed9 c\u00e2n b\u1eb1ng t\u1ea3i nh\u01b0 Nginx ho\u1eb7c HAProxy, r\u1ed3i c\u1ea5u h\u00ecnh n\u00f3 \u0111\u1ec3 tr\u1ecf \u0111\u1ebfn c\u00e1c node trong c\u1ee5m Kubernetes. Nh\u01b0ng c\u00e1ch n\u00e0y r\u1ea5t th\u1ee7 c\u00f4ng, t\u1ed1n c\u00f4ng s\u1ee9c c\u00e0i \u0111\u1eb7t v\u00e0 b\u1ea3o tr\u00ec.</p>"},{"location":"k8s/01.core/17.services-loadbalancer/#2-loadbalancer-service-cau-noi-ra-internet","title":"2. <code>LoadBalancer</code> Service - \"C\u1ea7u n\u1ed1i\" ra Internet \ud83c\udf09","text":"<p>Kubernetes cung c\u1ea5p m\u1ed9t gi\u1ea3i ph\u00e1p \"x\u1ecbn\" h\u01a1n nhi\u1ec1u, \u0111\u00f3 l\u00e0 Service lo\u1ea1i <code>LoadBalancer</code>.</p> <ul> <li>N\u00f3 l\u00e0 g\u00ec? \u0110\u00e2y l\u00e0 lo\u1ea1i Service \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 t\u1ef1 \u0111\u1ed9ng t\u00edch h\u1ee3p v\u1edbi c\u00e1c b\u1ed9 c\u00e2n b\u1eb1ng t\u1ea3i c\u1ee7a nh\u1eefng nh\u00e0 cung c\u1ea5p d\u1ecbch v\u1ee5 \u0111\u00e1m m\u00e2y (cloud provider).</li> <li>B\u1ea1n c\u1ea7n l\u00e0m g\u00ec? R\u1ea5t \u0111\u01a1n gi\u1ea3n, b\u1ea1n ch\u1ec9 c\u1ea7n khai b\u00e1o <code>type: LoadBalancer</code> trong file YAML c\u1ee7a Service.</li> </ul>"},{"location":"k8s/01.core/17.services-loadbalancer/#3-phep-mau-ang-sau-type-loadbalancer","title":"3. \"Ph\u00e9p m\u00e0u\" \u0111\u1eb1ng sau <code>type: LoadBalancer</code> \u2728","text":"<p>Khi b\u1ea1n t\u1ea1o m\u1ed9t Service v\u1edbi <code>type: LoadBalancer</code> tr\u00ean m\u1ed9t n\u1ec1n t\u1ea3ng cloud \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3, m\u1ed9t chu\u1ed7i h\u00e0nh \u0111\u1ed9ng t\u1ef1 \u0111\u1ed9ng s\u1ebd x\u1ea3y ra:</p> <ol> <li>Kubernetes v\u1eabn s\u1ebd t\u1ea1o ra m\u1ed9t <code>ClusterIP</code> Service \u0111\u1ec3 giao ti\u1ebfp n\u1ed9i b\u1ed9.</li> <li>N\u00f3 c\u0169ng s\u1ebd t\u1ea1o ra m\u1ed9t <code>NodePort</code> Service \u0111\u1ec3 m\u1edf m\u1ed9t c\u1ed5ng tr\u00ean m\u1ed7i node.</li> <li>\u0110i\u1ec1u quan tr\u1ecdng nh\u1ea5t: Kubernetes s\u1ebd g\u1eedi m\u1ed9t y\u00eau c\u1ea7u API \u0111\u1ebfn nh\u00e0 cung c\u1ea5p cloud (v\u00ed d\u1ee5: AWS, Google Cloud, Azure).</li> <li>Nh\u00e0 cung c\u1ea5p cloud s\u1ebd t\u1ef1 \u0111\u1ed9ng t\u1ea1o ra m\u1ed9t B\u1ed9 c\u00e2n b\u1eb1ng t\u1ea3i m\u1ea1ng b\u00ean ngo\u00e0i (External Network Load Balancer).</li> <li>Load Balancer n\u00e0y s\u1ebd c\u00f3 m\u1ed9t \u0111\u1ecba ch\u1ec9 IP public, c\u1ed1 \u0111\u1ecbnh v\u00e0 \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh \u0111\u1ec3 t\u1ef1 \u0111\u1ed9ng chuy\u1ec3n ti\u1ebfp t\u1ea5t c\u1ea3 traffic t\u1eeb Internet v\u00e0o c\u00e1i <code>NodePort</code> \u0111\u00e3 \u0111\u01b0\u1ee3c m\u1edf tr\u00ean c\u00e1c node c\u1ee7a b\u1ea1n.</li> </ol> <p>K\u1ebft qu\u1ea3 l\u00e0 ng\u01b0\u1eddi d\u00f9ng ch\u1ec9 c\u1ea7n truy c\u1eadp v\u00e0o \u0111\u1ecba ch\u1ec9 IP public c\u1ee7a Load Balancer n\u00e0y l\u00e0 c\u00f3 th\u1ec3 v\u00e0o \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n.</p>"},{"location":"k8s/01.core/17.services-loadbalancer/#4-iem-chi-mang-can-nho-phu-thuoc-vao-nha-cung-cap-cloud","title":"4. \u0110i\u1ec3m \"Ch\u00ed m\u1ea1ng\" c\u1ea7n nh\u1edb: Ph\u1ee5 thu\u1ed9c v\u00e0o Nh\u00e0 cung c\u1ea5p Cloud \u2601\ufe0f\u26a0\ufe0f","text":"<ul> <li>T\u00ednh n\u0103ng n\u00e0y CH\u1ec8 HO\u1ea0T \u0110\u1ed8NG tr\u00ean c\u00e1c n\u1ec1n t\u1ea3ng cloud \u0111\u01b0\u1ee3c Kubernetes h\u1ed7 tr\u1ee3 (GCP, AWS, Azure l\u00e0 c\u00e1c v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh).</li> <li>N\u1ebfu b\u1ea1n khai b\u00e1o <code>type: LoadBalancer</code> trong m\u1ed9t m\u00f4i tr\u01b0\u1eddng kh\u00f4ng \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 (v\u00ed d\u1ee5: m\u1ed9t c\u1ee5m Kubernetes b\u1ea1n t\u1ef1 d\u1ef1ng tr\u00ean m\u00e1y \u1ea3o VirtualBox \u1edf nh\u00e0), n\u00f3 s\u1ebd ch\u1ec9 ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t <code>NodePort</code> Service. S\u1ebd kh\u00f4ng c\u00f3 external load balancer n\u00e0o \u0111\u01b0\u1ee3c t\u1ea1o ra c\u1ea3.</li> </ul>"},{"location":"k8s/01.core/17.services-loadbalancer/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>S\u1eed d\u1ee5ng <code>type: LoadBalancer</code> l\u00e0 c\u00e1ch ti\u00eau chu\u1ea9n \u0111\u1ec3 \"\u0111\u01b0a\" m\u1ed9t \u1ee9ng d\u1ee5ng trong Kubernetes ra Internet v\u1edbi m\u1ed9t \u0111\u1ecba ch\u1ec9 IP duy nh\u1ea5t v\u00e0 \u1ed5n \u0111\u1ecbnh.</li> <li>T\u00ednh n\u0103ng n\u00e0y ph\u1ee5 thu\u1ed9c v\u00e0o s\u1ef1 t\u00edch h\u1ee3p v\u1edbi m\u1ed9t nh\u00e0 cung c\u1ea5p cloud \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3.</li> <li>Trong m\u00f4i tr\u01b0\u1eddng kh\u00f4ng \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3, <code>LoadBalancer</code> s\u1ebd ho\u1ea1t \u0111\u1ed9ng gi\u1ed1ng h\u1ec7t nh\u01b0 <code>NodePort</code>.</li> <li>V\u1ec1 b\u1ea3n ch\u1ea5t, khi b\u1ea1n t\u1ea1o m\u1ed9t <code>LoadBalancer</code> Service, n\u00f3 c\u0169ng \u0111\u1ed3ng th\u1eddi t\u1ea1o ra c\u1ea3 <code>NodePort</code> v\u00e0 <code>ClusterIP</code> Service b\u00ean d\u01b0\u1edbi.</li> </ul>"},{"location":"k8s/01.core/18.service-engpoint/","title":"18.service engpoint","text":""},{"location":"k8s/01.core/18.service-engpoint/#1-endpoints-la-gi-so-ia-chi-cua-service","title":"1. Endpoints l\u00e0 g\u00ec? \"S\u1ed5 \u0111\u1ecba ch\u1ec9\" c\u1ee7a Service \ud83d\udcd6","text":"<p>H\u00e3y h\u00ecnh dung th\u1ebf n\u00e0y:</p> <ul> <li>Service gi\u1ed1ng nh\u01b0 m\u1ed9t s\u1ed1 t\u1ed5ng \u0111\u00e0i chung c\u1ee7a m\u1ed9t c\u00f4ng ty. B\u1ea1n ch\u1ec9 c\u1ea7n g\u1ecdi m\u1ed9t s\u1ed1 duy nh\u1ea5t.</li> <li>Pods gi\u1ed1ng nh\u01b0 c\u00e1c nh\u00e2n vi\u00ean trong c\u00f4ng ty, m\u1ed7i ng\u01b0\u1eddi c\u00f3 m\u1ed9t s\u1ed1 m\u00e1y l\u1ebb (\u0111\u1ecba ch\u1ec9 IP) ri\u00eang v\u00e0 lu\u00f4n thay \u0111\u1ed5i.</li> <li>Endpoints ch\u00ednh l\u00e0 cu\u1ed1n danh b\u1ea1 n\u1ed9i b\u1ed9 c\u1ee7a t\u1ed5ng \u0111\u00e0i \u0111\u00f3. Cu\u1ed1n danh b\u1ea1 n\u00e0y ghi r\u00f5: \"\u0110\u1ec3 g\u1eb7p nh\u00e2n vi\u00ean A, h\u00e3y n\u1ed1i m\u00e1y \u0111\u1ebfn s\u1ed1 101. \u0110\u1ec3 g\u1eb7p nh\u00e2n vi\u00ean B, h\u00e3y n\u1ed1i m\u00e1y \u0111\u1ebfn s\u1ed1 102...\".</li> </ul> <p>V\u1ec1 m\u1eb7t k\u1ef9 thu\u1eadt, Endpoints l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng trong Kubernetes, ch\u1ee9a m\u1ed9t danh s\u00e1ch c\u00e1c c\u1eb7p \u0111\u1ecba ch\u1ec9 <code>IP:Port</code> c\u1ee7a c\u00e1c Pod \"th\u1eadt\" m\u00e0 m\u1ed9t Service \u0111ang tr\u1ecf t\u1edbi.</p>"},{"location":"k8s/01.core/18.service-engpoint/#2-moi-quan-he-khang-khit-service-selector-labels-va-endpoints","title":"2. M\u1ed1i quan h\u1ec7 \"Kh\u0103ng kh\u00edt\": Service, Selector, Labels, v\u00e0 Endpoints","text":"<p>C\u01a1 ch\u1ebf n\u00e0y ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t chu\u1ed7i domino:</p> <ol> <li> <p>B\u1ea1n g\u1eafn <code>labels</code> (nh\u00e3n) cho c\u00e1c Pod c\u1ee7a m\u00ecnh.</p> </li> <li> <p>V\u00ed d\u1ee5: <code>app: my-frontend</code></p> </li> <li> <p>B\u1ea1n t\u1ea1o m\u1ed9t Service v\u00e0 \u0111\u1ecbnh ngh\u0129a m\u1ed9t <code>selector</code>.</p> </li> <li> <p>Selector n\u00e0y s\u1ebd t\u00ecm c\u00e1c Pod c\u00f3 nh\u00e3n t\u01b0\u01a1ng \u1ee9ng. V\u00ed d\u1ee5: <code>selector: { app: my-frontend }</code></p> </li> <li> <p>Kubernetes t\u1ef1 \u0111\u1ed9ng l\u00e0m vi\u1ec7c:</p> </li> <li> <p>Kubernetes Service controller s\u1ebd qu\u00e9t to\u00e0n b\u1ed9 c\u1ee5m \u0111\u1ec3 t\u00ecm c\u00e1c Pod c\u00f3 label l\u00e0 <code>app: my-frontend</code>.</p> </li> <li>V\u1edbi m\u1ed7i Pod t\u00ecm th\u1ea5y, n\u00f3 s\u1ebd l\u1ea5y \u0111\u1ecba ch\u1ec9 IP v\u00e0 <code>targetPort</code> c\u1ee7a Pod \u0111\u00f3.</li> <li>N\u00f3 t\u1ef1 \u0111\u1ed9ng t\u1ea1o v\u00e0 c\u1eadp nh\u1eadt m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng t\u00ean l\u00e0 Endpoints v\u1edbi danh s\u00e1ch c\u00e1c c\u1eb7p <code>IP:Port</code> v\u1eeba t\u00ecm \u0111\u01b0\u1ee3c.</li> </ol> <p>K\u1ebft lu\u1eadn: \u0110\u1ed1i t\u01b0\u1ee3ng Endpoints l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a vi\u1ec7c <code>selector</code> trong Service k\u1ebft n\u1ed1i th\u00e0nh c\u00f4ng v\u1edbi <code>labels</code> tr\u00ean c\u00e1c Pod. N\u00f3 l\u00e0 danh s\u00e1ch c\u1ee5 th\u1ec3 nh\u1eefng n\u01a1i m\u00e0 traffic s\u1ebd th\u1ef1c s\u1ef1 \u0111\u01b0\u1ee3c chuy\u1ec3n \u0111\u1ebfn.</p>"},{"location":"k8s/01.core/18.service-engpoint/#3-tai-sao-endpoints-la-cong-cu-debug-than-thanh","title":"3. T\u1ea1i sao Endpoints l\u00e0 c\u00f4ng c\u1ee5 \"Debug\" th\u1ea7n th\u00e1nh? \ud83d\udd75\ufe0f\u200d\u2642\ufe0f","text":"<p>vi\u1ec7c ki\u1ec3m tra danh s\u00e1ch Endpoints l\u00e0 m\u1ed9t trong nh\u1eefng b\u01b0\u1edbc \u0111\u1ea7u ti\u00ean v\u00e0 hi\u1ec7u qu\u1ea3 nh\u1ea5t khi b\u1ea1n g\u1eb7p s\u1ef1 c\u1ed1 v\u1edbi Service. C\u00f3 hai k\u1ecbch b\u1ea3n ph\u1ed5 bi\u1ebfn:</p>"},{"location":"k8s/01.core/18.service-engpoint/#kich-ban-1-khong-the-truy-cap-service-0-endpoints","title":"K\u1ecbch b\u1ea3n 1: Kh\u00f4ng th\u1ec3 truy c\u1eadp Service (0 Endpoints)","text":"<ul> <li>Tri\u1ec7u ch\u1ee9ng: B\u1ea1n \u0111\u00e3 t\u1ea1o Service, nh\u01b0ng khi c\u1ed1 g\u1eafng k\u1ebft n\u1ed1i v\u00e0o th\u00ec b\u1ecb t\u1eeb ch\u1ed1i ho\u1eb7c kh\u00f4ng c\u00f3 ph\u1ea3n h\u1ed3i.</li> <li>Ch\u1ea9n \u0111o\u00e1n: Ch\u1ea1y l\u1ec7nh <code>kubectl describe service &lt;t\u00ean-service&gt;</code>.</li> <li>K\u1ebft qu\u1ea3: B\u1ea1n nh\u00ecn v\u00e0o d\u00f2ng <code>Endpoints</code> v\u00e0 th\u1ea5y: <code>&lt;none&gt;</code>.</li> <li>\u00dd ngh\u0129a: \u0110\u00e2y l\u00e0 m\u1ed9t d\u1ea5u hi\u1ec7u c\u1ef1c l\u1edbn! N\u00f3 c\u00f3 ngh\u0129a l\u00e0 <code>selector</code> c\u1ee7a Service \u0111\u00e3 kh\u00f4ng t\u00ecm th\u1ea5y B\u1ea4T K\u1ef2 Pod n\u00e0o c\u00f3 <code>label</code> kh\u1edbp.</li> <li>Nguy\u00ean nh\u00e2n th\u01b0\u1eddng g\u1eb7p: G\u00f5 nh\u1ea7m <code>label</code> trong file \u0111\u1ecbnh ngh\u0129a Pod, ho\u1eb7c g\u00f5 nh\u1ea7m <code>selector</code> trong file \u0111\u1ecbnh ngh\u0129a Service.</li> </ul>"},{"location":"k8s/01.core/18.service-engpoint/#kich-ban-2-service-hoat-ong-la-gui-traffic-en-nham-pod-qua-nhieu-endpoints","title":"K\u1ecbch b\u1ea3n 2: Service ho\u1ea1t \u0111\u1ed9ng l\u1ea1, g\u1eedi traffic \u0111\u1ebfn \"nh\u1ea7m\" Pod (Qu\u00e1 nhi\u1ec1u Endpoints)","text":"<ul> <li>Tri\u1ec7u ch\u1ee9ng: \u1ee8ng d\u1ee5ng c\u1ee7a b\u1ea1n ho\u1ea1t \u0111\u1ed9ng kh\u00f4ng \u1ed5n \u0111\u1ecbnh. \u0110\u00f4i khi request th\u00e0nh c\u00f4ng, \u0111\u00f4i khi l\u1ea1i l\u1ed7i m\u1ed9t c\u00e1ch kh\u00f3 hi\u1ec3u.</li> <li>Ch\u1ea9n \u0111o\u00e1n: Ch\u1ea1y l\u1ec7nh <code>kubectl describe service &lt;t\u00ean-service&gt;</code>.</li> <li>K\u1ebft qu\u1ea3: B\u1ea1n ngh\u0129 r\u1eb1ng Service ch\u1ec9 n\u00ean tr\u1ecf \u0111\u1ebfn 3 Pod backend c\u1ee7a m\u00ecnh, nh\u01b0ng trong danh s\u00e1ch Endpoints l\u1ea1i c\u00f3 t\u1edbi 4 \u0111\u1ecba ch\u1ec9 IP.</li> <li>\u00dd ngh\u0129a: C\u00f3 m\u1ed9t Pod \"l\u1ea1c lo\u00e0i\" n\u00e0o \u0111\u00f3 trong c\u1ee5m \u0111\u00e3 v\u00f4 t\u00ecnh \u0111\u01b0\u1ee3c g\u1eafn c\u00f9ng <code>label</code> v\u1edbi c\u00e1c Pod backend c\u1ee7a b\u1ea1n. Do \u0111\u00f3, Service \u0111\u00e3 \"nh\u1eadn nh\u1ea7m\" n\u00f3 l\u00e0 th\u00e0nh vi\u00ean v\u00e0 \u0111ang g\u1eedi m\u1ed9t ph\u1ea7n traffic \u0111\u1ebfn \u0111\u00f3, g\u00e2y ra l\u1ed7i.</li> </ul>"},{"location":"k8s/01.core/18.service-engpoint/#4-chot-ha","title":"4. \"Ch\u1ed1t h\u1ea1\"","text":"<ul> <li>Endpoints l\u00e0 c\u1ea7u n\u1ed1i th\u1ef1c s\u1ef1 gi\u1eefa Service (\u1ea3o) v\u00e0 Pods (th\u1eadt). N\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 th\u1ee9 b\u1ea1n t\u1ea1o ra b\u1eb1ng tay, m\u00e0 \u0111\u01b0\u1ee3c Kubernetes t\u1ef1 \u0111\u1ed9ng qu\u1ea3n l\u00fd.</li> <li>Khi Service c\u1ee7a b\u1ea1n kh\u00f4ng ho\u1ea1t \u0111\u1ed9ng nh\u01b0 mong \u0111\u1ee3i, l\u1ec7nh \u0111\u1ea7u ti\u00ean b\u1ea1n n\u00ean ngh\u0129 \u0111\u1ebfn l\u00e0 <code>kubectl describe service ...</code> v\u00e0 ki\u1ec3m tra th\u1eadt k\u1ef9 d\u00f2ng <code>Endpoints</code>. N\u00f3 s\u1ebd cho b\u1ea1n bi\u1ebft ch\u00ednh x\u00e1c li\u1ec7u Service c\u00f3 \u0111ang \"nh\u00ecn\" th\u1ea5y \u0111\u00fang c\u00e1c Pod m\u00e0 n\u00f3 c\u1ea7n hay kh\u00f4ng.</li> </ul>"},{"location":"k8s/01.core/19.namespace/","title":"19.namespace","text":""},{"location":"k8s/01.core/19.namespace/#1-namespace-la-gi-ngoi-nha-rieng-trong-cum-kubernetes","title":"1. Namespace l\u00e0 g\u00ec? \"Ng\u00f4i nh\u00e0\" ri\u00eang trong c\u1ee5m Kubernetes \ud83c\udfe1","text":"<p>H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng c\u1ee5m Kubernetes c\u1ee7a b\u1ea1n l\u00e0 m\u1ed9t th\u00e0nh ph\u1ed1. Thay v\u00ec \u0111\u1ec3 t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi s\u1ed1ng chung trong m\u1ed9t khu v\u1ef1c h\u1ed7n lo\u1ea1n, b\u1ea1n c\u00f3 th\u1ec3 x\u00e2y nhi\u1ec1u \"ng\u00f4i nh\u00e0\" (Namespaces) ri\u00eang bi\u1ec7t.</p> <ul> <li>M\u1ed7i \"ng\u00f4i nh\u00e0\" (Namespace) c\u00f3 th\u1ec3 ch\u1ee9a c\u00e1c t\u00e0i nguy\u00ean ri\u00eang c\u1ee7a n\u00f3 (Pods, Deployments, Services,...).</li> <li>Trong c\u00f9ng m\u1ed9t nh\u00e0: M\u1ecdi ng\u01b0\u1eddi (t\u00e0i nguy\u00ean) c\u00f3 th\u1ec3 g\u1ecdi nhau b\u1eb1ng t\u00ean (v\u00ed d\u1ee5: <code>web-pod</code> c\u00f3 th\u1ec3 g\u1ecdi <code>db-service</code> ch\u1ec9 b\u1eb1ng t\u00ean <code>db-service</code>).</li> <li>G\u1ecdi sang nh\u00e0 h\u00e0ng x\u00f3m: N\u1ebfu mu\u1ed1n g\u1ecdi m\u1ed9t ng\u01b0\u1eddi \u1edf nh\u00e0 kh\u00e1c, b\u1ea1n ph\u1ea3i d\u00f9ng \"\u0111\u1ecba ch\u1ec9 \u0111\u1ea7y \u0111\u1ee7\" c\u1ee7a h\u1ecd (v\u00ed d\u1ee5: <code>db-service.dev</code>).</li> <li>M\u1ed7i nh\u00e0 c\u00f3 lu\u1eadt ri\u00eang: B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1eb7t ra c\u00e1c ch\u00ednh s\u00e1ch (Policies) v\u00e0 gi\u1edbi h\u1ea1n t\u00e0i nguy\u00ean (Resource Quotas) cho t\u1eebng nh\u00e0.</li> </ul> <p>V\u1ec1 c\u01a1 b\u1ea3n, Namespaces cho ph\u00e9p b\u1ea1n t\u1ea1o ra c\u00e1c c\u1ee5m \u1ea3o (virtual clusters) b\u00ean trong m\u1ed9t c\u1ee5m Kubernetes v\u1eadt l\u00fd duy nh\u1ea5t.</p>"},{"location":"k8s/01.core/19.namespace/#2-cac-namespace-mac-inh","title":"2. C\u00e1c Namespace M\u1eb7c \u0111\u1ecbnh","text":"<p>Khi m\u1ed9t c\u1ee5m Kubernetes \u0111\u01b0\u1ee3c t\u1ea1o, n\u00f3 s\u1ebd c\u00f3 s\u1eb5n 3 Namespace:</p> <ul> <li><code>default</code>: \u0110\u00e2y l\u00e0 \"ng\u00f4i nh\u00e0\" m\u1eb7c \u0111\u1ecbnh. N\u1ebfu b\u1ea1n t\u1ea1o t\u00e0i nguy\u00ean m\u00e0 kh\u00f4ng ch\u1ec9 \u0111\u1ecbnh namespace, n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o \u1edf \u0111\u00e2y.</li> <li><code>kube-system</code>: \"Ph\u00f2ng k\u1ef9 thu\u1eadt\" c\u1ee7a Kubernetes. N\u01a1i ch\u1ee9a c\u00e1c th\u00e0nh ph\u1ea7n h\u1ec7 th\u1ed1ng c\u1ed1t l\u00f5i nh\u01b0 DNS, <code>kube-proxy</code>,... B\u1ea1n kh\u00f4ng n\u00ean \"\u0111\u1ee5ng\" v\u00e0o namespace n\u00e0y.</li> <li><code>kube-public</code>: N\u01a1i ch\u1ee9a c\u00e1c t\u00e0i nguy\u00ean c\u1ea7n \u0111\u01b0\u1ee3c c\u00f4ng khai v\u00e0 c\u00f3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c b\u1edfi t\u1ea5t c\u1ea3 ng\u01b0\u1eddi d\u00f9ng trong c\u1ee5m.</li> </ul>"},{"location":"k8s/01.core/19.namespace/#3-tai-sao-va-khi-nao-nen-dung-namespace","title":"3. T\u1ea1i sao v\u00e0 Khi n\u00e0o n\u00ean d\u00f9ng Namespace?","text":"<ul> <li>Khi h\u1ecdc ho\u1eb7c d\u00f9ng cho d\u1ef1 \u00e1n nh\u1ecf: D\u00f9ng namespace <code>default</code> l\u00e0 \u0111\u1ee7.</li> <li>Trong m\u00f4i tr\u01b0\u1eddng doanh nghi\u1ec7p/production: Namespace c\u1ef1c k\u1ef3 quan tr\u1ecdng \u0111\u1ec3:</li> <li>C\u00f4 l\u1eadp c\u00e1c m\u00f4i tr\u01b0\u1eddng: T\u1ea1o c\u00e1c namespace ri\u00eang cho <code>dev</code>, <code>production</code>, <code>testing</code>... tr\u00ean c\u00f9ng m\u1ed9t c\u1ee5m. \u0110i\u1ec1u n\u00e0y gi\u00fap team dev kh\u00f4ng v\u00f4 t\u00ecnh l\u00e0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn m\u00f4i tr\u01b0\u1eddng production.</li> <li>Qu\u1ea3n l\u00fd t\u00e0i nguy\u00ean: \u00c1p d\u1ee5ng Resource Quotas \u0111\u1ec3 gi\u1edbi h\u1ea1n l\u01b0\u1ee3ng CPU, Memory, s\u1ed1 l\u01b0\u1ee3ng Pod,... m\u00e0 m\u1ed7i namespace \u0111\u01b0\u1ee3c ph\u00e9p s\u1eed d\u1ee5ng.</li> </ul>"},{"location":"k8s/01.core/19.namespace/#4-giao-tiep-hang-xom-giua-cac-namespace","title":"4. Giao ti\u1ebfp \"H\u00e0ng x\u00f3m\" (Gi\u1eefa c\u00e1c Namespace)","text":"<ul> <li>Trong c\u00f9ng Namespace: M\u1ed9t Pod c\u00f3 th\u1ec3 g\u1ecdi m\u1ed9t Service ch\u1ec9 b\u1eb1ng t\u00ean c\u1ee7a Service \u0111\u00f3.</li> <li>Kh\u00e1c Namespace: M\u1ed9t Pod ph\u1ea3i s\u1eed d\u1ee5ng T\u00ean mi\u1ec1n \u0111\u1ea7y \u0111\u1ee7 (Fully Qualified Domain Name - FQDN).</li> <li>C\u00fa ph\u00e1p: <code>&lt;t\u00ean-service&gt;.&lt;t\u00ean-namespace&gt;.svc.cluster.local</code></li> <li>V\u00ed d\u1ee5: M\u1ed9t Pod \u1edf namespace <code>default</code> mu\u1ed1n g\u1ecdi <code>db-service</code> \u1edf namespace <code>dev</code> th\u00ec s\u1ebd d\u00f9ng \u0111\u1ecba ch\u1ec9: <code>db-service.dev.svc.cluster.local</code>.</li> </ul>"},{"location":"k8s/01.core/19.namespace/#5-o-nghe-kubectl-e-lam-viec-voi-namespace","title":"5. \"\u0110\u1ed3 ngh\u1ec1\" <code>kubectl</code> \u0111\u1ec3 l\u00e0m vi\u1ec7c v\u1edbi Namespace","text":"<ul> <li>Xem t\u00e0i nguy\u00ean trong m\u1ed9t namespace c\u1ee5 th\u1ec3: <pre><code>kubectl get pods --namespace kube-system\n# Ho\u1eb7c vi\u1ebft t\u1eaft:\nkubectl get pods -n kube-system\n</code></pre></li> <li>Xem t\u00e0i nguy\u00ean trong T\u1ea4T C\u1ea2 c\u00e1c namespace: <pre><code>kubectl get pods --all-namespaces\n</code></pre></li> <li>T\u1ea1o t\u00e0i nguy\u00ean trong m\u1ed9t namespace c\u1ee5 th\u1ec3:</li> <li>C\u00e1ch 1 (D\u00f9ng c\u1edd): <code>kubectl create -f pod.yaml -n dev</code></li> <li>C\u00e1ch 2 (Khai b\u00e1o trong YAML - Khuy\u1ebfn kh\u00edch): Th\u00eam tr\u01b0\u1eddng <code>namespace: dev</code> v\u00e0o ph\u1ea7n <code>metadata</code>.     <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\n  namespace: dev # &lt;-- Lu\u00f4n t\u1ea1o trong namespace 'dev'\n</code></pre></li> <li>T\u1ea1o m\u1ed9t Namespace m\u1edbi:</li> <li><code>kubectl create namespace dev</code></li> <li>Chuy\u1ec3n \"Nh\u00e0\" (Thay \u0111\u1ed5i namespace l\u00e0m vi\u1ec7c m\u1eb7c \u0111\u1ecbnh):</li> <li>\u0110\u1ec3 kh\u00f4ng ph\u1ea3i g\u00f5 <code>-n dev</code> m\u1ed7i l\u1ea7n, b\u1ea1n c\u00f3 th\u1ec3 chuy\u1ec3n context hi\u1ec7n t\u1ea1i sang l\u00e0m vi\u1ec7c v\u1edbi namespace <code>dev</code>.</li> <li><code>kubectl config set-context --current --namespace=dev</code></li> <li>Sau l\u1ec7nh n\u00e0y, <code>kubectl get pods</code> s\u1ebd t\u1ef1 \u0111\u1ed9ng li\u1ec7t k\u00ea c\u00e1c pod trong namespace <code>dev</code>.</li> </ul>"},{"location":"k8s/01.core/19.namespace/#6-resource-quota-quan-gia-ngan-sach-cho-tung-namespace","title":"6. Resource Quota - \"Qu\u1ea3n gia ng\u00e2n s\u00e1ch\" cho t\u1eebng Namespace \ud83d\udcb0","text":"<p>Resource Quota gi\u1ed1ng nh\u01b0 m\u1ed9t \"qu\u1ea3n gia ng\u00e2n s\u00e1ch\" \u0111\u01b0\u1ee3c giao nhi\u1ec7m v\u1ee5 ki\u1ec3m so\u00e1t v\u00e0 gi\u1edbi h\u1ea1n t\u00e0i nguy\u00ean m\u00e0 m\u1ed7i namespace \u0111\u01b0\u1ee3c ph\u00e9p s\u1eed d\u1ee5ng.</p>"},{"location":"k8s/01.core/19.namespace/#61-resource-quota-co-the-gioi-han-gi","title":"6.1. Resource Quota c\u00f3 th\u1ec3 gi\u1edbi h\u1ea1n g\u00ec?","text":"<ul> <li>T\u00e0i nguy\u00ean t\u00ednh to\u00e1n: - <code>requests.cpu</code>: T\u1ed5ng CPU request c\u1ee7a t\u1ea5t c\u1ea3 Pod - <code>requests.memory</code>: T\u1ed5ng Memory request c\u1ee7a t\u1ea5t c\u1ea3 Pod - <code>limits.cpu</code>: T\u1ed5ng CPU limit c\u1ee7a t\u1ea5t c\u1ea3 Pod - <code>limits.memory</code>: T\u1ed5ng Memory limit c\u1ee7a t\u1ea5t c\u1ea3 Pod</li> <li>S\u1ed1 l\u01b0\u1ee3ng \u0111\u1ed1i t\u01b0\u1ee3ng: - <code>count/pods</code>: S\u1ed1 l\u01b0\u1ee3ng Pod t\u1ed1i \u0111a - <code>count/services</code>: S\u1ed1 l\u01b0\u1ee3ng Service t\u1ed1i \u0111a - <code>count/persistentvolumeclaims</code>: S\u1ed1 l\u01b0\u1ee3ng PVC t\u1ed1i \u0111a</li> </ul>"},{"location":"k8s/01.core/19.namespace/#62-vi-du-resource-quota","title":"6.2. V\u00ed d\u1ee5 Resource Quota","text":"<pre><code>apiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: dev-quota\n  namespace: dev\nspec:\n  hard:\n    requests.cpu: \"4\" # T\u1ed1i \u0111a 4 CPU cores \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u\n    requests.memory: 8Gi # T\u1ed1i \u0111a 8GB RAM \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u\n    limits.cpu: \"8\" # T\u1ed1i \u0111a 8 CPU cores limit\n    limits.memory: 16Gi # T\u1ed1i \u0111a 16GB RAM limit\n    count/pods: \"10\" # T\u1ed1i \u0111a 10 Pods\n    count/services: \"5\" # T\u1ed1i \u0111a 5 Services\n</code></pre>"},{"location":"k8s/01.core/19.namespace/#63-lenh-kubectl-cho-resource-quota","title":"6.3. L\u1ec7nh kubectl cho Resource Quota","text":"<pre><code># Xem resource quota trong namespace\nkubectl get resourcequota -n dev\n\n# Xem chi ti\u1ebft usage\nkubectl describe resourcequota dev-quota -n dev\n\n# T\u1ea1o resource quota\nkubectl apply -f quota.yaml\n</code></pre> <p>\u26a0\ufe0f L\u01b0u \u00fd quan tr\u1ecdng: Khi namespace c\u00f3 ResourceQuota cho CPU/Memory, t\u1ea5t c\u1ea3 Pod B\u1eaeT BU\u1ed8C ph\u1ea3i khai b\u00e1o <code>resources.requests</code> v\u00e0 <code>resources.limits</code>, n\u1ebfu kh\u00f4ng s\u1ebd b\u1ecb t\u1eeb ch\u1ed1i t\u1ea1o.</p>"},{"location":"k8s/01.core/19.namespace/#7-chot-ha-cho-ky-thi-cka","title":"7. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>Namespaces cung c\u1ea5p s\u1ef1 c\u00f4 l\u1eadp logic (kh\u00f4ng ph\u1ea3i v\u1eadt l\u00fd) gi\u1eefa c\u00e1c t\u00e0i nguy\u00ean.</li> <li>N\u1eafm v\u1eefng 3 namespace m\u1eb7c \u0111\u1ecbnh: <code>default</code>, <code>kube-system</code>, <code>kube-public</code>.</li> <li>Hi\u1ec3u c\u00e1ch giao ti\u1ebfp gi\u1eefa c\u00e1c namespace b\u1eb1ng FQDN.</li> <li>Th\u00e0nh th\u1ea1o c\u00e1c l\u1ec7nh <code>kubectl</code> v\u1edbi c\u1edd <code>--namespace</code> (ho\u1eb7c <code>-n</code>) v\u00e0 l\u1ec7nh <code>kubectl config set-context</code> \u0111\u1ec3 chuy\u1ec3n \u0111\u1ed5i namespace m\u1eb7c \u0111\u1ecbnh.</li> <li>Bi\u1ebft r\u1eb1ng ResourceQuota \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 gi\u1edbi h\u1ea1n t\u00e0i nguy\u00ean cho m\u1ed7i namespace.</li> </ul>"},{"location":"k8s/01.core/20.ImperativeDeclarative/","title":"20.ImperativeDeclarative","text":""},{"location":"k8s/01.core/20.ImperativeDeclarative/#1-imperative-vs-declarative-hai-truong-phai-quan-ly","title":"1. Imperative vs. Declarative - Hai \"Tr\u01b0\u1eddng ph\u00e1i\" Qu\u1ea3n l\u00fd","text":"<p>H\u00e3y d\u00f9ng m\u1ed9t ph\u00e9p so s\u00e1nh \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 hi\u1ec3u r\u00f5 hai tr\u01b0\u1eddng ph\u00e1i n\u00e0y:</p> <ul> <li> <p>Imperative (M\u1ec7nh l\u1ec7nh) - Gi\u1ed1ng nh\u01b0 b\u1ea1n \u0111i Taxi truy\u1ec1n th\u1ed1ng \ud83d\ude95:</p> </li> <li> <p>B\u1ea1n ph\u1ea3i ch\u1ec9 \u0111\u01b0\u1eddng t\u1eebng b\u01b0\u1edbc cho t\u00e0i x\u1ebf: \"\u0110i th\u1eb3ng, \u0111\u1ebfn ng\u00e3 t\u01b0 r\u1ebd ph\u1ea3i, \u0111i th\u00eam 200m r\u1ed3i r\u1ebd tr\u00e1i...\".</p> </li> <li> <p>B\u1ea1n ch\u1ec9 r\u00f5 C\u00c1I G\u00cc c\u1ea7n l\u00e0m v\u00e0 quan tr\u1ecdng h\u01a1n l\u00e0 L\u00c0M TH\u1ebe N\u00c0O \u0111\u1ec3 l\u00e0m \u0111i\u1ec1u \u0111\u00f3.</p> </li> <li> <p>Declarative (Khai b\u00e1o) - Gi\u1ed1ng nh\u01b0 b\u1ea1n \u0111\u1eb7t xe Uber/Grab \ud83d\ude97:</p> </li> <li> <p>B\u1ea1n ch\u1ec9 c\u1ea7n nh\u1eadp v\u00e0o \u0111i\u1ec3m \u0111\u1ebfn cu\u1ed1i c\u00f9ng: \"\u0110\u01b0a t\u00f4i \u0111\u1ebfn nh\u00e0 h\u00e1t l\u1edbn\".</p> </li> <li>H\u1ec7 th\u1ed1ng (t\u00e0i x\u1ebf v\u00e0 \u1ee9ng d\u1ee5ng) s\u1ebd t\u1ef1 t\u00ecm ra con \u0111\u01b0\u1eddng t\u1ed1i \u01b0u nh\u1ea5t \u0111\u1ec3 \u0111\u01b0a b\u1ea1n \u0111\u1ebfn \u0111\u00f3.</li> <li>B\u1ea1n ch\u1ec9 n\u00f3i C\u00c1I G\u00cc b\u1ea1n mu\u1ed1n (tr\u1ea1ng th\u00e1i cu\u1ed1i c\u00f9ng), c\u00f2n c\u00e1ch l\u00e0m \u0111\u00e3 c\u00f3 h\u1ec7 th\u1ed1ng lo.</li> </ul>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#2-ap-dung-vao-kubernetes","title":"2. \u00c1p d\u1ee5ng v\u00e0o Kubernetes","text":"<p>Trong Kubernetes, hai tr\u01b0\u1eddng ph\u00e1i n\u00e0y \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n qua c\u00e1ch b\u1ea1n s\u1eed d\u1ee5ng l\u1ec7nh <code>kubectl</code>.</p>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#a-cach-tiep-can-menh-lenh-imperative-approach","title":"a. C\u00e1ch ti\u1ebfp c\u1eadn M\u1ec7nh l\u1ec7nh (Imperative Approach)","text":"<p>\u0110\u00e2y l\u00e0 c\u00e1ch b\u1ea1n ra l\u1ec7nh tr\u1ef1c ti\u1ebfp cho Kubernetes ph\u1ea3i l\u00e0m g\u00ec. N\u00f3 c\u00f3 2 d\u1ea1ng:</p> <ol> <li> <p>D\u00f9ng l\u1ec7nh tr\u1ef1c ti\u1ebfp (Pure Imperative Commands):</p> </li> <li> <p>T\u1ea1o m\u1edbi: <code>kubectl run</code>, <code>kubectl create deployment</code>, <code>kubectl expose</code>.</p> </li> <li>C\u1eadp nh\u1eadt: <code>kubectl edit</code>, <code>kubectl scale</code>, <code>kubectl set image</code>.</li> <li>\u01afu \u0111i\u1ec3m: R\u1ea5t nhanh v\u00e0 ti\u1ec7n l\u1ee3i cho c\u00e1c t\u00e1c v\u1ee5 \u0111\u01a1n gi\u1ea3n, \u0111\u1eb7c bi\u1ec7t h\u1eefu \u00edch khi l\u00e0m b\u00e0i thi CKA \u0111\u1ec3 ti\u1ebft ki\u1ec7m th\u1eddi gian.</li> <li> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m: Kh\u00f3 theo d\u00f5i (ch\u1ec9 l\u01b0u trong l\u1ecbch s\u1eed d\u00f2ng l\u1ec7nh), kh\u00f4ng ph\u00f9 h\u1ee3p cho m\u00f4i tr\u01b0\u1eddng l\u00e0m vi\u1ec7c nh\u00f3m, gi\u1edbi h\u1ea1n ch\u1ee9c n\u0103ng v\u1edbi c\u00e1c y\u00eau c\u1ea7u ph\u1ee9c t\u1ea1p.</p> </li> <li> <p>D\u00f9ng file c\u1ea5u h\u00ecnh (nh\u01b0ng v\u1edbi l\u1ec7nh m\u1ec7nh l\u1ec7nh):</p> </li> <li> <p>T\u1ea1o m\u1edbi: <code>kubectl create -f my-pod.yaml</code></p> </li> <li>C\u1eadp nh\u1eadt: <code>kubectl replace -f my-pod.yaml</code></li> <li>X\u00f3a: <code>kubectl delete -f my-pod.yaml</code></li> <li>V\u1ea5n \u0111\u1ec1: C\u00e1ch n\u00e0y v\u1eabn l\u00e0 m\u1ec7nh l\u1ec7nh v\u00ec b\u1ea1n ph\u1ea3i bi\u1ebft tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a h\u1ec7 th\u1ed1ng \u0111\u1ec3 ch\u1ecdn \u0111\u00fang l\u1ec7nh. V\u00ed d\u1ee5, b\u1ea1n kh\u00f4ng th\u1ec3 ch\u1ea1y <code>create</code> n\u1ebfu object \u0111\u00e3 t\u1ed3n t\u1ea1i (s\u1ebd b\u00e1o l\u1ed7i), v\u00e0 kh\u00f4ng th\u1ec3 ch\u1ea1y <code>replace</code> n\u1ebfu object ch\u01b0a t\u1ed3n t\u1ea1i.</li> </ol>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#b-cach-tiep-can-khai-bao-declarative-approach-chan-ai-cua-kubernetes","title":"b. C\u00e1ch ti\u1ebfp c\u1eadn Khai b\u00e1o (Declarative Approach) - \"Ch\u00e2n \u00e1i\" c\u1ee7a Kubernetes \u2764\ufe0f","text":"<p>\u0110\u00e2y l\u00e0 ph\u01b0\u01a1ng ph\u00e1p \u0111\u01b0\u1ee3c khuy\u1ebfn kh\u00edch s\u1eed d\u1ee5ng trong th\u1ef1c t\u1ebf.</p> <ul> <li>L\u1ec7nh duy nh\u1ea5t: <code>kubectl apply -f &lt;file.yaml ho\u1eb7c th\u01b0 m\u1ee5c&gt;</code></li> <li>C\u00e1ch ho\u1ea1t \u0111\u1ed9ng:</li> <li>B\u1ea1n \u0111\u1ecbnh ngh\u0129a tr\u1ea1ng th\u00e1i cu\u1ed1i c\u00f9ng mong mu\u1ed1n cho to\u00e0n b\u1ed9 \u1ee9ng d\u1ee5ng c\u1ee7a m\u00ecnh trong m\u1ed9t ho\u1eb7c nhi\u1ec1u file YAML.</li> <li>B\u1ea1n lu\u00f4n lu\u00f4n ch\u1ea1y l\u1ec7nh <code>kubectl apply -f ...</code>.</li> <li>S\u1ef1 \"th\u00f4ng minh\" c\u1ee7a <code>apply</code>:</li> <li>N\u00f3 s\u1ebd t\u1ef1 so s\u00e1nh tr\u1ea1ng th\u00e1i b\u1ea1n khai b\u00e1o trong file v\u1edbi tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i tr\u00ean c\u1ee5m.</li> <li>N\u1ebfu object ch\u01b0a t\u1ed3n t\u1ea1i, n\u00f3 s\u1ebd t\u1ea1o m\u1edbi.</li> <li>N\u1ebfu object \u0111\u00e3 t\u1ed3n t\u1ea1i, n\u00f3 s\u1ebd t\u00ednh to\u00e1n s\u1ef1 kh\u00e1c bi\u1ec7t v\u00e0 ch\u1ec9 c\u1eadp nh\u1eadt nh\u1eefng thay \u0111\u1ed5i c\u1ea7n thi\u1ebft.</li> <li>N\u00f3 kh\u00f4ng bao gi\u1edd b\u00e1o l\u1ed7i \"object \u0111\u00e3 t\u1ed3n t\u1ea1i\". B\u1ea1n ch\u1ec9 c\u1ea7n \"khai b\u00e1o\" v\u00e0 <code>apply</code>, Kubernetes s\u1ebd lo ph\u1ea7n c\u00f2n l\u1ea1i.</li> </ul>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#3-meo-cho-ky-thi-cka","title":"3. M\u1eb9o cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<p>Trong k\u1ef3 thi CKA, th\u1eddi gian l\u00e0 v\u00e0ng, v\u00ec v\u1eady b\u1ea1n c\u1ea7n linh ho\u1ea1t:</p> <ul> <li>\u0110\u1ec3 t\u1ea1o nhanh c\u00e1c object \u0111\u01a1n gi\u1ea3n (Pod, Deployment v\u1edbi m\u1ed9t image duy nh\u1ea5t): H\u00e3y d\u00f9ng c\u00e1c l\u1ec7nh m\u1ec7nh l\u1ec7nh nh\u01b0 <code>kubectl run</code> ho\u1eb7c <code>kubectl create deployment</code>.</li> <li>\u0110\u1ec3 s\u1eeda nhanh m\u1ed9t thu\u1ed9c t\u00ednh c\u1ee7a object \u0111ang c\u00f3: <code>kubectl edit</code> l\u00e0 l\u1ef1a ch\u1ecdn nhanh nh\u1ea5t.</li> <li>V\u1edbi c\u00e1c y\u00eau c\u1ea7u ph\u1ee9c t\u1ea1p (t\u1ea1o Pod nhi\u1ec1u container, \u0111\u1ecbnh ngh\u0129a volumes, env-vars,...): T\u1ed1t nh\u1ea5t l\u00e0 n\u00ean t\u1ea1o m\u1ed9t file YAML. C\u00e1ch n\u00e0y gi\u00fap b\u1ea1n d\u1ec5 d\u00e0ng ki\u1ec3m tra, s\u1eeda l\u1ed7i v\u00e0 \u00e1p d\u1ee5ng l\u1ea1i n\u1ebfu c\u1ea7n. Khi \u0111\u00f3, d\u00f9ng <code>kubectl apply -f</code> l\u00e0 m\u1ed9t l\u1ef1a ch\u1ecdn r\u1ea5t t\u1ed1t.</li> </ul>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#reference","title":"Reference:","text":"<p>https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands</p> <p>https://kubernetes.io/docs/reference/kubectl/conventions/</p> <p>M\u1eb7c d\u00f9 c\u00e1ch l\u00e0m khai b\u00e1o (d\u00f9ng file YAML) l\u00e0 chu\u1ea9n trong th\u1ef1c t\u1ebf, nh\u01b0ng trong k\u1ef3 thi CKA, nh\u1eefng l\u1ec7nh n\u00e0y s\u1ebd gi\u00fap b\u1ea1n ti\u1ebft ki\u1ec7m c\u1ef1c k\u1ef3 nhi\u1ec1u th\u1eddi gian qu\u00fd b\u00e1u!</p>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#1-hai-bao-boi-can-nho-dry-run-va-o-yaml","title":"1. Hai \"B\u1ea3o b\u1ed1i\" C\u1ea7n Nh\u1edb: <code>--dry-run</code> v\u00e0 <code>-o yaml</code>","text":"<p>Tr\u01b0\u1edbc khi \u0111i v\u00e0o t\u1eebng l\u1ec7nh c\u1ee5 th\u1ec3, b\u1ea1n c\u1ea7n n\u1eafm v\u1eefng hai t\u00f9y ch\u1ecdn (options) \"th\u1ea7n th\u00e1nh\" n\u00e0y:</p> <ul> <li> <p><code>--dry-run=client</code>:</p> </li> <li> <p>Ngh\u0129a l\u00e0: \"Ch\u1ea1y th\u1eed th\u00f4i, \u0111\u1eebng t\u1ea1o th\u1eadt nh\u00e9!\".</p> </li> <li> <p><code>kubectl</code> s\u1ebd ki\u1ec3m tra c\u00fa ph\u00e1p l\u1ec7nh c\u1ee7a b\u1ea1n v\u00e0 cho b\u1ea1n bi\u1ebft li\u1ec7u t\u00e0i nguy\u00ean c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea1o hay kh\u00f4ng, nh\u01b0ng n\u00f3 s\u1ebd kh\u00f4ng th\u1ef1c s\u1ef1 t\u1ea1o ra b\u1ea5t k\u1ef3 t\u00e0i nguy\u00ean n\u00e0o trong c\u1ee5m.</p> </li> <li> <p><code>-o yaml</code>:</p> </li> <li> <p>Ngh\u0129a l\u00e0: \"In k\u1ebft qu\u1ea3 ra m\u00e0n h\u00ecnh d\u01b0\u1edbi \u0111\u1ecbnh d\u1ea1ng YAML nh\u00e9!\".</p> </li> </ul> <p>\ud83d\ude80 Combo Th\u1ea7n th\u00e1nh: K\u1ebft h\u1ee3p hai t\u00f9y ch\u1ecdn n\u00e0y, b\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o ra m\u1ed9t file template YAML m\u1ed9t c\u00e1ch si\u00eau t\u1ed1c m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i vi\u1ebft t\u1eeb \u0111\u1ea7u.</p> <pre><code># C\u00fa ph\u00e1p\nkubectl &lt;l\u1ec7nh-t\u1ea1o-t\u00e0i-nguy\u00ean&gt; --dry-run=client -o yaml &gt; ten-file.yaml\n</code></pre> <p>Sau \u0111\u00f3, b\u1ea1n ch\u1ec9 c\u1ea7n m\u1edf file <code>ten-file.yaml</code> ra v\u00e0 ch\u1ec9nh s\u1eeda th\u00eam cho c\u00e1c y\u00eau c\u1ea7u ph\u1ee9c t\u1ea1p.</p>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#2-cac-lenh-menh-lenh-imperative-commands-thong-dung","title":"2. C\u00e1c L\u1ec7nh M\u1ec7nh l\u1ec7nh (Imperative Commands) Th\u00f4ng d\u1ee5ng","text":""},{"location":"k8s/01.core/20.ImperativeDeclarative/#a-voi-pod","title":"a. V\u1edbi <code>Pod</code>","text":"<ul> <li>T\u1ea1o nhanh m\u1ed9t NGINX Pod: <pre><code>kubectl run nginx --image=nginx\n</code></pre></li> <li>T\u1ea1o file YAML cho Pod m\u00e0 kh\u00f4ng t\u1ea1o Pod th\u1eadt: <pre><code>kubectl run nginx --image=nginx --dry-run=client -o yaml\n</code></pre></li> </ul>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#b-voi-deployment","title":"b. V\u1edbi <code>Deployment</code>","text":"<ul> <li>T\u1ea1o m\u1ed9t Deployment: <pre><code>kubectl create deployment nginx --image=nginx\n</code></pre></li> <li>T\u1ea1o Deployment v\u1edbi 4 b\u1ea3n sao (replicas): <pre><code>kubectl create deployment nginx --image=nginx --replicas=4\n</code></pre></li> <li>Scale m\u1ed9t Deployment \u0111ang c\u00f3: <pre><code>kubectl scale deployment nginx --replicas=4\n</code></pre></li> <li>T\u1ea1o file YAML cho Deployment: <pre><code>kubectl create deployment nginx --image=nginx --dry-run=client -o yaml\n</code></pre></li> </ul>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#c-voi-service-phan-can-luu-y","title":"c. V\u1edbi <code>Service</code> (Ph\u1ea7n c\u1ea7n l\u01b0u \u00fd)","text":"<p>T\u1ea1o Service b\u1eb1ng l\u1ec7nh c\u00f3 h\u01a1i ph\u1ee9c t\u1ea1p h\u01a1n m\u1ed9t ch\u00fat v\u00ec c\u00f3 hai l\u1ec7nh ch\u00ednh v\u1edbi nh\u1eefng \u01b0u v\u00e0 nh\u01b0\u1ee3c \u0111i\u1ec3m ri\u00eang:</p> <ul> <li> <p>C\u00e1ch 1: <code>kubectl expose</code> (Khuy\u1ebfn kh\u00edch d\u00f9ng l\u00e0m \u0111i\u1ec3m kh\u1edfi \u0111\u1ea7u)</p> </li> <li> <p>L\u1ec7nh: <code>kubectl expose pod redis --port=6379 --name redis-service</code></p> </li> <li>\u2705 \u01afu \u0111i\u1ec3m: N\u00f3 s\u1ebd t\u1ef1 \u0111\u1ed9ng s\u1eed d\u1ee5ng <code>labels</code> c\u1ee7a Pod l\u00e0m <code>selector</code> cho Service. \u0110\u00e2y th\u01b0\u1eddng l\u00e0 \u0111i\u1ec1u b\u1ea1n mu\u1ed1n.</li> <li> <p>\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m: B\u1ea1n kh\u00f4ng th\u1ec3 ch\u1ec9 \u0111\u1ecbnh <code>nodePort</code> tr\u1ef1c ti\u1ebfp b\u1eb1ng l\u1ec7nh n\u00e0y.</p> </li> <li> <p>C\u00e1ch 2: <code>kubectl create service</code></p> </li> <li> <p>L\u1ec7nh: <code>kubectl create service nodeport nginx --tcp=80:80 --node-port=30080</code></p> </li> <li>\u2705 \u01afu \u0111i\u1ec3m: B\u1ea1n c\u00f3 th\u1ec3 ch\u1ec9 \u0111\u1ecbnh c\u00e1c th\u00f4ng s\u1ed1 chi ti\u1ebft nh\u01b0 <code>node-port</code>.</li> <li>\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m: N\u00f3 kh\u00f4ng t\u1ef1 \u0111\u1ed9ng l\u1ea5y <code>selector</code> t\u1eeb <code>labels</code> c\u1ee7a Pod. Thay v\u00e0o \u0111\u00f3, n\u00f3 s\u1ebd gi\u1ea3 \u0111\u1ecbnh m\u1ed9t selector m\u1eb7c \u0111\u1ecbnh (v\u00ed d\u1ee5: <code>app=nginx</code>). N\u1ebfu Pod c\u1ee7a b\u1ea1n c\u00f3 label kh\u00e1c, Service s\u1ebd kh\u00f4ng ho\u1ea1t \u0111\u1ed9ng.</li> </ul> <p>\ud83d\udca1 Chi\u1ebfn l\u01b0\u1ee3c \u0111\u1ec1 xu\u1ea5t:</p> <p>H\u00e3y b\u1eaft \u0111\u1ea7u v\u1edbi l\u1ec7nh <code>kubectl expose</code>. N\u1ebfu b\u1ea1n c\u1ea7n ch\u1ec9 \u0111\u1ecbnh c\u00e1c tr\u01b0\u1eddng n\u00e2ng cao nh\u01b0 <code>nodePort</code>, h\u00e3y d\u00f9ng <code>expose</code> v\u1edbi combo <code>--dry-run=client -o yaml</code> \u0111\u1ec3 t\u1ea1o ra m\u1ed9t file YAML c\u01a1 b\u1ea3n (\u0111\u00e3 c\u00f3 s\u1eb5n <code>selector</code> \u0111\u00fang). Sau \u0111\u00f3, b\u1ea1n ch\u1ec9 c\u1ea7n m\u1edf file \u0111\u00f3 ra v\u00e0 th\u00eam d\u00f2ng <code>nodePort</code> v\u00e0o r\u1ed3i m\u1edbi t\u1ea1o Service.</p>"},{"location":"k8s/01.core/20.ImperativeDeclarative/#3-chot-ha-chien-luoc-thi","title":"3. \"Ch\u1ed1t h\u1ea1\" Chi\u1ebfn l\u01b0\u1ee3c thi \ud83d\udcdd","text":"<ul> <li>\u0110\u1ed1i v\u1edbi c\u00e1c y\u00eau c\u1ea7u t\u1ea1o t\u00e0i nguy\u00ean \u0111\u01a1n gi\u1ea3n, h\u00e3y d\u00f9ng c\u00e1c l\u1ec7nh m\u1ec7nh l\u1ec7nh nh\u01b0 <code>kubectl run</code>, <code>kubectl create deployment</code> \u0111\u1ec3 ti\u1ebft ki\u1ec7m th\u1eddi gian.</li> <li>H\u00e3y th\u00e0nh th\u1ea1o \"combo th\u1ea7n th\u00e1nh\" <code>--dry-run=client -o yaml</code> \u0111\u1ec3 t\u1ea1o nhanh c\u00e1c file template YAML khi c\u1ea7n gi\u1ea3i quy\u1ebft c\u00e1c y\u00eau c\u1ea7u ph\u1ee9c t\u1ea1p h\u01a1n.</li> <li>Khi t\u1ea1o Service, h\u00e3y \u01b0u ti\u00ean d\u00f9ng <code>kubectl expose</code> \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o <code>selector</code> \u0111\u01b0\u1ee3c thi\u1ebft l\u1eadp ch\u00ednh x\u00e1c.</li> </ul> <p>N\u1eafm v\u1eefng c\u00e1c l\u1ec7nh n\u00e0y s\u1ebd l\u00e0 m\u1ed9t l\u1ee3i th\u1ebf c\u1ef1c l\u1edbn, gi\u00fap b\u1ea1n ho\u00e0n th\u00e0nh c\u00e1c b\u00e0i th\u1ef1c h\u00e0nh trong k\u1ef3 thi CKA m\u1ed9t c\u00e1ch nhanh ch\u00f3ng v\u00e0 ch\u00ednh x\u00e1c. Ch\u00fac b\u1ea1n m\u1ed9t bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/21.kubectlAppy/","title":"21.kubectlAppy","text":""},{"location":"k8s/01.core/21.kubectlAppy/#1-bi-mat-nam-o-cuoc-so-sanh-ba-ben","title":"1. B\u00ed m\u1eadt n\u1eb1m \u1edf \"Cu\u1ed9c so s\u00e1nh Ba b\u00ean\" \ud83d\udd75\ufe0f\u200d\u2642\ufe0f","text":"<p>S\u1ef1 \"th\u00f4ng minh\" c\u1ee7a <code>kubectl apply</code> kh\u00f4ng ph\u1ea3i l\u00e0 ma thu\u1eadt, m\u00e0 l\u00e0 m\u1ed9t quy tr\u00ecnh so s\u00e1nh r\u1ea5t logic d\u1ef1a tr\u00ean 3 ngu\u1ed3n th\u00f4ng tin:</p> <ol> <li> <p>File C\u1ea5u h\u00ecnh C\u1ee5c b\u1ed9 (Local File):</p> </li> <li> <p>\u0110\u00e2y l\u00e0 file YAML tr\u00ean m\u00e1y c\u1ee7a b\u1ea1n, \u0111\u1ecbnh ngh\u0129a tr\u1ea1ng th\u00e1i b\u1ea1n mong mu\u1ed1n.</p> </li> <li> <p>C\u1ea5u h\u00ecnh \"S\u1ed1ng\" (Live Configuration):</p> </li> <li> <p>\u0110\u00e2y l\u00e0 tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i c\u1ee7a object \u0111ang ch\u1ea1y tr\u00ean c\u1ee5m Kubernetes (\u0111\u01b0\u1ee3c l\u01b0u trong <code>etcd</code>).</p> </li> <li> <p>C\u1ea5u h\u00ecnh \u0111\u00e3 \u00e1p d\u1ee5ng l\u1ea7n cu\u1ed1i (Last Applied Configuration):</p> </li> <li> <p>\u0110\u00e2y l\u00e0 m\u1ed9t \"\u1ea3nh ch\u1ee5p\" c\u1ee7a file YAML t\u1eeb l\u1ea7n cu\u1ed1i c\u00f9ng b\u1ea1n ch\u1ea1y <code>kubectl apply</code>. N\u00f3 \u0111\u01b0\u1ee3c l\u01b0u l\u1ea1i \u0111\u1ec3 tham chi\u1ebfu.</p> </li> </ol> <p><code>kubectl apply</code> s\u1ebd nh\u00ecn v\u00e0o c\u1ea3 ba ngu\u1ed3n n\u00e0y \u0111\u1ec3 quy\u1ebft \u0111\u1ecbnh ph\u1ea3i l\u00e0m g\u00ec.</p>"},{"location":"k8s/01.core/21.kubectlAppy/#2-luong-hoat-ong-cua-apply","title":"2. Lu\u1ed3ng ho\u1ea1t \u0111\u1ed9ng c\u1ee7a <code>apply</code>","text":""},{"location":"k8s/01.core/21.kubectlAppy/#a-khi-chay-apply-lan-au-tao-moi","title":"a. Khi ch\u1ea1y <code>apply</code> l\u1ea7n \u0111\u1ea7u (T\u1ea1o m\u1edbi)","text":"<ol> <li>B\u1ea1n ch\u1ea1y <code>kubectl apply -f my-pod.yaml</code>.</li> <li><code>apply</code> th\u1ea5y object n\u00e0y ch\u01b0a t\u1ed3n t\u1ea1i, n\u00f3 s\u1ebd t\u1ea1o m\u1edbi object \u0111\u00f3 tr\u00ean c\u1ee5m.</li> <li>B\u01b0\u1edbc \u0111\u1eb7c bi\u1ec7t: Sau khi t\u1ea1o, <code>apply</code> s\u1ebd l\u1ea5y n\u1ed9i dung file <code>my-pod.yaml</code> c\u1ee7a b\u1ea1n, chuy\u1ec3n n\u00f3 sang \u0111\u1ecbnh d\u1ea1ng JSON v\u00e0 l\u01b0u n\u00f3 nh\u01b0 m\u1ed9t <code>annotation</code> ngay tr\u00ean object v\u1eeba t\u1ea1o. C\u00e1i <code>annotation</code> n\u00e0y ch\u00ednh l\u00e0 \"Last Applied Configuration\".</li> </ol>"},{"location":"k8s/01.core/21.kubectlAppy/#b-khi-chay-apply-e-cap-nhat-hoac-xoa-mot-truong","title":"b. Khi ch\u1ea1y <code>apply</code> \u0111\u1ec3 c\u1eadp nh\u1eadt ho\u1eb7c x\u00f3a m\u1ed9t tr\u01b0\u1eddng","text":"<ol> <li>B\u1ea1n ch\u1ec9nh s\u1eeda file YAML c\u1ee5c b\u1ed9 c\u1ee7a m\u00ecnh (v\u00ed d\u1ee5: \u0111\u1ed5i <code>image</code> ho\u1eb7c x\u00f3a m\u1ed9t <code>label</code>).</li> <li>B\u1ea1n ch\u1ea1y l\u1ea1i <code>kubectl apply -f my-pod.yaml</code>.</li> <li><code>apply</code> b\u1eaft \u0111\u1ea7u so s\u00e1nh:</li> <li>\u0110\u1ec3 c\u1eadp nh\u1eadt m\u1ed9t tr\u01b0\u1eddng: N\u00f3 so s\u00e1nh file local c\u1ee7a b\u1ea1n v\u1edbi c\u1ea5u h\u00ecnh \"s\u1ed1ng\". Th\u1ea5y c\u00f3 s\u1ef1 kh\u00e1c bi\u1ec7t, n\u00f3 s\u1ebd c\u1eadp nh\u1eadt c\u1ea5u h\u00ecnh \"s\u1ed1ng\".</li> <li>\u0110\u1ec3 X\u00d3A m\u1ed9t tr\u01b0\u1eddng (\u0110\u00e2y l\u00e0 l\u00fac \"Last Applied Configuration\" t\u1ecfa s\u00e1ng \u2728):<ul> <li><code>apply</code> th\u1ea5y tr\u01b0\u1eddng \u0111\u00f3 \u0111\u00e3 bi\u1ebfn m\u1ea5t kh\u1ecfi file local c\u1ee7a b\u1ea1n.</li> <li>N\u00f3 s\u1ebd nh\u00ecn v\u00e0o \"Last Applied Configuration\" v\u00e0 th\u1ea5y: \"\u1ed2, l\u1ea7n tr\u01b0\u1edbc c\u00e1i tr\u01b0\u1eddng n\u00e0y c\u00f3 t\u1ed3n t\u1ea1i\".</li> <li>T\u1eeb \u0111\u00f3, n\u00f3 suy ra r\u1eb1ng b\u1ea1n \u0111\u00e3 c\u1ed1 \u00fd x\u00f3a tr\u01b0\u1eddng n\u00e0y, v\u00e0 n\u00f3 s\u1ebd ti\u1ebfn h\u00e0nh x\u00f3a tr\u01b0\u1eddng \u0111\u00f3 kh\u1ecfi c\u1ea5u h\u00ecnh \"s\u1ed1ng\".</li> </ul> </li> <li>Sau khi m\u1ecdi thay \u0111\u1ed5i ho\u00e0n t\u1ea5t, <code>apply</code> s\u1ebd l\u1ea1i c\u1eadp nh\u1eadt <code>annotation</code> \"Last Applied Configuration\" v\u1edbi n\u1ed9i dung m\u1edbi nh\u1ea5t t\u1eeb file local c\u1ee7a b\u1ea1n.</li> </ol>"},{"location":"k8s/01.core/21.kubectlAppy/#3-last-applied-configuration-uoc-luu-o-au","title":"3. \"Last Applied Configuration\" \u0111\u01b0\u1ee3c l\u01b0u \u1edf \u0111\u00e2u? \ud83e\udd2b","text":"<ul> <li>N\u00f3 \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef d\u01b0\u1edbi d\u1ea1ng m\u1ed9t <code>annotation</code> tr\u00ean ch\u00ednh object \u0111ang ch\u1ea1y tr\u00ean c\u1ee5m.</li> <li>T\u00ean c\u1ee7a annotation \u0111\u00f3 l\u00e0: <code>kubectl.kubernetes.io/last-applied-configuration</code>.</li> </ul>"},{"location":"k8s/01.core/21.kubectlAppy/#4-loi-canh-bao-quan-trong-ung-lai-cang","title":"4. L\u1eddi c\u1ea3nh b\u00e1o quan tr\u1ecdng: \u0110\u1eebng \"Lai c\u0103ng\"! \u26a0\ufe0f","text":"<ul> <li>Ch\u1ec9 c\u00f3 l\u1ec7nh <code>kubectl apply</code> m\u1edbi t\u1ea1o ra v\u00e0 s\u1eed d\u1ee5ng <code>annotation</code> \"Last Applied Configuration\".</li> <li>C\u00e1c l\u1ec7nh m\u1ec7nh l\u1ec7nh nh\u01b0 <code>kubectl create</code> hay <code>kubectl replace</code> ho\u00e0n to\u00e0n kh\u00f4ng quan t\u00e2m \u0111\u1ebfn annotation n\u00e0y.</li> <li>Do \u0111\u00f3, b\u1ea1n kh\u00f4ng n\u00ean tr\u1ed9n l\u1eabn hai ph\u01b0\u01a1ng ph\u00e1p n\u00e0y tr\u00ean c\u00f9ng m\u1ed9t object. N\u1ebfu b\u1ea1n \u0111\u00e3 b\u1eaft \u0111\u1ea7u qu\u1ea3n l\u00fd m\u1ed9t object b\u1eb1ng <code>apply</code>, h\u00e3y lu\u00f4n d\u00f9ng <code>apply</code> cho n\u00f3 v\u1ec1 sau. N\u1ebfu b\u1ea1n d\u00f9ng <code>replace</code> xen v\u00e0o, <code>apply</code> s\u1ebd b\u1ecb \"b\u1ed1i r\u1ed1i\" \u1edf l\u1ea7n ch\u1ea1y ti\u1ebfp theo v\u00e0 c\u00f3 th\u1ec3 g\u00e2y ra k\u1ebft qu\u1ea3 kh\u00f4ng mong mu\u1ed1n.</li> </ul>"},{"location":"k8s/01.core/21.kubectlAppy/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>kubectl apply</code> \"th\u00f4ng minh\" v\u00ec n\u00f3 th\u1ef1c hi\u1ec7n ph\u00e9p so s\u00e1nh ba b\u00ean (local, live, last-applied).</li> <li>Hi\u1ec3u r\u00f5 vai tr\u00f2 c\u1ee7a <code>last-applied-configuration</code> annotation, \u0111\u1eb7c bi\u1ec7t l\u00e0 trong vi\u1ec7c ph\u00e1t hi\u1ec7n c\u00e1c tr\u01b0\u1eddng b\u1ecb x\u00f3a.</li> <li>Kh\u00f4ng \u0111\u01b0\u1ee3c tr\u1ed9n l\u1eabn vi\u1ec7c s\u1eed d\u1ee5ng <code>apply</code> v\u1edbi <code>create</code>/<code>replace</code> tr\u00ean c\u00f9ng m\u1ed9t object. H\u00e3y ch\u1ecdn m\u1ed9t tr\u01b0\u1eddng ph\u00e1i v\u00e0 theo n\u00f3 \u0111\u1ebfn c\u00f9ng!</li> </ul>"},{"location":"k8s/02.Scheduling/01.manualScheduling/","title":"H\u01b0\u1edbng D\u1eabn Chi Ti\u1ebft: C\u00e1ch T\u1ef1 \u0110\u1ed9ng L\u1eadp L\u1ecbch Pod Trong Kubernetes Khi Kh\u00f4ng C\u00f3 Scheduler","text":""},{"location":"k8s/02.Scheduling/01.manualScheduling/#huong-dan-chi-tiet-cach-tu-ong-lap-lich-pod-trong-kubernetes-khi-khong-co-scheduler","title":"H\u01b0\u1edbng D\u1eabn Chi Ti\u1ebft: C\u00e1ch T\u1ef1 \u0110\u1ed9ng L\u1eadp L\u1ecbch Pod Trong Kubernetes Khi Kh\u00f4ng C\u00f3 Scheduler","text":"<p>Kubernetes l\u00e0 h\u1ec7 th\u1ed1ng \u0111i\u1ec1u ph\u1ed1i container m\u1ea1nh m\u1ebd, nh\u01b0ng b\u1ea1n \u0111\u00e3 bao gi\u1edd t\u1ef1 h\u1ecfi: N\u1ebfu kh\u00f4ng c\u00f3 scheduler trong c\u1ee5m (cluster), b\u1ea1n s\u1ebd l\u00e0m g\u00ec? Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u v\u1ec1 c\u00e1c c\u00e1ch th\u1ee7 c\u00f4ng \u0111\u1ec3 l\u1eadp l\u1ecbch (schedule) m\u1ed9t pod l\u00ean node khi kh\u00f4ng s\u1eed d\u1ee5ng scheduler m\u1eb7c \u0111\u1ecbnh c\u1ee7a Kubernetes.</p>"},{"location":"k8s/02.Scheduling/01.manualScheduling/#1-scheduler-hoat-ong-nhu-the-nao","title":"1. Scheduler Ho\u1ea1t \u0110\u1ed9ng Nh\u01b0 Th\u1ebf N\u00e0o?","text":"<p>Th\u00f4ng th\u01b0\u1eddng, khi b\u1ea1n t\u1ea1o m\u1ed9t pod, b\u1ea1n kh\u00f4ng c\u1ea7n ch\u1ec9 \u0111\u1ecbnh node m\u00e0 pod s\u1ebd ch\u1ea1y. \u0110i\u1ec1u n\u00e0y l\u00e0 nh\u1edd v\u00e0o scheduler \u2013 th\u00e0nh ph\u1ea7n t\u1ef1 \u0111\u1ed9ng ch\u1ecdn node ph\u00f9 h\u1ee3p d\u1ef1a tr\u00ean thu\u1eadt to\u00e1n l\u1eadp l\u1ecbch.</p> <p>M\u1ed7i pod c\u00f3 m\u1ed9t tr\u01b0\u1eddng <code>nodeName</code>, m\u1eb7c \u0111\u1ecbnh kh\u00f4ng \u0111\u01b0\u1ee3c thi\u1ebft l\u1eadp trong manifest. Scheduler s\u1ebd qu\u00e9t qua c\u00e1c pod ch\u01b0a c\u00f3 tr\u01b0\u1eddng n\u00e0y, x\u00e1c \u0111\u1ecbnh node ph\u00f9 h\u1ee3p, v\u00e0 \u0111\u1eb7t gi\u00e1 tr\u1ecb <code>nodeName</code> cho pod (b\u1eb1ng c\u00e1ch t\u1ea1o m\u1ed9t binding object).</p>"},{"location":"k8s/02.Scheduling/01.manualScheduling/#quy-trinh-cua-scheduler","title":"Quy tr\u00ecnh c\u1ee7a scheduler:","text":"<ul> <li>Qu\u00e9t t\u1ea5t c\u1ea3 pod ch\u01b0a c\u00f3 tr\u01b0\u1eddng <code>nodeName</code>.</li> <li>Ch\u1ea1y thu\u1eadt to\u00e1n \u0111\u1ec3 t\u00ecm node th\u00edch h\u1ee3p.</li> <li>\u0110\u1eb7t gi\u00e1 tr\u1ecb <code>nodeName</code> v\u00e0o pod th\u00f4ng qua binding object.</li> </ul>"},{"location":"k8s/02.Scheduling/01.manualScheduling/#2-ieu-gi-xay-ra-neu-khong-co-scheduler","title":"2. \u0110i\u1ec1u G\u00ec X\u1ea3y Ra N\u1ebfu Kh\u00f4ng C\u00f3 Scheduler?","text":"<p>N\u1ebfu kh\u00f4ng c\u00f3 scheduler, c\u00e1c pod s\u1ebd r\u01a1i v\u00e0o tr\u1ea1ng th\u00e1i Pending v\u00e0 kh\u00f4ng \u0111\u01b0\u1ee3c g\u00e1n node \u0111\u1ec3 ch\u1ea1y. L\u00fac n\u00e0y, b\u1ea1n ph\u1ea3i t\u1ef1 l\u1eadp l\u1ecbch cho pod.</p>"},{"location":"k8s/02.Scheduling/01.manualScheduling/#3-cach-thu-cong-e-lap-lich-pod-tren-node","title":"3. C\u00e1ch Th\u1ee7 C\u00f4ng \u0110\u1ec3 L\u1eadp L\u1ecbch Pod Tr\u00ean Node","text":""},{"location":"k8s/02.Scheduling/01.manualScheduling/#cach-1-thiet-lap-nodename-khi-tao-pod","title":"C\u00e1ch 1: Thi\u1ebft L\u1eadp <code>nodeName</code> Khi T\u1ea1o Pod","text":"<p>C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 ch\u1ec9 \u0111\u1ecbnh tr\u01b0\u1eddng <code>nodeName</code> ngay trong file manifest c\u1ee7a pod tr\u01b0\u1edbc khi t\u1ea1o. V\u00ed d\u1ee5:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: mypod\nspec:\n  containers:\n    - name: mycontainer\n      image: nginx\n  nodeName: node-1 # \u0110\u1eb7t t\u00ean node \u1edf \u0111\u00e2y\n</code></pre> <p>Khi \u00e1p d\u1ee5ng manifest n\u00e0y, pod s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o tr\u00ean node c\u1ee5 th\u1ec3 (<code>node-1</code>). L\u01b0u \u00fd: b\u1ea1n ch\u1ec9 c\u00f3 th\u1ec3 thi\u1ebft l\u1eadp <code>nodeName</code> khi t\u1ea1o pod, kh\u00f4ng th\u1ec3 thay \u0111\u1ed5i sau khi pod \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ea1o.</p>"},{"location":"k8s/02.Scheduling/01.manualScheduling/#cach-2-gan-node-cho-pod-a-tao-bang-binding-api","title":"C\u00e1ch 2: G\u00e1n Node Cho Pod \u0110\u00e3 T\u1ea1o B\u1eb1ng Binding API","text":"<p>N\u1ebfu pod \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ea1o m\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c g\u00e1n node, b\u1ea1n kh\u00f4ng th\u1ec3 s\u1eeda tr\u1ef1c ti\u1ebfp tr\u01b0\u1eddng <code>nodeName</code>. Thay v\u00e0o \u0111\u00f3, b\u1ea1n c\u1ea7n t\u1ea1o m\u1ed9t binding object v\u00e0 g\u1eedi POST request t\u1edbi API c\u1ee7a pod, gi\u1ed1ng nh\u01b0 c\u00e1ch scheduler ho\u1ea1t \u0111\u1ed9ng.</p>"},{"location":"k8s/02.Scheduling/01.manualScheduling/#cac-buoc-thuc-hien","title":"C\u00e1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n:","text":"<ol> <li>T\u1ea1o binding object d\u01b0\u1edbi d\u1ea1ng JSON (kh\u00f4ng d\u00f9ng YAML).</li> </ol> <p>V\u00ed d\u1ee5:</p> <pre><code>{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Binding\",\n  \"metadata\": {\n    \"name\": \"mypod\"\n  },\n  \"target\": {\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Node\",\n    \"name\": \"node-1\"\n  }\n}\n</code></pre> <ol> <li>G\u1eedi POST request t\u1edbi endpoint binding c\u1ee7a pod:</li> </ol> <pre><code>POST /api/v1/namespaces/{namespace}/pods/{pod}/binding\nContent-Type: application/json\nBody: binding object \u1edf tr\u00ean\n</code></pre> <p>C\u00e1ch n\u00e0y s\u1ebd g\u00e1n pod t\u1edbi node mong mu\u1ed1n, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 scheduler th\u1ef1c hi\u1ec7n.</p>"},{"location":"k8s/02.Scheduling/01.manualScheduling/#4-tong-ket","title":"4. T\u1ed5ng K\u1ebft","text":"<p>Khi kh\u00f4ng c\u00f3 scheduler:</p> <ul> <li>Pod s\u1ebd \u1edf tr\u1ea1ng th\u00e1i Pending.</li> <li>B\u1ea1n c\u00f3 th\u1ec3 ch\u1ec9 \u0111\u1ecbnh node khi t\u1ea1o pod b\u1eb1ng <code>nodeName</code>.</li> <li>N\u1ebfu pod \u0111\u00e3 t\u1ea1o, d\u00f9ng binding API \u0111\u1ec3 g\u00e1n node cho pod.</li> </ul>"},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/","title":"Labels v\u00e0 Selectors trong Kubernetes: C\u00e1ch Ph\u00e2n Lo\u1ea1i v\u00e0 Qu\u1ea3n L\u00fd \u0110\u1ed1i T\u01b0\u1ee3ng Hi\u1ec7u Qu\u1ea3","text":""},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#labels-va-selectors-trong-kubernetes-cach-phan-loai-va-quan-ly-oi-tuong-hieu-qua","title":"Labels v\u00e0 Selectors trong Kubernetes: C\u00e1ch Ph\u00e2n Lo\u1ea1i v\u00e0 Qu\u1ea3n L\u00fd \u0110\u1ed1i T\u01b0\u1ee3ng Hi\u1ec7u Qu\u1ea3","text":""},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#gioi-thieu-ve-labels-va-selectors","title":"Gi\u1edbi thi\u1ec7u v\u1ec1 Labels v\u00e0 Selectors","text":"<p>Labels v\u00e0 selectors l\u00e0 ph\u01b0\u01a1ng ph\u00e1p ti\u00eau chu\u1ea9n \u0111\u1ec3 nh\u00f3m v\u00e0 l\u1ecdc c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng trong Kubernetes. T\u01b0\u01a1ng t\u1ef1 nh\u01b0 c\u00e1ch ch\u00fang ta g\u1eafn th\u1ebb (tag) cho c\u00e1c video YouTube ho\u1eb7c b\u00e0i blog \u0111\u1ec3 gi\u00fap ng\u01b0\u1eddi d\u00f9ng l\u1ecdc v\u00e0 t\u00ecm n\u1ed9i dung ph\u00f9 h\u1ee3p, labels trong Kubernetes gi\u00fap ch\u00fang ta ph\u00e2n lo\u1ea1i v\u00e0 qu\u1ea3n l\u00fd c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng trong c\u1ee5m (cluster).</p>"},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#khai-niem-co-ban","title":"Kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n","text":"<p>H\u00e3y h\u00ecnh dung m\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n: B\u1ea1n c\u00f3 nhi\u1ec1u lo\u00e0i \u0111\u1ed9ng v\u1eadt kh\u00e1c nhau v\u00e0 mu\u1ed1n ph\u00e2n lo\u1ea1i ch\u00fang theo c\u00e1c ti\u00eau ch\u00ed nh\u01b0:</p> <ul> <li>L\u1edbp (class): \u0111\u1ed9ng v\u1eadt c\u00f3 v\u00fa, chim, b\u00f2 s\u00e1t...</li> <li>Lo\u1ea1i (kind): hoang d\u00e3 hay \u0111\u01b0\u1ee3c thu\u1ea7n h\u00f3a</li> <li>M\u00e0u s\u1eafc (color): xanh, \u0111\u1ecf, v\u00e0ng...</li> </ul> <p>V\u1edbi labels, b\u1ea1n c\u00f3 th\u1ec3 g\u1eafn c\u00e1c thu\u1ed9c t\u00ednh n\u00e0y cho m\u1ed7i lo\u00e0i. V\u00e0 v\u1edbi selectors, b\u1ea1n c\u00f3 th\u1ec3 l\u1ecdc ra:</p> <ul> <li>T\u1ea5t c\u1ea3 \u0111\u1ed9ng v\u1eadt c\u00f3 v\u00fa (<code>class=mammal</code>)</li> <li>T\u1ea5t c\u1ea3 \u0111\u1ed9ng v\u1eadt m\u00e0u xanh (<code>color=green</code>)</li> <li>Ho\u1eb7c k\u1ebft h\u1ee3p: t\u1ea5t c\u1ea3 chim m\u00e0u xanh (<code>class=bird,color=green</code>)</li> </ul>"},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#labels-va-selectors-trong-kubernetes","title":"Labels v\u00e0 Selectors trong Kubernetes","text":"<p>Trong Kubernetes, ch\u00fang ta t\u1ea1o ra nhi\u1ec1u lo\u1ea1i \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c nhau: Pods, Services, ReplicaSets, Deployments, v.v. Khi h\u1ec7 th\u1ed1ng ph\u00e1t tri\u1ec3n, b\u1ea1n c\u00f3 th\u1ec3 c\u00f3 h\u00e0ng tr\u0103m ho\u1eb7c h\u00e0ng ngh\u00ecn \u0111\u1ed1i t\u01b0\u1ee3ng trong cluster. L\u00fac n\u00e0y, vi\u1ec7c qu\u1ea3n l\u00fd v\u00e0 l\u1ecdc c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng tr\u1edf n\u00ean quan tr\u1ecdng.</p>"},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#cach-su-dung-labels-trong-kubernetes","title":"C\u00e1ch s\u1eed d\u1ee5ng Labels trong Kubernetes","text":"<p>Trong file \u0111\u1ecbnh ngh\u0129a c\u1ee7a pod, b\u1ea1n th\u00eam labels d\u01b0\u1edbi ph\u1ea7n <code>metadata</code>:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-app-pod\n  labels:\n    app: app1\n    function: front-end\n    environment: production\nspec:\n  containers:\n    - name: nginx\n      image: nginx\n</code></pre> <p>B\u1ea1n c\u00f3 th\u1ec3 th\u00eam bao nhi\u00eau labels t\u00f9y \u00fd, t\u00f9y thu\u1ed9c v\u00e0o nhu c\u1ea7u ph\u00e2n lo\u1ea1i.</p>"},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#su-dung-selectors-e-loc-oi-tuong","title":"S\u1eed d\u1ee5ng Selectors \u0111\u1ec3 l\u1ecdc \u0111\u1ed1i t\u01b0\u1ee3ng","text":"<p>\u0110\u1ec3 l\u1ecdc pods d\u1ef1a tr\u00ean labels, s\u1eed d\u1ee5ng l\u1ec7nh:</p> <pre><code>kubectl get pods --selector app=app1\n</code></pre> <p>Ho\u1eb7c l\u1ecdc v\u1edbi nhi\u1ec1u ti\u00eau ch\u00ed:</p> <pre><code>kubectl get pods --selector app=app1,environment=production\n</code></pre>"},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#vai-tro-cua-labels-va-selectors-trong-kubernetes","title":"Vai tr\u00f2 c\u1ee7a Labels v\u00e0 Selectors trong Kubernetes","text":""},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#1-trong-replicasets","title":"1. Trong ReplicaSets","text":"<p>ReplicaSets s\u1eed d\u1ee5ng selectors \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh v\u00e0 qu\u1ea3n l\u00fd c\u00e1c pods. Trong file \u0111\u1ecbnh ngh\u0129a ReplicaSet, labels xu\u1ea5t hi\u1ec7n \u1edf hai v\u1ecb tr\u00ed:</p> <pre><code>apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: my-replicaset\n  labels:\n    app: my-app # Labels c\u1ee7a ReplicaSet\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: front-end # \u0110\u00e2y l\u00e0 selector \u0111\u1ec3 t\u00ecm pods\n  template:\n    metadata:\n      labels:\n        app: front-end # Labels c\u1ee7a pods \u0111\u01b0\u1ee3c t\u1ea1o\n    spec:\n      containers:\n        - name: nginx\n          image: nginx\n</code></pre> <p>L\u01b0u \u00fd quan tr\u1ecdng:</p> <ul> <li>Labels \u1edf ph\u1ea7n <code>metadata</code> l\u00e0 c\u1ee7a ReplicaSet</li> <li>Labels \u1edf ph\u1ea7n <code>template.metadata</code> l\u00e0 c\u1ee7a pods \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi ReplicaSet</li> <li>Selector ph\u1ea3i kh\u1edbp v\u1edbi labels c\u1ee7a pods \u0111\u1ec3 ReplicaSet c\u00f3 th\u1ec3 t\u00ecm v\u00e0 qu\u1ea3n l\u00fd pods</li> </ul> <p>\u0110\u00e2y l\u00e0 n\u01a1i ng\u01b0\u1eddi m\u1edbi th\u01b0\u1eddng m\u1eafc l\u1ed7i: nh\u1ea7m l\u1eabn gi\u1eefa labels c\u1ee7a ReplicaSet v\u00e0 labels c\u1ee7a pods template.</p>"},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#2-trong-services","title":"2. Trong Services","text":"<p>Services c\u0169ng s\u1eed d\u1ee5ng selectors \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh pods m\u00e0 ch\u00fang s\u1ebd \u0111i\u1ec1u h\u01b0\u1edbng traffic \u0111\u1ebfn:</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  selector:\n    app: front-end # T\u00ecm pods v\u1edbi label n\u00e0y\n  ports:\n    - port: 80\n      targetPort: 80\n</code></pre>"},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#annotations-khac-biet-voi-labels","title":"Annotations - Kh\u00e1c bi\u1ec7t v\u1edbi Labels","text":"<p>Trong khi labels \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 nh\u00f3m v\u00e0 ch\u1ecdn \u0111\u1ed1i t\u01b0\u1ee3ng, annotations \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ghi l\u1ea1i th\u00f4ng tin b\u1ed5 sung cho m\u1ee5c \u0111\u00edch tham kh\u1ea3o:</p> <ul> <li>Th\u00f4ng tin c\u00f4ng c\u1ee5: t\u00ean, phi\u00ean b\u1ea3n, th\u00f4ng tin build</li> <li>Th\u00f4ng tin li\u00ean h\u1ec7: s\u1ed1 \u0111i\u1ec7n tho\u1ea1i, email IDs</li> <li>Th\u00f4ng tin kh\u00e1c ph\u1ee5c v\u1ee5 cho m\u1ee5c \u0111\u00edch t\u00edch h\u1ee3p</li> </ul> <p>Annotations kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u1ef1a ch\u1ecdn \u0111\u1ed1i t\u01b0\u1ee3ng.</p> <pre><code>metadata:\n  annotations:\n    buildVersion: \"1.3.4\"\n    maintainer: \"team-devops@example.com\"\n    gitRepo: \"https://github.com/example/my-app\"\n</code></pre>"},{"location":"k8s/02.Scheduling/02.LabelsAndSelectors/#tong-ket","title":"T\u1ed5ng k\u1ebft","text":"<p>Labels v\u00e0 selectors l\u00e0 c\u00f4ng c\u1ee5 m\u1ea1nh m\u1ebd trong Kubernetes \u0111\u1ec3:</p> <ul> <li>T\u1ed5 ch\u1ee9c v\u00e0 ph\u00e2n lo\u1ea1i c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng</li> <li>L\u1ecdc v\u00e0 t\u00ecm ki\u1ebfm \u0111\u1ed1i t\u01b0\u1ee3ng theo ti\u00eau ch\u00ed</li> <li>K\u1ebft n\u1ed1i c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng Kubernetes kh\u00e1c nhau (ReplicaSets, Services v\u1edbi Pods)</li> </ul> <p>Hi\u1ec3u v\u00e0 s\u1eed d\u1ee5ng \u0111\u00fang labels v\u00e0 selectors s\u1ebd gi\u00fap b\u1ea1n qu\u1ea3n l\u00fd cluster Kubernetes hi\u1ec7u qu\u1ea3 h\u01a1n, \u0111\u1eb7c bi\u1ec7t khi h\u1ec7 th\u1ed1ng ph\u00e1t tri\u1ec3n l\u1edbn.</p>"},{"location":"lab/","title":"Index","text":""},{"location":"lab/#i-lab-devops-co-ban-beginnerjunior","title":"I. Lab DevOps C\u01a1 B\u1ea3n (Beginner/Junior)","text":""},{"location":"lab/#1-quan-ly-code-va-workflow","title":"1. Qu\u1ea3n l\u00fd code v\u00e0 workflow","text":"<ul> <li>Lab 01: S\u1eed d\u1ee5ng Git c\u01a1 b\u1ea3n (commit, branch, merge, conflict)</li> <li>Lab 02: Qu\u1ea3n l\u00fd repository tr\u00ean GitHub/GitLab, pull request/code review</li> <li>Lab 03: Git hooks t\u1ef1 \u0111\u1ed9ng ki\u1ec3m tra code style, test unit</li> </ul>"},{"location":"lab/#2-cicd-co-ban","title":"2. CI/CD c\u01a1 b\u1ea3n","text":"<ul> <li>Lab 04: X\u00e2y d\u1ef1ng pipeline CI v\u1edbi Jenkins/GitHub Actions (build, test, lint)</li> <li>Lab 05: T\u1ef1 \u0111\u1ed9ng deploy web app l\u00ean VPS (Linux/Ubuntu) qua SSH</li> </ul>"},{"location":"lab/#3-linux-shell","title":"3. Linux &amp; Shell","text":"<ul> <li>Lab 06: Qu\u1ea3n l\u00fd process, user, crontab, log c\u01a1 b\u1ea3n tr\u00ean Linux</li> <li>Lab 07: Vi\u1ebft bash script t\u1ef1 \u0111\u1ed9ng backup file, t\u1ef1 \u0111\u1ed9ng g\u1eedi mail khi c\u00f3 l\u1ed7i</li> </ul>"},{"location":"lab/#ii-lab-devops-trung-cap-mid-level-cloud-automation","title":"II. Lab DevOps Trung C\u1ea5p (Mid-level, Cloud, Automation)","text":""},{"location":"lab/#4-container-hoa","title":"4. Container h\u00f3a","text":"<ul> <li>Lab 08: Docker h\u00f3a \u1ee9ng d\u1ee5ng web (NodeJS/Python/PHP), build/push image l\u00ean Docker Hub</li> <li>Lab 09: S\u1eed d\u1ee5ng Docker Compose qu\u1ea3n l\u00fd nhi\u1ec1u service</li> </ul>"},{"location":"lab/#5-iac-cloud-co-ban","title":"5. IaC &amp; Cloud c\u01a1 b\u1ea3n","text":"<ul> <li>Lab 10: D\u00f9ng Terraform/CloudFormation t\u1ea1o EC2, VPC, S3 tr\u00ean AWS</li> <li>Lab 11: T\u1ef1 \u0111\u1ed9ng h\u00f3a c\u00e0i \u0111\u1eb7t ph\u1ea7n m\u1ec1m b\u1eb1ng Ansible</li> </ul>"},{"location":"lab/#6-cicd-nang-cao","title":"6. CI/CD n\u00e2ng cao","text":"<ul> <li>Lab 12: Pipeline CI/CD t\u1ef1 \u0111\u1ed9ng deploy l\u00ean EC2/ECS/EKS v\u1edbi rollback</li> <li>Lab 13: T\u00edch h\u1ee3p test t\u1ef1 \u0111\u1ed9ng, scan b\u1ea3o m\u1eadt (Trivy/SonarQube)</li> </ul>"},{"location":"lab/#7-monitoring-logging","title":"7. Monitoring, Logging","text":"<ul> <li>Lab 14: C\u00e0i Prometheus + Grafana gi\u00e1m s\u00e1t server, custom app metrics</li> <li>Lab 15: Thu th\u1eadp log v\u1edbi ELK/EFK (Elasticsearch, Fluentd/Filebeat, Kibana)</li> </ul>"},{"location":"lab/#8-quan-ly-secrets-bao-mat","title":"8. Qu\u1ea3n l\u00fd secrets &amp; b\u1ea3o m\u1eadt","text":"<ul> <li>Lab 16: L\u01b0u secrets v\u1edbi AWS Secrets Manager/Parameter Store</li> <li>Lab 17: IAM least privilege, qu\u1ea3n l\u00fd key, audit CloudTrail</li> </ul>"},{"location":"lab/#iii-lab-devops-nang-cao-seniorproduction","title":"III. Lab DevOps N\u00e2ng Cao (Senior/Production)","text":""},{"location":"lab/#9-kubernetes-orchestration","title":"9. Kubernetes &amp; Orchestration","text":"<ul> <li>Lab 18: Deploy app l\u00ean Kubernetes (EKS/minikube), rolling update, autoscaling</li> <li>Lab 19: Helm chart, qu\u1ea3n l\u00fd secret/configmap, service mesh c\u01a1 b\u1ea3n (Linkerd/Istio)</li> <li>Lab 20: Gi\u00e1m s\u00e1t K8s v\u1edbi Prometheus Operator, Alertmanager, log t\u1eadp trung</li> </ul>"},{"location":"lab/#10-cicd-chuyen-sau","title":"10. CI/CD chuy\u00ean s\u00e2u","text":"<ul> <li>Lab 21: Build pipeline \u0111a m\u00f4i tr\u01b0\u1eddng (dev/staging/prod), blue/green deployment, canary release</li> <li>Lab 22: GitOps v\u1edbi ArgoCD/FluxCD, t\u1ef1 \u0111\u1ed9ng ho\u00e1 deploy K8s</li> </ul>"},{"location":"lab/#11-automation-sre","title":"11. Automation &amp; SRE","text":"<ul> <li>Lab 23: T\u1ef1 \u0111\u1ed9ng backup/restore EC2, RDS, S3 (lifecycle policy)</li> <li>Lab 24: Script t\u1ef1 \u0111\u1ed9ng scale resource, cleanup, cost optimization</li> <li>Lab 25: Self-healing infrastructure (auto remediation qua Lambda/SSM)</li> </ul>"},{"location":"lab/#12-security-compliance-nang-cao","title":"12. Security &amp; Compliance n\u00e2ng cao","text":"<ul> <li>Lab 26: Scan, report v\u00e0 auto-remediate l\u1ed7 h\u1ed5ng b\u1ea3o m\u1eadt (Trivy, AWS Inspector)</li> <li>Lab 27: Audit, alert b\u1ea3o m\u1eadt v\u1edbi GuardDuty, Security Hub</li> <li>Lab 28: Policy as Code v\u1edbi OPA, ki\u1ec3m so\u00e1t access \u0111\u1ed9ng</li> </ul>"},{"location":"lab/#13-project-thuc-te-tong-hop","title":"13. Project th\u1ef1c t\u1ebf t\u1ed5ng h\u1ee3p","text":"<ul> <li>Lab 29: X\u00e2y d\u1ef1ng h\u1ec7 th\u1ed1ng CI/CD end-to-end (multi-service, auto rollback, notify Slack/Telegram)</li> <li>Lab 30: Thi\u1ebft k\u1ebf, v\u1eadn h\u00e0nh h\u1ec7 th\u1ed1ng gi\u00e1m s\u00e1t, c\u1ea3nh b\u00e1o, log t\u1eadp trung production</li> <li>Lab 31: X\u1eed l\u00fd s\u1ef1 c\u1ed1 th\u1ef1c t\u1ebf: downtime, scaling, cost alert, security incident, migration</li> </ul>"},{"location":"lab/#iv-lab-nang-cao-danh-cho-senior-lead-devops","title":"IV. Lab n\u00e2ng cao d\u00e0nh cho Senior, Lead DevOps","text":""},{"location":"lab/#14-multi-cloud-hybrid-cloud","title":"14. Multi-cloud &amp; Hybrid Cloud","text":"<ul> <li>Lab 32: Deploy \u1ee9ng d\u1ee5ng \u0111a cloud (AWS, GCP, Azure), k\u1ebft n\u1ed1i hybrid VPN</li> <li>Lab 33: Migration legacy l\u00ean cloud (database, app, storage)</li> </ul>"},{"location":"lab/#15-chaos-engineering-reliability","title":"15. Chaos Engineering &amp; Reliability","text":"<ul> <li>Lab 34: M\u00f4 ph\u1ecfng l\u1ed7i, th\u1eed resilience h\u1ec7 th\u1ed1ng v\u1edbi chaos-mesh/chaos toolkit</li> <li>Lab 35: Thi\u1ebft l\u1eadp DR (Disaster Recovery), RTO/RPO, test backup &amp; restore th\u1ef1c t\u1ebf</li> </ul>"},{"location":"lab/#16-cost-finops","title":"16. Cost &amp; FinOps","text":"<ul> <li>Lab 36: T\u1ed1i \u01b0u chi ph\u00ed cloud, vi\u1ebft b\u00e1o c\u00e1o cost t\u1ef1 \u0111\u1ed9ng, thi\u1ebft l\u1eadp c\u1ea3nh b\u00e1o budget</li> </ul> <p>L\u1ed9 tr\u00ecnh tr\u00ean \u0111\u1ee7 \u0111\u1ec3 b\u1ea1n tr\u01b0\u1edfng th\u00e0nh t\u1eeb fresher t\u1edbi senior DevOps th\u1ef1c chi\u1ebfn!</p>"},{"location":"linux/","title":"Index","text":""},{"location":"linux/#module-1-understanding-linux-concepts","title":"Module 1 \u2013 Understanding Linux Concepts","text":"<ul> <li>What is Operating System?</li> <li>What is Linux?</li> <li>Everyday use of Linux</li> <li>Unix vs. Linux</li> <li>Linux flavors</li> <li>Linux vs. Windows</li> </ul>"},{"location":"linux/#module-2-download-install-and-configure","title":"Module 2 \u2013 Download, Install and Configure","text":"<ul> <li>What is Oracle Virtual Box?</li> <li>Downloading and Installing Oracle Virtual Box</li> <li>Downloading and Installing Oracle Virtual Box</li> <li>Creating virtual machine</li> <li>Download and Install VMWare Player (workstation)</li> <li>CentOS vs. CentOS Stream</li> <li>Different way to install Linux</li> <li>Downloading and Installing Linux (CentOS)</li> <li>Redhat Linux installation (Optional)</li> <li>Ubuntu Linux Installation (Optional)</li> <li>Virtual Machine Management on vmware - link 2</li> <li>Virtual Machine Management on virtual box - link 2 </li> <li>Take a snapshot of VM on virtual box</li> <li>Take a snapshot of VM on vmware ws </li> <li>Keyboard Keys Used in Linux</li> <li>Linux Desktop (GUI)</li> </ul>"},{"location":"linux/#module-3-system-access-and-file-system","title":"Module 3 \u2013 System Access and File System","text":"<ul> <li>Important Things to Remember in Linux</li> <li>Accessing Linux system</li> <li>Download and install Putty</li> <li>Connect Linux VM via Putty</li> <li>Introduction to File System</li> <li>File system structure description</li> <li>File system navigation commands</li> <li>File System Paths</li> <li>Directory listing overview</li> <li>Creating Files and Directories</li> <li>Finding Files and Directories (find, locate)</li> <li>Changing Password</li> <li>Wildcards</li> <li>Combining and Splitting Files (cat and cut)</li> <li>Soft and Hard Links (ln)</li> <li>Quiz, Homework and Handouts</li> </ul>"},{"location":"linux/#module-4-linux-fundamentals","title":"Module 4 \u2013 Linux Fundamentals","text":"<ul> <li>Commands Syntax</li> <li>File Permissions (chmod)</li> <li>File Ownership (chown, chgrp)</li> <li>Getting Help (man, whatis etc.)</li> <li>TAB completion and up arrow keys</li> <li>Adding text to file</li> <li>Pipes</li> <li>File Maintenance Commands</li> <li>File Display Commands</li> <li>Filters / Text Processing Commands (cut, sort, grep, awk, uniq, wc)</li> <li>Compare Files (diff, cmp)</li> <li>Compress and Un-compress files/directories (tar, gzip, gunzip)</li> <li>Combining and Splitting Files</li> <li>Linux vs. Windows Commands</li> <li>Quiz, Homework and Handouts</li> </ul>"},{"location":"linux/#module-5-system-administration","title":"Module 5 \u2013 System Administration","text":"<ul> <li>Linux File Editors (vi text editor)</li> <li>sed Command</li> <li>User account management</li> <li>Switch users and Sudo access</li> <li>Monitor users</li> <li>Talking to users (users, wall, write)</li> <li>Linux Directory Service - Account Authentication</li> <li>Difference between Active Directory, LDAP, IDM, WinBIND, OpenLDAP etc.</li> <li>System utility commands (date, uptime, hostname, which, cal, bc etc.)</li> <li>Processes and schedules (systemctl, ps, top, kill, crontab and at)</li> <li>Process Management</li> <li>System Monitoring Commands (top, df, dmesg, iostat 1, netstat, free etc.)</li> <li>OS Maintenance Commands (shutdown, reboot, halt, init etc.)</li> <li>Changing System Hostname (hostnamectl)</li> <li>Finding System Information (uname, cat /etc/redhat-release, cat /etc/rel, dmidecode)</li> <li>System Architecture (arch)</li> <li>Terminal control keys</li> <li>Terminal Commands (clear, exit, script)</li> <li>Recover root Password (single user mode)</li> <li>SOS Report</li> <li>Quiz, Homework and Handouts</li> </ul>"},{"location":"linux/#module-6-shell-scripting","title":"Module 6 \u2013 Shell Scripting","text":"<ul> <li>Linux Kernel</li> <li>What is a Shell?</li> <li>Types of Shells</li> <li>Shell scripting</li> <li>Basic Shell scripts</li> <li>If-then scripts</li> <li>For loop scripts</li> <li>do-while scripts</li> <li>Case statement scripts</li> <li>Aliases</li> <li>Shell History</li> <li>Command history</li> </ul>"},{"location":"linux/#module-7-networking-servers-and-system-updates","title":"Module 7 \u2013 Networking, Servers and System Updates","text":"<ul> <li>Enabling internet in Linux VM</li> <li>Network Components</li> <li>Network files and commands (ping, ifconfig, netstat, tcpdump, networking config files)</li> <li>NIC Information (ethtool)</li> <li>NIC or Port Bonding</li> <li>Downloading Files or Apps (wget)</li> <li>curl and ping Commands</li> <li>File Transfer Commands</li> <li>System updates and repositories (rpm and yum)</li> <li>System Upgrade/Patch Management</li> <li>Create Local Repository from CD/DVD</li> <li>Advance Package Management</li> <li>SSH and Telnet</li> <li>DNS</li> <li>Hostname and IP Lookup (nslookup and dig)</li> <li>NTP</li> <li>chronyd (Newer version of NTP)</li> <li>Sendmail</li> <li>Apache Web Server</li> <li>Central Logger (rsyslogd)</li> <li>Securing Linux Machine (OS Hardening)</li> <li>OpenLDAP Installation</li> <li>Quiz, Homework and Handouts</li> </ul>"},{"location":"linux/#module-8-disk-management-and-run-levels","title":"Module 8 \u2013 Disk Management and Run Levels","text":"<ul> <li>System run levels</li> <li>Linux Boot Process</li> <li>Message of the Day</li> <li>Disk partition (df, fdisk, etc.)</li> <li>Storage</li> <li>Logical Volume Management (LVM)</li> <li>LVM Configuration during Installation</li> <li>Add Disk and Create Standard Partition</li> <li>Add Disk and Create LVM Partition</li> <li>LVM Configuration during Installation</li> <li>Add Virtual Disk and Create New LVM Partition (pvcreate, vgcreate, lvcreate,)</li> <li>Extend Disk using LVM</li> <li>Adding Swap Space</li> <li>RAID</li> <li>Quiz, Homework and Handouts</li> </ul>"},{"location":"linux/#cac-module-bo-sung-cho-devopsaws","title":"C\u00c1C MODULE B\u1ed4 SUNG CHO DEVOPS/AWS:","text":""},{"location":"linux/#module-9-advanced-system-administration","title":"Module 9 \u2013 Advanced System Administration","text":"<ul> <li>systemd Deep Dive</li> <li>Understanding systemd architecture</li> <li>Creating custom systemd services</li> <li>Managing service dependencies</li> <li>systemctl advanced commands</li> <li>Target management</li> <li>Advanced Process Management</li> <li>Process priorities (nice, renice)</li> <li>Job control</li> <li>Background processes</li> <li>Signal handling</li> <li>System Performance Tuning</li> <li>CPU performance monitoring</li> <li>Memory optimization</li> <li>I/O performance tuning</li> <li>Kernel parameter tuning (/proc/sys)</li> </ul>"},{"location":"linux/#module-10-advanced-text-processing-scripting","title":"Module 10 \u2013 Advanced Text Processing &amp; Scripting","text":"<ul> <li>Advanced Shell Scripting</li> <li>Functions and libraries</li> <li>Arrays and associative arrays</li> <li>Advanced parameter handling</li> <li>Error handling and debugging</li> <li>Script optimization</li> <li>Regular Expressions</li> <li>Basic regex patterns</li> <li>Extended regex</li> <li>Using regex with grep, sed, awk</li> <li>Advanced Text Processing</li> <li>awk programming</li> <li>sed advanced patterns</li> <li>Text manipulation with Python/Bash</li> </ul>"},{"location":"linux/#module-11-security-system-hardening","title":"Module 11 \u2013 Security &amp; System Hardening","text":"<ul> <li>Linux Security Fundamentals</li> <li>File system security</li> <li>User and group security</li> <li>Password policies</li> <li>sudo configuration</li> <li>Firewall Management</li> <li>iptables configuration</li> <li>firewalld management</li> <li>Network security rules</li> <li>SELinux/AppArmor</li> <li>Mandatory Access Control</li> <li>SELinux policies</li> <li>Troubleshooting security contexts</li> <li>SSH Security</li> <li>SSH key management</li> <li>SSH configuration hardening</li> <li>SSH tunneling</li> </ul>"},{"location":"linux/#module-12-advanced-networking","title":"Module 12 \u2013 Advanced Networking","text":"<ul> <li>Network Configuration</li> <li>Static IP configuration</li> <li>DHCP client configuration</li> <li>Network bonding and teaming</li> <li>VLAN configuration</li> <li>Network Troubleshooting</li> <li>Advanced network diagnostics</li> <li>Packet analysis with tcpdump</li> <li>Network performance monitoring</li> <li>DNS troubleshooting</li> <li>Network Services</li> <li>HTTP/HTTPS servers</li> <li>FTP services</li> <li>Mail services</li> <li>Network time synchronization</li> </ul>"},{"location":"linux/#module-13-log-management-monitoring","title":"Module 13 \u2013 Log Management &amp; Monitoring","text":"<ul> <li>Advanced Logging</li> <li>rsyslog configuration</li> <li>Log rotation (logrotate)</li> <li>journalctl advanced usage</li> <li>Remote logging</li> <li>System Monitoring</li> <li>Performance monitoring tools</li> <li>Real-time monitoring</li> <li>Historical data analysis</li> <li>Alert configuration</li> <li>Log Analysis</li> <li>Log parsing techniques</li> <li>Automated log analysis</li> <li>Log aggregation</li> </ul>"},{"location":"linux/#module-14-container-ready-linux-skills","title":"Module 14 \u2013 Container-Ready Linux Skills","text":"<ul> <li>Linux Namespaces</li> <li>Understanding namespaces</li> <li>PID namespaces</li> <li>Network namespaces</li> <li>Mount namespaces</li> <li>Control Groups (cgroups)</li> <li>Resource limitation</li> <li>cgroups v1 vs v2</li> <li>Memory and CPU control</li> <li>Container Fundamentals</li> <li>Understanding containers vs VMs</li> <li>Container runtime basics</li> <li>Linux capabilities</li> </ul>"},{"location":"linux/#module-15-automation-configuration-management","title":"Module 15 \u2013 Automation &amp; Configuration Management","text":"<ul> <li>Advanced Cron Jobs</li> <li>Complex scheduling</li> <li>Cron best practices</li> <li>at and batch commands</li> <li>System Automation</li> <li>Automated system tasks</li> <li>Health check scripts</li> <li>System maintenance automation</li> <li>Configuration Management Basics</li> <li>Configuration file management</li> <li>System configuration templates</li> <li>Environment-specific configurations</li> </ul>"},{"location":"linux/#module-16-backup-recovery","title":"Module 16 \u2013 Backup &amp; Recovery","text":"<ul> <li>Backup Strategies</li> <li>Full, incremental, differential backups</li> <li>rsync for backups</li> <li>tar advanced options</li> <li>System Recovery</li> <li>Boot troubleshooting</li> <li>File system recovery</li> <li>Data recovery techniques</li> <li>Disaster Recovery Planning</li> <li>Recovery procedures</li> <li>System restoration</li> <li>Business continuity</li> </ul>"},{"location":"linux/LPIC-1/01/","title":"01","text":"<p>.</p>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/","title":"00.What is Operating System","text":""},{"location":"linux/Module1/00.What%20is%20Operating%20System/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>H\u1ec7 \u0111i\u1ec1u h\u00e0nh (Operating System - OS) l\u00e0 m\u1ed9t lo\u1ea1i ph\u1ea7n m\u1ec1m h\u1ec7 th\u1ed1ng \u0111\u00f3ng vai tr\u00f2 nh\u01b0 c\u1ea7u n\u1ed1i gi\u1eefa ph\u1ea7n c\u1ee9ng m\u00e1y t\u00ednh v\u00e0 ng\u01b0\u1eddi d\u00f9ng. N\u00f3 qu\u1ea3n l\u00fd t\u00e0i nguy\u00ean ph\u1ea7n c\u1ee9ng v\u00e0 cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 c\u1ea7n thi\u1ebft cho c\u00e1c \u1ee9ng d\u1ee5ng ph\u1ea7n m\u1ec1m, cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng v\u1eadn h\u00e0nh thi\u1ebft b\u1ecb c\u1ee7a h\u1ecd m\u1ed9t c\u00e1ch m\u01b0\u1ee3t m\u00e0 v\u00e0 hi\u1ec7u qu\u1ea3.</p>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#chuc-nang-chinh-cua-he-ieu-hanh","title":"Ch\u1ee9c n\u0103ng ch\u00ednh c\u1ee7a H\u1ec7 \u0111i\u1ec1u h\u00e0nh","text":""},{"location":"linux/Module1/00.What%20is%20Operating%20System/#1-quan-ly-tai-nguyen-phan-cung","title":"1. Qu\u1ea3n l\u00fd t\u00e0i nguy\u00ean ph\u1ea7n c\u1ee9ng","text":"<ul> <li>Qu\u1ea3n l\u00fd CPU: Ph\u00e2n b\u1ed5 th\u1eddi gian x\u1eed l\u00fd cho c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh</li> <li>Qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb: \u0110i\u1ec1u ph\u1ed1i vi\u1ec7c s\u1eed d\u1ee5ng RAM v\u00e0 b\u1ed9 nh\u1edb \u1ea3o</li> <li>Qu\u1ea3n l\u00fd thi\u1ebft b\u1ecb l\u01b0u tr\u1eef: Ki\u1ec3m so\u00e1t \u1ed5 c\u1ee9ng, SSD v\u00e0 c\u00e1c thi\u1ebft b\u1ecb l\u01b0u tr\u1eef kh\u00e1c</li> <li>Qu\u1ea3n l\u00fd thi\u1ebft b\u1ecb ngo\u1ea1i vi: \u0110i\u1ec1u khi\u1ec3n m\u00e1y in, chu\u1ed9t, b\u00e0n ph\u00edm, v.v.</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#2-giao-dien-nguoi-dung","title":"2. Giao di\u1ec7n ng\u01b0\u1eddi d\u00f9ng","text":"<ul> <li>Cung c\u1ea5p GUI (Graphical User Interface) ho\u1eb7c CLI (Command Line Interface)</li> <li>Cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng t\u01b0\u01a1ng t\u00e1c v\u1edbi m\u00e1y t\u00ednh d\u1ec5 d\u00e0ng</li> <li>Qu\u1ea3n l\u00fd desktop, windows, icons, v\u00e0 menus</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#3-quan-ly-file-va-thu-muc","title":"3. Qu\u1ea3n l\u00fd file v\u00e0 th\u01b0 m\u1ee5c","text":"<ul> <li>T\u1ed5 ch\u1ee9c v\u00e0 qu\u1ea3n l\u00fd h\u1ec7 th\u1ed1ng file</li> <li>Cung c\u1ea5p quy\u1ec1n truy c\u1eadp v\u00e0 b\u1ea3o m\u1eadt file</li> <li>H\u1ed7 tr\u1ee3 c\u00e1c thao t\u00e1c copy, move, delete, rename</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#4-quan-ly-tien-trinh-process-management","title":"4. Qu\u1ea3n l\u00fd ti\u1ebfn tr\u00ecnh (Process Management)","text":"<ul> <li>Kh\u1edfi t\u1ea1o, th\u1ef1c thi v\u00e0 k\u1ebft th\u00fac c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh</li> <li>Multitasking: Cho ph\u00e9p nhi\u1ec1u ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y \u0111\u1ed3ng th\u1eddi</li> <li>Scheduling: L\u00ean l\u1ecbch th\u1ef1c thi c\u00e1c ti\u1ebfn tr\u00ecnh</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#5-bao-mat-va-kiem-soat-truy-cap","title":"5. B\u1ea3o m\u1eadt v\u00e0 ki\u1ec3m so\u00e1t truy c\u1eadp","text":"<ul> <li>X\u00e1c th\u1ef1c ng\u01b0\u1eddi d\u00f9ng (login/password)</li> <li>Ph\u00e2n quy\u1ec1n truy c\u1eadp t\u00e0i nguy\u00ean</li> <li>B\u1ea3o v\u1ec7 d\u1eef li\u1ec7u kh\u1ecfi truy c\u1eadp tr\u00e1i ph\u00e9p</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#cac-thanh-phan-chinh","title":"C\u00e1c th\u00e0nh ph\u1ea7n ch\u00ednh","text":""},{"location":"linux/Module1/00.What%20is%20Operating%20System/#1-kernel-nhan","title":"1. Kernel (Nh\u00e2n)","text":"<ul> <li>Th\u00e0nh ph\u1ea7n c\u1ed1t l\u00f5i c\u1ee7a h\u1ec7 \u0111i\u1ec1u h\u00e0nh</li> <li>Qu\u1ea3n l\u00fd tr\u1ef1c ti\u1ebfp ph\u1ea7n c\u1ee9ng</li> <li>Cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 c\u01a1 b\u1ea3n cho c\u00e1c \u1ee9ng d\u1ee5ng</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#2-device-drivers","title":"2. Device Drivers","text":"<ul> <li>Ph\u1ea7n m\u1ec1m \u0111i\u1ec1u khi\u1ec3n thi\u1ebft b\u1ecb ph\u1ea7n c\u1ee9ng c\u1ee5 th\u1ec3</li> <li>Cho ph\u00e9p OS giao ti\u1ebfp v\u1edbi c\u00e1c thi\u1ebft b\u1ecb kh\u00e1c nhau</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#3-shell","title":"3. Shell","text":"<ul> <li>Giao di\u1ec7n d\u00f2ng l\u1ec7nh</li> <li>Cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng t\u01b0\u01a1ng t\u00e1c v\u1edbi h\u1ec7 \u0111i\u1ec1u h\u00e0nh</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#4-file-system","title":"4. File System","text":"<ul> <li>Qu\u1ea3n l\u00fd c\u00e1ch d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef v\u00e0 truy xu\u1ea5t</li> <li>V\u00ed d\u1ee5: NTFS, FAT32, ext4</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#cac-loai-he-ieu-hanh","title":"C\u00e1c lo\u1ea1i H\u1ec7 \u0111i\u1ec1u h\u00e0nh","text":""},{"location":"linux/Module1/00.What%20is%20Operating%20System/#1-theo-cach-su-dung","title":"1. Theo c\u00e1ch s\u1eed d\u1ee5ng","text":"<ul> <li>Desktop OS: Windows, macOS, Linux distributions</li> <li>Mobile OS: Android, iOS</li> <li>Server OS: Windows Server, Linux Server</li> <li>Embedded OS: Cho c\u00e1c thi\u1ebft b\u1ecb nh\u00fang</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#2-theo-kien-truc","title":"2. Theo ki\u1ebfn tr\u00fac","text":"<ul> <li>Single-user: Ch\u1ec9 m\u1ed9t ng\u01b0\u1eddi d\u00f9ng t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m</li> <li>Multi-user: Nhi\u1ec1u ng\u01b0\u1eddi d\u00f9ng \u0111\u1ed3ng th\u1eddi</li> <li>Single-tasking: Ch\u1ec9 ch\u1ea1y m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh</li> <li>Multi-tasking: Ch\u1ea1y nhi\u1ec1u ch\u01b0\u01a1ng tr\u00ecnh \u0111\u1ed3ng th\u1eddi</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#3-theo-cach-xu-ly","title":"3. Theo c\u00e1ch x\u1eed l\u00fd","text":"<ul> <li>Batch Processing: X\u1eed l\u00fd theo l\u00f4</li> <li>Real-time: X\u1eed l\u00fd th\u1eddi gian th\u1ef1c</li> <li>Time-sharing: Chia s\u1ebb th\u1eddi gian</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#vi-du-cac-he-ieu-hanh-pho-bien","title":"V\u00ed d\u1ee5 c\u00e1c H\u1ec7 \u0111i\u1ec1u h\u00e0nh ph\u1ed5 bi\u1ebfn","text":""},{"location":"linux/Module1/00.What%20is%20Operating%20System/#1-microsoft-windows","title":"1. Microsoft Windows","text":"<ul> <li>H\u1ec7 \u0111i\u1ec1u h\u00e0nh ph\u1ed5 bi\u1ebfn nh\u1ea5t cho PC</li> <li>Giao di\u1ec7n \u0111\u1ed3 h\u1ecda th\u00e2n thi\u1ec7n</li> <li>H\u1ed7 tr\u1ee3 nhi\u1ec1u ph\u1ea7n m\u1ec1m \u1ee9ng d\u1ee5ng</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#2-macos-apple","title":"2. macOS (Apple)","text":"<ul> <li>D\u00e0nh cho m\u00e1y t\u00ednh Mac</li> <li>Thi\u1ebft k\u1ebf tinh t\u1ebf, b\u1ea3o m\u1eadt cao</li> <li>T\u00edch h\u1ee3p t\u1ed1t v\u1edbi h\u1ec7 sinh th\u00e1i Apple</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#3-linux","title":"3. Linux","text":"<ul> <li>M\u00e3 ngu\u1ed3n m\u1edf, mi\u1ec5n ph\u00ed</li> <li>Nhi\u1ec1u b\u1ea3n ph\u00e2n ph\u1ed1i (Ubuntu, CentOS, Debian)</li> <li>Ph\u1ed5 bi\u1ebfn cho servers v\u00e0 developers</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#4-android-ios","title":"4. Android &amp; iOS","text":"<ul> <li>H\u1ec7 \u0111i\u1ec1u h\u00e0nh di \u0111\u1ed9ng</li> <li>Android (Google) - m\u00e3 ngu\u1ed3n m\u1edf</li> <li>iOS (Apple) - \u0111\u00f3ng, b\u1ea3o m\u1eadt cao</li> </ul>"},{"location":"linux/Module1/00.What%20is%20Operating%20System/#tam-quan-trong","title":"T\u1ea7m quan tr\u1ecdng","text":"<p>H\u1ec7 \u0111i\u1ec1u h\u00e0nh l\u00e0 th\u00e0nh ph\u1ea7n kh\u00f4ng th\u1ec3 thi\u1ebfu c\u1ee7a b\u1ea5t k\u1ef3 h\u1ec7 th\u1ed1ng m\u00e1y t\u00ednh n\u00e0o v\u00ec:</p> <ol> <li>Qu\u1ea3n l\u00fd t\u00e0i nguy\u00ean hi\u1ec7u qu\u1ea3: \u0110\u1ea3m b\u1ea3o ph\u1ea7n c\u1ee9ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng t\u1ed1i \u01b0u</li> <li>Cung c\u1ea5p n\u1ec1n t\u1ea3ng: Cho c\u00e1c \u1ee9ng d\u1ee5ng ch\u1ea1y tr\u00ean \u0111\u00f3</li> <li>B\u1ea3o m\u1eadt: B\u1ea3o v\u1ec7 d\u1eef li\u1ec7u v\u00e0 h\u1ec7 th\u1ed1ng</li> <li>Giao di\u1ec7n ng\u01b0\u1eddi d\u00f9ng: Gi\u00fap ng\u01b0\u1eddi d\u00f9ng t\u01b0\u01a1ng t\u00e1c d\u1ec5 d\u00e0ng</li> <li>\u1ed4n \u0111\u1ecbnh h\u1ec7 th\u1ed1ng: \u0110\u1ea3m b\u1ea3o m\u00e1y t\u00ednh ho\u1ea1t \u0111\u1ed9ng \u1ed5n \u0111\u1ecbnh</li> </ol> <p>T\u00f3m l\u1ea1i, h\u1ec7 \u0111i\u1ec1u h\u00e0nh l\u00e0 \"b\u1ed9 n\u00e3o\" c\u1ee7a m\u00e1y t\u00ednh, \u0111i\u1ec1u ph\u1ed1i m\u1ecdi ho\u1ea1t \u0111\u1ed9ng v\u00e0 l\u00e0m cho vi\u1ec7c s\u1eed d\u1ee5ng m\u00e1y t\u00ednh tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n v\u00e0 hi\u1ec7u qu\u1ea3.</p>"},{"location":"linux/Module1/01.What%20is%20Linux/","title":"Linux l\u00e0 g\u00ec? - Gi\u1edbi thi\u1ec7u c\u01a1 b\u1ea3n","text":""},{"location":"linux/Module1/01.What%20is%20Linux/#linux-la-gi-gioi-thieu-co-ban","title":"Linux l\u00e0 g\u00ec? - Gi\u1edbi thi\u1ec7u c\u01a1 b\u1ea3n","text":""},{"location":"linux/Module1/01.What%20is%20Linux/#linux-la-gi","title":"Linux l\u00e0 g\u00ec?","text":"<p>Linux l\u00e0 m\u1ed9t h\u1ec7 \u0111i\u1ec1u h\u00e0nh (Operating System) m\u00e3 ngu\u1ed3n m\u1edf v\u00e0 mi\u1ec5n ph\u00ed, \u0111\u01b0\u1ee3c ph\u00e1t tri\u1ec3n d\u1ef1a tr\u00ean Unix. Linux \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1edfi Linus Torvalds v\u00e0o n\u0103m 1991.</p>"},{"location":"linux/Module1/01.What%20is%20Linux/#inh-nghia-on-gian","title":"\u0110\u1ecbnh ngh\u0129a \u0111\u01a1n gi\u1ea3n:","text":"<pre><code>Linux = H\u1ec7 \u0111i\u1ec1u h\u00e0nh qu\u1ea3n l\u00fd m\u00e1y t\u00ednh c\u1ee7a b\u1ea1n\n- Gi\u1ed1ng nh\u01b0 Windows hay macOS\n- Nh\u01b0ng m\u00e3 ngu\u1ed3n m\u1edf v\u00e0 mi\u1ec5n ph\u00ed\n- M\u1ea1nh m\u1ebd, b\u1ea3o m\u1eadt v\u00e0 \u1ed5n \u0111\u1ecbnh\n</code></pre>"},{"location":"linux/Module1/01.What%20is%20Linux/#thanh-phan-chinh","title":"Th\u00e0nh ph\u1ea7n ch\u00ednh","text":""},{"location":"linux/Module1/01.What%20is%20Linux/#1-linux-kernel-nhan","title":"1. Linux Kernel (Nh\u00e2n)","text":"<ul> <li>Ph\u1ea7n c\u1ed1t l\u00f5i c\u1ee7a h\u1ec7 \u0111i\u1ec1u h\u00e0nh</li> <li>Qu\u1ea3n l\u00fd ph\u1ea7n c\u1ee9ng: CPU, RAM, \u1ed5 c\u1ee9ng</li> <li>\u0110i\u1ec1u ph\u1ed1i c\u00e1c ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y</li> </ul>"},{"location":"linux/Module1/01.What%20is%20Linux/#2-gnu-tools","title":"2. GNU Tools","text":"<ul> <li>B\u1ed9 c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft: ls, cp, mv, rm</li> <li>Tr\u00ecnh bi\u00ean d\u1ecbch, text editor</li> <li>Shell (command line)</li> </ul>"},{"location":"linux/Module1/01.What%20is%20Linux/#3-applications","title":"3. Applications","text":"<ul> <li>Tr\u00ecnh duy\u1ec7t web, office, games</li> <li>Development tools</li> <li>Server software</li> </ul>"},{"location":"linux/Module1/01.What%20is%20Linux/#ac-iem-noi-bat","title":"\u0110\u1eb7c \u0111i\u1ec3m n\u1ed5i b\u1eadt","text":""},{"location":"linux/Module1/01.What%20is%20Linux/#uu-iem","title":"\u2705 \u01afu \u0111i\u1ec3m:","text":"<pre><code>\u2713 Mi\u1ec5n ph\u00ed 100%\n\u2713 M\u00e3 ngu\u1ed3n m\u1edf\n\u2713 B\u1ea3o m\u1eadt cao\n\u2713 \u1ed4n \u0111\u1ecbnh (uptime t\u00ednh b\u1eb1ng n\u0103m)\n\u2713 Hi\u1ec7u su\u1ea5t t\u1ed1t\n\u2713 T\u00f9y bi\u1ebfn cao\n\u2713 Nhi\u1ec1u distro l\u1ef1a ch\u1ecdn\n</code></pre>"},{"location":"linux/Module1/01.What%20is%20Linux/#nhuoc-iem","title":"\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<pre><code>\u2717 Learning curve cao cho ng\u01b0\u1eddi m\u1edbi\n\u2717 \u00cdt game native\n\u2717 M\u1ed9t s\u1ed1 software chuy\u00ean d\u1ee5ng kh\u00f4ng c\u00f3\n\u2717 Hardware support \u0111\u00f4i khi ch\u1eadm\n</code></pre>"},{"location":"linux/Module1/01.What%20is%20Linux/#tai-sao-linux-quan-trong","title":"T\u1ea1i sao Linux quan tr\u1ecdng?","text":""},{"location":"linux/Module1/01.What%20is%20Linux/#thong-tri-thi-truong","title":"Th\u1ed1ng tr\u1ecb th\u1ecb tr\u01b0\u1eddng:","text":"<ul> <li>96% web servers ch\u1ea1y Linux</li> <li>100% top 500 supercomputers</li> <li>85% smartphones (Android)</li> <li>75% cloud workloads</li> </ul>"},{"location":"linux/Module1/01.What%20is%20Linux/#ung-dung-thuc-te","title":"\u1ee8ng d\u1ee5ng th\u1ef1c t\u1ebf:","text":"<pre><code>\ud83c\udf10 Web Servers: Apache, Nginx\n\u2601\ufe0f  Cloud: AWS, Google Cloud, Azure  \n\ud83d\udcf1 Mobile: Android phones\n\ud83c\udfe0 IoT: Smart devices, routers\n\ud83d\ude97 Automotive: Car infotainment\n\ud83c\udfe2 Enterprise: Banks, governments\n</code></pre>"},{"location":"linux/Module1/01.What%20is%20Linux/#ai-su-dung-linux","title":"Ai s\u1eed d\u1ee5ng Linux?","text":""},{"location":"linux/Module1/01.What%20is%20Linux/#ca-nhan","title":"C\u00e1 nh\u00e2n:","text":"<ul> <li>Developers, system admins</li> <li>Security professionals</li> <li>Tech enthusiasts</li> <li>Students learning programming</li> </ul>"},{"location":"linux/Module1/01.What%20is%20Linux/#doanh-nghiep","title":"Doanh nghi\u1ec7p:","text":"<ul> <li>Google, Facebook, Amazon</li> <li>Banks v\u00e0 financial institutions</li> <li>Government agencies</li> <li>Universities v\u00e0 research centers</li> </ul>"},{"location":"linux/Module1/01.What%20is%20Linux/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>Linux l\u00e0 foundation c\u1ee7a internet v\u00e0 cloud computing hi\u1ec7n \u0111\u1ea1i. H\u1ecdc Linux = m\u1edf c\u1eeda career trong:</p> <pre><code>\u2022 DevOps Engineering\n\u2022 Cloud Architecture  \n\u2022 System Administration\n\u2022 Cybersecurity\n\u2022 Software Development\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/","title":"Everyday use of Linux - S\u1eed d\u1ee5ng Linux h\u00e0ng ng\u00e0y","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#everyday-use-of-linux-su-dung-linux-hang-ngay","title":"Everyday use of Linux - S\u1eed d\u1ee5ng Linux h\u00e0ng ng\u00e0y","text":"<p>Module 1: Understanding Linux Concepts - Lesson 2</p>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#linux-trong-cuoc-song-hang-ngay","title":"Linux trong cu\u1ed9c s\u1ed1ng h\u00e0ng ng\u00e0y","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 \u0111ang s\u1eed d\u1ee5ng Linux m\u00e0 kh\u00f4ng bi\u1ebft! Linux c\u00f3 m\u1eb7t kh\u1eafp n\u01a1i trong cu\u1ed9c s\u1ed1ng h\u00e0ng ng\u00e0y c\u1ee7a ch\u00fang ta.</p>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#ien-thoai-thong-minh","title":"\ud83d\udcf1 \u0110i\u1ec7n tho\u1ea1i th\u00f4ng minh","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#android-linux","title":"Android = Linux","text":"<pre><code>Android phones = Linux kernel + Android framework\n- Samsung Galaxy\n- Google Pixel  \n- Xiaomi, Huawei, OnePlus\n- 85% smartphones worldwide\n</code></pre> <p>V\u00ed d\u1ee5 h\u00e0ng ng\u00e0y: - G\u1ecdi \u0111i\u1ec7n, nh\u1eafn tin - Ch\u1ee5p \u1ea3nh, quay video - L\u01b0\u1edbt Facebook, Instagram - Xem YouTube, Netflix</p>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#internet-va-web","title":"\ud83c\udf10 Internet v\u00e0 Web","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#websites-ban-truy-cap-moi-ngay","title":"Websites b\u1ea1n truy c\u1eadp m\u1ed7i ng\u00e0y:","text":"<pre><code>Google.com \u2192 Linux servers\nFacebook.com \u2192 Linux servers  \nYouTube.com \u2192 Linux servers\nAmazon.com \u2192 Linux servers\nNetflix.com \u2192 Linux servers\n</code></pre> <p>Khi b\u1ea1n: - Search Google - Post Facebook status - Watch YouTube videos - Shop online - Stream phim</p> <p>\u2192 T\u1ea5t c\u1ea3 ch\u1ea1y tr\u00ean Linux servers!</p>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#thiet-bi-gia-inh","title":"\ud83c\udfe0 Thi\u1ebft b\u1ecb gia \u0111\u00ecnh","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#smart-tv","title":"Smart TV:","text":"<pre><code>Samsung Smart TV \u2192 Tizen (Linux-based)\nLG Smart TV \u2192 webOS (Linux-based)\nAndroid TV \u2192 Linux kernel\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#router-wifi","title":"Router WiFi:","text":"<pre><code>TP-Link, D-Link, ASUS routers \u2192 Linux firmware\nQu\u1ea3n l\u00fd k\u1ebft n\u1ed1i internet nh\u00e0 b\u1ea1n\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#smart-home","title":"Smart Home:","text":"<pre><code>\u2022 Smart speakers (some models)\n\u2022 Security cameras  \n\u2022 Smart lights, switches\n\u2022 Home automation hubs\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#o-to-hien-ai","title":"\ud83d\ude97 \u00d4 t\u00f4 hi\u1ec7n \u0111\u1ea1i","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#infotainment-systems","title":"Infotainment Systems:","text":"<pre><code>Tesla \u2192 Linux-based system\nBMW iDrive \u2192 Linux components\nMercedes MBUX \u2192 Linux elements\nToyota, Honda modern cars \u2192 Linux parts\n</code></pre> <p>Ch\u1ee9c n\u0103ng: - GPS navigation - Music streaming - Phone connectivity - Vehicle diagnostics</p>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#noi-lam-viec","title":"\ud83c\udfe2 N\u01a1i l\u00e0m vi\u1ec7c","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#office-environment","title":"Office Environment:","text":"<pre><code>Email servers \u2192 Linux\nFile servers \u2192 Linux  \nDatabase servers \u2192 Linux\nWeb applications \u2192 Linux backends\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#atm-va-banking","title":"ATM v\u00e0 Banking:","text":"<pre><code>Nhi\u1ec1u m\u00e1y ATM \u2192 Linux\nCore banking systems \u2192 Linux servers\nOnline banking \u2192 Linux infrastructure\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#cloud-services-hang-ngay","title":"\u2601\ufe0f Cloud Services h\u00e0ng ng\u00e0y","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#services-ban-dung","title":"Services b\u1ea1n d\u00f9ng:","text":"<pre><code>Gmail \u2192 Google Cloud (Linux)\niCloud \u2192 Partially Linux infrastructure  \nDropbox \u2192 Linux servers\nSpotify \u2192 Linux backend\nZoom meetings \u2192 Linux servers\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#gaming-gian-tiep","title":"\ud83c\udfae Gaming (gi\u00e1n ti\u1ebfp)","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#game-servers","title":"Game Servers:","text":"<pre><code>Minecraft servers \u2192 Th\u01b0\u1eddng ch\u1ea1y Linux\nCS:GO, Dota 2 servers \u2192 Linux\nMobile game backends \u2192 Linux\nOnline multiplayer \u2192 Linux infrastructure\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#steam-deck","title":"Steam Deck:","text":"<pre><code>Steam Deck \u2192 SteamOS (Linux-based)\nCh\u1ea1y \u0111\u01b0\u1ee3c nhi\u1ec1u Windows games\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#developer-tools","title":"\ud83d\udcbb Developer Tools","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#neu-ban-la-developer","title":"N\u1ebfu b\u1ea1n l\u00e0 developer:","text":"<pre><code># Development server\nLocal testing \u2192 Linux containers\nVersion control \u2192 Git on Linux\nCI/CD pipelines \u2192 Linux-based\nCode repositories \u2192 GitHub (Linux infrastructure)\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#cac-nganh-khac","title":"\ud83c\udfe5 C\u00e1c ng\u00e0nh kh\u00e1c","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#healthcare","title":"Healthcare:","text":"<pre><code>Medical devices \u2192 Linux embedded\nHospital systems \u2192 Linux servers\nResearch equipment \u2192 Linux control\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#education","title":"Education:","text":"<pre><code>School computers \u2192 Some run Linux\nUniversity servers \u2192 Mostly Linux  \nResearch computing \u2192 Linux clusters\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#government","title":"Government:","text":"<pre><code>Many governments \u2192 Migrating to Linux\nCost savings and security\nMunich, France, India examples\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#thong-ke-thu-vi","title":"\ud83d\udcca Th\u1ed1ng k\u00ea th\u00fa v\u1ecb","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#linux-everywhere","title":"Linux everywhere:","text":"<pre><code>\ud83c\udf10 96% top websites \u2192 Linux servers\n\ud83d\udcf1 3+ billion \u2192 Android devices  \n\ud83d\udcbb 100% \u2192 Top 500 supercomputers\n\u2601\ufe0f 75% \u2192 Cloud workloads\n\ud83c\udfe2 85% \u2192 Fortune 500 companies use Linux\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#tai-sao-khong-nhan-ra","title":"\ud83e\udd14 T\u1ea1i sao kh\u00f4ng nh\u1eadn ra?","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#linux-an-sau","title":"Linux \"\u1ea9n\" sau:","text":"<pre><code>\u2022 User-friendly interfaces\n\u2022 Apps v\u00e0 services\n\u2022 Automatic updates\n\u2022 \"Just works\" experience\n\u2022 No need to see command line\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#vi-du","title":"V\u00ed d\u1ee5:","text":"<ul> <li>Khi xem Netflix \u2192 Kh\u00f4ng c\u1ea7n bi\u1ebft server ch\u1ea1y Linux</li> <li>Khi d\u00f9ng Android \u2192 Kh\u00f4ng th\u1ea5y Linux kernel</li> <li>Khi online banking \u2192 Ch\u1ec9 th\u1ea5y web interface</li> </ul>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#tuong-lai-voi-linux","title":"\ud83d\udd2e T\u01b0\u01a1ng lai v\u1edbi Linux","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#trending-areas","title":"Trending areas:","text":"<pre><code>\ud83d\ude97 Autonomous vehicles \u2192 Linux platforms\n\ud83c\udfe0 IoT expansion \u2192 More Linux devices  \n\u26a1 Edge computing \u2192 Linux containers\n\ud83e\udd16 AI/ML \u2192 Linux development platforms\n\ud83c\udf0d Green computing \u2192 Efficient Linux systems\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#key-takeaways","title":"\ud83d\udca1 Key Takeaways","text":""},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#linux-la-invisible-backbone","title":"Linux l\u00e0 invisible backbone:","text":"<pre><code>\u2713 C\u00f3 m\u1eb7t kh\u1eafp n\u01a1i nh\u01b0ng \"v\u00f4 h\u00ecnh\"\n\u2713 L\u00e0m cho cu\u1ed9c s\u1ed1ng digital ho\u1ea1t \u0111\u1ed9ng  \n\u2713 Reliable, secure, efficient\n\u2713 Free v\u00e0 open source\n\u2713 Powers innovation\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#tai-sao-hoc-linux","title":"T\u1ea1i sao h\u1ecdc Linux:","text":"<pre><code>\u2022 Hi\u1ec3u infrastructure \u0111\u1eb1ng sau services\n\u2022 Career opportunities trong tech\n\u2022 Better problem-solving skills  \n\u2022 Join global open source community\n</code></pre>"},{"location":"linux/Module1/02.Everyday%20use%20of%20Linux/#conclusion","title":"\ud83c\udfaf Conclusion","text":"<p>Linux kh\u00f4ng ch\u1ec9 l\u00e0 \"h\u1ec7 \u0111i\u1ec1u h\u00e0nh cho geeks\" - n\u00f3 l\u00e0 foundation c\u1ee7a digital world ch\u00fang ta s\u1ed1ng. T\u1eeb smartphone trong t\u00fai \u0111\u1ebfn website b\u1ea1n browse, t\u1eeb smart TV \u0111\u1ebfn car navigation - Linux \u0111ang im l\u1eb7ng l\u00e0m cho m\u1ecdi th\u1ee9 ho\u1ea1t \u0111\u1ed9ng.</p> <p>H\u1ecdc Linux = Hi\u1ec3u th\u1ebf gi\u1edbi tech xung quanh b\u1ea1n!</p>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/","title":"Unix vs. Linux - So s\u00e1nh v\u00e0 ph\u00e2n bi\u1ec7t","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#unix-vs-linux-so-sanh-va-phan-biet","title":"Unix vs. Linux - So s\u00e1nh v\u00e0 ph\u00e2n bi\u1ec7t","text":"<p>Module 1: Understanding Linux Concepts - Lesson 3</p>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Unix v\u00e0 Linux th\u01b0\u1eddng b\u1ecb nh\u1ea7m l\u1eabn. Hi\u1ec3u r\u00f5 s\u1ef1 kh\u00e1c bi\u1ec7t gi\u00fap b\u1ea1n n\u1eafm v\u1eefng foundation c\u1ee7a h\u1ec7 \u0111i\u1ec1u h\u00e0nh hi\u1ec7n \u0111\u1ea1i.</p>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#lich-su","title":"\ud83d\udd70\ufe0f L\u1ecbch s\u1eed","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#unix-1969","title":"Unix (1969)","text":"<pre><code>\ud83d\udcc5 1969: \u0110\u01b0\u1ee3c t\u1ea1o t\u1ea1i Bell Labs\n\ud83d\udc68\u200d\ud83d\udcbb Creators: Ken Thompson, Dennis Ritchie\n\ud83c\udfaf M\u1ee5c \u0111\u00edch: H\u1ec7 \u0111i\u1ec1u h\u00e0nh \u0111a ng\u01b0\u1eddi d\u00f9ng\n\ud83d\udcb0 Commercial: Proprietary, c\u00f3 ph\u00ed\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#linux-1991","title":"Linux (1991)","text":"<pre><code>\ud83d\udcc5 1991: Linus Torvalds t\u1ea1o ra (22 n\u0103m sau Unix)\n\ud83d\udc68\u200d\ud83d\udcbb Creator: Linus Torvalds (sinh vi\u00ean Ph\u1ea7n Lan)\n\ud83c\udfaf M\u1ee5c \u0111\u00edch: Unix-like system, mi\u1ec5n ph\u00ed\n\ud83d\udcb0 Open Source: Ho\u00e0n to\u00e0n mi\u1ec5n ph\u00ed\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#kien-truc-va-triet-ly","title":"\ud83c\udfd7\ufe0f Ki\u1ebfn tr\u00fac v\u00e0 Tri\u1ebft l\u00fd","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#unix-philosophy","title":"Unix Philosophy:","text":"<pre><code>\"Do one thing and do it well\"\n- Small, focused programs\n- Text-based interfaces  \n- Everything is a file\n- Compose programs together\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#linux-philosophy","title":"Linux Philosophy:","text":"<pre><code>K\u1ebf th\u1eeba Unix philosophy + th\u00eam:\n- Open source development\n- Community-driven\n- \"Release early, release often\"\n- Accessibility for everyone\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#licensing-va-cost","title":"\ud83d\udcb0 Licensing v\u00e0 Cost","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#unix","title":"Unix:","text":"<pre><code>\ud83d\udcb5 Commercial License:\n- AIX (IBM): $1,000+ per CPU\n- Solaris (Oracle): $1,500+ per CPU  \n- HP-UX (HPE): Enterprise pricing\n- macOS: $129 (consumer), enterprise varies\n\n\ud83d\udcdc Proprietary:\n- Closed source code\n- Vendor lock-in\n- Support contracts required\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#linux","title":"Linux:","text":"<pre><code>\ud83c\udd93 Open Source License (GPL):\n- Kernel: Completely free\n- Distributions: Free (RHEL c\u00f3 support fee)\n- Source code: Publicly available\n- No vendor lock-in\n\n\ud83d\udca1 Cost comparison:\nUnix: $10,000+ per server\nLinux: $0 per server\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#variants-va-distributions","title":"\ud83c\udfe2 Variants v\u00e0 Distributions","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#unix-flavors","title":"Unix Flavors:","text":"<pre><code>\ud83c\udfe2 Commercial Unix:\n- AIX (IBM) \u2192 Power servers\n- Solaris (Oracle) \u2192 SPARC, x86\n- HP-UX (HPE) \u2192 Itanium, PA-RISC  \n- macOS (Apple) \u2192 Intel/ARM Macs\n\n\ud83c\udf93 Academic/Free:\n- FreeBSD \u2192 Free, open source\n- OpenBSD \u2192 Security-focused\n- NetBSD \u2192 Portability-focused\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#linux-distributions","title":"Linux Distributions:","text":"<pre><code>\ud83c\udfe2 Enterprise:\n- Red Hat Enterprise Linux (RHEL)\n- SUSE Linux Enterprise Server\n- Ubuntu LTS\n\n\ud83d\udc65 Community:\n- Ubuntu, Debian, Fedora\n- Arch Linux, Gentoo\n- Linux Mint, openSUSE\n\n\ud83c\udfaf Specialized:\n- Kali Linux (penetration testing)\n- Alpine Linux (containers)\n- CentOS (free RHEL clone)\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#hardware-support","title":"\ud83d\udda5\ufe0f Hardware Support","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#unix_1","title":"Unix:","text":"<pre><code>\ud83d\udd12 Specific Hardware:\n- AIX \u2192 IBM Power systems only\n- Solaris \u2192 SPARC, limited x86\n- HP-UX \u2192 HPE Integrity servers\n- macOS \u2192 Apple hardware only\n\n\ud83d\udcb0 Expensive Hardware:\n- Proprietary RISC processors\n- Enterprise-grade only\n- High-end workstations\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#linux_1","title":"Linux:","text":"<pre><code>\ud83c\udf10 Universal Hardware:\n- x86, x86_64 (Intel/AMD)\n- ARM (phones, tablets, Pi)\n- PowerPC, SPARC, MIPS\n- Embedded systems\n- Supercomputers to IoT devices\n\n\ud83d\udca1 Commodity Hardware:\n- Standard PC components\n- Cheap to expensive options\n- Wide vendor support\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#development-model","title":"\ud83d\udc68\u200d\ud83d\udcbb Development Model","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#unix_2","title":"Unix:","text":"<pre><code>\ud83c\udfe2 Corporate Development:\n- Closed development teams\n- Proprietary development tools\n- Limited external input\n- Slower release cycles\n\n\ud83d\udd10 Source Code:\n- Not publicly available\n- Vendor-specific modifications\n- Limited customization\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#linux_2","title":"Linux:","text":"<pre><code>\ud83c\udf0d Global Community:\n- Thousands of contributors worldwide\n- Open development process  \n- Transparent decision making\n- Rapid development cycles\n\n\ud83d\udcd6 Open Source:\n- Full source code available\n- Anyone can contribute\n- Fork and customize freely\n- Peer review process\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#tools-va-commands","title":"\ud83d\udee0\ufe0f Tools v\u00e0 Commands","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#similarities-giong-nhau","title":"Similarities (Gi\u1ed1ng nhau):","text":"<pre><code># Basic commands t\u01b0\u01a1ng t\u1ef1:\nls, cd, pwd, cp, mv, rm\ngrep, find, awk, sed\nvi/vim, cat, more, less\nps, kill, jobs, nohup\nchmod, chown, chgrp\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#differences-khac-nhau","title":"Differences (Kh\u00e1c nhau):","text":"<p>Unix: </p><pre><code># Vendor-specific tools:\nAIX: smitty, lsdev, errpt\nSolaris: pkgadd, svcs, zfs\nHP-UX: swinstall, ioscan\nmacOS: brew, launchctl\n</code></pre><p></p> <p>Linux: </p><pre><code># Package managers:\nUbuntu/Debian: apt, dpkg\nRHEL/CentOS: yum, rpm, dnf\nArch: pacman\nSUSE: zypper\n\n# System management:\nsystemctl, journalctl\nip (vs ifconfig)\nss (vs netstat)\n</code></pre><p></p>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#so-sanh-chi-tiet","title":"\ud83d\udcca So s\u00e1nh chi ti\u1ebft","text":"Ti\u00eau ch\u00ed Unix Linux Gi\u00e1 c\u1ea3 $1,000-10,000+ Mi\u1ec5n ph\u00ed Source Code \u0110\u00f3ng M\u1edf Hardware Proprietary Universal Support Vendor official Community + Commercial Customization H\u1ea1n ch\u1ebf Kh\u00f4ng gi\u1edbi h\u1ea1n Learning \u0110\u1eaft \u0111\u1ecf Mi\u1ec5n ph\u00ed Market Share Gi\u1ea3m T\u0103ng m\u1ea1nh Innovation Ch\u1eadm Nhanh"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#use-cases","title":"\ud83c\udfaf Use Cases","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#khi-nao-dung-unix","title":"Khi n\u00e0o d\u00f9ng Unix:","text":"<pre><code>\ud83c\udfe2 Enterprise Legacy:\n- Existing Unix infrastructure\n- Mission-critical applications\n- Regulatory compliance requirements\n- Long-term vendor support needs\n\n\ud83d\udcb0 Budget kh\u00f4ng l\u00e0 v\u1ea5n \u0111\u1ec1:\n- Large corporations\n- Government agencies  \n- Financial institutions\n- High-availability requirements\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#khi-nao-dung-linux","title":"Khi n\u00e0o d\u00f9ng Linux:","text":"<pre><code>\ud83d\ude80 Modern Infrastructure:\n- Cloud computing\n- DevOps environments\n- Startups, SMEs\n- Container orchestration\n\n\ud83d\udca1 Innovation-focused:\n- Rapid development\n- Cost optimization\n- Open source ecosystem\n- Learning v\u00e0 experimentation\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#market-trends","title":"\ud83d\udcc8 Market Trends","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#unix-declining","title":"Unix (Declining):","text":"<pre><code>\ud83d\udcc9 Market share: Gi\u1ea3m t\u1eeb 90% (1990s) \u2192 &lt;5% (2024)\n\ud83c\udfe2 Niche: High-end enterprise only\n\ud83d\udcb0 Cost: Barrier for adoption\n\ud83d\udc65 Skills: Harder to find Unix experts\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#linux-growing","title":"Linux (Growing):","text":"<pre><code>\ud83d\udcc8 Market share: T\u0103ng t\u1eeb 0% (1991) \u2192 95%+ servers (2024)\n\ud83c\udf10 Ubiquitous: From phones to supercomputers\n\ud83d\udcb0 Cost: Major adoption driver\n\ud83d\udc65 Skills: Large talent pool\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#future-outlook","title":"\ud83d\udd2e Future Outlook","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#unix_3","title":"Unix:","text":"<pre><code>\ud83c\udfe2 Legacy maintenance mode\n\ud83d\udcf1 macOS: Consumer Unix survivor\n\ud83d\udd12 Niche: Specialized enterprise needs\n\ud83d\udcb0 Premium: High-value, low-volume\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#linux_3","title":"Linux:","text":"<pre><code>\ud83d\ude80 Continued dominance\n\u2601\ufe0f Cloud computing backbone\n\ud83d\udcf1 Mobile v\u00e0 IoT expansion\n\ud83e\udd16 AI/ML development platform\n\ud83c\udf0d Global digital infrastructure\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#key-takeaways","title":"\ud83d\udca1 Key Takeaways","text":""},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#relationship","title":"Relationship:","text":"<pre><code>Linux = Unix-inspired, not Unix-derived\n- Same philosophy\n- Similar commands\n- Different implementation\n- Modern approach\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#for-learners","title":"For learners:","text":"<pre><code>\u2705 Learn Linux first:\n- More accessible\n- Better job opportunities  \n- Modern ecosystem\n- Free to practice\n\n\ud83c\udfaf Unix knowledge bonus:\n- Enterprise environments\n- Legacy system maintenance\n- Higher-end positions\n</code></pre>"},{"location":"linux/Module1/03.Unix%20vs.%20Linux/#conclusion","title":"\ud83c\udf93 Conclusion","text":"<p>Unix \u0111\u1eb7t n\u1ec1n m\u00f3ng, Linux x\u00e2y d\u1ef1ng t\u01b0\u01a1ng lai. Unix taught us the principles, Linux made them accessible to everyone.</p> <pre><code>Unix: The teacher\nLinux: The student who surpassed the master\n</code></pre> <p>For aspiring system administrators v\u00e0 developers: - Start with Linux - Understand Unix concepts - Apply knowledge to modern infrastructure - n\u00f3i chung l\u00e0 linux l\u00e0 c\u1ea3 th\u1ebf gi\u1edbi , unix ch\u1ec9 l\u00e0 ngu\u1ed3n c\u1ea3m h\u1ee9ng c\u0169 , k ai d\u00f9ng n\u1eefa </p>"},{"location":"linux/Module1/04.Linux%20flavors/","title":"Linux Flavors - C\u00e1c \"H\u01b0\u01a1ng v\u1ecb\" Linux","text":""},{"location":"linux/Module1/04.Linux%20flavors/#linux-flavors-cac-huong-vi-linux","title":"Linux Flavors - C\u00e1c \"H\u01b0\u01a1ng v\u1ecb\" Linux","text":"<p>Module 2: Download, Install and Configure - Linux Distributions</p>"},{"location":"linux/Module1/04.Linux%20flavors/#linux-distributions-la-gi","title":"Linux Distributions l\u00e0 g\u00ec?","text":"<p>Linux Distribution (Distro) l\u00e0 m\u1ed9t g\u00f3i ph\u1ea7n m\u1ec1m ho\u00e0n ch\u1ec9nh bao g\u1ed3m: </p><pre><code>Linux Kernel + GNU Tools + Package Manager + Desktop Environment + Applications\n</code></pre><p></p> <p>V\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n: - Linux Kernel = \"\u0110\u1ed9ng c\u01a1 \u00f4 t\u00f4\" - Distribution = \"Xe ho\u00e0n ch\u1ec9nh\" (Toyota, Honda, BMW...)</p>"},{"location":"linux/Module1/04.Linux%20flavors/#cay-gia-pha-linux-distributions","title":"\ud83c\udf33 C\u00e2y gia ph\u1ea3 Linux Distributions","text":""},{"location":"linux/Module1/04.Linux%20flavors/#debian-family","title":"Debian Family","text":"<pre><code>Debian (1993)\n\u251c\u2500\u2500 Ubuntu (2004)\n\u2502   \u251c\u2500\u2500 Linux Mint\n\u2502   \u251c\u2500\u2500 Elementary OS\n\u2502   \u251c\u2500\u2500 Pop!_OS\n\u2502   \u2514\u2500\u2500 Zorin OS\n\u251c\u2500\u2500 Kali Linux\n\u2514\u2500\u2500 Raspbian (Raspberry Pi OS)\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#red-hat-family","title":"Red Hat Family","text":"<pre><code>Red Hat Linux (1994)\n\u251c\u2500\u2500 Fedora (2003)\n\u251c\u2500\u2500 Red Hat Enterprise Linux (RHEL)\n\u2502   \u251c\u2500\u2500 CentOS (\u0111\u00e3 d\u1eebng)\n\u2502   \u251c\u2500\u2500 AlmaLinux\n\u2502   \u251c\u2500\u2500 Rocky Linux\n\u2502   \u2514\u2500\u2500 Oracle Linux\n\u2514\u2500\u2500 openSUSE\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#arch-family","title":"Arch Family","text":"<pre><code>Arch Linux (2002)\n\u251c\u2500\u2500 Manjaro\n\u251c\u2500\u2500 EndeavourOS\n\u251c\u2500\u2500 Garuda Linux\n\u2514\u2500\u2500 ArcoLinux\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#independent","title":"Independent","text":"<pre><code>Slackware (1993)\nGentoo (2002)\nAlpine Linux (2010)\nVoid Linux (2008)\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#distributions-cho-desktopnguoi-dung-ca-nhan","title":"\ud83c\udfe0 Distributions cho Desktop/Ng\u01b0\u1eddi d\u00f9ng c\u00e1 nh\u00e2n","text":""},{"location":"linux/Module1/04.Linux%20flavors/#ubuntu-than-thien-nhat","title":"Ubuntu - Th\u00e2n thi\u1ec7n nh\u1ea5t","text":"<pre><code>\ud83c\udfaf \u0110\u1ed1i t\u01b0\u1ee3ng: Ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u\n\ud83d\udcc5 Chu k\u1ef3: 6 th\u00e1ng/l\u1ea7n, LTS 2 n\u0103m/l\u1ea7n\n\ud83d\udda5\ufe0f Desktop: GNOME (default)\n\ud83d\udce6 Package: APT (apt, dpkg)\n\n\u2705 \u01afu \u0111i\u1ec3m:\n- D\u1ec5 c\u00e0i \u0111\u1eb7t v\u00e0 s\u1eed d\u1ee5ng\n- Hardware support t\u1ed1t nh\u1ea5t\n- C\u1ed9ng \u0111\u1ed3ng l\u1edbn nh\u1ea5t\n- Software Center \u0111\u1ea7y \u0111\u1ee7\n- LTS support 5 n\u0103m\n\n\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m:\n- H\u01a1i n\u1eb7ng\n- Snap packages g\u00e2y tranh c\u00e3i\n- Canonical's decisions \u0111\u00f4i khi kh\u00f4ng popular\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#linux-mint-windows-like","title":"Linux Mint - Windows-like","text":"<pre><code>\ud83c\udfaf \u0110\u1ed1i t\u01b0\u1ee3ng: Chuy\u1ec3n t\u1eeb Windows\n\ud83d\udda5\ufe0f Desktop: Cinnamon, MATE, Xfce\n\ud83d\udce6 Package: APT (based on Ubuntu)\n\n\u2705 \u01afu \u0111i\u1ec3m:\n- Giao di\u1ec7n quen thu\u1ed9c cho Windows users\n- Multimedia codecs \u0111\u00e3 c\u00e0i s\u1eb5n\n- \u1ed4n \u0111\u1ecbnh v\u00e0 \u0111\u00e1ng tin c\u1eady\n- Kh\u00f4ng c\u00f3 Snap packages\n\n\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m:\n- \u00cdt innovative features\n- Update cycles ch\u1eadm h\u01a1n Ubuntu\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#fedora-cong-nghe-moi-nhat","title":"Fedora - C\u00f4ng ngh\u1ec7 m\u1edbi nh\u1ea5t","text":"<pre><code>\ud83c\udfaf \u0110\u1ed1i t\u01b0\u1ee3ng: Developers, tech enthusiasts\n\ud83d\udcc5 Chu k\u1ef3: 6 th\u00e1ng/l\u1ea7n\n\ud83d\udda5\ufe0f Desktop: GNOME (default), KDE, Xfce\n\ud83d\udce6 Package: DNF (rpm)\n\n\u2705 \u01afu \u0111i\u1ec3m:\n- Latest technologies\n- Red Hat support\n- Excellent for developers\n- Strong security focus\n\n\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m:\n- Chu k\u1ef3 ng\u1eafn (18 th\u00e1ng support)\n- Multimedia codecs c\u1ea7n c\u00e0i th\u00eam\n- Sometimes bleeding edge = unstable\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#opensuse-enterprise-quality","title":"openSUSE - Enterprise quality","text":"<pre><code>\ud83c\udfaf \u0110\u1ed1i t\u01b0\u1ee3ng: Advanced users, enterprises\n\ud83d\udcc5 Phi\u00ean b\u1ea3n: Leap (stable), Tumbleweed (rolling)\n\ud83d\udda5\ufe0f Desktop: KDE (default), GNOME\n\ud83d\udce6 Package: Zypper (rpm)\n\n\u2705 \u01afu \u0111i\u1ec3m:\n- YaST configuration tool\n- Excellent KDE implementation\n- Stable v\u00e0 professional\n- SUSE enterprise backing\n\n\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m:\n- Learning curve cao\n- \u00cdt popular trong desktop\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#distributions-cho-servers","title":"\ud83d\udda5\ufe0f Distributions cho Servers","text":""},{"location":"linux/Module1/04.Linux%20flavors/#ubuntu-server-lts","title":"Ubuntu Server LTS","text":"<pre><code>\ud83c\udfaf Use case: Web servers, cloud\n\ud83d\udcc5 Support: 5 n\u0103m LTS\n\u2601\ufe0f Cloud: AWS, GCP, Azure official images\n\n\u01afu \u0111i\u1ec3m:\n\u2713 D\u1ec5 qu\u1ea3n l\u00fd\n\u2713 Excellent cloud support\n\u2713 Large community\n\u2713 Regular security updates\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#red-hat-enterprise-linux-rhel","title":"Red Hat Enterprise Linux (RHEL)","text":"<pre><code>\ud83c\udfaf Use case: Enterprise production\n\ud83d\udcb0 Cost: Subscription-based\n\ud83c\udfe2 Support: 24/7 enterprise support\n\n\u01afu \u0111i\u1ec3m:\n\u2713 Enterprise-grade stability\n\u2713 Professional support\n\u2713 Compliance certifications\n\u2713 Long-term support (10+ years)\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#almalinux-rocky-linux","title":"AlmaLinux / Rocky Linux","text":"<pre><code>\ud83c\udfaf Use case: RHEL alternative (free)\n\ud83d\udcc5 Background: CentOS replacement\n\ud83c\udd93 Cost: Completely free\n\n\u01afu \u0111i\u1ec3m:\n\u2713 1:1 RHEL compatibility\n\u2713 Enterprise features without cost\n\u2713 Community-driven\n\u2713 Migration path from CentOS\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#debian-server","title":"Debian Server","text":"<pre><code>\ud83c\udfaf Use case: Stable servers\n\ud83d\udcc5 Release: 2-3 n\u0103m/l\u1ea7n\n\ud83d\udd12 Philosophy: Stability over features\n\n\u01afu \u0111i\u1ec3m:\n\u2713 Rock-solid stability\n\u2713 Minimal base installation\n\u2713 Excellent package management\n\u2713 Long-term support\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#distributions-chuyen-dung","title":"\ud83d\udee1\ufe0f Distributions chuy\u00ean d\u1ee5ng","text":""},{"location":"linux/Module1/04.Linux%20flavors/#kali-linux-penetration-testing","title":"Kali Linux - Penetration Testing","text":"<pre><code>\ud83c\udfaf M\u1ee5c \u0111\u00edch: Ethical hacking, security testing\n\ud83d\udee0\ufe0f Tools: 600+ security tools\n\ud83d\udc68\u200d\ud83d\udcbb \u0110\u1ed1i t\u01b0\u1ee3ng: Security professionals\n\nPre-installed tools:\n- Metasploit Framework\n- Wireshark\n- Nmap\n- John the Ripper\n- Aircrack-ng\n- Burp Suite\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#alpine-linux-containers","title":"Alpine Linux - Containers","text":"<pre><code>\ud83c\udfaf M\u1ee5c \u0111\u00edch: Docker containers, embedded\n\ud83d\udce6 Size: ~5MB base image\n\ud83d\udd12 Security: musl libc, hardened\n\n\u01afu \u0111i\u1ec3m:\n\u2713 C\u1ef1c k\u1ef3 nh\u1eb9\n\u2713 Security-oriented\n\u2713 Perfect for containers\n\u2713 Fast boot time\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#raspberry-pi-os-arm-devices","title":"Raspberry Pi OS - ARM devices","text":"<pre><code>\ud83c\udfaf M\u1ee5c \u0111\u00edch: Raspberry Pi v\u00e0 ARM boards\n\ud83d\udda5\ufe0f Variants: Desktop, Lite, Full\n\ud83d\udcda Education: Programming learning\n\nUse cases:\n- IoT projects\n- Home automation\n- Educational programming\n- Media centers\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#distributions-theo-desktop-environment","title":"\ud83c\udfa8 Distributions theo Desktop Environment","text":""},{"location":"linux/Module1/04.Linux%20flavors/#kde-focused","title":"KDE-focused:","text":"<pre><code>KDE Neon \u2192 Latest KDE on Ubuntu base\nKubuntu \u2192 Ubuntu + KDE\nopenSUSE \u2192 Excellent KDE implementation\nManjaro KDE \u2192 Arch + KDE, user-friendly\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#gnome-focused","title":"GNOME-focused:","text":"<pre><code>Ubuntu \u2192 GNOME default\nFedora \u2192 Latest GNOME\nPop!_OS \u2192 GNOME with customizations\nPure OS \u2192 Privacy-focused GNOME\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#lightweight","title":"Lightweight:","text":"<pre><code>Lubuntu \u2192 LXQt desktop\nXubuntu \u2192 Xfce desktop\nLXLE \u2192 Xfce for old hardware\nPuppy Linux \u2192 Extremely lightweight\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#rolling-vs-fixed-release","title":"\ud83c\udfd7\ufe0f Rolling vs Fixed Release","text":""},{"location":"linux/Module1/04.Linux%20flavors/#rolling-release-cap-nhat-lien-tuc","title":"Rolling Release (C\u1eadp nh\u1eadt li\u00ean t\u1ee5c)","text":"<pre><code>Arch Linux \u2192 DIY approach\nManjaro \u2192 User-friendly Arch\nopenSUSE Tumbleweed \u2192 Enterprise rolling\nGentoo \u2192 Source-based\n\n\u01afu \u0111i\u1ec3m:\n\u2713 Always latest software\n\u2713 No major upgrades needed\n\u2713 Cutting-edge features\n\nNh\u01b0\u1ee3c \u0111i\u1ec3m:\n\u2717 Potential instability\n\u2717 More maintenance required\n\u2717 Can break occasionally\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#fixed-release-phien-ban-co-inh","title":"Fixed Release (Phi\u00ean b\u1ea3n c\u1ed1 \u0111\u1ecbnh)","text":"<pre><code>Ubuntu \u2192 6 months\nFedora \u2192 6 months  \nDebian \u2192 2-3 years\nRHEL \u2192 3-5 years\n\n\u01afu \u0111i\u1ec3m:\n\u2713 Tested v\u00e0 stable\n\u2713 Predictable updates\n\u2713 Enterprise-friendly\n\nNh\u01b0\u1ee3c \u0111i\u1ec3m:\n\u2717 Older software versions\n\u2717 Major upgrade hassles\n\u2717 Security backporting needed\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#chon-distribution-nao","title":"\ud83c\udfaf Ch\u1ecdn Distribution n\u00e0o?","text":""},{"location":"linux/Module1/04.Linux%20flavors/#nguoi-moi-bat-au","title":"Ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u:","text":"<pre><code>1\ufe0f\u20e3 Ubuntu \u2192 Easiest start\n2\ufe0f\u20e3 Linux Mint \u2192 Windows-like\n3\ufe0f\u20e3 Pop!_OS \u2192 Modern, gaming-friendly\n4\ufe0f\u20e3 Zorin OS \u2192 Beautiful, familiar\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#developers","title":"Developers:","text":"<pre><code>1\ufe0f\u20e3 Ubuntu \u2192 Best package availability\n2\ufe0f\u20e3 Fedora \u2192 Latest development tools\n3\ufe0f\u20e3 Arch/Manjaro \u2192 Cutting-edge, customizable\n4\ufe0f\u20e3 openSUSE \u2192 Professional development\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#system-administrators","title":"System Administrators:","text":"<pre><code>1\ufe0f\u20e3 RHEL/AlmaLinux \u2192 Enterprise standard\n2\ufe0f\u20e3 Ubuntu Server \u2192 Cloud-friendly\n3\ufe0f\u20e3 Debian \u2192 Ultra-stable\n4\ufe0f\u20e3 SUSE Enterprise \u2192 European enterprise\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#security-professionals","title":"Security Professionals:","text":"<pre><code>1\ufe0f\u20e3 Kali Linux \u2192 Penetration testing\n2\ufe0f\u20e3 Parrot Security \u2192 Privacy-focused\n3\ufe0f\u20e3 BlackArch \u2192 Arch-based security\n4\ufe0f\u20e3 Qubes OS \u2192 Extreme isolation\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#market-share-popularity","title":"\ud83d\udcca Market Share &amp; Popularity","text":""},{"location":"linux/Module1/04.Linux%20flavors/#desktop-2025","title":"Desktop (2025):","text":"<pre><code>1. Ubuntu family \u2192 ~40%\n2. Arch family \u2192 ~15%\n3. Fedora \u2192 ~10%\n4. openSUSE \u2192 ~8%\n5. Debian \u2192 ~7%\n6. Others \u2192 ~20%\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#server-2025","title":"Server (2025):","text":"<pre><code>1. Ubuntu Server \u2192 ~35%\n2. RHEL family \u2192 ~25%\n3. Debian \u2192 ~15%\n4. SUSE \u2192 ~10%\n5. Others \u2192 ~15%\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#cloud-aws-gcp-azure","title":"Cloud (AWS, GCP, Azure):","text":"<pre><code>1. Ubuntu \u2192 Most popular\n2. Amazon Linux 2 \u2192 AWS native\n3. RHEL \u2192 Enterprise choice\n4. SUSE \u2192 Enterprise alternative\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#migration-giua-cac-distros","title":"\ud83d\udd04 Migration gi\u1eefa c\u00e1c Distros","text":""},{"location":"linux/Module1/04.Linux%20flavors/#de-migrate","title":"D\u1ec5 migrate:","text":"<pre><code>Ubuntu \u2194 Linux Mint \u2192 Same package base\nUbuntu \u2194 Debian \u2192 Similar commands\nRHEL \u2194 AlmaLinux \u2192 Binary compatible\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#kho-migrate","title":"Kh\u00f3 migrate:","text":"<pre><code>Arch \u2192 Ubuntu \u2192 Different philosophies\nGentoo \u2192 Fedora \u2192 Different package systems\nAlpine \u2192 Debian \u2192 Different libc\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#tips-chon-distribution","title":"\ud83d\udca1 Tips ch\u1ecdn Distribution","text":""},{"location":"linux/Module1/04.Linux%20flavors/#cau-hoi-tu-at","title":"C\u00e2u h\u1ecfi t\u1ef1 \u0111\u1eb7t:","text":"<pre><code>\u2753 M\u1ee5c \u0111\u00edch s\u1eed d\u1ee5ng?\n- Desktop daily use \u2192 Ubuntu, Mint\n- Server production \u2192 RHEL, Ubuntu Server\n- Learning/experimenting \u2192 Arch, Gentoo\n- Security testing \u2192 Kali Linux\n\n\u2753 Kinh nghi\u1ec7m Linux?\n- Beginner \u2192 Ubuntu, Mint, Pop!_OS\n- Intermediate \u2192 Fedora, openSUSE\n- Advanced \u2192 Arch, Gentoo, LFS\n\n\u2753 Hardware requirements?\n- Old/weak \u2192 Lubuntu, Puppy Linux\n- Standard \u2192 Ubuntu, Fedora\n- High-end \u2192 Any distribution\n\n\u2753 Support c\u1ea7n thi\u1ebft?\n- Community \u2192 Ubuntu, Arch\n- Commercial \u2192 RHEL, SUSE\n- Self-support \u2192 Debian, Arch\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#ket-luan","title":"\ud83c\udf93 K\u1ebft lu\u1eadn","text":"<p>Linux flavors = S\u1ef1 l\u1ef1a ch\u1ecdn v\u00e0 t\u1ef1 do</p> <pre><code>\ud83c\udfaf Kh\u00f4ng c\u00f3 distribution \"t\u1ed1t nh\u1ea5t\"\n\ud83c\udfaf Ch\u1ec9 c\u00f3 distribution \"ph\u00f9 h\u1ee3p nh\u1ea5t\"\n\ud83c\udfaf C\u00f3 th\u1ec3 th\u1eed nhi\u1ec1u distros kh\u00e1c nhau\n\ud83c\udfaf Skills chuy\u1ec3n \u0111\u1ed5i \u0111\u01b0\u1ee3c gi\u1eefa c\u00e1c distros\n</code></pre>"},{"location":"linux/Module1/04.Linux%20flavors/#khuyen-nghi-learning-path","title":"Khuy\u1ebfn ngh\u1ecb learning path:","text":"<pre><code>1. B\u1eaft \u0111\u1ea7u: Ubuntu Desktop\n2. Th\u1eed nghi\u1ec7m: Linux Mint, Pop!_OS\n3. Server: Ubuntu Server, AlmaLinux\n4. Advanced: Arch Linux, Gentoo\n5. Specialized: Kali, Alpine t\u00f9y needs\n</code></pre>"},{"location":"linux/Module1/05.Linux%20vs.%20Windows/","title":"Linux vs. Windows - So s\u00e1nh nhanh","text":""},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#linux-vs-windows-so-sanh-nhanh","title":"Linux vs. Windows - So s\u00e1nh nhanh","text":""},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#chi-phi","title":"\ud83d\udcb0 Chi ph\u00ed","text":"Windows Linux OS $139-199 Mi\u1ec5n ph\u00ed Office $6-22/th\u00e1ng LibreOffice (free) Antivirus $30-80/n\u0103m Kh\u00f4ng c\u1ea7n"},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#su-dung","title":"\ud83d\udda5\ufe0f S\u1eed d\u1ee5ng","text":""},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#windows","title":"Windows:","text":"<pre><code>\u2705 D\u1ec5 d\u00f9ng cho ng\u01b0\u1eddi m\u1edbi\n\u2705 Gaming t\u1ed1t nh\u1ea5t\n\u2705 Adobe Creative Suite\n\u2705 MS Office native\n\u274c Virus/malware nhi\u1ec1u\n\u274c Ch\u1eadm theo th\u1eddi gian\n</code></pre>"},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#linux","title":"Linux:","text":"<pre><code>\u2705 B\u1ea3o m\u1eadt cao\n\u2705 Hi\u1ec7u su\u1ea5t t\u1ed1t h\u01a1n\n\u2705 Customization kh\u00f4ng gi\u1edbi h\u1ea1n\n\u2705 \u1ed4n \u0111\u1ecbnh (uptime n\u0103m)\n\u274c Learning curve cao\n\u274c Gaming h\u1ea1n ch\u1ebf\n</code></pre>"},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#market-share","title":"\ud83d\udcca Market Share","text":"<pre><code>Desktop: Windows 73% | Linux 4%\nServer:  Linux 96%   | Windows 4%\nMobile:  Android (Linux) 71% | iOS 28%\n</code></pre>"},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#khi-nao-dung-gi","title":"\ud83c\udfaf Khi n\u00e0o d\u00f9ng g\u00ec?","text":""},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#chon-windows","title":"Ch\u1ecdn Windows:","text":"<ul> <li>Gaming heavy</li> <li>Adobe Creative</li> <li>Office 365 ecosystem</li> <li>Gia \u0111\u00ecnh kh\u00f4ng tech</li> </ul>"},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#chon-linux","title":"Ch\u1ecdn Linux:","text":"<ul> <li>Development/DevOps</li> <li>Server administration</li> <li>Budget tight</li> <li>Security/privacy priority</li> </ul>"},{"location":"linux/Module1/05.Linux%20vs.%20Windows/#ket-luan","title":"\ud83d\udca1 K\u1ebft lu\u1eadn","text":"<p>Kh\u00f4ng c\u00f3 \"t\u1ed1t nh\u1ea5t\" - ch\u1ec9 c\u00f3 ph\u00f9 h\u1ee3p nh\u1ea5t:</p> <pre><code>Windows = Desktop dominance, gaming, ease of use\nLinux = Server king, development, efficiency, free\n</code></pre> <p>Cho DevOps: Linux l\u00e0 must-learn!</p>"},{"location":"linux/Module2/","title":"Index","text":"<p>xem th\u01b0 m\u1ee5c g\u1ed1c linux c\u00f3 link \u0111\u1ebfn c\u00e1c h\u01b0\u1edbng d\u1eabn  c\u00f2n \u1edf \u0111\u00e2y l\u00e0 file th\u00eam </p>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/","title":"What is Oracle VirtualBox?","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#what-is-oracle-virtualbox","title":"What is Oracle VirtualBox?","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#inh-nghia","title":"\ud83c\udfaf \u0110\u1ecbnh ngh\u0129a","text":"<p>Oracle VirtualBox l\u00e0 m\u1ed9t ph\u1ea7n m\u1ec1m virtualization (\u1ea3o h\u00f3a) mi\u1ec5n ph\u00ed v\u00e0 open source cho ph\u00e9p b\u1ea1n ch\u1ea1y nhi\u1ec1u h\u1ec7 \u0111i\u1ec1u h\u00e0nh tr\u00ean c\u00f9ng m\u1ed9t m\u00e1y t\u00ednh v\u1eadt l\u00fd.</p> <pre><code>Physical Computer (Windows/Mac/Linux)\n\u251c\u2500\u2500 VirtualBox Hypervisor\n    \u251c\u2500\u2500 Virtual Machine 1 (Linux)\n    \u251c\u2500\u2500 Virtual Machine 2 (Windows)\n    \u2514\u2500\u2500 Virtual Machine 3 (Ubuntu)\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#virtualbox-hoat-ong-nhu-the-nao","title":"\ud83c\udfd7\ufe0f VirtualBox ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o?","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#type-2-hypervisor","title":"Type 2 Hypervisor:","text":"<pre><code>Hardware (CPU, RAM, Storage)\n    \u2193\nHost OS (Windows 11, macOS, Linux)\n    \u2193\nVirtualBox Application\n    \u2193\nGuest OS (Linux, Windows, etc.)\n</code></pre> <p>V\u00ed d\u1ee5 th\u1ef1c t\u1ebf: - M\u00e1y t\u00ednh Windows 11 v\u1edbi 16GB RAM - C\u00e0i VirtualBox - T\u1ea1o VM Linux v\u1edbi 4GB RAM - Linux ch\u1ea1y trong \"h\u1ed9p \u1ea3o\" tr\u00ean Windows</p>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#tai-sao-can-virtualbox","title":"\ud83d\udca1 T\u1ea1i sao c\u1ea7n VirtualBox?","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#1-learning-testing","title":"1. Learning &amp; Testing:","text":"<pre><code>\u2705 H\u1ecdc Linux m\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng Windows\n\u2705 Test ph\u1ea7n m\u1ec1m trong m\u00f4i tr\u01b0\u1eddng an to\u00e0n\n\u2705 Th\u1eed c\u00e1c Linux distributions kh\u00e1c nhau\n\u2705 Practice system administration\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#2-development","title":"2. Development:","text":"<pre><code>\u2705 Develop tr\u00ean Linux t\u1eeb Windows\n\u2705 Test applications tr\u00ean multiple OS\n\u2705 Isolate development environments\n\u2705 DevOps v\u00e0 container learning\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#3-security","title":"3. Security:","text":"<pre><code>\u2705 Malware analysis trong VM\n\u2705 Isolated environment\n\u2705 Snapshot v\u00e0 restore nhanh\n\u2705 Network isolation\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#tinh-nang-chinh","title":"\ud83d\udd27 T\u00ednh n\u0103ng ch\u00ednh","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#virtual-hardware","title":"Virtual Hardware:","text":"<pre><code>\ud83d\udda5\ufe0f Virtual CPU: 1-4+ cores\n\ud83d\udcbe Virtual RAM: 512MB - host limit\n\ud83d\udcbf Virtual Storage: Dynamic/Fixed disks\n\ud83c\udf10 Virtual Network: NAT, Bridge, Host-only\n\ud83d\uddb1\ufe0f Virtual Devices: USB, Audio, Graphics\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#management-features","title":"Management Features:","text":"<pre><code>\ud83d\udcf8 Snapshots: Save/restore VM states\n\ud83d\udd04 Clone VMs: Duplicate machines\n\ud83d\udce4 Export/Import: Share VM images\n\u2699\ufe0f Resource Control: CPU, RAM limits\n\ud83d\udd17 Shared Folders: Host \u2194 Guest file sharing\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#virtualbox-vs-competitors","title":"\ud83d\udcb0 VirtualBox vs Competitors","text":"Feature VirtualBox VMware Hyper-V Price Free $199+ Windows Pro+ Host OS Win/Mac/Linux Win/Mac/Linux Windows only Performance Good Excellent Very Good Learning Perfect Overkill Limited Enterprise Limited Full Microsoft-focused <p>Cho DevOps learning: VirtualBox = Best choice!</p>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#system-requirements","title":"\ud83d\udda5\ufe0f System Requirements","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#minimum","title":"Minimum:","text":"<pre><code>\ud83d\udcbb 64-bit processor with virtualization support\n\ud83d\udcbe 4GB RAM (2GB host + 2GB VM)\n\ud83d\udcbf 20GB free disk space\n\ud83d\udda5\ufe0f 1024x768 display\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#recommended","title":"Recommended:","text":"<pre><code>\ud83d\udcbb Multi-core processor\n\ud83d\udcbe 8GB+ RAM\n\ud83d\udcbf 100GB+ free disk space (SSD preferred)\n\ud83d\udda5\ufe0f 1920x1080+ display\n\u26a1 Hardware virtualization enabled in BIOS\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#check-virtualization-support","title":"Check Virtualization Support:","text":"<pre><code># Windows - PowerShell\nGet-ComputerInfo | Select-Object -Property \"HyperV*\"\n\n# Linux\ngrep -E \"(vmx|svm)\" /proc/cpuinfo\n\n# Mac\nsysctl -a | grep machdep.cpu.features\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#virtualbox-architecture","title":"\ud83d\ude80 VirtualBox Architecture","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#core-components","title":"Core Components:","text":"<pre><code>VirtualBox Manager GUI\n    \u2193\nVBoxSVC (Background Service)\n    \u2193\nVirtualBox Engine\n    \u2193\nGuest Additions (in VMs)\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#file-structure","title":"File Structure:","text":"<pre><code>\ud83d\udcc1 VirtualBox VMs/\n\u251c\u2500\u2500 \ud83d\udcc1 Ubuntu-VM/\n\u2502   \u251c\u2500\u2500 Ubuntu-VM.vbox (config)\n\u2502   \u251c\u2500\u2500 Ubuntu-VM.vdi (disk image)\n\u2502   \u2514\u2500\u2500 Snapshots/ (saved states)\n\u251c\u2500\u2500 \ud83d\udcc1 CentOS-VM/\n\u2502   \u251c\u2500\u2500 CentOS-VM.vbox\n\u2502   \u2514\u2500\u2500 CentOS-VM.vdi\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#network-modes-explained","title":"\ud83c\udf10 Network Modes Explained","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#nat-default","title":"NAT (Default):","text":"<pre><code>Internet \u2190\u2192 Host \u2190\u2192 VirtualBox NAT \u2190\u2192 VM\n- VM can access internet\n- Host cannot access VM directly\n- VMs cannot communicate with each other\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#bridged","title":"Bridged:","text":"<pre><code>Internet \u2190\u2192 Router \u2190\u2192 Host\n                 \u2190\u2192 VM (own IP)\n- VM gets IP from router\n- Acts like separate computer on network\n- Can be accessed from other computers\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#host-only","title":"Host-only:","text":"<pre><code>Host \u2190\u2192 VirtualBox Host-only Network \u2190\u2192 VM\n- VM can only communicate with host\n- No internet access\n- Secure isolated environment\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#virtualbox-use-cases-trong-devops","title":"\ud83d\udccb VirtualBox Use Cases trong DevOps","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#1-linux-learning-lab","title":"1. Linux Learning Lab:","text":"<pre><code>Host: Windows 10\nVMs:\n\u251c\u2500\u2500 Ubuntu Desktop (learning GUI)\n\u251c\u2500\u2500 CentOS Server (command line)\n\u251c\u2500\u2500 Kali Linux (security tools)\n\u2514\u2500\u2500 Alpine Linux (container sim)\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#2-development-environment","title":"2. Development Environment:","text":"<pre><code>Host: macOS\nVMs:\n\u251c\u2500\u2500 Ubuntu 22.04 (development)\n\u251c\u2500\u2500 CentOS 8 (production sim)\n\u2514\u2500\u2500 Windows 10 (testing)\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#3-devops-pipeline-testing","title":"3. DevOps Pipeline Testing:","text":"<pre><code>VMs:\n\u251c\u2500\u2500 Jenkins Server (CI/CD)\n\u251c\u2500\u2500 Application Server (deployment)\n\u251c\u2500\u2500 Database Server (data)\n\u2514\u2500\u2500 Monitoring Server (observability)\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#limitations-considerations","title":"\u26a0\ufe0f Limitations &amp; Considerations","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#performance-impact","title":"Performance Impact:","text":"<pre><code>\u274c VM overhead: 10-20% performance loss\n\u274c Graphics: Limited 3D acceleration\n\u274c Gaming: Not suitable for heavy games\n\u274c Resource sharing: Host v\u00e0 VMs compete\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#not-suitable-for","title":"Not Suitable For:","text":"<pre><code>\u274c Gaming (use dual boot)\n\u274c Graphics-intensive work\n\u274c Production servers (use bare metal)\n\u274c Real-time applications\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#perfect-for","title":"Perfect For:","text":"<pre><code>\u2705 Learning Linux\n\u2705 Development v\u00e0 testing\n\u2705 DevOps skill building\n\u2705 Safe experimentation\n\u2705 Multiple OS environments\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#alternatives-overview","title":"\ud83d\udd2e Alternatives Overview","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#type-1-hypervisors-bare-metal","title":"Type 1 Hypervisors (Bare Metal):","text":"<pre><code>VMware ESXi \u2192 Enterprise datacenters\nMicrosoft Hyper-V \u2192 Windows environments\nCitrix XenServer \u2192 Large deployments\nKVM \u2192 Linux-based virtualization\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#type-2-hypervisors-desktop","title":"Type 2 Hypervisors (Desktop):","text":"<pre><code>VirtualBox \u2192 Free, cross-platform\nVMware Workstation \u2192 Professional features\nParallels \u2192 Mac-optimized\nQEMU \u2192 Open source, complex\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#containerization","title":"Containerization:","text":"<pre><code>Docker \u2192 Application containers\nPodman \u2192 Rootless containers\nLXC \u2192 System containers\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#key-takeaways","title":"\ud83c\udfaf Key Takeaways","text":""},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#virtualbox-perfect-for","title":"VirtualBox Perfect for:","text":"<pre><code>\ud83c\udf93 Learning: Safe environment to break things\n\ud83d\udcbb Development: Multiple OS testing\n\ud83d\udd27 DevOps: Local infrastructure simulation\n\ud83d\udcb0 Budget: Free alternative to expensive solutions\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#next-steps","title":"Next Steps:","text":"<pre><code>1. Check system requirements\n2. Download VirtualBox\n3. Install v\u00e0 configure\n4. Create first VM\n5. Install Linux guest OS\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#real-world-example","title":"\ud83d\udca1 Real-World Example","text":"<p>Scenario: DevOps engineer c\u1ea7n h\u1ecdc Kubernetes</p> <pre><code>Physical Laptop (Windows 11, 16GB RAM):\n\u251c\u2500\u2500 VirtualBox Host\n    \u251c\u2500\u2500 Master Node VM (Ubuntu, 4GB RAM)\n    \u251c\u2500\u2500 Worker Node 1 VM (Ubuntu, 4GB RAM)\n    \u251c\u2500\u2500 Worker Node 2 VM (Ubuntu, 4GB RAM)\n    \u2514\u2500\u2500 Tools VM (monitoring, 2GB RAM)\n\nTotal: 14GB allocated, 2GB for host OS\nResult: Full Kubernetes cluster on laptop!\n</code></pre>"},{"location":"linux/Module2/01.What%20is%20Oracle%20Virtual%20Box/#conclusion","title":"\ud83c\udf93 Conclusion","text":"<p>VirtualBox = Gateway to Linux mastery</p> <pre><code>Free \u2192 No cost barrier\nSafe \u2192 Experiment without fear\nFlexible \u2192 Multiple environments\nEducational \u2192 Perfect for learning\nProfessional \u2192 Real-world applicable\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/","title":"\ud83d\udc27 Important Things to Remember in Linux","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#important-things-to-remember-in-linux","title":"\ud83d\udc27 Important Things to Remember in Linux","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#1-root-account-role","title":"\ud83d\udd11 1. Root Account Role","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#root-god-mode-trong-linux","title":"Root = God Mode trong Linux","text":"<pre><code># Root user c\u00f3 UID = 0\nroot:x:0:0:root:/root:/bin/bash\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#root-powers","title":"Root Powers:","text":"<pre><code>\u2705 To\u00e0n quy\u1ec1n truy c\u1eadp t\u1ea5t c\u1ea3 files/folders\n\u2705 C\u00e0i \u0111\u1eb7t/g\u1ee1 b\u1ecf software packages\n\u2705 Thay \u0111\u1ed5i system configurations\n\u2705 T\u1ea1o/x\u00f3a user accounts\n\u2705 Ki\u1ec3m so\u00e1t services v\u00e0 processes\n\u2705 Truy c\u1eadp hardware tr\u1ef1c ti\u1ebfp\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#access-root","title":"Access Root:","text":"<p>1. Switch User (su): </p><pre><code># Chuy\u1ec3n sang root user\nsu -\n# Ho\u1eb7c\nsu root\n\n# Ch\u1ea1y 1 command v\u1edbi root privilege\nsu -c \"systemctl restart nginx\"\n</code></pre><p></p> <p>2. Sudo (Recommended): </p><pre><code># Ch\u1ea1y command v\u1edbi root privilege\nsudo systemctl restart nginx\n\n# Chuy\u1ec3n sang root shell t\u1ea1m th\u1eddi\nsudo -i\n# ho\u1eb7c\nsudo su -\n\n# Ch\u1ec9nh s\u1eeda file system\nsudo nano /etc/hosts\n</code></pre><p></p> <p>3. Root Login (Kh\u00f4ng khuy\u1ebfn kh\u00edch): </p><pre><code># Login tr\u1ef1c ti\u1ebfp as root\nssh root@server\n</code></pre><p></p>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#root-safety-best-practices","title":"Root Safety Best Practices:","text":"<pre><code># \u274c NGUY HI\u1ec2M - Ch\u1ea1y m\u1ecdi th\u1ee9 as root\nsudo su -\nrm -rf /* # \ud83d\udc80 NEVER DO THIS!\n\n# \u2705 AN TO\u00c0N - Ch\u1ec9 d\u00f9ng sudo khi c\u1ea7n\nsudo systemctl status nginx\nsudo apt update\nsudo nano /etc/nginx/nginx.conf\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#sudo-configuration","title":"Sudo Configuration:","text":"<pre><code># Xem sudo privileges\nsudo -l\n\n# Th\u00eam user v\u00e0o sudo group\nsudo usermod -aG sudo lelongc\n\n# Ch\u1ec9nh s\u1eeda sudoers file\nsudo visudo\n\n# Example sudoers entry:\nlelongc ALL=(ALL:ALL) ALL\n# lelongc c\u00f3 th\u1ec3 ch\u1ea1y t\u1ea5t c\u1ea3 commands as any user\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#2-case-sensitive","title":"\ud83d\udd24 2. Case Sensitive","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#linux-phan-biet-chu-hoathuong-nghiem-ngat","title":"Linux ph\u00e2n bi\u1ec7t ch\u1eef HOA/th\u01b0\u1eddng NGHI\u00caM NG\u1eb6T","text":"<pre><code># \u0110\u00e2y l\u00e0 4 files KH\u00c1C NHAU:\ntouch file.txt\ntouch File.txt  \ntouch FILE.txt\ntouch FiLe.TxT\n\nls -la\n# -rw-rw-r-- 1 lelongc lelongc 0 Aug 12 05:57 FILE.txt\n# -rw-rw-r-- 1 lelongc lelongc 0 Aug 12 05:57 FiLe.TxT\n# -rw-rw-r-- 1 lelongc lelongc 0 Aug 12 05:57 File.txt\n# -rw-rw-r-- 1 lelongc lelongc 0 Aug 12 05:57 file.txt\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#commands-cung-case-sensitive","title":"Commands c\u0169ng Case Sensitive:","text":"<pre><code># \u2705 \u0110\u00fang\nls -la\npwd\ncd /home/lelongc\n\n# \u274c Sai - Command not found\nLS -la\nPWD\nCD /home/lelongc\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#directories-case-sensitive","title":"Directories Case Sensitive:","text":"<pre><code># \u0110\u00e2y l\u00e0 c\u00e1c th\u01b0 m\u1ee5c KH\u00c1C NHAU:\nmkdir Documents\nmkdir documents  \nmkdir DOCUMENTS\n\n# Navigate ph\u1ea3i ch\u00ednh x\u00e1c case\ncd Documents    # \u2705 \ncd documents    # \u2705 nh\u01b0ng kh\u00e1c folder\ncd Documents    # \u274c n\u1ebfu folder t\u00ean l\u00e0 documents\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#environment-variables","title":"Environment Variables:","text":"<pre><code># Case sensitive\necho $PATH     # \u2705 Hi\u1ec3n th\u1ecb system PATH\necho $path     # \u274c Kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb (n\u1ebfu ch\u01b0a set)\necho $Path     # \u274c Kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb\n\n# Set variables\nexport MyVar=\"Hello\"\necho $MyVar    # \u2705 \"Hello\"\necho $myvar    # \u274c Empty\necho $MYVAR    # \u274c Empty\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#case-sensitivity-examples","title":"Case Sensitivity Examples:","text":"<pre><code># File operations\ncat file.txt     # \u2705 \u0110\u1ecdc file.txt\ncat File.txt     # \u274c N\u1ebfu ch\u1ec9 c\u00f3 file.txt\ncat FILE.TXT     # \u274c N\u1ebfu ch\u1ec9 c\u00f3 file.txt\n\n# User accounts\nsu lelongc       # \u2705 \nsu LeLongC       # \u274c User kh\u00f4ng t\u1ed3n t\u1ea1i\nsu LELONGC       # \u274c User kh\u00f4ng t\u1ed3n t\u1ea1i\n\n# Package names\nsudo apt install nginx    # \u2705\nsudo apt install NGINX    # \u274c Package kh\u00f4ng t\u1ed3n t\u1ea1i\nsudo apt install Nginx    # \u274c Package kh\u00f4ng t\u1ed3n t\u1ea1i\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#3-file-name-standards","title":"\ud83d\udcc1 3. File Name Standards","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#allowed-characters","title":"Allowed Characters:","text":"<pre><code># \u2705 SAFE characters:\nabcdefghijklmnopqrstuvwxyz\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n0123456789\n. (dot)\n- (hyphen)  \n_ (underscore)\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#file-naming-best-practices","title":"File Naming Best Practices:","text":"<pre><code># \u2705 GOOD file names:\nconfig.txt\nmy_script.sh\nbackup-2025-08-12.tar.gz\nuser_data.json\nserver01.conf\nnginx.conf\n.bashrc\n.ssh/\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#avoid-these-characters","title":"Avoid These Characters:","text":"<pre><code># \u274c PROBLEMATIC characters:\nfile name.txt        # Space (use _ or -)\nfile$name.txt        # $ (shell variable)\nfile&amp;name.txt        # &amp; (background process)\nfile|name.txt        # | (pipe operator)\nfile&gt;name.txt        # &gt; (redirect)\nfile&lt;name.txt        # &lt; (redirect)\nfile;name.txt        # ; (command separator)\nfile'name.txt        # ' (quote)\nfile\"name.txt        # \" (quote)\nfile*name.txt        # * (wildcard)\nfile?name.txt        # ? (wildcard)\nfile[name].txt       # [] (pattern matching)\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#special-files","title":"Special Files:","text":"<pre><code># Hidden files (b\u1eaft \u0111\u1ea7u v\u1edbi dot)\n.bashrc              # Bash configuration\n.ssh/                # SSH keys directory\n.gitignore           # Git ignore rules\n.vimrc               # Vim configuration\n\n# Backup files\nfile.txt.bak         # Manual backup\nfile.txt~            # Auto backup (editors)\nfile.txt.orig        # Original file backup\n\n# Temporary files\ntemp.tmp\ncache.cache\n/tmp/session123\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#file-extensions-convention","title":"File Extensions Convention:","text":"<pre><code># Scripts\nscript.sh            # Bash script\nscript.py            # Python script\nscript.pl            # Perl script\nscript.rb            # Ruby script\n\n# Configuration\nnginx.conf           # Nginx config\napp.config           # Application config\nsettings.ini         # INI format\n\n# Data\ndata.json            # JSON data\ndata.xml             # XML data\ndata.csv             # CSV data\ndata.sql             # SQL dump\n\n# Archives\nbackup.tar.gz        # Compressed archive\nfiles.zip            # ZIP archive\nproject.tar          # TAR archive\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#length-limitations","title":"Length Limitations:","text":"<pre><code># File name limits:\n# - Maximum 255 characters for filename\n# - Maximum 4096 characters for full path\n\n# \u2705 GOOD:\nshort_name.txt\n\n# \u274c TOO LONG (example):\nthis_is_a_very_very_very_long_filename_that_might_cause_problems_in_some_systems_and_applications_especially_when_dealing_with_legacy_systems_or_certain_backup_tools_that_have_filename_length_restrictions.txt\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#case-strategy","title":"Case Strategy:","text":"<pre><code># \u2705 CONSISTENT naming strategies:\n\n# 1. lowercase with underscores\nmy_config_file.txt\nuser_data_backup.json\nsystem_status_report.log\n\n# 2. lowercase with hyphens  \nmy-config-file.txt\nuser-data-backup.json\nsystem-status-report.log\n\n# 3. camelCase (\u00edt d\u00f9ng)\nmyConfigFile.txt\nuserDataBackup.json\nsystemStatusReport.log\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#working-with-special-characters","title":"Working with Special Characters:","text":"<pre><code># N\u1ebfu file c\u00f3 space ho\u1eb7c special chars:\n\n# \u2705 Quote the filename:\ncat \"file with spaces.txt\"\nls \"my file.txt\"\n\n# \u2705 Escape with backslash:\ncat file\\ with\\ spaces.txt\nls my\\ file.txt\n\n# \u2705 Use tab completion:\ncat my&lt;TAB&gt;  # Auto-completes and escapes\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#key-takeaways-for-lelongc","title":"\ud83c\udfaf Key Takeaways for lelongc","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#1-root-account","title":"1. Root Account:","text":"<pre><code># Lu\u00f4n nh\u1edb:\nsudo command         # Safer than su -\nsudo -i             # Temporary root shell\nexit                # Always exit root when done\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#2-case-sensitivity","title":"2. Case Sensitivity:","text":"<pre><code># Lu\u00f4n check case:\nls -la              # Xem exact filename\npwd                 # Check current directory case\nwhich command       # Verify command exists\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#3-file-naming","title":"3. File Naming:","text":"<pre><code># Safe naming pattern:\nproject_name.extension\nbackup-YYYY-MM-DD.tar.gz\nconfig_file_v1.conf\nscript_name.sh\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#common-mistakes-to-avoid","title":"\ud83d\udca1 Common Mistakes to Avoid","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#root-account-mistakes","title":"Root Account Mistakes:","text":"<pre><code># \u274c DON'T:\nsudo su -                    # Staying in root too long\nrm -rf /important/data      # Without backup\nchmod 777 /etc/passwd       # Dangerous permissions\n\n# \u2705 DO:\nsudo systemctl restart nginx    # Specific task\nsudo cp file.conf file.conf.bak # Backup first\nsudo chmod 644 /etc/passwd      # Appropriate permissions\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#case-sensitivity-mistakes","title":"Case Sensitivity Mistakes:","text":"<pre><code># \u274c Assuming case doesn't matter:\ncd /HOME/lelongc           # Should be /home/lelongc\nexport path=$PATH          # Should be PATH\ncat CONFIG.TXT             # Should match exact filename\n\n# \u2705 Always match exact case:\ncd /home/lelongc           # Correct path\nexport PATH=$PATH:/new/path # Correct variable\ncat config.txt             # Match exact filename\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#file-naming-mistakes","title":"File Naming Mistakes:","text":"<pre><code># \u274c Problematic names:\n\"my file.txt\"              # Spaces need quotes\nfile$var.txt               # $ causes confusion\nbackup file (1).txt        # Spaces and parentheses\n\n# \u2705 Better alternatives:\nmy_file.txt                # Underscore instead of space\nfile_var.txt               # No special characters\nbackup_file_1.txt          # Clean and clear\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/00.Important%20Things%20to%20Remember%20in%20Linux/#quick-reference-for-lelongc","title":"\ud83d\ude80 Quick Reference for lelongc","text":"<pre><code># Root operations\nsudo command               # Run single command as root\nsudo -i                   # Become root temporarily\nexit                      # Exit root shell\n\n# Case-sensitive operations  \nls -la                    # List with exact case\nwhich command             # Find exact command\necho $VARIABLE            # Exact variable name\n\n# Safe file naming\ntouch my_file.txt         # Underscore for spaces\nmkdir backup-$(date +%Y%m%d)  # Date in filename\ncp file.txt file.txt.bak  # Backup with extension\n</code></pre> <p>Remember: Linux kh\u00f4ng tha th\u1ee9! M\u1ed9t k\u00fd t\u1ef1 sai c\u00f3 th\u1ec3 l\u00e0m h\u1ecfng c\u1ea3 system. Lu\u00f4n double-check tr\u01b0\u1edbc khi ch\u1ea1y commands c\u00f3 quy\u1ec1n root! \ud83d\udd12</p>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/","title":"\ud83d\udd17 Accessing Linux System: SSH Clients &amp; Remote Access","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#accessing-linux-system-ssh-clients-remote-access","title":"\ud83d\udd17 Accessing Linux System: SSH Clients &amp; Remote Access","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#xuong-oc-cho-preference-cho-o-ton-time-neu-muon","title":"xu\u1ed1ng \u0111\u1ecdc ch\u1ed7 preference cho \u0111\u1ee1 t\u1ed1n time n\u1ebfu mu\u1ed1n","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#overview","title":"\ud83c\udfaf Overview","text":"<p>Truy c\u1eadp Linux system t\u1eeb xa l\u00e0 k\u1ef9 n\u0103ng quan tr\u1ecdng cho DevOps engineers. B\u00e0i n\u00e0y s\u1ebd h\u01b0\u1edbng d\u1eabn: - C\u00e0i \u0111\u1eb7t v\u00e0 s\u1eed d\u1ee5ng PuTTY - So s\u00e1nh c\u00e1c SSH clients kh\u00e1c nhau - Best practices cho remote access</p>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#ssh-secure-shell-fundamentals","title":"\ud83d\udda5\ufe0f SSH (Secure Shell) Fundamentals","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#ssh-la-gi","title":"SSH l\u00e0 g\u00ec?","text":"<pre><code>SSH = Secure Shell Protocol\n- Encrypted communication\n- Remote command execution\n- File transfer capability\n- Port forwarding\n- Tunneling support\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#ssh-architecture","title":"SSH Architecture:","text":"<pre><code>Client Machine (Windows/Mac/Linux)\n    \u2193 SSH Protocol (Port 22)\n    \u2193 Encrypted Connection\nLinux Server (Remote)\n    \u2193 Authentication\n    \u2193 Shell Access\nCommand Execution\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#installing-putty-windows","title":"\ud83d\udd27 Installing PuTTY (Windows)","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#method-1-official-download","title":"Method 1: Official Download","text":"<pre><code># 1. Visit PuTTY official website\nhttps://www.putty.org/\n\n# 2. Download PuTTY installer\n# Choose: putty-64bit-X.XX-installer.msi\n\n# 3. Run installer as Administrator\nRight-click \u2192 \"Run as administrator\"\n\n# 4. Follow installation wizard\n- Accept license\n- Choose installation directory: C:\\Program Files\\PuTTY\\\n- Select components: Full installation\n- Create desktop shortcut: Yes\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#method-2-chocolatey-package-manager","title":"Method 2: Chocolatey (Package Manager)","text":"<pre><code># Install Chocolatey first (if not installed)\nSet-ExecutionPolicy Bypass -Scope Process -Force\niex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n\n# Install PuTTY via Chocolatey\nchoco install putty -y\n\n# Verify installation\nputty --version\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#method-3-windows-package-manager-winget","title":"Method 3: Windows Package Manager (winget)","text":"<pre><code># Check if winget is available\nwinget --version\n\n# Install PuTTY\nwinget install --id=PuTTY.PuTTY -e\n\n# Verify installation\nwhere putty\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#method-4-portable-version","title":"Method 4: Portable Version","text":"<pre><code># Download portable version\n# No installation required\n# Just download putty.exe and run directly\n\n# Create folder structure:\nC:\\Tools\\PuTTY\\\n\u251c\u2500\u2500 putty.exe\n\u251c\u2500\u2500 puttygen.exe\n\u251c\u2500\u2500 pageant.exe\n\u2514\u2500\u2500 pscp.exe\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#putty-configuration","title":"\u2699\ufe0f PuTTY Configuration","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#basic-ssh-connection-setup","title":"Basic SSH Connection Setup:","text":"<pre><code>1. Open PuTTY\n2. Session Configuration:\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 Host Name: 192.168.1.100       \u2502\n   \u2502 Port: 22                       \u2502\n   \u2502 Connection Type: SSH           \u2502\n   \u2502 Saved Sessions: Linux-Server   \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n3. SSH Configuration:\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 SSH \u2192 Auth \u2192 Credentials       \u2502\n   \u2502 Private key file: id_rsa.ppk   \u2502\n   \u2502 Allow agent forwarding: \u2713      \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n4. Terminal Configuration:\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 Window \u2192 Appearance            \u2502\n   \u2502 Font: Consolas 12pt            \u2502\n   \u2502 Cursor: Block                  \u2502\n   \u2502 Colors: Custom scheme          \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#advanced-putty-settings","title":"Advanced PuTTY Settings:","text":"<pre><code>Connection Settings:\n\u251c\u2500\u2500 SSH\n\u2502   \u251c\u2500\u2500 Protocol version: 2 only\n\u2502   \u251c\u2500\u2500 Encryption: AES-256\n\u2502   \u251c\u2500\u2500 Compression: Enable\n\u2502   \u2514\u2500\u2500 Agent forwarding: Enable\n\u251c\u2500\u2500 Terminal\n\u2502   \u251c\u2500\u2500 Keyboard: VT100+\n\u2502   \u251c\u2500\u2500 Bell: Disabled\n\u2502   \u2514\u2500\u2500 Local echo: Auto\n\u2514\u2500\u2500 Window\n    \u251c\u2500\u2500 Columns: 120\n    \u251c\u2500\u2500 Rows: 40\n    \u2514\u2500\u2500 Scrollback: 10000 lines\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#saving-connection-profiles","title":"Saving Connection Profiles:","text":"<pre><code>1. Configure all settings\n2. Session \u2192 Saved Sessions\n3. Enter name: \"Production-Server\"\n4. Click \"Save\"\n5. Double-click to connect quickly\n\nExample Profiles:\n\u251c\u2500\u2500 Production-Web-Server\n\u251c\u2500\u2500 Development-Database\n\u251c\u2500\u2500 Staging-Application\n\u2514\u2500\u2500 Backup-Server\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#ssh-key-authentication-with-putty","title":"\ud83d\udd11 SSH Key Authentication with PuTTY","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#generate-ssh-key-pair","title":"Generate SSH Key Pair:","text":"<pre><code>1. Open PuTTYgen\n2. Key type: RSA\n3. Key size: 4096 bits\n4. Click \"Generate\"\n5. Move mouse randomly for entropy\n6. Add passphrase (optional but recommended)\n7. Save private key: id_rsa.ppk\n8. Copy public key text\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#deploy-public-key-to-linux-server","title":"Deploy Public Key to Linux Server:","text":"<pre><code># On Linux server\nmkdir -p ~/.ssh\nchmod 700 ~/.ssh\n\n# Add public key to authorized_keys\nnano ~/.ssh/authorized_keys\n# Paste the public key from PuTTYgen\n\n# Set correct permissions\nchmod 600 ~/.ssh/authorized_keys\nchown lelongc:lelongc ~/.ssh/authorized_keys\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#configure-putty-for-key-authentication","title":"Configure PuTTY for Key Authentication:","text":"<pre><code>1. PuTTY Configuration\n2. SSH \u2192 Auth \u2192 Credentials\n3. Private key file: Browse to id_rsa.ppk\n4. Save session\n5. Connect (no password required)\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#ssh-clients-comparison","title":"\ud83c\udf10 SSH Clients Comparison","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#windows-ssh-clients","title":"Windows SSH Clients:","text":"Client Free GUI Features Best For PuTTY \u2705 \u2705 Basic, Reliable Beginners Windows Terminal \u2705 \u2705 Modern, Tabs Windows 10/11 MobaXterm \ud83d\udd04 \u2705 X11, SFTP, Plugins Advanced users SecureCRT \u274c \u2705 Professional, Scripts Enterprise Bitvise SSH Client \u2705 \u2705 File transfer, Tunneling File management WSL \u2705 \ud83d\udd04 Native Linux Developers"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#macos-ssh-clients","title":"macOS SSH Clients:","text":"Client Cost Type Features Rating Terminal (built-in) Free CLI Native SSH \u2b50\u2b50\u2b50\u2b50\u2b50 iTerm2 Free CLI+ Tabs, Split panes \u2b50\u2b50\u2b50\u2b50\u2b50 SSH Config Free CLI Config management \u2b50\u2b50\u2b50\u2b50 Royal TSX $40 GUI Multi-protocol \u2b50\u2b50\u2b50\u2b50 Termius $10/mo GUI Cloud sync \u2b50\u2b50\u2b50\u2b50"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#linux-ssh-clients","title":"Linux SSH Clients:","text":"Client Type Package Features OpenSSH CLI openssh-client Standard, Powerful GNOME Terminal GUI gnome-terminal GTK-based Konsole GUI konsole KDE terminal Terminator GUI terminator Split terminals Remmina GUI remmina Multi-protocol"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#platform-specific-setup","title":"\ud83d\udda5\ufe0f Platform-Specific Setup","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#windows-1011-modern-approach","title":"Windows 10/11 Modern Approach:","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#windows-terminal-openssh","title":"Windows Terminal + OpenSSH:","text":"<pre><code># 1. Install Windows Terminal (Microsoft Store)\n# 2. Enable OpenSSH Client\nAdd-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0\n\n# 3. Generate SSH key\nssh-keygen -t rsa -b 4096 -C \"lelongc@windows\"\n\n# 4. Copy public key to server\ntype $env:USERPROFILE\\.ssh\\id_rsa.pub | ssh lelongc@server \"cat &gt;&gt; ~/.ssh/authorized_keys\"\n\n# 5. Connect via SSH\nssh lelongc@192.168.1.100\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#windows-terminal-configuration","title":"Windows Terminal Configuration:","text":"<pre><code>{\n    \"name\": \"Linux Server\",\n    \"commandline\": \"ssh lelongc@192.168.1.100\",\n    \"icon\": \"\ud83d\udc27\",\n    \"tabTitle\": \"Production Server\",\n    \"startingDirectory\": \"%USERPROFILE%\"\n}\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#macos-setup","title":"macOS Setup:","text":"<pre><code># 1. Open Terminal (built-in)\n# 2. Generate SSH key\nssh-keygen -t rsa -b 4096 -C \"lelongc@mac\"\n\n# 3. Add key to SSH agent\nssh-add ~/.ssh/id_rsa\n\n# 4. Copy key to server\nssh-copy-id lelongc@192.168.1.100\n\n# 5. Create SSH config\nnano ~/.ssh/config\n\n# SSH Config example:\nHost production\n    HostName 192.168.1.100\n    User lelongc\n    Port 22\n    IdentityFile ~/.ssh/id_rsa\n    ForwardAgent yes\n\n# 6. Connect using alias\nssh production\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#linux-setup","title":"Linux Setup:","text":"<pre><code># 1. Install SSH client (usually pre-installed)\nsudo apt update\nsudo apt install openssh-client\n\n# 2. Generate SSH key\nssh-keygen -t rsa -b 4096 -C \"lelongc@linux\"\n\n# 3. Copy key to server\nssh-copy-id lelongc@192.168.1.100\n\n# 4. Test connection\nssh lelongc@192.168.1.100\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#advanced-ssh-configuration","title":"\ud83d\udd27 Advanced SSH Configuration","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#ssh-config-file-sshconfig","title":"SSH Config File (~/.ssh/config):","text":"<pre><code># Global settings\nHost *\n    ServerAliveInterval 60\n    ServerAliveCountMax 3\n    Compression yes\n    ControlMaster auto\n    ControlPath ~/.ssh/master-%r@%h:%p\n    ControlPersist 5m\n\n# Production servers\nHost prod-web\n    HostName 10.0.1.10\n    User lelongc\n    Port 22\n    IdentityFile ~/.ssh/prod_rsa\n    ForwardAgent yes\n    LocalForward 8080 localhost:80\n\nHost prod-db\n    HostName 10.0.1.20\n    User dbadmin\n    Port 2222\n    IdentityFile ~/.ssh/prod_rsa\n    ProxyJump prod-web\n\n# Development servers\nHost dev-*\n    User lelongc\n    Port 22\n    IdentityFile ~/.ssh/dev_rsa\n    StrictHostKeyChecking no\n    UserKnownHostsFile /dev/null\n\nHost dev-web\n    HostName 192.168.1.100\n\nHost dev-db\n    HostName 192.168.1.101\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#ssh-tunneling-examples","title":"SSH Tunneling Examples:","text":"<pre><code># Local port forwarding (access remote service locally)\nssh -L 8080:localhost:80 lelongc@webserver\n# Now access http://localhost:8080 \u2192 remote:80\n\n# Remote port forwarding (expose local service remotely)\nssh -R 9090:localhost:3000 lelongc@jumpserver\n# Remote users access jumpserver:9090 \u2192 local:3000\n\n# Dynamic port forwarding (SOCKS proxy)\nssh -D 1080 lelongc@server\n# Configure browser to use localhost:1080 as SOCKS proxy\n\n# X11 forwarding (run GUI apps remotely)\nssh -X lelongc@server\nfirefox  # Opens Firefox on remote server, displays locally\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#security-best-practices","title":"\ud83d\udee1\ufe0f Security Best Practices","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#ssh-server-hardening","title":"SSH Server Hardening:","text":"<pre><code># Edit SSH daemon config\nsudo nano /etc/ssh/sshd_config\n\n# Security settings:\nPort 2222                          # Change default port\nPermitRootLogin no                  # Disable root login\nPasswordAuthentication no           # Key-only authentication\nPubkeyAuthentication yes            # Enable key auth\nMaxAuthTries 3                      # Limit login attempts\nClientAliveInterval 300             # 5-minute timeout\nClientAliveCountMax 2               # Max missed heartbeats\nAllowUsers lelongc                  # Whitelist users\nDenyUsers root                      # Blacklist users\nProtocol 2                          # SSH version 2 only\n\n# Restart SSH service\nsudo systemctl restart sshd\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#client-security","title":"Client Security:","text":"<pre><code># SSH client security\n# ~/.ssh/config\n\nHost *\n    HashKnownHosts yes              # Hash known hosts\n    VerifyHostKeyDNS yes            # Verify via DNS\n    StrictHostKeyChecking ask       # Confirm new hosts\n    UserKnownHostsFile ~/.ssh/known_hosts\n    VisualHostKey yes               # Show ASCII art fingerprint\n\n# Key permissions\nchmod 700 ~/.ssh                   # SSH directory\nchmod 600 ~/.ssh/id_rsa            # Private key\nchmod 644 ~/.ssh/id_rsa.pub        # Public key\nchmod 600 ~/.ssh/authorized_keys   # Authorized keys\nchmod 600 ~/.ssh/config            # SSH config\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#quick-reference-for-lelongc","title":"\ud83d\ude80 Quick Reference for lelongc","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#putty-quick-start","title":"PuTTY Quick Start:","text":"<pre><code>1. Download: https://www.putty.org/\n2. Install: Run as Administrator\n3. Configure: Host + Port + SSH\n4. Save session: Name it clearly\n5. Connect: Double-click saved session\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#modern-windows-recommended","title":"Modern Windows (Recommended):","text":"<pre><code># Install Windows Terminal + OpenSSH\nwinget install Microsoft.WindowsTerminal\nssh lelongc@server\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#key-commands","title":"Key Commands:","text":"<pre><code># Generate key\nssh-keygen -t rsa -b 4096\n\n# Copy key to server\nssh-copy-id user@server\n\n# Connect with tunnel\nssh -L 8080:localhost:80 user@server\n\n# Config file location\n~/.ssh/config  # Linux/Mac\n%USERPROFILE%\\.ssh\\config  # Windows\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#troubleshooting","title":"Troubleshooting:","text":"<pre><code># Test connection\nssh -vvv user@server\n\n# Check SSH service\nsudo systemctl status sshd\n\n# Verify key permissions\nls -la ~/.ssh/\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#pro-tips-for-lelongc","title":"\ud83d\udca1 Pro Tips for lelongc","text":""},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#productivity-hacks","title":"Productivity Hacks:","text":"<pre><code># SSH aliases in ~/.bashrc\nalias prod='ssh production'\nalias dev='ssh development'\nalias stage='ssh staging'\n\n# SSH connection sharing (faster subsequent connections)\nControlMaster auto\nControlPath ~/.ssh/master-%r@%h:%p\nControlPersist 5m\n\n# Jump through bastion host\nssh -J bastion.company.com internal.server.com\n</code></pre>"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#common-issues-solutions","title":"Common Issues &amp; Solutions:","text":"Problem Solution \"Permission denied\" Check key permissions <code>chmod 600 ~/.ssh/id_rsa</code> \"Connection refused\" Verify SSH service: <code>sudo systemctl status sshd</code> \"Host key verification failed\" Remove old key: <code>ssh-keygen -R hostname</code> \"Too many authentication failures\" Use <code>-o IdentitiesOnly=yes</code> \"Connection timeout\" Check firewall/port forwarding"},{"location":"linux/Module3-System%20Access%20and%20File%20System/01-2-3.Accessing%20Linux%20system/#file-transfer-with-ssh","title":"File Transfer with SSH:","text":"<pre><code># SCP (Secure Copy)\nscp file.txt user@server:/path/to/destination\nscp -r folder/ user@server:/path/to/destination\n\n# SFTP (interactive)\nsftp user@server\nput localfile.txt\nget remotefile.txt\nexit\n\n# Rsync over SSH (efficient)\nrsync -avz -e ssh folder/ user@server:/backup/\n</code></pre> <p>Remember: SSH l\u00e0 c\u1eeda ng\u00f5 ch\u00ednh \u0111\u1ec3 qu\u1ea3n l\u00fd Linux servers.</p>"},{"location":"network-ccna/ccna/","title":"Index","text":"<p>note ccna c\u1ee7a Jeremy's IT Lab tr\u00ean youtube</p>"},{"location":"network-ccna/ccna/01.network-devices/","title":"Thi\u1ebft B\u1ecb M\u1ea1ng (Network Devices) - Ki\u1ebfn Th\u1ee9c \u0110\u1ea7y \u0110\u1ee7","text":""},{"location":"network-ccna/ccna/01.network-devices/#thiet-bi-mang-network-devices-kien-thuc-ay-u","title":"Thi\u1ebft B\u1ecb M\u1ea1ng (Network Devices) - Ki\u1ebfn Th\u1ee9c \u0110\u1ea7y \u0110\u1ee7","text":""},{"location":"network-ccna/ccna/01.network-devices/#khai-niem-co-ban","title":"Kh\u00e1i Ni\u1ec7m C\u01a1 B\u1ea3n","text":""},{"location":"network-ccna/ccna/01.network-devices/#mang-may-tinh-la-gi","title":"M\u1ea1ng M\u00e1y T\u00ednh L\u00e0 G\u00ec?","text":"<p>M\u1ea1ng m\u00e1y t\u00ednh l\u00e0 h\u1ec7 th\u1ed1ng truy\u1ec1n th\u00f4ng k\u1ef9 thu\u1eadt s\u1ed1 cho ph\u00e9p c\u00e1c thi\u1ebft b\u1ecb (node) chia s\u1ebb t\u00e0i nguy\u00ean v\u1edbi nhau.</p> <p>M\u1ea1ng \u0111\u01a1n gi\u1ea3n nh\u1ea5t: Hai PC k\u1ebft n\u1ed1i b\u1eb1ng d\u00e2y c\u00e1p = m\u1ed9t m\u1ea1ng ho\u00e0n ch\u1ec9nh.</p>"},{"location":"network-ccna/ccna/01.network-devices/#node-la-gi","title":"Node L\u00e0 G\u00ec?","text":"<p>Node l\u00e0 b\u1ea5t k\u1ef3 thi\u1ebft b\u1ecb n\u00e0o tham gia v\u00e0o m\u1ea1ng. C\u00f3 5 lo\u1ea1i node ch\u00ednh:</p> <p></p>"},{"location":"network-ccna/ccna/01.network-devices/#1-client-may-khach","title":"1. CLIENT (M\u00e1y Kh\u00e1ch)","text":""},{"location":"network-ccna/ccna/01.network-devices/#inh-nghia","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Client = thi\u1ebft b\u1ecb truy c\u1eadp d\u1ecbch v\u1ee5 t\u1eeb server</p>"},{"location":"network-ccna/ccna/01.network-devices/#ac-iem","title":"\u0110\u1eb7c \u0110i\u1ec3m","text":"<ul> <li>Vai tr\u00f2: Y\u00eau c\u1ea7u v\u00e0 nh\u1eadn d\u1ecbch v\u1ee5</li> <li>V\u00ed d\u1ee5 thi\u1ebft b\u1ecb: Windows PC, macOS iMac, iPhone, Android, laptop</li> <li>Trong th\u1ef1c t\u1ebf: M\u00e1y t\u00ednh \u0111ang d\u00f9ng xem YouTube, nh\u1eadn AirDrop, t\u1ea3i file</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#vi-du-thuc-te","title":"V\u00ed D\u1ee5 Th\u1ef1c T\u1ebf","text":"<ul> <li>Xem video YouTube \u2192 m\u00e1y t\u00ednh b\u1ea1n = client</li> <li>Nh\u1eadn file AirDrop \u2192 iPhone b\u1ea1n = client</li> <li>T\u1ea3i file t\u1eeb Google Drive \u2192 thi\u1ebft b\u1ecb b\u1ea1n = client</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#2-server-may-chu","title":"2. SERVER (M\u00e1y Ch\u1ee7)","text":""},{"location":"network-ccna/ccna/01.network-devices/#inh-nghia_1","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Server = thi\u1ebft b\u1ecb cung c\u1ea5p d\u1ecbch v\u1ee5 cho client</p>"},{"location":"network-ccna/ccna/01.network-devices/#ac-iem_1","title":"\u0110\u1eb7c \u0110i\u1ec3m","text":"<ul> <li>Vai tr\u00f2: Ph\u1ee5c v\u1ee5 v\u00e0 g\u1eedi d\u1eef li\u1ec7u</li> <li>V\u00ed d\u1ee5 thi\u1ebft b\u1ecb: YouTube server, web server, file server, email server</li> <li>H\u00ecnh d\u1ea1ng: C\u00f3 th\u1ec3 l\u00e0 m\u00e1y chuy\u00ean d\u1ee5ng (IBM, DELL) ho\u1eb7c PC th\u01b0\u1eddng</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#vi-du-thuc-te_1","title":"V\u00ed D\u1ee5 Th\u1ef1c T\u1ebf","text":"<ul> <li>YouTube server \u2192 cung c\u1ea5p video cho b\u1ea1n</li> <li>iPhone g\u1eedi AirDrop \u2192 iPhone \u0111\u00f3 = server</li> <li>Google Drive \u2192 l\u01b0u tr\u1eef file cho b\u1ea1n t\u1ea3i</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#iem-quan-trong","title":"\u0110i\u1ec3m Quan Tr\u1ecdng","text":"<p>C\u00f9ng m\u1ed9t thi\u1ebft b\u1ecb c\u00f3 th\u1ec3 v\u1eeba l\u00e0 client v\u1eeba l\u00e0 server t\u00f9y t\u00ecnh hu\u1ed1ng:</p> <ul> <li>iPhone b\u1ea1n nh\u1eadn AirDrop = client</li> <li>iPhone b\u1ea1n g\u1eedi AirDrop = server</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#3-switch-bo-chuyen-mach","title":"3. SWITCH (B\u1ed9 Chuy\u1ec3n M\u1ea1ch)","text":""},{"location":"network-ccna/ccna/01.network-devices/#inh-nghia_2","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Switch = thi\u1ebft b\u1ecb k\u1ebft n\u1ed1i nhi\u1ec1u end hosts trong c\u00f9ng m\u1ed9t LAN</p>"},{"location":"network-ccna/ccna/01.network-devices/#ac-iem-chinh","title":"\u0110\u1eb7c \u0110i\u1ec3m Ch\u00ednh","text":"<ul> <li>S\u1ed1 c\u1ed5ng: Nhi\u1ec1u (th\u01b0\u1eddng 24, 48 c\u1ed5ng)</li> <li>Ph\u1ea1m vi: Ch\u1ec9 ho\u1ea1t \u0111\u1ed9ng trong LAN</li> <li>Ch\u1ee9c n\u0103ng: Chuy\u1ec3n ti\u1ebfp d\u1eef li\u1ec7u gi\u1eefa c\u00e1c thi\u1ebft b\u1ecb trong LAN</li> <li>H\u1ea1n ch\u1ebf: KH\u00d4NG k\u1ebft n\u1ed1i Internet, KH\u00d4NG k\u1ebft n\u1ed1i gi\u1eefa c\u00e1c LAN kh\u00e1c nhau</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#model-cisco-pho-bien","title":"Model Cisco Ph\u1ed5 Bi\u1ebfn","text":"<ul> <li>Catalyst 9200 - Enterprise cao c\u1ea5p</li> <li>Catalyst 3650 - Enterprise trung c\u1ea5p</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#vi-du-su-dung","title":"V\u00ed D\u1ee5 S\u1eed D\u1ee5ng","text":"<pre><code>PC1 \u2500\u2510\nPC2 \u2500\u2524 Switch \u2500 (ch\u1ec9 trong LAN)\nPC3 \u2500\u2518\n</code></pre>"},{"location":"network-ccna/ccna/01.network-devices/#4-router-bo-inh-tuyen","title":"4. ROUTER (B\u1ed9 \u0110\u1ecbnh Tuy\u1ebfn)","text":""},{"location":"network-ccna/ccna/01.network-devices/#inh-nghia_3","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Router = thi\u1ebft b\u1ecb k\u1ebft n\u1ed1i gi\u1eefa c\u00e1c LAN kh\u00e1c nhau v\u00e0 v\u1edbi Internet</p>"},{"location":"network-ccna/ccna/01.network-devices/#ac-iem-chinh_1","title":"\u0110\u1eb7c \u0110i\u1ec3m Ch\u00ednh","text":"<ul> <li>S\u1ed1 c\u1ed5ng: \u00cdt (2-8 c\u1ed5ng)</li> <li>Ph\u1ea1m vi: K\u1ebft n\u1ed1i nhi\u1ec1u m\u1ea1ng</li> <li>Ch\u1ee9c n\u0103ng: \u0110\u1ecbnh tuy\u1ebfn d\u1eef li\u1ec7u gi\u1eefa c\u00e1c LAN, k\u1ebft n\u1ed1i Internet</li> <li>Vai tr\u00f2: C\u1ea7u n\u1ed1i gi\u1eefa m\u1ea1ng n\u1ed9i b\u1ed9 v\u00e0 Internet</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#model-cisco-pho-bien_1","title":"Model Cisco Ph\u1ed5 Bi\u1ebfn","text":"<ul> <li>ISR 900 - V\u0103n ph\u00f2ng nh\u1ecf</li> <li>ISR 1000, 4000 - Doanh nghi\u1ec7p</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#so-sanh-switch-vs-router","title":"So S\u00e1nh Switch vs Router","text":"Ti\u00eau ch\u00ed Switch Router S\u1ed1 c\u1ed5ng Nhi\u1ec1u (24+) \u00cdt (2-8) Ph\u1ea1m vi Trong LAN Gi\u1eefa LANs K\u1ebft n\u1ed1i Internet \u274c \u2705"},{"location":"network-ccna/ccna/01.network-devices/#5-firewall-tuong-lua","title":"5. FIREWALL (T\u01b0\u1eddng L\u1eeda)","text":""},{"location":"network-ccna/ccna/01.network-devices/#inh-nghia_4","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Firewall = thi\u1ebft b\u1ecb b\u1ea3o m\u1eadt ki\u1ec3m so\u00e1t traffic ra/v\u00e0o m\u1ea1ng</p>"},{"location":"network-ccna/ccna/01.network-devices/#tai-sao-can-firewall","title":"T\u1ea1i Sao C\u1ea7n Firewall?","text":"<ul> <li>M\u1ed1i \u0111e d\u1ecda: K\u1ebb t\u1ea5n c\u00f4ng tr\u00ean Internet</li> <li>B\u1ea3o v\u1ec7: End hosts (PC, server) trong m\u1ea1ng n\u1ed9i b\u1ed9</li> <li>Router kh\u00f4ng \u0111\u1ee7: Ch\u1ec9 c\u00f3 t\u00ednh n\u0103ng b\u1ea3o m\u1eadt c\u01a1 b\u1ea3n</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#ac-iem-chinh_2","title":"\u0110\u1eb7c \u0110i\u1ec3m Ch\u00ednh","text":"<ul> <li>Ho\u1ea1t \u0111\u1ed9ng: Theo rules \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh</li> <li>V\u1ecb tr\u00ed: \"Inside\" ho\u1eb7c \"outside\" m\u1ea1ng</li> <li>Quy\u1ebft \u0111\u1ecbnh: Cho ph\u00e9p/ch\u1eb7n traffic d\u1ef1a tr\u00ean rules</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#loai-firewall","title":"Lo\u1ea1i Firewall","text":""},{"location":"network-ccna/ccna/01.network-devices/#network-firewall-hardware","title":"Network Firewall (Hardware)","text":"<ul> <li>ASA 5500-X - Firewall c\u1ed5 \u0111i\u1ec3n Cisco</li> <li>Firepower 2100 - Next-generation firewall</li> <li>T\u00ednh n\u0103ng: IPS (Intrusion Prevention System)</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#host-based-firewall-software","title":"Host-based Firewall (Software)","text":"<ul> <li>V\u1ecb tr\u00ed: Tr\u00ean t\u1eebng PC</li> <li>V\u00ed d\u1ee5: Windows Defender Firewall</li> <li>Vai tr\u00f2: L\u1edbp b\u1ea3o v\u1ec7 b\u1ed5 sung</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#next-generation-firewall","title":"Next-generation Firewall","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: Firewall + t\u00ednh n\u0103ng l\u1ecdc n\u00e2ng cao</li> <li>T\u00ednh n\u0103ng: IPS, Deep Packet Inspection, Application Control</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#mo-hinh-mang-doanh-nghiep","title":"M\u00f4 H\u00ecnh M\u1ea1ng Doanh Nghi\u1ec7p","text":""},{"location":"network-ccna/ccna/01.network-devices/#cau-truc-co-ban","title":"C\u1ea5u Tr\u00fac C\u01a1 B\u1ea3n","text":"<pre><code>[Chi nh\u00e1nh New York]          [Internet]          [Chi nh\u00e1nh Tokyo]\nPC1 \u2500\u2510                                                    \u250c\u2500 SRV1\nPC2 \u2500\u2524 SW1 \u2500\u2500 R1 \u2500\u2500 FW1 \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 FW2 \u2500\u2500 R2 \u2500\u2500 SW2 \u251c\u2500 SRV2\n     \u2518                                                    \u2518\n</code></pre>"},{"location":"network-ccna/ccna/01.network-devices/#luong-du-lieu","title":"Lu\u1ed3ng D\u1eef Li\u1ec7u","text":"<p>K\u1ecbch b\u1ea3n: PC1 (New York) c\u1ea7n file t\u1eeb SRV1 (Tokyo)</p> <p>\u0110\u01b0\u1eddng \u0111i:</p> <ol> <li>PC1 \u2192 SW1 (chuy\u1ec3n trong LAN New York)</li> <li>SW1 \u2192 R1 (ra kh\u1ecfi LAN New York)</li> <li>R1 \u2192 FW1 (ki\u1ec3m tra b\u1ea3o m\u1eadt)</li> <li>FW1 \u2192 Internet (ra m\u1ea1ng c\u00f4ng c\u1ed9ng)</li> <li>Internet \u2192 FW2 (v\u00e0o m\u1ea1ng Tokyo)</li> <li>FW2 \u2192 R2 (v\u00e0o LAN Tokyo)</li> <li>R2 \u2192 SW2 (trong LAN Tokyo)</li> <li>SW2 \u2192 SRV1 (\u0111\u1ebfn server \u0111\u00edch)</li> </ol> <p>\u0110\u01b0\u1eddng v\u1ec1: SRV1 \u2192 ... \u2192 PC1 (ng\u01b0\u1ee3c l\u1ea1i)</p>"},{"location":"network-ccna/ccna/01.network-devices/#khai-niem-quan-trong","title":"Kh\u00e1i Ni\u1ec7m Quan Tr\u1ecdng","text":""},{"location":"network-ccna/ccna/01.network-devices/#lan-local-area-network","title":"LAN (Local Area Network)","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: M\u1ea1ng c\u1ee5c b\u1ed9 trong c\u00f9ng khu v\u1ef1c</li> <li>V\u00ed d\u1ee5: V\u0103n ph\u00f2ng, t\u1ea7ng nh\u00e0, nh\u00e0 ri\u00eang</li> <li>\u0110\u1eb7c \u0111i\u1ec3m: T\u1ed1c \u0111\u1ed9 cao, k\u1ebft n\u1ed1i tr\u1ef1c ti\u1ebfp</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#internet","title":"Internet","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: M\u1ea1ng to\u00e0n c\u1ea7u k\u1ebft n\u1ed1i c\u00e1c LAN</li> <li>Bi\u1ec3u t\u01b0\u1ee3ng: H\u00ecnh \u0111\u00e1m m\u00e2y trong s\u01a1 \u0111\u1ed3</li> <li>Ch\u1ee9c n\u0103ng: Truy\u1ec1n d\u1eef li\u1ec7u gi\u1eefa c\u00e1c m\u1ea1ng xa nhau</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#end-hostsendpoints","title":"End Hosts/Endpoints","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: Thi\u1ebft b\u1ecb cu\u1ed1i trong m\u1ea1ng</li> <li>Bao g\u1ed3m: PC, laptop, server, smartphone, m\u00e1y in</li> <li>Vai tr\u00f2: Client ho\u1eb7c Server</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#traffic","title":"Traffic","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: D\u1eef li\u1ec7u di chuy\u1ec3n qua m\u1ea1ng</li> <li>V\u00ed d\u1ee5: Email, file, video, web page</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#interfaceport","title":"Interface/Port","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: C\u1ed5ng k\u1ebft n\u1ed1i tr\u00ean thi\u1ebft b\u1ecb m\u1ea1ng</li> <li>V\u00ed d\u1ee5: C\u1ed5ng Ethernet, USB, WiFi</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#nguyen-tac-hoat-ong","title":"Nguy\u00ean T\u1eafc Ho\u1ea1t \u0110\u1ed9ng","text":""},{"location":"network-ccna/ccna/01.network-devices/#client-server-model","title":"Client-Server Model","text":"<ol> <li>Client g\u1eedi y\u00eau c\u1ea7u (request)</li> <li>Server x\u1eed l\u00fd y\u00eau c\u1ea7u</li> <li>Server g\u1eedi ph\u1ea3n h\u1ed3i (response)</li> <li>Client nh\u1eadn k\u1ebft qu\u1ea3</li> </ol>"},{"location":"network-ccna/ccna/01.network-devices/#network-communication","title":"Network Communication","text":"<ol> <li>Trong LAN: PC \u2192 Switch \u2192 PC kh\u00e1c</li> <li>Gi\u1eefa LANs: PC \u2192 Switch \u2192 Router \u2192 Internet \u2192 Router \u2192 Switch \u2192 Server</li> <li>C\u00f3 Firewall: Th\u00eam b\u01b0\u1edbc ki\u1ec3m tra b\u1ea3o m\u1eadt</li> </ol>"},{"location":"network-ccna/ccna/01.network-devices/#iem-can-nho","title":"\u0110i\u1ec3m C\u1ea7n Nh\u1edb","text":""},{"location":"network-ccna/ccna/01.network-devices/#vai-tro-thiet-bi","title":"Vai Tr\u00f2 Thi\u1ebft B\u1ecb","text":"<ul> <li>Switch: K\u1ebft n\u1ed1i trong LAN, nhi\u1ec1u c\u1ed5ng</li> <li>Router: K\u1ebft n\u1ed1i gi\u1eefa LANs, \u00edt c\u1ed5ng, c\u00f3 Internet</li> <li>Firewall: B\u1ea3o m\u1eadt, ki\u1ec3m so\u00e1t traffic</li> <li>Client: Y\u00eau c\u1ea7u d\u1ecbch v\u1ee5</li> <li>Server: Cung c\u1ea5p d\u1ecbch v\u1ee5</li> </ul>"},{"location":"network-ccna/ccna/01.network-devices/#quy-tac-quan-trong","title":"Quy T\u1eafc Quan Tr\u1ecdng","text":"<ol> <li>Switch KH\u00d4NG k\u1ebft n\u1ed1i Internet</li> <li>Router C\u1ea6N THI\u1ebeT \u0111\u1ec3 ra Internet</li> <li>Firewall B\u1eaeT BU\u1ed8C cho b\u1ea3o m\u1eadt</li> <li>C\u00f9ng thi\u1ebft b\u1ecb c\u00f3 th\u1ec3 l\u00e0 client/server</li> <li>LAN = m\u1ea1ng c\u1ee5c b\u1ed9, Internet = m\u1ea1ng to\u00e0n c\u1ea7u</li> </ol>"},{"location":"network-ccna/ccna/01.network-devices/#ung-dung-thuc-te","title":"\u1ee8ng D\u1ee5ng Th\u1ef1c T\u1ebf","text":"<ul> <li>V\u0103n ph\u00f2ng nh\u1ecf: PC \u2192 Switch \u2192 Router \u2192 Internet</li> <li>Doanh nghi\u1ec7p: PC \u2192 Switch \u2192 Firewall \u2192 Router \u2192 Internet</li> <li>Nhi\u1ec1u chi nh\u00e1nh: LAN1 \u2192 Router \u2192 Internet \u2192 Router \u2192 LAN2</li> </ul> <p>T\u00f3m t\u1eaft: Hi\u1ec3u \u0111\u01b0\u1ee3c 5 lo\u1ea1i thi\u1ebft b\u1ecb m\u1ea1ng c\u01a1 b\u1ea3n v\u00e0 c\u00e1ch ch\u00fang k\u1ebft n\u1ed1i t\u1ea1o th\u00e0nh m\u1ed9t m\u1ea1ng ho\u00e0n ch\u1ec9nh t\u1eeb \u0111\u01a1n gi\u1ea3n \u0111\u1ebfn ph\u1ee9c t\u1ea1p.</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/","title":"H\u01b0\u1edbng D\u1eabn Cisco Packet Tracer - CCNA Lab","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#huong-dan-cisco-packet-tracer-ccna-lab","title":"H\u01b0\u1edbng D\u1eabn Cisco Packet Tracer - CCNA Lab","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#lab-la-gi","title":"Lab L\u00e0 G\u00ec?","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#inh-nghia","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Lab trong IT = th\u1ef1c h\u00e0nh hands-on v\u1edbi c\u00f4ng ngh\u1ec7 \u0111ang h\u1ecdc.</p> <p>Labbing cho CCNA = th\u1ef1c h\u00e0nh c\u1ea5u h\u00ecnh router v\u00e0 switch Cisco.</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#lua-chon-lab-ccna","title":"L\u1ef1a Ch\u1ecdn Lab CCNA","text":"Ph\u01b0\u01a1ng ph\u00e1p \u01afu \u0111i\u1ec3m Nh\u01b0\u1ee3c \u0111i\u1ec3m Hardware th\u1eadt Th\u1ef1c t\u1ebf 100% \u0110\u1eaft, kh\u00f3 v\u1eadn chuy\u1ec3n Packet Tracer Mi\u1ec5n ph\u00ed, ti\u1ec7n l\u1ee3i M\u00f4 ph\u1ecfng"},{"location":"network-ccna/ccna/00.lab/01.lab/#cisco-packet-tracer","title":"Cisco Packet Tracer","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#packet-tracer-la-gi","title":"Packet Tracer L\u00e0 G\u00ec?","text":"<p>Cisco Packet Tracer = c\u00f4ng c\u1ee5 m\u00f4 ph\u1ecfng m\u1ea1ng mi\u1ec5n ph\u00ed c\u1ee7a Cisco.</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#tinh-nang-chinh","title":"T\u00ednh N\u0103ng Ch\u00ednh","text":"<ul> <li>M\u00f4 ph\u1ecfng thi\u1ebft b\u1ecb m\u1ea1ng Cisco</li> <li>Th\u1ef1c h\u00e0nh c\u1ea5u h\u00ecnh router/switch</li> <li>Kh\u00f4ng c\u1ea7n hardware th\u1eadt</li> <li>Mi\u1ec5n ph\u00ed v\u00e0 d\u1ec5 s\u1eed d\u1ee5ng</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#han-che","title":"H\u1ea1n Ch\u1ebf","text":"<ul> <li>Kh\u00f4ng ph\u1ea3i thi\u1ebft b\u1ecb th\u1eadt</li> <li>Ph\u1ea7n m\u1ec1m m\u00f4 ph\u1ecfng c\u00f3 gi\u1edbi h\u1ea1n</li> <li>M\u1ed9t s\u1ed1 t\u00ednh n\u0103ng kh\u00f4ng c\u00f3</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#tai-va-cai-at-packet-tracer","title":"T\u1ea3i V\u00e0 C\u00e0i \u0110\u1eb7t Packet Tracer","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#yeu-cau-he-thong","title":"Y\u00eau C\u1ea7u H\u1ec7 Th\u1ed1ng","text":"<p>N\u1ec1n t\u1ea3ng h\u1ed7 tr\u1ee3:</p> <ul> <li>Windows (64-bit, 32-bit)</li> <li>Ubuntu Linux</li> <li>macOS</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#tao-tai-khoan-cisco","title":"T\u1ea1o T\u00e0i Kho\u1ea3n Cisco","text":"<p>B\u1eaft bu\u1ed9c: C\u1ea7n t\u00e0i kho\u1ea3n Cisco \u0111\u1ec3 t\u1ea3i Packet Tracer.</p> <p>C\u00e1ch t\u1ea1o:</p> <ol> <li>Truy c\u1eadp trang \u0111\u0103ng nh\u1eadp Cisco</li> <li>Click \"Sign Up\"</li> <li>\u0110i\u1ec1n th\u00f4ng tin c\u00e1 nh\u00e2n</li> <li>X\u00e1c nh\u1eadn email</li> <li>\u0110\u0103ng nh\u1eadp</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#tai-packet-tracer","title":"T\u1ea3i Packet Tracer","text":"<p>Quy tr\u00ecnh:</p> <ol> <li>Truy c\u1eadp Download Cisco Packet Tracer 9.0 &amp; GNS3 - Packet Tracer Network</li> <li>\u0110\u0103ng nh\u1eadp t\u00e0i kho\u1ea3n Cisco</li> <li>Ch\u1ecdn phi\u00ean b\u1ea3n ph\u00f9 h\u1ee3p v\u1edbi h\u1ec7 \u0111i\u1ec1u h\u00e0nh</li> <li>T\u1ea3i phi\u00ean b\u1ea3n m\u1edbi nh\u1ea5t (8.2 t\u1ea1i th\u1eddi \u0111i\u1ec3m vi\u1ebft)</li> <li>C\u00e0i \u0111\u1eb7t nh\u01b0 ph\u1ea7n m\u1ec1m th\u01b0\u1eddng</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#tai-sao-dung-phien-ban-moi","title":"T\u1ea1i Sao D\u00f9ng Phi\u00ean B\u1ea3n M\u1edbi?","text":"<p>V\u1ea5n \u0111\u1ec1 t\u01b0\u01a1ng th\u00edch:</p> <ul> <li>Phi\u00ean b\u1ea3n c\u0169 KH\u00d4NG m\u1edf \u0111\u01b0\u1ee3c file lab t\u1eeb phi\u00ean b\u1ea3n m\u1edbi</li> <li>Phi\u00ean b\u1ea3n m\u1edbi M\u1ede \u0110\u01af\u1ee2C file lab t\u1eeb phi\u00ean b\u1ea3n c\u0169</li> </ul> <p>Khuy\u1ebfn ngh\u1ecb: Lu\u00f4n d\u00f9ng phi\u00ean b\u1ea3n m\u1edbi nh\u1ea5t.</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#khoa-hoc-cisco-netacademy","title":"Kh\u00f3a H\u1ecdc Cisco NetAcademy","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#khoa-hoc-mien-phi","title":"Kh\u00f3a H\u1ecdc Mi\u1ec5n Ph\u00ed","text":"<p>Cisco cung c\u1ea5p kh\u00f3a h\u1ecdc mi\u1ec5n ph\u00ed v\u1ec1 Packet Tracer:</p> <ol> <li>\"Getting Started with Cisco Packet Tracer\" - 2 gi\u1edd</li> <li>\"Exploring Networking with Cisco Packet Tracer\" - Chi ti\u1ebft h\u01a1n</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#khi-nao-nen-hoc","title":"Khi N\u00e0o N\u00ean H\u1ecdc?","text":"<ul> <li>Mu\u1ed1n master Packet Tracer ho\u00e0n to\u00e0n</li> <li>Th\u1eddi gian r\u1ea3nh \u0111\u1ec3 h\u1ecdc th\u00eam</li> <li>Kh\u00f4ng b\u1eaft bu\u1ed9c cho kh\u00f3a CCNA n\u00e0y</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#tai-lab-files-khoa-hoc","title":"T\u1ea3i Lab Files Kh\u00f3a H\u1ecdc","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#ia-chi-tai","title":"\u0110\u1ecba Ch\u1ec9 T\u1ea3i","text":"<p>my-website\\docs\\network-ccna\\ccna\\00.lab\\CCNA 200-301 Course Files-20221107T182858Z-001.zip</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#quy-trinh","title":"Quy Tr\u00ecnh","text":"<ol> <li>Nh\u1eadp First Name v\u00e0 Email</li> <li>Click \"Join\"</li> <li>Ki\u1ec3m tra email x\u00e1c nh\u1eadn</li> <li>Nh\u1eadn Google Drive link ch\u1ee9a t\u1ea5t c\u1ea3 files</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#cau-truc-files","title":"C\u1ea5u Tr\u00fac Files","text":"<pre><code>Google Drive/\n\u251c\u2500\u2500 Day 1 flashcards\n\u251c\u2500\u2500 Day 1 lab          \u2190 Lab files\n\u251c\u2500\u2500 Day 2 flashcards\n\u251c\u2500\u2500 Day 2 lab          \u2190 Lab files\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"network-ccna/ccna/00.lab/01.lab/#luu-y","title":"L\u01b0u \u00dd","text":"<ul> <li>\u0110\u1ee3i 10 ph\u00fat tr\u01b0\u1edbc khi li\u00ean h\u1ec7 support</li> <li>C\u00f9ng Google Drive v\u1edbi Anki flashcards</li> <li>Bookmark \u0111\u1ec3 truy c\u1eadp d\u1ec5 d\u00e0ng</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#giao-dien-packet-tracer","title":"Giao Di\u1ec7n Packet Tracer","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#ang-nhap-lan-au","title":"\u0110\u0103ng Nh\u1eadp L\u1ea7n \u0110\u1ea7u","text":"<p>Sau khi c\u00e0i \u0111\u1eb7t:</p> <ol> <li>M\u1edf Packet Tracer</li> <li>\u0110\u0103ng nh\u1eadp t\u00e0i kho\u1ea3n Cisco (l\u1ea7n \u0111\u1ea7u)</li> <li>Giao di\u1ec7n ch\u00ednh hi\u1ec3n th\u1ecb</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#mo-lab-file","title":"M\u1edf Lab File","text":"<p>C\u00e1ch 1: Double-click file <code>.pkt</code> C\u00e1ch 2: File menu \u2192 Open \u2192 ch\u1ecdn file</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#cau-truc-lab-files","title":"C\u1ea5u Tr\u00fac Lab Files","text":"<p>Layout ti\u00eau chu\u1ea9n:</p> <ul> <li>Instructions: B\u00ean tr\u00e1i ho\u1eb7c d\u01b0\u1edbi m\u00e0n h\u00ecnh</li> <li>Network topology: Gi\u1eefa m\u00e0n h\u00ecnh</li> <li>Devices: \u0110\u00e3 \u0111\u01b0\u1ee3c \u0111\u1eb7t s\u1eb5n m\u1ed9t s\u1ed1</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#cai-at-preferences","title":"C\u00e0i \u0110\u1eb7t Preferences","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#truy-cap-preferences","title":"Truy C\u1eadp Preferences","text":"<p>Menu: Options \u2192 Preferences</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#tab-interface","title":"Tab Interface","text":"<p>Device Model Labels:</p> <ul> <li>B\u1eadt: Hi\u1ec3n th\u1ecb model thi\u1ebft b\u1ecb (VD: 2911)</li> <li>T\u1eaft: Ch\u1ec9 hi\u1ec3n th\u1ecb t\u00ean \u0111\u1eb7t</li> </ul> <p>Device Name:</p> <ul> <li>Khuy\u1ebfn ngh\u1ecb: \u0110\u1ec3 b\u1eadt \u0111\u1ec3 d\u1ec5 nh\u1eadn bi\u1ebft</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#tab-font","title":"Tab Font","text":"<p>\u0110i\u1ec1u ch\u1ec9nh:</p> <ul> <li>Menu font sizes: K\u00edch th\u01b0\u1edbc menu</li> <li>CLI font size: K\u00edch th\u01b0\u1edbc trong command-line</li> <li>Font colors: M\u00e0u ch\u1eef</li> </ul> <p>V\u00ed d\u1ee5 Matrix Style:</p> <ul> <li>Router IOS Text: Green</li> <li>Router IOS Background: Black</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#cli-command-line-interface","title":"CLI (Command-Line Interface)","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#cli-la-gi","title":"CLI L\u00e0 G\u00ec?","text":"<p>CLI = Command-Line Interface = giao di\u1ec7n d\u00f2ng l\u1ec7nh.</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#vai-tro-trong-khoa-hoc","title":"Vai Tr\u00f2 Trong Kh\u00f3a H\u1ecdc","text":"<ul> <li>Ph\u01b0\u01a1ng ph\u00e1p ch\u00ednh c\u1ea5u h\u00ecnh router/switch</li> <li>Giao di\u1ec7n text-based</li> <li>Commands \u0111\u1ec3 \u0111i\u1ec1u khi\u1ec3n thi\u1ebft b\u1ecb</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#truy-cap-cli","title":"Truy C\u1eadp CLI","text":"<ol> <li>Click v\u00e0o router/switch</li> <li>Ch\u1ecdn tab \"CLI\"</li> <li>Giao di\u1ec7n d\u00f2ng l\u1ec7nh hi\u1ec3n th\u1ecb</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#lab-1-tao-lai-network-topology","title":"Lab 1: T\u1ea1o L\u1ea1i Network Topology","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#muc-tieu","title":"M\u1ee5c Ti\u00eau","text":"<p>T\u1ea1o l\u1ea1i network t\u1eeb Day 1 lecture video v\u1ec1 network devices.</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#topology-can-tao","title":"Topology C\u1ea7n T\u1ea1o","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#thiet-bi-can-dung","title":"Thi\u1ebft B\u1ecb C\u1ea7n D\u00f9ng","text":"Thi\u1ebft b\u1ecb Model S\u1ed1 l\u01b0\u1ee3ng V\u1ecb tr\u00ed Router 2911 2 R1, R2 Switch 2960 2 SW1, SW2 Firewall 5505 2 FW1, FW2 PC PC 2 New York Server Server 2 Tokyo Laptop Laptop 1 Attacker"},{"location":"network-ccna/ccna/00.lab/01.lab/#thuc-hanh-lab","title":"Th\u1ef1c H\u00e0nh Lab","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#buoc-1-at-thiet-bi","title":"B\u01b0\u1edbc 1: \u0110\u1eb7t Thi\u1ebft B\u1ecb","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#at-routers","title":"\u0110\u1eb7t Routers","text":"<ol> <li>Click network devices icon (bottom left)</li> <li>Ch\u1ecdn \"Routers\"</li> <li>Ch\u1ecdn \"2911\"</li> <li>\u0110\u1eb7t 2 router v\u00e0o topology</li> </ol> <p>Cisco ISR 2911: ISR = Integrated Services Router</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#at-switches","title":"\u0110\u1eb7t Switches","text":"<ol> <li>Ch\u1ecdn \"Switches\"</li> <li>Ch\u1ecd \"2960\"</li> <li>\u0110\u1eb7t 2 switch v\u00e0o topology</li> </ol> <p>Cisco Catalyst 2960: Catalyst = d\u00f2ng switch c\u1ee7a Cisco</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#at-firewalls","title":"\u0110\u1eb7t Firewalls","text":"<ol> <li>Ch\u1ecdn \"Security\" \u2192 \"Firewalls\"</li> <li>Ch\u1ecdn \"5505\"</li> <li>\u0110\u1eb7t 2 firewall v\u00e0o topology</li> </ol> <p>Cisco ASA 5505: ASA = Adaptive Security Appliance</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#at-end-devices","title":"\u0110\u1eb7t End Devices","text":"<ol> <li>Ch\u1ecdn \"End Devices\"</li> <li>\u0110\u1eb7t 2 PCs (New York)</li> <li>\u0110\u1eb7t 2 Servers (Tokyo)</li> <li>\u0110\u1eb7t 1 Laptop (Attacker)</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#buoc-2-oi-ten-thiet-bi","title":"B\u01b0\u1edbc 2: \u0110\u1ed5i T\u00ean Thi\u1ebft B\u1ecb","text":"<p>C\u00e1ch \u0111\u1ed5i t\u00ean:</p> <ol> <li>Click v\u00e0o t\u00ean thi\u1ebft b\u1ecb</li> <li>Nh\u1eadp t\u00ean m\u1edbi</li> <li>Enter</li> </ol> <p>Danh s\u00e1ch t\u00ean:</p> <ul> <li>PC1, PC2 (New York)</li> <li>SW1, R1, FW1 (New York)</li> <li>R2, FW2, SW2 (Tokyo)</li> <li>SRV1, SRV2 (Tokyo)</li> <li>Attacker</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#buoc-3-ket-noi-thiet-bi","title":"B\u01b0\u1edbc 3: K\u1ebft N\u1ed1i Thi\u1ebft B\u1ecb","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#chon-cable-tool","title":"Ch\u1ecdn Cable Tool","text":"<ol> <li>Click lightning bolt icon (connection tool)</li> <li>Ch\u1ecdn \"Automatically Choose Connection Type\"</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#thuc-hien-ket-noi","title":"Th\u1ef1c Hi\u1ec7n K\u1ebft N\u1ed1i","text":"<p>Tip t\u0103ng t\u1ed1c: Gi\u1eef Ctrl + click lightning bolt \u0111\u1ec3 kh\u00f4ng ph\u1ea3i ch\u1ecdn l\u1ea1i.</p> <p>Th\u1ee9 t\u1ef1 k\u1ebft n\u1ed1i:</p> <ol> <li>PC1 \u2192 SW1</li> <li>PC2 \u2192 SW1</li> <li>SW1 \u2192 R1</li> <li>R1 \u2192 FW1</li> <li>FW1 \u2192 The Internet</li> <li>The Internet \u2192 R2</li> <li>R2 \u2192 FW2</li> <li>FW2 \u2192 SW2</li> <li>SW2 \u2192 SRV1</li> <li>SW2 \u2192 SRV2</li> <li>Attacker \u2192 The Internet</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#hoan-thanh","title":"Ho\u00e0n Th\u00e0nh","text":"<p>Click \"Cancel\" khi ho\u00e0n th\u00e0nh k\u1ebft n\u1ed1i.</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#chien-luoc-hoc-lab","title":"Chi\u1ebfn L\u01b0\u1ee3c H\u1ecdc Lab","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#quy-trinh-ly-tuong","title":"Quy Tr\u00ecnh L\u00fd T\u01b0\u1edfng","text":"<ol> <li>Xem lecture video tr\u01b0\u1edbc</li> <li>Th\u1eed l\u00e0m lab t\u1ef1 l\u1ef1c trong Packet Tracer</li> <li>Xem lab video \u0111\u1ec3 ki\u1ec3m tra \u0111\u00e1p \u00e1n</li> <li>S\u1eeda l\u1ed7i n\u1ebfu c\u00f3</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#neu-gap-kho-khan","title":"N\u1ebfu G\u1eb7p Kh\u00f3 Kh\u0103n","text":"<p>C\u00f3 th\u1ec3:</p> <ol> <li>Xem lab video tr\u01b0\u1edbc khi l\u00e0m</li> <li>L\u00e0m theo h\u01b0\u1edbng d\u1eabn step-by-step</li> <li>Quan tr\u1ecdng: V\u1eabn ph\u1ea3i th\u1ef1c h\u00e0nh hands-on</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#muc-tieu-lab","title":"M\u1ee5c Ti\u00eau Lab","text":"<ol> <li>Hands-on practice v\u1edbi router/switch Cisco</li> <li>Hi\u1ec3u s\u00e2u concepts t\u1eeb lecture</li> <li>Chu\u1ea9n b\u1ecb cho exam th\u1ef1c t\u1ebf</li> </ol>"},{"location":"network-ccna/ccna/00.lab/01.lab/#loai-lab-trong-khoa-hoc","title":"Lo\u1ea1i Lab Trong Kh\u00f3a H\u1ecdc","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#configuration-labs","title":"Configuration Labs","text":"<ul> <li>M\u1ee5c \u0111\u00edch: H\u1ecdc c\u00e1ch c\u1ea5u h\u00ecnh</li> <li>N\u1ed9i dung: Commands v\u00e0 settings</li> <li>Approach: Follow instructions</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#troubleshooting-labs","title":"Troubleshooting Labs","text":"<ul> <li>M\u1ee5c \u0111\u00edch: T\u00ecm v\u00e0 s\u1eeda l\u1ed7i</li> <li>N\u1ed9i dung: C\u00e1c l\u1ed7i c\u1ea5u h\u00ecnh c\u00f3 s\u1eb5n</li> <li>Approach: Debug v\u00e0 fix problems</li> </ul> <p>L\u01b0u \u00fd: Troubleshooting labs c\u1ea7n d\u00f9ng pre-made lab files v\u00ec \u0111\u00e3 c\u00f3 l\u1ed7i c\u1ed1 \u00fd.</p>"},{"location":"network-ccna/ccna/00.lab/01.lab/#tips-su-dung-packet-tracer","title":"Tips S\u1eed D\u1ee5ng Packet Tracer","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#shortcuts-huu-ich","title":"Shortcuts H\u1eefu \u00cdch","text":"<ul> <li>Ctrl + click tool: Gi\u1eef tool \u0111\u01b0\u1ee3c ch\u1ecdn</li> <li>Space: Pan view</li> <li>Mouse wheel: Zoom in/out</li> <li>Ctrl + Z: Undo</li> <li>Ctrl + S: Save</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#quan-ly-files","title":"Qu\u1ea3n L\u00fd Files","text":"<ul> <li>Save th\u01b0\u1eddng xuy\u00ean: Tr\u00e1nh m\u1ea5t c\u00f4ng vi\u1ec7c</li> <li>\u0110\u1eb7t t\u00ean file: R\u00f5 r\u00e0ng theo lab</li> <li>Backup: L\u01b0u nhi\u1ec1u version</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#performance-tips","title":"Performance Tips","text":"<ul> <li>\u0110\u00f3ng unused tabs</li> <li>Kh\u00f4ng m\u1edf qu\u00e1 nhi\u1ec1u devices c\u00f9ng l\u00fac</li> <li>Update Packet Tracer th\u01b0\u1eddng xuy\u00ean</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#han-che-packet-tracer","title":"H\u1ea1n Ch\u1ebf Packet Tracer","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#so-voi-hardware-that","title":"So V\u1edbi Hardware Th\u1eadt","text":"<ul> <li>Kh\u00f4ng ph\u1ea3i 100% gi\u1ed1ng hardware th\u1eadt</li> <li>M\u1ed9t s\u1ed1 commands kh\u00f4ng c\u00f3</li> <li>Performance kh\u00e1c bi\u1ec7t</li> <li>Bugs trong simulation</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#khi-nao-can-hardware-that","title":"Khi N\u00e0o C\u1ea7n Hardware Th\u1eadt?","text":"<ul> <li>Advanced features kh\u00f4ng c\u00f3 trong PT</li> <li>Real-world experience</li> <li>Performance testing</li> <li>Production environment</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#ket-luan","title":"K\u1ebft Lu\u1eadn","text":""},{"location":"network-ccna/ccna/00.lab/01.lab/#tam-quan-trong-labs","title":"T\u1ea7m Quan Tr\u1ecdng Labs","text":"<p>Labs l\u00e0 then ch\u1ed1t \u0111\u1ec3:</p> <ul> <li>Hi\u1ec3u s\u00e2u l\u00fd thuy\u1ebft</li> <li>Th\u1ef1c h\u00e0nh skills</li> <li>Chu\u1ea9n b\u1ecb exam</li> <li>Experience th\u1ef1c t\u1ebf</li> </ul>"},{"location":"network-ccna/ccna/00.lab/01.lab/#next-steps","title":"Next Steps","text":"<ol> <li>Complete Day 1 lab theo h\u01b0\u1edbng d\u1eabn</li> <li>Familiar v\u1edbi Packet Tracer interface</li> <li>Chu\u1ea9 b\u1ecb cho c\u00e1c labs ti\u1ebfp theo</li> <li>Practice regularly \u0111\u1ec3 n\u00e2ng cao skills</li> </ol> <p>T\u00f3m t\u1eaft: Packet Tracer l\u00e0 c\u00f4ng c\u1ee5 quan tr\u1ecdng \u0111\u1ec3 th\u1ef1c h\u00e0nh CCNA. Hi\u1ec3u c\u00e1ch s\u1eed d\u1ee5ng v\u00e0 l\u00e0m labs \u0111\u1ec1u \u0111\u1eb7n s\u1ebd gi\u00fap h\u1ecdc hi\u1ec7u qu\u1ea3 h\u01a1n.</p>"},{"location":"network-comtia/roadmap/","title":"\ud83d\udce1 Roadmap H\u1ecdc Networking &amp; Security To\u00e0n Di\u1ec7n (Zero \u2192 Hero)","text":""},{"location":"network-comtia/roadmap/#roadmap-hoc-networking-security-toan-dien-zero-hero","title":"\ud83d\udce1 Roadmap H\u1ecdc Networking &amp; Security To\u00e0n Di\u1ec7n (Zero \u2192 Hero)","text":""},{"location":"network-comtia/roadmap/#muc-tieu","title":"\ud83c\udfaf M\u1ee5c ti\u00eau","text":"<ul> <li>N\u1eafm v\u1eefng ki\u1ebfn th\u1ee9c n\u1ec1n t\u1ea3ng, th\u1ef1c h\u00e0nh c\u1ea5u h\u00ecnh/v\u1eadn h\u00e0nh c\u00e1c h\u1ec7 th\u1ed1ng m\u1ea1ng th\u1ef1c t\u1ebf.</li> <li>S\u1eb5n s\u00e0ng ph\u1ecfng v\u1ea5n m\u1ecdi v\u1ecb tr\u00ed DevOps/Network/Security Engineer.</li> <li>Th\u00e0nh th\u1ea1o troubleshooting v\u00e0 b\u1ea3o m\u1eadt h\u1ec7 th\u1ed1ng trong m\u00f4i tr\u01b0\u1eddng on-premise &amp; cloud.</li> </ul>"},{"location":"network-comtia/roadmap/#1-nen-tang-mang-may-tinh","title":"1\ufe0f\u20e3 N\u1ec1n t\u1ea3ng M\u1ea1ng M\u00e1y T\u00ednh","text":""},{"location":"network-comtia/roadmap/#11-mo-hinh-osi-tcpip","title":"1.1. M\u00f4 h\u00ecnh OSI &amp; TCP/IP","text":"<ul> <li>Hi\u1ec3u vai tr\u00f2 t\u1eebng t\u1ea7ng (Physical \u2192 Application), qu\u00e1 tr\u00ecnh encapsulation/decapsulation.</li> <li>So s\u00e1nh OSI v\u00e0 TCP/IP, v\u00ed d\u1ee5 th\u1ef1c t\u1ebf khi truy\u1ec1n d\u1eef li\u1ec7u (g\u00f5 google.com tr\u00ean tr\u00ecnh duy\u1ec7t).</li> <li>T\u00e0i li\u1ec7u: OSI Model Explained</li> <li>Th\u1ef1c h\u00e0nh: V\u1ebd s\u01a1 \u0111\u1ed3 m\u00f4 h\u00ecnh OSI, ph\u00e2n t\u00edch l\u1ed7i qua c\u00e1c t\u1ea7ng khi troubleshooting.</li> </ul>"},{"location":"network-comtia/roadmap/#12-ia-chi-ip-subnet-routing","title":"1.2. \u0110\u1ecba ch\u1ec9 IP, Subnet, Routing","text":"<ul> <li>IP Address: C\u1ea5u tr\u00fac IPv4/IPv6, ph\u00e2n bi\u1ec7t \u0111\u1ecba ch\u1ec9 Private/Public, Loopback, Multicast.</li> <li>Subnetting: T\u00ednh to\u00e1n subnet mask, CIDR, ph\u00e2n chia m\u1ea1ng doanh nghi\u1ec7p.</li> <li>Routing: Static/Dynamic, routing table, gateway, default route.</li> <li>T\u00e0i li\u1ec7u: Subnet Calculator</li> <li>Th\u1ef1c h\u00e0nh: T\u1ef1 chia subnet cho m\u1ed9t m\u1ea1ng c\u00f4ng ty gi\u1ea3 l\u1eadp.</li> </ul>"},{"location":"network-comtia/roadmap/#13-giao-thuc-mang-co-ban","title":"1.3. Giao th\u1ee9c m\u1ea1ng c\u01a1 b\u1ea3n","text":"<ul> <li>TCP vs UDP: \u0110\u1eb7c \u0111i\u1ec3m, handshake 3 b\u01b0\u1edbc, ki\u1ec3m so\u00e1t lu\u1ed3ng, \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf.</li> <li>ICMP, ARP, DHCP, DNS, NAT, HTTP/HTTPS, FTP/SFTP, SMTP, SNMP, Telnet/SSH.</li> <li>T\u00e0i li\u1ec7u: TCP vs UDP</li> <li>Th\u1ef1c h\u00e0nh: S\u1eed d\u1ee5ng Wireshark/tcpdump \u0111\u1ec3 b\u1eaft handshake TCP, truy v\u1ea5n DNS, ARP.</li> </ul>"},{"location":"network-comtia/roadmap/#14-thiet-bi-mang","title":"1.4. Thi\u1ebft b\u1ecb m\u1ea1ng","text":"<ul> <li>Router, Switch (L2/L3), Firewall, Load Balancer, Access Point, Proxy Server, IDS/IPS.</li> <li>Ch\u1ee9c n\u0103ng, v\u1ecb tr\u00ed trong ki\u1ebfn tr\u00fac m\u1ea1ng doanh nghi\u1ec7p.</li> <li>T\u00e0i li\u1ec7u: Cisco Networking Basics</li> <li>Th\u1ef1c h\u00e0nh: S\u01a1 \u0111\u1ed3 h\u00f3a ki\u1ebfn tr\u00fac m\u1ea1ng v\u0103n ph\u00f2ng (2 ph\u00f2ng ban, VLAN, firewall).</li> </ul>"},{"location":"network-comtia/roadmap/#2-switching-routing-chuyen-sau","title":"2\ufe0f\u20e3 Switching &amp; Routing Chuy\u00ean S\u00e2u","text":""},{"location":"network-comtia/roadmap/#21-switch-vlan","title":"2.1. Switch &amp; VLAN","text":"<ul> <li>Kh\u00e1i ni\u1ec7m VLAN, c\u1ea5u h\u00ecnh VLAN, trunking (802.1Q), native VLAN, port security.</li> <li>Spanning Tree Protocol (STP, RSTP, MSTP): Ch\u1ed1ng loop, root bridge, BPDU.</li> <li>EtherChannel, Link Aggregation.</li> <li>T\u00e0i li\u1ec7u: VLANs Explained</li> <li>Th\u1ef1c h\u00e0nh: C\u1ea5u h\u00ecnh VLAN &amp; trunking tr\u00ean Packet Tracer/GNS3.</li> </ul>"},{"location":"network-comtia/roadmap/#22-routing-chi-tiet","title":"2.2. Routing Chi Ti\u1ebft","text":"<ul> <li>Static vs Dynamic Routing: \u01afu nh\u01b0\u1ee3c \u0111i\u1ec3m, khi n\u00e0o d\u00f9ng.</li> <li>Routing Protocols: RIP, OSPF, EIGRP, BGP. Thu\u1eadt to\u00e1n, c\u1ea5u h\u00ecnh, troubleshooting.</li> <li>Route Redistribution, Policy Based Routing.</li> <li>T\u00e0i li\u1ec7u: OSPF Fundamentals</li> <li>Th\u1ef1c h\u00e0nh: C\u1ea5u h\u00ecnh OSPF/BGP trong lab gi\u1ea3 l\u1eadp.</li> </ul>"},{"location":"network-comtia/roadmap/#23-wireless-networking","title":"2.3. Wireless Networking","text":"<ul> <li>Chu\u1ea9n Wi-Fi (802.11 a/b/g/n/ac/ax), SSID, Channel, Band, Security (WEP, WPA, WPA2, WPA3).</li> <li>Enterprise Wi-Fi: Radius, captive portal.</li> <li>Th\u1ef1c h\u00e0nh: C\u1ea5u h\u00ecnh Access Point, ki\u1ec3m tra b\u1ea3o m\u1eadt WPA2-Enterprise.</li> </ul>"},{"location":"network-comtia/roadmap/#3-dich-vu-giao-thuc-tang-ung-dung","title":"3\ufe0f\u20e3 D\u1ecbch v\u1ee5 &amp; Giao th\u1ee9c t\u1ea7ng \u1ee9ng d\u1ee5ng","text":""},{"location":"network-comtia/roadmap/#31-dns","title":"3.1. DNS","text":"<ul> <li>Ph\u00e2n gi\u1ea3i DNS (recursive/iterative), c\u00e1c lo\u1ea1i server (root, TLD, authoritative).</li> <li>C\u00e1c record: A, AAAA, MX, NS, CNAME, PTR, TXT.</li> <li>DNSSEC, DNS Poisoning.</li> <li>T\u00e0i li\u1ec7u: DNS Deep Dive</li> <li>Th\u1ef1c h\u00e0nh: Thi\u1ebft l\u1eadp Bind DNS server, c\u1ea5u h\u00ecnh c\u00e1c record, debug b\u1eb1ng nslookup/dig.</li> </ul>"},{"location":"network-comtia/roadmap/#32-dhcp","title":"3.2. DHCP","text":"<ul> <li>Quy tr\u00ecnh DORA (Discover, Offer, Request, Acknowledge).</li> <li>Lease time, reservation, relay agent.</li> <li>Th\u1ef1c h\u00e0nh: C\u1ea5u h\u00ecnh DHCP server, ki\u1ec3m tra c\u1ea5p IP \u0111\u1ed9ng/t\u0129nh.</li> </ul>"},{"location":"network-comtia/roadmap/#33-nat-port-forwarding","title":"3.3. NAT &amp; Port Forwarding","text":"<ul> <li>Static NAT, Dynamic NAT, PAT, \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf (chuy\u1ec3n \u0111\u1ed5i \u0111\u1ecba ch\u1ec9, truy c\u1eadp Internet).</li> <li>Port forwarding (Expose d\u1ecbch v\u1ee5 n\u1ed9i b\u1ed9 ra ngo\u00e0i).</li> <li>Th\u1ef1c h\u00e0nh: Thi\u1ebft l\u1eadp NAT tr\u00ean router/firewall trong lab.</li> </ul>"},{"location":"network-comtia/roadmap/#34-cac-giao-thuc-tang-ung-dung-khac","title":"3.4. C\u00e1c giao th\u1ee9c t\u1ea7ng \u1ee9ng d\u1ee5ng kh\u00e1c","text":"<ul> <li>HTTP/HTTPS: Quy tr\u00ecnh TLS handshake, c\u00e1c ph\u01b0\u01a1ng th\u1ee9c, status code, header.</li> <li>SMTP/POP3/IMAP: G\u1eedi/nh\u1eadn email.</li> <li>SFTP vs FTP, Telnet vs SSH.</li> <li>Th\u1ef1c h\u00e0nh: S\u1eed d\u1ee5ng curl, wget, telnet, ssh \u0111\u1ec3 ki\u1ec3m tra d\u1ecbch v\u1ee5.</li> </ul>"},{"location":"network-comtia/roadmap/#4-network-security-toan-dien","title":"4\ufe0f\u20e3 Network Security To\u00e0n Di\u1ec7n","text":""},{"location":"network-comtia/roadmap/#41-firewall-acl","title":"4.1. Firewall &amp; ACL","text":"<ul> <li>C\u00e1c lo\u1ea1i firewall: Packet filtering, stateful, proxy, NGFW.</li> <li>C\u1ea5u h\u00ecnh ACL (Access Control List), rule security, zone concept.</li> <li>Th\u1ef1c h\u00e0nh: C\u1ea5u h\u00ecnh iptables (Linux), Windows Firewall, ACL tr\u00ean Cisco.</li> </ul>"},{"location":"network-comtia/roadmap/#42-vpn","title":"4.2. VPN","text":"<ul> <li>C\u00e1c lo\u1ea1i VPN: Remote Access, Site-to-Site, SSL, IPsec.</li> <li>C\u1ea5u h\u00ecnh VPN server (OpenVPN, WireGuard).</li> <li>Th\u1ef1c h\u00e0nh: Thi\u1ebft l\u1eadp VPN, ki\u1ec3m tra traffic qua VPN tunnel.</li> </ul>"},{"location":"network-comtia/roadmap/#43-idsips-waf","title":"4.3. IDS/IPS &amp; WAF","text":"<ul> <li>IDS vs IPS, signature-based vs anomaly-based.</li> <li>WAF (Web Application Firewall): C\u1ea5u h\u00ecnh rule, l\u1ecdc truy c\u1eadp web.</li> <li>Th\u1ef1c h\u00e0nh: C\u00e0i \u0111\u1eb7t Suricata/Snort, c\u1ea5u h\u00ecnh WAF tr\u00ean Nginx/AWS.</li> </ul>"},{"location":"network-comtia/roadmap/#44-authentication-authorization","title":"4.4. Authentication &amp; Authorization","text":"<ul> <li>MFA, SSO, RBAC, Security Token.</li> <li>Principle of Least Privilege (PoLP).</li> <li>Th\u1ef1c h\u00e0nh: Thi\u1ebft l\u1eadp MFA tr\u00ean h\u1ec7 th\u1ed1ng, c\u1ea5u h\u00ecnh RBAC trong Kubernetes.</li> </ul>"},{"location":"network-comtia/roadmap/#45-network-hardening","title":"4.5. Network Hardening","text":"<ul> <li>Disable c\u00e1c d\u1ecbch v\u1ee5/c\u1ed5ng kh\u00f4ng c\u1ea7n thi\u1ebft, s\u1eed d\u1ee5ng giao th\u1ee9c qu\u1ea3n tr\u1ecb an to\u00e0n (SSH, HTTPS).</li> <li>Network segmentation, DMZ, Zero Trust, honeypot.</li> <li>Th\u1ef1c h\u00e0nh: Ph\u00e2n \u0111o\u1ea1n m\u1ea1ng, tri\u1ec3n khai DMZ cho web server.</li> </ul>"},{"location":"network-comtia/roadmap/#46-cac-tan-cong-pho-bien-phong-chong","title":"4.6. C\u00e1c t\u1ea5n c\u00f4ng ph\u1ed5 bi\u1ebfn &amp; ph\u00f2ng ch\u1ed1ng","text":"<ul> <li>DDoS, MITM, ARP/DNS Spoofing, SSRF, SQL Injection, XSS, OWASP Top 10.</li> <li>Ph\u00f2ng ch\u1ed1ng: Rate limiting, monitoring, DNSSEC, HSTS, CSP.</li> <li>Th\u1ef1c h\u00e0nh: M\u00f4 ph\u1ecfng t\u1ea5n c\u00f4ng v\u00e0 ph\u00f2ng th\u1ee7 trong lab.</li> </ul>"},{"location":"network-comtia/roadmap/#5-networking-in-cloud-modern-infrastructure","title":"5\ufe0f\u20e3 Networking in Cloud &amp; Modern Infrastructure","text":""},{"location":"network-comtia/roadmap/#51-cloud-networking-aws-azure-gcp","title":"5.1. Cloud Networking (AWS, Azure, GCP)","text":"<ul> <li>VPC/VNet, Subnet, Route Table, Security Group, Network ACL, Load Balancer, Direct Connect, Peering.</li> <li>Cloud WAF, cloud IDS/IPS.</li> <li>Th\u1ef1c h\u00e0nh: T\u1ea1o VPC, c\u1ea5u h\u00ecnh Security Group, th\u1eed nghi\u1ec7m peering tr\u00ean AWS/Azure.</li> </ul>"},{"location":"network-comtia/roadmap/#52-container-kubernetes-networking","title":"5.2. Container &amp; Kubernetes Networking","text":"<ul> <li>Docker networking: Bridge, host, overlay, macvlan.</li> <li>Kubernetes: Pod-to-pod networking, Service, Ingress, Network Policy, CNI (Calico, Flannel, Weave).</li> <li>Service Mesh (Istio, Linkerd): mTLS, traffic control, observability.</li> <li>Th\u1ef1c h\u00e0nh: C\u1ea5u h\u00ecnh Network Policy trong Kubernetes, tri\u1ec3n khai Istio demo.</li> </ul>"},{"location":"network-comtia/roadmap/#53-sdn-software-defined-networking","title":"5.3. SDN (Software Defined Networking)","text":"<ul> <li>Kh\u00e1i ni\u1ec7m t\u00e1ch bi\u1ec7t control plane v\u00e0 data plane.</li> <li>OpenFlow, SDN controller (OpenDaylight).</li> <li>Th\u1ef1c h\u00e0nh: Demo SDN controller trong lab \u1ea3o h\u00f3a.</li> </ul>"},{"location":"network-comtia/roadmap/#54-network-automation-iac","title":"5.4. Network Automation &amp; IaC","text":"<ul> <li>Ansible, Terraform cho c\u1ea5u h\u00ecnh thi\u1ebft b\u1ecb m\u1ea1ng.</li> <li>Python (Netmiko, Paramiko) cho automation.</li> <li>Th\u1ef1c h\u00e0nh: Vi\u1ebft playbook Ansible c\u1ea5u h\u00ecnh switch/router, script Python ki\u1ec3m tra tr\u1ea1ng th\u00e1i thi\u1ebft b\u1ecb.</li> </ul>"},{"location":"network-comtia/roadmap/#6-monitoring-troubleshooting-best-practice","title":"6\ufe0f\u20e3 Monitoring, Troubleshooting &amp; Best Practice","text":""},{"location":"network-comtia/roadmap/#61-monitoring-alert","title":"6.1. Monitoring &amp; Alert","text":"<ul> <li>SNMP, syslog, SIEM (ELK, Splunk), Zabbix, Nagios, Prometheus, Grafana.</li> <li>Th\u1ef1c h\u00e0nh: C\u00e0i \u0111\u1eb7t Zabbix/Nagios, c\u1ea5u h\u00ecnh gi\u00e1m s\u00e1t thi\u1ebft b\u1ecb m\u1ea1ng/server.</li> </ul>"},{"location":"network-comtia/roadmap/#62-troubleshooting-network","title":"6.2. Troubleshooting Network","text":"<ul> <li>Quy tr\u00ecnh: Top-down, bottom-up, divide &amp; conquer.</li> <li>C\u00e1c l\u1ec7nh thi\u1ebft y\u1ebfu: ping, traceroute, nslookup/dig, ifconfig/ip, netstat/ss, tcpdump, nmap, telnet/nc, arp.</li> <li>Ph\u00e2n t\u00edch l\u01b0u l\u01b0\u1ee3ng: Wireshark, tcpdump.</li> <li>Th\u1ef1c h\u00e0nh: X\u1eed l\u00fd c\u00e1c case: m\u1ea5t m\u1ea1ng, ch\u1eadm m\u1ea1ng, l\u1ed7i DNS/DHCP, port closed, loop switch...</li> </ul>"},{"location":"network-comtia/roadmap/#63-high-availability-scalability","title":"6.3. High Availability &amp; Scalability","text":"<ul> <li>HA: VRRP/HSRP, clustering, failover, redundancy.</li> <li>Load Balancer: L4/L7, health check, sticky session.</li> <li>Scalability: M\u00f4 h\u00ecnh scale-out, scale-up.</li> <li>Th\u1ef1c h\u00e0nh: Tri\u1ec3n khai HAProxy, thi\u1ebft k\u1ebf h\u1ec7 th\u1ed1ng HA cho web server.</li> </ul>"},{"location":"network-comtia/roadmap/#64-backup-disaster-recovery","title":"6.4. Backup &amp; Disaster Recovery","text":"<ul> <li>K\u1ebf ho\u1ea1ch backup, snapshot, restore, DR site.</li> <li>Th\u1ef1c h\u00e0nh: Thi\u1ebft l\u1eadp backup \u0111\u1ecbnh k\u1ef3 cho h\u1ec7 th\u1ed1ng m\u1ea1ng/server.</li> </ul>"},{"location":"network-comtia/roadmap/#7-chuan-bi-phong-van-case-study","title":"7\ufe0f\u20e3 Chu\u1ea9n b\u1ecb Ph\u1ecfng v\u1ea5n &amp; Case Study","text":""},{"location":"network-comtia/roadmap/#71-cau-hoi-phong-van-mau-theo-cap-o","title":"7.1. C\u00e2u h\u1ecfi ph\u1ecfng v\u1ea5n m\u1eabu (theo c\u1ea5p \u0111\u1ed9)","text":"<ul> <li>Beginner: Kh\u00e1i ni\u1ec7m, \u0111\u1ecbnh ngh\u0129a, \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf.</li> <li>Intermediate: Ph\u00e2n t\u00edch, so s\u00e1nh, troubleshooting, thi\u1ebft k\u1ebf nh\u1ecf.</li> <li>Advanced: Thi\u1ebft k\u1ebf h\u1ec7 th\u1ed1ng l\u1edbn, security, cloud/container networking, automation.</li> </ul>"},{"location":"network-comtia/roadmap/#72-scenario-system-design","title":"7.2. Scenario &amp; System Design","text":"<ul> <li>X\u1eed l\u00fd s\u1ef1 c\u1ed1 m\u1ea1ng, thi\u1ebft k\u1ebf m\u1ea1ng doanh nghi\u1ec7p, HA/DR, b\u1ea3o m\u1eadt h\u1ec7 th\u1ed1ng, ph\u00e2n t\u00edch log...</li> </ul>"},{"location":"network-comtia/roadmap/#73-ky-nang-trinh-bay-giai-thich-ve-so-o-dan-chung-thuc-te","title":"7.3. K\u1ef9 n\u0103ng tr\u00ecnh b\u00e0y, gi\u1ea3i th\u00edch, v\u1ebd s\u01a1 \u0111\u1ed3, d\u1eabn ch\u1ee9ng th\u1ef1c t\u1ebf.","text":""},{"location":"network-comtia/roadmap/#8-tai-nguyen-hoc-tap-chung-chi","title":"8\ufe0f\u20e3 T\u00e0i nguy\u00ean h\u1ecdc t\u1eadp &amp; Ch\u1ee9ng ch\u1ec9","text":"<ul> <li>S\u00e1ch: \"Computer Networking: A Top-Down Approach\", \"Network Warrior\", \"TCP/IP Illustrated\".</li> <li>Lab: Cisco Packet Tracer, GNS3, EVE-NG, VirtualBox/KVM.</li> <li>Online: Cisco NetAcad, NetworkLessons, Freecodecamp Network</li> <li>Ch\u1ee9ng ch\u1ec9: CompTIA Network+, Cisco CCNA, AWS/Azure/GCP Certified (Cloud Networking/Security).</li> </ul>"},{"location":"network-comtia/roadmap/#tips-hoc-hieu-qua","title":"\ud83d\udd25 Tips h\u1ecdc hi\u1ec7u qu\u1ea3","text":"<ul> <li>H\u1ecdc l\u00fd thuy\u1ebft lu\u00f4n \u0111i k\u00e8m th\u1ef1c h\u00e0nh lab.</li> <li>Ghi ch\u00fa l\u1ea1i l\u1ed7i th\u1ef1c t\u1ebf, case study, gi\u1ea3i ph\u00e1p \u0111\u00e3 \u00e1p d\u1ee5ng.</li> <li>Th\u1ef1c hi\u1ec7n c\u00e1c b\u00e0i t\u1eadp thi\u1ebft k\u1ebf, troubleshooting th\u1eadt nhi\u1ec1u.</li> <li>N\u1eafm v\u1eefng c\u00e1c l\u1ec7nh, c\u00f4ng c\u1ee5 ch\u1ea9n \u0111o\u00e1n - \u0111\u00e2y l\u00e0 \"v\u0169 kh\u00ed\" khi \u0111i ph\u1ecfng v\u1ea5n.</li> </ul>"},{"location":"network-comtia/roadmap/#lo-trinh-nay-la-kim-chi-nam-e-chinh-phuc-moi-kien-thuc-ky-nang-phong-van-networkingsecurity","title":"\ud83d\ude80 L\u1ed9 tr\u00ecnh n\u00e0y l\u00e0 kim ch\u1ec9 nam \u0111\u1ec3 chinh ph\u1ee5c m\u1ecdi ki\u1ebfn th\u1ee9c, k\u1ef9 n\u0103ng &amp; ph\u1ecfng v\u1ea5n Networking/Security!","text":""},{"location":"network-comtia/01.fundamental/01.intro/","title":"Gi\u1edbi thi\u1ec7u v\u1ec1 c\u00e1c ki\u1ebfn th\u1ee9c n\u1ec1n t\u1ea3ng m\u1ea1ng m\u00e1y t\u00ednh: X\u01b0\u01a1ng s\u1ed1ng c\u1ee7a th\u1ebf gi\u1edbi s\u1ed1","text":""},{"location":"network-comtia/01.fundamental/01.intro/#gioi-thieu-ve-cac-kien-thuc-nen-tang-mang-may-tinh-xuong-song-cua-the-gioi-so","title":"Gi\u1edbi thi\u1ec7u v\u1ec1 c\u00e1c ki\u1ebfn th\u1ee9c n\u1ec1n t\u1ea3ng m\u1ea1ng m\u00e1y t\u00ednh: X\u01b0\u01a1ng s\u1ed1ng c\u1ee7a th\u1ebf gi\u1edbi s\u1ed1","text":"<p>Trong th\u1eddi \u0111\u1ea1i s\u1ed1 ng\u00e0y nay, m\u1ea1ng m\u00e1y t\u00ednh l\u00e0 nh\u1eefng s\u1ee3i d\u00e2y v\u00f4 h\u00ecnh k\u1ebft n\u1ed1i c\u00e1c thi\u1ebft b\u1ecb, \u1ee9ng d\u1ee5ng v\u00e0 tr\u1ea3i nghi\u1ec7m h\u00e0ng ng\u00e0y c\u1ee7a ch\u00fang ta. D\u00f9 b\u1ea1n \u0111ang xem phim tr\u1ef1c tuy\u1ebfn, g\u1eedi tin nh\u1eafn hay g\u1ecdi video, t\u1ea5t c\u1ea3 \u0111\u1ec1u nh\u1edd v\u00e0o m\u1ea1ng m\u00e1y t\u00ednh. V\u1eady m\u1ea1ng l\u00e0 g\u00ec v\u00e0 t\u1ea1i sao ch\u00fang l\u1ea1i quan tr\u1ecdng \u0111\u1ebfn v\u1eady?</p>"},{"location":"network-comtia/01.fundamental/01.intro/#mang-may-tinh-la-gi","title":"M\u1ea1ng m\u00e1y t\u00ednh l\u00e0 g\u00ec?","text":"<p>Khi ngh\u0129 \u0111\u1ebfn m\u1ea1ng m\u00e1y t\u00ednh, b\u1ea1n c\u00f3 th\u1ec3 h\u00ecnh dung ra c\u00e1c thi\u1ebft b\u1ecb nh\u01b0 router, switch ho\u1eb7c m\u1ea1ng WiFi t\u1ea1i nh\u00e0. Tuy nhi\u00ean, m\u1ea1ng kh\u00f4ng ch\u1ec9 l\u00e0 internet hay m\u00e1y t\u00ednh \u2013 ch\u00fang bao g\u1ed3m nhi\u1ec1u c\u00f4ng ngh\u1ec7 \u0111a d\u1ea1ng, k\u1ebft n\u1ed1i t\u1eeb \u0111\u1ed3ng h\u1ed3 th\u00f4ng minh \u0111\u1ebfn \u0111i\u1ec7n tho\u1ea1i, t\u1eeb nh\u00e0 th\u00f4ng minh \u0111\u1ebfn c\u1ea3 th\u00e0nh ph\u1ed1.</p> <p>M\u1ea1ng c\u00f3 th\u1ec3 l\u00e0 c\u00f3 d\u00e2y (nh\u01b0 c\u00e1p Ethernet, c\u00e1p quang) ho\u1eb7c kh\u00f4ng d\u00e2y (WiFi, di \u0111\u1ed9ng). M\u1ee5c \u0111\u00edch ch\u00ednh c\u1ee7a m\u1ea1ng l\u00e0 k\u1ebft n\u1ed1i c\u00e1c thi\u1ebft b\u1ecb \u0111\u1ec3 trao \u0111\u1ed5i d\u1eef li\u1ec7u m\u1ed9t c\u00e1ch li\u1ec1n m\u1ea1ch.</p>"},{"location":"network-comtia/01.fundamental/01.intro/#vi-du-thuc-te","title":"V\u00ed d\u1ee5 th\u1ef1c t\u1ebf","text":"<ul> <li>M\u1ea1ng c\u00e1 nh\u00e2n (PAN): \u0110\u1ed3ng h\u1ed3 th\u00f4ng minh k\u1ebft n\u1ed1i v\u1edbi \u0111i\u1ec7n tho\u1ea1i qua Bluetooth, t\u1ea1o n\u00ean m\u1ed9t PAN \u2013 m\u1ea1ng \u1edf ph\u1ea1m vi c\u00e1 nh\u00e2n, do c\u00e1c thi\u1ebft b\u1ecb \u1edf g\u1ea7n nhau.</li> <li>M\u1ea1ng n\u1ed9i b\u1ed9 (LAN): M\u1ea1ng WiFi \u1edf nh\u00e0 gi\u00fap m\u00e1y t\u00ednh b\u1ea3ng k\u1ebft n\u1ed1i internet qua \u0111i\u1ec3m truy c\u1eadp kh\u00f4ng d\u00e2y. \u0110\u00e2y l\u00e0 LAN, th\u01b0\u1eddng gi\u1edbi h\u1ea1n trong m\u1ed9t t\u00f2a nh\u00e0 ho\u1eb7c gia \u0111\u00ecnh.</li> <li>Ngo\u00e0i ph\u1ea1m vi gia \u0111\u00ecnh: M\u00e1y t\u00ednh \u0111\u1ec3 b\u00e0n k\u1ebft n\u1ed1i v\u1edbi switch, switch n\u1ed1i \u0111\u1ebfn router, router n\u1ed1i \u0111\u1ebfn modem r\u1ed3i ra internet. M\u1ed7i thi\u1ebft b\u1ecb \u0111\u1ec1u \u0111\u00f3ng vai tr\u00f2 quan tr\u1ecdng trong ki\u1ebfn tr\u00fac m\u1ea1ng.</li> </ul>"},{"location":"network-comtia/01.fundamental/01.intro/#qua-trinh-hoi-tu-mang","title":"Qu\u00e1 tr\u00ecnh h\u1ed9i t\u1ee5 m\u1ea1ng","text":"<p>Tr\u01b0\u1edbc \u0111\u00e2y, c\u00e1c m\u1ea1ng ph\u1ee5c v\u1ee5 nh\u1eefng m\u1ee5c \u0111\u00edch ri\u00eang bi\u1ec7t \u2013 m\u1ea1ng \u0111i\u1ec7n tho\u1ea1i, m\u1ea1ng m\u00e1y t\u00ednh, m\u1ea1ng truy\u1ec1n h\u00ecnh. Ng\u00e0y nay, t\u1ea5t c\u1ea3 \u0111\u00e3 h\u1ed9i t\u1ee5 th\u00e0nh m\u1ed9t m\u1ea1ng duy nh\u1ea5t, truy\u1ec1n t\u1ea3i c\u1ea3 tho\u1ea1i, d\u1eef li\u1ec7u v\u00e0 video tr\u00ean c\u00f9ng m\u1ed9t k\u1ebft n\u1ed1i. \u0110i\u1ec7n tho\u1ea1i th\u00f4ng minh l\u00e0 v\u00ed d\u1ee5 r\u00f5 nh\u1ea5t: g\u1ecdi \u0111i\u1ec7n, nh\u1eafn tin, l\u01b0\u1edbt web, xem video\u2026 \u0111\u1ec1u l\u00e0 d\u1eef li\u1ec7u s\u1ed1 tr\u00ean c\u00f9ng m\u1ed9t m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/01.intro/#o-tin-cay-nam-so-chin-five-nines-ve-thoi-gian-hoat-ong","title":"\u0110\u1ed9 tin c\u1eady: \u201cN\u0103m s\u1ed1 ch\u00edn\u201d (Five-Nines) v\u1ec1 th\u1eddi gian ho\u1ea1t \u0111\u1ed9ng","text":"<p>V\u00ec m\u1ea1ng qu\u00e1 quan tr\u1ecdng, \u0111\u1ed9 tin c\u1eady tr\u1edf th\u00e0nh y\u1ebfu t\u1ed1 s\u1ed1ng c\u00f2n. 100% uptime l\u00e0 kh\u00f4ng th\u1ef1c t\u1ebf, n\u00ean nhi\u1ec1u t\u1ed5 ch\u1ee9c \u0111\u1eb7t m\u1ee5c ti\u00eau \u201cn\u0103m s\u1ed1 ch\u00edn\u201d (99.999%) v\u1ec1 th\u1eddi gian ho\u1ea1t \u0111\u1ed9ng, t\u1ee9c ch\u1ec9 cho ph\u00e9p kho\u1ea3ng 5 ph\u00fat downtime m\u1ed7i n\u0103m \u2013 m\u1ed9t th\u00e1ch th\u1ee9c l\u1edbn cho k\u1ef9 thu\u1eadt vi\u00ean v\u00e0 qu\u1ea3n tr\u1ecb m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/01.intro/#ban-se-hoc-gi-trong-phan-nay-cua-khoa-hoc","title":"B\u1ea1n s\u1ebd h\u1ecdc g\u00ec trong ph\u1ea7n n\u00e0y c\u1ee7a kho\u00e1 h\u1ecdc?","text":"<p>Khi t\u00ecm hi\u1ec3u v\u1ec1 c\u00e1c ki\u1ebfn th\u1ee9c n\u1ec1n t\u1ea3ng m\u1ea1ng, b\u1ea1n s\u1ebd c\u00f3 \u0111\u01b0\u1ee3c:</p> <ul> <li>Hi\u1ec3u c\u00e1c kh\u00e1i ni\u1ec7m m\u1ea1ng c\u01a1 b\u1ea3n</li> <li>K\u1ef9 n\u0103ng x\u1eed l\u00fd s\u1ef1 c\u1ed1 ph\u1ed5 bi\u1ebfn</li> <li>Duy tr\u00ec m\u1ee9c \u0111\u1ed9 s\u1eb5n s\u00e0ng v\u00e0 uptime cao</li> </ul>"},{"location":"network-comtia/01.fundamental/01.intro/#cac-trong-tam-chinh","title":"C\u00e1c tr\u1ecdng t\u00e2m ch\u00ednh","text":"<p>Ch\u00fang ta s\u1ebd kh\u00e1m ph\u00e1 hai l\u0129nh v\u1ef1c l\u1edbn:</p> <ol> <li>C\u00e1c kh\u00e1i ni\u1ec7m m\u1ea1ng</li> <li>Tri\u1ec3n khai m\u1ea1ng</li> </ol> <p>C\u1ee5 th\u1ec3, b\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c h\u1ecdc v\u1ec1:</p> <ul> <li>M\u1ee5c ti\u00eau 1.2: So s\u00e1nh c\u00e1c thi\u1ebft b\u1ecb m\u1ea1ng, \u1ee9ng d\u1ee5ng v\u00e0 ch\u1ee9c n\u0103ng.</li> <li>M\u1ee5c ti\u00eau 1.6: So s\u00e1nh c\u00e1c m\u00f4 h\u00ecnh, ki\u1ebfn tr\u00fac v\u00e0 lo\u1ea1i h\u00ecnh m\u1ea1ng.</li> <li>M\u1ee5c ti\u00eau 2.3: L\u1ef1a ch\u1ecdn v\u00e0 c\u1ea5u h\u00ecnh c\u00e1c thi\u1ebft b\u1ecb, c\u00f4ng ngh\u1ec7 m\u1ea1ng kh\u00f4ng d\u00e2y.</li> </ul>"},{"location":"network-comtia/01.fundamental/01.intro/#cac-chu-e-uoc-e-cap","title":"C\u00e1c ch\u1ee7 \u0111\u1ec1 \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp","text":""},{"location":"network-comtia/01.fundamental/01.intro/#thanh-phan-mang","title":"Th\u00e0nh ph\u1ea7n m\u1ea1ng","text":"<p>T\u00ecm hi\u1ec3u v\u1ec1:</p> <ul> <li>M\u00e1y kh\u00e1ch v\u00e0 m\u00e1y ch\u1ee7</li> <li>Hub v\u00e0 Switch</li> <li>\u0110i\u1ec3m truy c\u1eadp kh\u00f4ng d\u00e2y</li> <li>Router v\u00e0 Firewall</li> <li>B\u1ed9 c\u00e2n b\u1eb1ng t\u1ea3i (Load Balancer), Proxy</li> <li>H\u1ec7 th\u1ed1ng ph\u00e1t hi\u1ec7n v\u00e0 ng\u0103n ch\u1eb7n x\u00e2m nh\u1eadp (IDS/IPS)</li> </ul>"},{"location":"network-comtia/01.fundamental/01.intro/#tai-nguyen-mang","title":"T\u00e0i nguy\u00ean m\u1ea1ng","text":"<p>Ph\u00e2n bi\u1ec7t gi\u1eefa:</p> <ul> <li>M\u00f4 h\u00ecnh Client-Server</li> <li>M\u00f4 h\u00ecnh Peer-to-Peer</li> </ul>"},{"location":"network-comtia/01.fundamental/01.intro/#ia-ly-mang","title":"\u0110\u1ecba l\u00fd m\u1ea1ng","text":"<p>Kh\u00e1m ph\u00e1 c\u00e1c lo\u1ea1i m\u1ea1ng:</p> <ul> <li>M\u1ea1ng c\u00e1 nh\u00e2n (PAN)</li> <li>M\u1ea1ng n\u1ed9i b\u1ed9 (LAN)</li> <li>M\u1ea1ng tr\u01b0\u1eddng (CAN)</li> <li>M\u1ea1ng \u0111\u00f4 th\u1ecb (MAN)</li> <li>M\u1ea1ng di\u1ec7n r\u1ed9ng (WAN)</li> </ul>"},{"location":"network-comtia/01.fundamental/01.intro/#minh-hoa-thuc-te","title":"Minh ho\u1ea1 th\u1ef1c t\u1ebf","text":"<p>Xem c\u00e1ch c\u00e1c ph\u01b0\u01a1ng ti\u1ec7n hi\u1ec7n \u0111\u1ea1i s\u1eed d\u1ee5ng nhi\u1ec1u lo\u1ea1i m\u1ea1ng \u0111\u1ec3 duy tr\u00ec k\u1ebft n\u1ed1i khi di chuy\u1ec3n.</p>"},{"location":"network-comtia/01.fundamental/01.intro/#cac-hinh-thai-mang-co-day-va-khong-day","title":"C\u00e1c h\u00ecnh th\u00e1i m\u1ea1ng c\u00f3 d\u00e2y v\u00e0 kh\u00f4ng d\u00e2y","text":"<ul> <li>C\u00f3 d\u00e2y: Point-to-Point, Ring, Bus, Star, Hub-and-Spoke, Mesh</li> <li>Kh\u00f4ng d\u00e2y: Ad hoc, Point-to-Point, Infrastructure, Wireless Mesh</li> </ul>"},{"location":"network-comtia/01.fundamental/01.intro/#mo-hinh-trung-tam-du-lieu","title":"M\u00f4 h\u00ecnh trung t\u00e2m d\u1eef li\u1ec7u","text":"<p>T\u00ecm hi\u1ec3u v\u1ec1:</p> <ul> <li>M\u00f4 h\u00ecnh ba t\u1ea7ng (Three-Tier)</li> <li>M\u00f4 h\u00ecnh l\u00f5i thu g\u1ecdn (Collapsed Core)</li> <li>M\u00f4 h\u00ecnh Spine-and-Leaf</li> </ul> <p>C\u00e1ch d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c ph\u00e2n lo\u1ea1i khi \u0111i v\u00e0o, ra, v\u00e0 di chuy\u1ec3n trong trung t\u00e2m d\u1eef li\u1ec7u.</p>"},{"location":"network-comtia/01.fundamental/01.intro/#tong-ket","title":"T\u1ed5ng k\u1ebft","text":"<p>Cu\u1ed1i ph\u1ea7n n\u00e0y, b\u1ea1n s\u1ebd l\u00e0m b\u00e0i ki\u1ec3m tra nh\u1ecf \u0111\u1ec3 r\u00e0 so\u00e1t l\u1ea1i ki\u1ebfn th\u1ee9c \u0111\u00e3 h\u1ecdc, ki\u1ec3m tra l\u00fd do c\u1ee7a c\u00e1c \u0111\u00e1p \u00e1n \u0111\u00fang v\u00e0 sai.</p>"},{"location":"network-comtia/01.fundamental/01.intro/#san-sang-bat-au","title":"S\u1eb5n s\u00e0ng b\u1eaft \u0111\u1ea7u?","text":"<p>N\u1ebfu b\u1ea1n mu\u1ed1n x\u00e2y d\u1ef1ng n\u1ec1n t\u1ea3ng v\u1eefng ch\u1eafc v\u1ec1 m\u1ea1ng m\u00e1y t\u00ednh, h\u00e3y \u0111\u1ed3ng h\u00e0nh v\u00e0 kh\u00e1m ph\u00e1 nh\u1eefng kh\u00e1i ni\u1ec7m, ki\u1ebfn tr\u00fac v\u00e0 c\u00f4ng ngh\u1ec7 quan tr\u1ecdng t\u1ea1o n\u00ean th\u1ebf gi\u1edbi k\u1ebft n\u1ed1i ng\u00e0y nay!</p>"},{"location":"network-comtia/01.fundamental/02.net-component/","title":"C\u00e1c Th\u00e0nh Ph\u1ea7n C\u01a1 B\u1ea3n C\u1ee7a M\u1ea1ng M\u00e1y T\u00ednh","text":""},{"location":"network-comtia/01.fundamental/02.net-component/#cac-thanh-phan-co-ban-cua-mang-may-tinh","title":"C\u00e1c Th\u00e0nh Ph\u1ea7n C\u01a1 B\u1ea3n C\u1ee7a M\u1ea1ng M\u00e1y T\u00ednh","text":"<p>Trong b\u00e0i h\u1ecdc n\u00e0y, ch\u00fang ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u v\u1ec1 c\u00e1c th\u00e0nh ph\u1ea7n c\u1ea5u t\u1ea1o n\u00ean m\u1ea1ng m\u00e1y t\u00ednh.</p> <p>M\u1ee5c ti\u00eau c\u1ee7a m\u1ea1ng l\u00e0 truy\u1ec1n d\u1eef li\u1ec7u t\u1eeb n\u01a1i n\u00e0y \u0111\u1ebfn n\u01a1i kh\u00e1c, gi\u1eefa c\u00e1c m\u00e1y v\u1edbi nhau: c\u00f3 th\u1ec3 l\u00e0 tho\u1ea1i, video ho\u1eb7c d\u1eef li\u1ec7u, t\u1ea5t c\u1ea3 \u0111\u1ec1u ph\u1ea3i di chuy\u1ec3n qua m\u1ea1ng. V\u1eady m\u1ea1ng c\u1ee7a ch\u00fang ta g\u1ed3m nh\u1eefng g\u00ec? H\u00e3y c\u00f9ng \u0111i\u1ec3m qua c\u00e1c th\u00e0nh ph\u1ea7n ph\u1ed5 bi\u1ebfn m\u00e0 ch\u00fang ta th\u01b0\u1eddng g\u1eb7p trong m\u1ea1ng m\u00e1y t\u00ednh.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#1-client-thiet-bi-au-cuoi","title":"1. Client (Thi\u1ebft b\u1ecb \u0111\u1ea7u cu\u1ed1i)","text":"<p>Client l\u00e0 nh\u1eefng thi\u1ebft b\u1ecb m\u00e0 ng\u01b0\u1eddi d\u00f9ng s\u1eed d\u1ee5ng \u0111\u1ec3 truy c\u1eadp v\u00e0o m\u1ea1ng, v\u00ed d\u1ee5 nh\u01b0 m\u00e1y t\u00ednh \u0111\u1ec3 b\u00e0n, laptop, m\u00e1y t\u00ednh b\u1ea3ng, \u0111i\u1ec7n tho\u1ea1i th\u00f4ng minh, TV th\u00f4ng minh, th\u1eadm ch\u00ed l\u00e0 c\u00e1c thi\u1ebft b\u1ecb nh\u01b0 \u0111i\u1ec1u ho\u00e0 th\u00f4ng minh c\u00f3 k\u1ebft n\u1ed1i Wi-Fi. T\u1ea5t c\u1ea3 c\u00e1c thi\u1ebft b\u1ecb n\u00e0y \u0111\u1ec1u g\u1ecdi chung l\u00e0 client.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#2-server-may-chu","title":"2. Server (M\u00e1y ch\u1ee7)","text":"<p>Server cung c\u1ea5p t\u00e0i nguy\u00ean cho c\u00e1c thi\u1ebft b\u1ecb kh\u00e1c trong m\u1ea1ng. V\u00ed d\u1ee5: m\u00e1y ch\u1ee7 email, m\u00e1y ch\u1ee7 t\u1ec7p, m\u00e1y ch\u1ee7 web\u2026 Server c\u00f3 th\u1ec3 l\u00e0 thi\u1ebft b\u1ecb chuy\u00ean d\u1ee5ng ho\u1eb7c ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 ph\u1ea7n m\u1ec1m ch\u1ea1y tr\u00ean m\u1ed9t m\u00e1y t\u00ednh \u0111\u1ec3 cung c\u1ea5p d\u1ecbch v\u1ee5 cho c\u00e1c client.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#3-hub-bo-tap-trung","title":"3. Hub (B\u1ed9 t\u1eadp trung)","text":"<p>Hub l\u00e0 thi\u1ebft b\u1ecb m\u1ea1ng c\u0169, \u00edt c\u00f2n s\u1eed d\u1ee5ng trong m\u1ea1ng hi\u1ec7n \u0111\u1ea1i nh\u01b0ng v\u1eabn xu\u1ea5t hi\u1ec7n trong c\u00e1c \u0111\u1ec1 thi ho\u1eb7c m\u1ed9t s\u1ed1 m\u00f4i tr\u01b0\u1eddng. Hub k\u1ebft n\u1ed1i c\u00e1c thi\u1ebft b\u1ecb m\u1ea1ng l\u1ea1i v\u1edbi nhau trong m\u1ea1ng LAN, nh\u01b0ng c\u00f3 h\u1ea1n ch\u1ebf l\u00e0 m\u1ecdi d\u1eef li\u1ec7u \u0111\u1ec1u \u0111\u01b0\u1ee3c ph\u00e1t t\u00e1n \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c c\u1ed5ng, d\u1ec5 g\u00e2y xung \u0111\u1ed9t v\u00e0 gi\u1ea3m hi\u1ec7u su\u1ea5t.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#4-switch-bo-chuyen-mach","title":"4. Switch (B\u1ed9 chuy\u1ec3n m\u1ea1ch)","text":"<p>Switch l\u00e0 phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p th\u00f4ng minh h\u01a1n c\u1ee7a hub. Switch c\u00f3 th\u1ec3 h\u1ecdc \u0111\u01b0\u1ee3c thi\u1ebft b\u1ecb n\u00e0o n\u1eb1m \u1edf c\u1ed5ng n\u00e0o v\u00e0 ch\u1ec9 chuy\u1ec3n ti\u1ebfp d\u1eef li\u1ec7u \u0111\u1ebfn \u0111\u00fang c\u1ed5ng c\u1ea7n thi\u1ebft, gi\u00fap t\u0103ng hi\u1ec7u qu\u1ea3 v\u00e0 b\u1ea3o m\u1eadt cho m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#5-wireless-access-point-iem-truy-cap-khong-day","title":"5. Wireless Access Point (\u0110i\u1ec3m truy c\u1eadp kh\u00f4ng d\u00e2y)","text":"<p>Wireless Access Point (WAP ho\u1eb7c AP) gi\u00fap c\u00e1c thi\u1ebft b\u1ecb kh\u00f4ng d\u00e2y k\u1ebft n\u1ed1i v\u00e0o m\u1ea1ng c\u00f3 d\u00e2y. AP r\u1ea5t ph\u1ed5 bi\u1ebfn \u1edf nh\u00e0, c\u00f4ng ty v\u00e0 c\u00e1c m\u1ea1ng l\u1edbn. AP ph\u00e1t s\u00f3ng d\u1eef li\u1ec7u qua s\u00f3ng v\u00f4 tuy\u1ebfn thay v\u00ec qua c\u00e1p \u0111\u1ed3ng hay c\u00e1p quang.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#6-router-bo-inh-tuyen","title":"6. Router (B\u1ed9 \u0111\u1ecbnh tuy\u1ebfn)","text":"<p>Router l\u00e0 thi\u1ebft b\u1ecb quan tr\u1ecdng gi\u00fap k\u1ebft n\u1ed1i c\u00e1c m\u1ea1ng kh\u00e1c nhau. Router ra quy\u1ebft \u0111\u1ecbnh chuy\u1ec3n ti\u1ebfp th\u00f4ng minh d\u1ef1a tr\u00ean \u0111\u1ecba ch\u1ec9 IP c\u1ee7a thi\u1ebft b\u1ecb, s\u1eed d\u1ee5ng nhi\u1ec1u giao th\u1ee9c \u0111\u1ecbnh tuy\u1ebfn \u0111\u1ec3 truy\u1ec1n t\u1ea3i d\u1eef li\u1ec7u qua m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#7-firewall-tuong-lua","title":"7. Firewall (T\u01b0\u1eddng l\u1eeda)","text":"<p>Firewall l\u00e0 l\u1edbp b\u1ea3o v\u1ec7 gi\u1eefa m\u1ea1ng n\u1ed9i b\u1ed9 v\u00e0 m\u1ea1ng b\u00ean ngo\u00e0i (th\u01b0\u1eddng l\u00e0 Internet). Firewall ki\u1ec3m so\u00e1t, gi\u00e1m s\u00e1t lu\u1ed3ng d\u1eef li\u1ec7u v\u00e0o/ra d\u1ef1a tr\u00ean c\u00e1c quy t\u1eafc b\u1ea3o m\u1eadt, gi\u00fap ng\u0103n ch\u1eb7n truy c\u1eadp tr\u00e1i ph\u00e9p v\u00e0 c\u00e1c m\u1ed1i \u0111e do\u1ea1 m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#8-load-balancer-bo-can-bang-tai","title":"8. Load Balancer (B\u1ed9 c\u00e2n b\u1eb1ng t\u1ea3i)","text":"<p>Load Balancer ph\u00e2n ph\u1ed1i l\u01b0u l\u01b0\u1ee3ng m\u1ea1ng ho\u1eb7c \u1ee9ng d\u1ee5ng \u0111\u1ebfn nhi\u1ec1u server, t\u0103ng hi\u1ec7u su\u1ea5t v\u00e0 \u0111\u1ed9 tin c\u1eady c\u1ee7a d\u1ecbch v\u1ee5, tr\u00e1nh t\u00ecnh tr\u1ea1ng m\u1ed9t server b\u1ecb qu\u00e1 t\u1ea3i, gi\u00fap m\u1ea1ng ho\u1ea1t \u0111\u1ed9ng m\u01b0\u1ee3t m\u00e0 h\u01a1n.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#9-proxy-may-chu-trung-gian","title":"9. Proxy (M\u00e1y ch\u1ee7 trung gian)","text":"<p>Proxy l\u00e0 m\u00e1y ch\u1ee7 trung gian gi\u1eefa thi\u1ebft b\u1ecb ng\u01b0\u1eddi d\u00f9ng v\u00e0 Internet. Proxy c\u00f3 th\u1ec3 l\u1ecdc web, chia s\u1ebb k\u1ebft n\u1ed1i m\u1ea1ng, l\u01b0u cache d\u1eef li\u1ec7u, t\u0103ng hi\u1ec7u n\u0103ng, b\u1ea3o m\u1eadt v\u00e0 \u1ea9n \u0111\u1ecba ch\u1ec9 IP th\u1eadt c\u1ee7a ng\u01b0\u1eddi d\u00f9ng.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#10-idsips-he-thong-phat-hienngan-chan-xam-nhap","title":"10. IDS/IPS (H\u1ec7 th\u1ed1ng ph\u00e1t hi\u1ec7n/ng\u0103n ch\u1eb7n x\u00e2m nh\u1eadp)","text":"<p>IDS (Intrusion Detection System) ph\u00e1t hi\u1ec7n x\u00e2m nh\u1eadp ho\u1eb7c b\u1ea5t th\u01b0\u1eddng tr\u00ean m\u1ea1ng v\u00e0 c\u1ea3nh b\u00e1o cho qu\u1ea3n tr\u1ecb vi\u00ean. IPS (Intrusion Prevention System) kh\u00f4ng ch\u1ec9 ph\u00e1t hi\u1ec7n m\u00e0 c\u00f2n ch\u1eb7n c\u00e1c m\u1ed1i nguy h\u1ea1i, ng\u0103n ch\u1eb7n g\u00f3i d\u1eef li\u1ec7u nguy hi\u1ec3m v\u00e0o m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#11-controller-bo-ieu-khien","title":"11. Controller (B\u1ed9 \u0111i\u1ec1u khi\u1ec3n)","text":"<p>Controller th\u01b0\u1eddng d\u00f9ng trong m\u1ea1ng \u0111\u1ecbnh ngh\u0129a b\u1eb1ng ph\u1ea7n m\u1ec1m (SDN). \u0110\u00e2y l\u00e0 b\u1ed9 trung t\u00e2m \u0111i\u1ec1u khi\u1ec3n lu\u1ed3ng d\u1eef li\u1ec7u, cho ph\u00e9p qu\u1ea3n tr\u1ecb vi\u00ean ki\u1ec3m so\u00e1t h\u00e0nh vi c\u1ee7a switch/router qua ph\u1ea7n m\u1ec1m, t\u0103ng t\u00ednh linh ho\u1ea1t v\u00e0 hi\u1ec7u qu\u1ea3.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#12-nas-network-attached-storage","title":"12. NAS (Network-Attached Storage)","text":"<p>NAS l\u00e0 thi\u1ebft b\u1ecb l\u01b0u tr\u1eef chuy\u00ean d\u1ee5ng, cho ph\u00e9p nhi\u1ec1u client truy xu\u1ea5t, l\u01b0u tr\u1eef d\u1eef li\u1ec7u t\u1eadp trung. NAS k\u1ebft n\u1ed1i v\u00e0o m\u1ea1ng v\u00e0 cung c\u1ea5p d\u1ecbch v\u1ee5 l\u01b0u tr\u1eef cho c\u00e1c thi\u1ebft b\u1ecb \u0111\u01b0\u1ee3c ph\u00e9p.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#13-san-storage-area-network","title":"13. SAN (Storage Area Network)","text":"<p>SAN l\u00e0 m\u1ea1ng t\u1ed1c \u0111\u1ed9 cao chuy\u00ean d\u1ee5ng cho vi\u1ec7c l\u01b0u tr\u1eef d\u1eef li\u1ec7u kh\u1ed1i l\u1edbn, th\u01b0\u1eddng d\u00f9ng cho m\u00e1y ch\u1ee7, c\u00e1c h\u1ec7 th\u1ed1ng l\u01b0u tr\u1eef l\u1edbn nh\u01b0 m\u1ea3ng \u0111\u0129a, b\u0103ng t\u1eeb.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#14-media-phuong-tien-truyen-du-lieu","title":"14. Media (Ph\u01b0\u01a1ng ti\u1ec7n truy\u1ec1n d\u1eef li\u1ec7u)","text":"<p>Media l\u00e0 v\u1eadt li\u1ec7u v\u1eadt l\u00fd d\u00f9ng \u0111\u1ec3 truy\u1ec1n d\u1eef li\u1ec7u: c\u00e1p \u0111\u1ed3ng, c\u00e1p quang ho\u1eb7c t\u00edn hi\u1ec7u kh\u00f4ng d\u00e2y. M\u1ed7i lo\u1ea1i media c\u00f3 \u0111\u1eb7c t\u00ednh, \u01b0u/nh\u01b0\u1ee3c ri\u00eang v\u00e0 \u0111\u01b0\u1ee3c ch\u1ecdn tu\u1ef3 v\u00e0o nhu c\u1ea7u thi\u1ebft k\u1ebf m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/02.net-component/#15-wan-link-ket-noi-mang-dien-rong","title":"15. WAN Link (K\u1ebft n\u1ed1i m\u1ea1ng di\u1ec7n r\u1ed9ng)","text":"<p>WAN Link k\u1ebft n\u1ed1i c\u00e1c m\u1ea1ng \u1edf ph\u1ea1m vi r\u1ed9ng l\u1edbn nh\u01b0 gi\u1eefa c\u00e1c th\u00e0nh ph\u1ed1, qu\u1ed1c gia. WAN Link th\u1ef1c hi\u1ec7n truy\u1ec1n d\u1eef li\u1ec7u qua kho\u1ea3ng c\u00e1ch xa b\u1eb1ng c\u00e1c c\u00f4ng ngh\u1ec7 nh\u01b0 thu\u00ea k\u00eanh ri\u00eang, v\u1ec7 tinh, m\u1ea1ng di \u0111\u1ed9ng\u2026</p> <p>Hi\u1ec3u r\u00f5 c\u00e1c th\u00e0nh ph\u1ea7n m\u1ea1ng l\u00e0 n\u1ec1n t\u1ea3ng quan tr\u1ecdng c\u1ee7a ng\u00e0nh CNTT. T\u1eeb c\u00e1c client, server cho \u0111\u1ebfn c\u00e1c thi\u1ebft b\u1ecb b\u1ea3o m\u1eadt, c\u00e2n b\u1eb1ng t\u1ea3i, m\u1ed7i th\u00e0nh ph\u1ea7n \u0111\u1ec1u \u0111\u00f3ng vai tr\u00f2 ri\u00eang trong vi\u1ec7c \u0111\u1ea3m b\u1ea3o truy\u1ec1n t\u1ea3i d\u1eef li\u1ec7u hi\u1ec7u qu\u1ea3 v\u00e0 an to\u00e0n.</p> <p>Ki\u1ebfn th\u1ee9c v\u1ec1 c\u00e1c th\u00e0nh ph\u1ea7n n\u00e0y s\u1ebd h\u1ed7 tr\u1ee3 b\u1ea1n trong vi\u1ec7c thi\u1ebft k\u1ebf, qu\u1ea3n l\u00fd m\u1ea1ng, x\u1eed l\u00fd s\u1ef1 c\u1ed1 v\u00e0 tri\u1ec3n khai c\u00e1c bi\u1ec7n ph\u00e1p b\u1ea3o m\u1eadt trong m\u1ed9t th\u1ebf gi\u1edbi ng\u00e0y c\u00e0ng k\u1ebft n\u1ed1i.</p> <p>\u1ede c\u00e1c b\u00e0i h\u1ecdc ti\u1ebfp theo, ch\u00fang ta s\u1ebd \u0111i s\u00e2u v\u00e0o t\u1eebng thi\u1ebft b\u1ecb, c\u00e1ch ho\u1ea1t \u0111\u1ed9ng v\u00e0 \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf trong thi\u1ebft k\u1ebf m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/03.network-resources/","title":"T\u00e0i Nguy\u00ean M\u1ea1ng: M\u00f4 H\u00ecnh Client-Server v\u00e0 Peer-to-Peer","text":""},{"location":"network-comtia/01.fundamental/03.network-resources/#tai-nguyen-mang-mo-hinh-client-server-va-peer-to-peer","title":"T\u00e0i Nguy\u00ean M\u1ea1ng: M\u00f4 H\u00ecnh Client-Server v\u00e0 Peer-to-Peer","text":"<p>Khi n\u00f3i v\u1ec1 t\u00e0i nguy\u00ean m\u1ea1ng, ch\u00fang ta c\u1ea7n hi\u1ec3u c\u00e1ch d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c di chuy\u1ec3n trong h\u1ec7 th\u1ed1ng m\u1ea1ng. C\u00f3 hai m\u00f4 h\u00ecnh ch\u00ednh: client-server v\u00e0 peer-to-peer.</p>"},{"location":"network-comtia/01.fundamental/03.network-resources/#mo-hinh-client-server","title":"M\u00f4 H\u00ecnh Client-Server","text":"<p>\u1ede m\u00f4 h\u00ecnh client-server, m\u1ed9t m\u00e1y ch\u1ee7 chuy\u00ean d\u1ee5ng (server) s\u1ebd cung c\u1ea5p quy\u1ec1n truy c\u1eadp v\u00e0o c\u00e1c t\u00e0i nguy\u00ean nh\u01b0 t\u1ec7p, m\u00e1y in, m\u00e1y scan v\u00e0 nhi\u1ec1u d\u1ecbch v\u1ee5 kh\u00e1c cho c\u00e1c thi\u1ebft b\u1ecb \u0111\u1ea7u cu\u1ed1i (client) trong m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/03.network-resources/#uu-iem","title":"\u01afu \u0111i\u1ec3m:","text":"<ul> <li>Qu\u1ea3n tr\u1ecb t\u1eadp trung: D\u1ec5 d\u00e0ng qu\u1ea3n l\u00fd, sao l\u01b0u v\u00ec m\u1ecdi d\u1eef li\u1ec7u t\u1eadp trung tr\u00ean server. Ch\u1ec9 c\u1ea7n sao l\u01b0u server l\u00e0 \u0111\u1ee7.</li> <li>D\u1ec5 m\u1edf r\u1ed9ng: N\u1ebfu c\u1ea7n m\u1edf r\u1ed9ng, ch\u1ec9 c\u1ea7n b\u1ed5 sung th\u00eam server ho\u1eb7c chuy\u1ec3n l\u00ean cloud, s\u1eed d\u1ee5ng c\u00e2n b\u1eb1ng t\u1ea3i \u0111\u1ec3 ph\u1ee5c v\u1ee5 nhi\u1ec1u client h\u01a1n.</li> <li>Qu\u1ea3n l\u00fd hi\u1ec7u qu\u1ea3: \u00cdt \u0111i\u1ec3m c\u1ea7n c\u1ea5u h\u00ecnh v\u00e0 ki\u1ec3m so\u00e1t, ti\u1ebft ki\u1ec7m th\u1eddi gian cho qu\u1ea3n tr\u1ecb vi\u00ean.</li> </ul>"},{"location":"network-comtia/01.fundamental/03.network-resources/#nhuoc-iem","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Chi ph\u00ed cao: \u0110\u00f2i h\u1ecfi ph\u1ea7n c\u1ee9ng v\u00e0 ph\u1ea7n m\u1ec1m chuy\u00ean bi\u1ec7t (v\u00ed d\u1ee5: Windows Server, Unix, Linux\u2026).</li> <li>Y\u00eau c\u1ea7u k\u1ef9 n\u0103ng: C\u1ea7n nh\u00e2n s\u1ef1 c\u00f3 chuy\u00ean m\u00f4n cao \u0111\u1ec3 v\u1eadn h\u00e0nh v\u00e0 qu\u1ea3n l\u00fd h\u1ec7 th\u1ed1ng.</li> </ul> <p>=&gt; Tuy nhi\u00ean, client-server v\u1eabn l\u00e0 m\u00f4 h\u00ecnh ph\u1ed5 bi\u1ebfn nh\u1ea5t trong c\u00e1c doanh nghi\u1ec7p nh\u1edd kh\u1ea3 n\u0103ng qu\u1ea3n l\u00fd t\u1eadp trung v\u00e0 m\u1edf r\u1ed9ng t\u1ed1t.</p>"},{"location":"network-comtia/01.fundamental/03.network-resources/#mo-hinh-peer-to-peer","title":"M\u00f4 H\u00ecnh Peer-to-Peer","text":"<p>Peer-to-peer (P2P) l\u00e0 m\u00f4 h\u00ecnh m\u00e0 c\u00e1c m\u00e1y t\u00ednh (peer) nh\u01b0 laptop, desktop tr\u1ef1c ti\u1ebfp chia s\u1ebb t\u00e0i nguy\u00ean v\u1edbi nhau, kh\u00f4ng c\u1ea7n server trung t\u00e2m.</p>"},{"location":"network-comtia/01.fundamental/03.network-resources/#uu-iem_1","title":"\u01afu \u0111i\u1ec3m:","text":"<ul> <li>Chi ph\u00ed th\u1ea5p: Kh\u00f4ng c\u1ea7n \u0111\u1ea7u t\u01b0 v\u00e0o h\u1ea1 t\u1ea7ng hay ph\u1ea7n c\u1ee9ng, ph\u1ea7n m\u1ec1m chuy\u00ean d\u1ee5ng.</li> <li>D\u1ec5 tri\u1ec3n khai: Ch\u1ec9 c\u1ea7n ph\u1ea7n m\u1ec1m chia s\u1ebb \u0111\u01a1n gi\u1ea3n, ai c\u0169ng c\u00f3 th\u1ec3 t\u1ef1 chia s\u1ebb d\u1eef li\u1ec7u t\u1eeb m\u00e1y c\u00e1 nh\u00e2n.</li> </ul>"},{"location":"network-comtia/01.fundamental/03.network-resources/#nhuoc-iem_1","title":"Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Qu\u1ea3n l\u00fd ph\u00e2n t\u00e1n, kh\u00f3 ki\u1ec3m so\u00e1t: D\u1eef li\u1ec7u n\u1eb1m r\u1ea3i r\u00e1c \u1edf nhi\u1ec1u m\u00e1y, backup v\u00e0 ph\u00e2n quy\u1ec1n ph\u1ee9c t\u1ea1p.</li> <li>Kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi quy m\u00f4 l\u1edbn: Khi s\u1ed1 l\u01b0\u1ee3ng m\u00e1y t\u0103ng, vi\u1ec7c qu\u1ea3n l\u00fd v\u00e0 backup tr\u1edf th\u00e0nh \u201c\u00e1c m\u1ed9ng\u201d.</li> <li>Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng k\u00e9m: N\u1ebfu m\u00e1y chia s\u1ebb t\u1eaft \u0111i, c\u00e1c m\u00e1y kh\u00e1c kh\u00f4ng truy c\u1eadp \u0111\u01b0\u1ee3c t\u00e0i nguy\u00ean.</li> </ul> <p>V\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh l\u00e0 Napster \u2013 ph\u1ea7n m\u1ec1m chia s\u1ebb file theo m\u00f4 h\u00ecnh P2P, cho ph\u00e9p m\u1ecdi ng\u01b0\u1eddi v\u1eeba g\u1eedi v\u1eeba nh\u1eadn file tr\u1ef1c ti\u1ebfp v\u1edbi nhau.</p>"},{"location":"network-comtia/01.fundamental/03.network-resources/#so-sanh-nhanh","title":"So S\u00e1nh Nhanh","text":"Ti\u00eau ch\u00ed Client-Server Peer-to-Peer Qu\u1ea3n tr\u1ecb T\u1eadp trung Ph\u00e2n t\u00e1n Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng T\u1ed1t K\u00e9m Chi ph\u00ed Cao Th\u1ea5p \u0110\u1ed9 b\u1ea3o m\u1eadt D\u1ec5 ki\u1ec3m so\u00e1t Kh\u00f3 ki\u1ec3m so\u00e1t Ph\u00f9 h\u1ee3p quy m\u00f4 Doanh nghi\u1ec7p, l\u1edbn Nh\u00f3m nh\u1ecf, c\u00e1 nh\u00e2n"},{"location":"network-comtia/01.fundamental/03.network-resources/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>Trong m\u00f4i tr\u01b0\u1eddng doanh nghi\u1ec7p, client-server l\u00e0 l\u1ef1a ch\u1ecdn l\u00fd t\u01b0\u1edfng \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o hi\u1ec7u su\u1ea5t, qu\u1ea3n l\u00fd v\u00e0 b\u1ea3o m\u1eadt. Peer-to-peer ch\u1ec9 ph\u00f9 h\u1ee3p v\u1edbi nh\u00f3m nh\u1ecf ho\u1eb7c nhu c\u1ea7u chia s\u1ebb \u0111\u01a1n gi\u1ea3n.</p> <p>Nh\u1edb r\u1eb1ng: nh\u1eefng \u0111i\u1ec3m m\u1ea1nh c\u1ee7a client-server ch\u00ednh l\u00e0 \u0111i\u1ec3m y\u1ebfu c\u1ee7a peer-to-peer, v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. N\u1eafm v\u1eefng s\u1ef1 \u0111\u1ed1i l\u1eadp n\u00e0y s\u1ebd gi\u00fap b\u1ea1n tr\u1ea3 l\u1eddi t\u1ed1t c\u00e1c c\u00e2u h\u1ecfi trong k\u1ef3 thi c\u0169ng nh\u01b0 x\u00e2y d\u1ef1ng h\u1ec7 th\u1ed1ng m\u1ea1ng ph\u00f9 h\u1ee3p v\u1edbi nhu c\u1ea7u th\u1ef1c t\u1ebf.</p>"},{"location":"network-comtia/01.fundamental/04.NetworkGeography/","title":"\u0110\u1ecba L\u00fd M\u1ea1ng: PAN, LAN, CAN, MAN v\u00e0 WAN","text":""},{"location":"network-comtia/01.fundamental/04.NetworkGeography/#ia-ly-mang-pan-lan-can-man-va-wan","title":"\u0110\u1ecba L\u00fd M\u1ea1ng: PAN, LAN, CAN, MAN v\u00e0 WAN","text":"<p>Khi n\u00f3i v\u1ec1 \u201c\u0111\u1ecba l\u00fd m\u1ea1ng\u201d, ch\u00fang ta s\u1ebd b\u1eaft \u0111\u1ea7u t\u1eeb nh\u1eefng m\u1ea1ng nh\u1ecf nh\u1ea5t v\u00e0 m\u1edf r\u1ed9ng d\u1ea7n \u0111\u1ebfn m\u1ea1ng l\u1edbn nh\u1ea5t.</p>"},{"location":"network-comtia/01.fundamental/04.NetworkGeography/#1-pan-personal-area-network-mang-ca-nhan","title":"1. PAN (Personal Area Network \u2013 M\u1ea1ng c\u00e1 nh\u00e2n)","text":"<p>\u0110\u00e2y l\u00e0 lo\u1ea1i m\u1ea1ng nh\u1ecf nh\u1ea5t, c\u00f3 th\u1ec3 l\u00e0 c\u00f3 d\u00e2y ho\u1eb7c kh\u00f4ng d\u00e2y, th\u01b0\u1eddng ch\u1ec9 ph\u1ee7 kho\u1ea3ng 3 m\u00e9t ho\u1eb7c 10 feet. M\u1ed9t s\u1ed1 v\u00ed d\u1ee5 v\u1ec1 PAN:</p> <ul> <li>Bluetooth: K\u1ebft n\u1ed1i \u0111i\u1ec7n tho\u1ea1i v\u1edbi loa, tai nghe, ho\u1eb7c truy\u1ec1n nh\u1ea1c t\u1eeb \u0111i\u1ec7n tho\u1ea1i l\u00ean radio \u00f4 t\u00f4.</li> <li>USB: Khi b\u1ea1n k\u1ebft n\u1ed1i \u1ed5 c\u1ee9ng ngo\u00e0i qua USB v\u1edbi laptop, \u0111\u00f3 c\u0169ng l\u00e0 m\u1ed9t lo\u1ea1i m\u1ea1ng c\u00e1 nh\u00e2n.</li> <li>Firewire: Chu\u1ea9n k\u1ebft n\u1ed1i c\u0169 cho m\u00e1y quay ho\u1eb7c webcam, c\u0169ng thu\u1ed9c PAN.</li> </ul> <p>C\u00e1ch d\u1ec5 h\u00ecnh dung: \u0110\u1ee9ng gi\u1eefa ph\u00f2ng, dang tay v\u00e0 quay m\u1ed9t v\u00f2ng, m\u1ecdi thi\u1ebft b\u1ecb b\u1ea1n c\u00f3 th\u1ec3 ch\u1ea1m t\u1edbi l\u00e0 ph\u1ea1m vi c\u1ee7a PAN.</p>"},{"location":"network-comtia/01.fundamental/04.NetworkGeography/#2-lan-local-area-network-mang-noi-bo","title":"2. LAN (Local Area Network \u2013 M\u1ea1ng n\u1ed9i b\u1ed9)","text":"<p>LAN k\u1ebft n\u1ed1i c\u00e1c thi\u1ebft b\u1ecb trong ph\u1ea1m vi nh\u1ecf h\u01a1n 100 m\u00e9t (300 feet), v\u00ed d\u1ee5 nh\u01b0 trong m\u1ed9t v\u0103n ph\u00f2ng, m\u1ed9t t\u1ea7ng c\u1ee7a to\u00e0 nh\u00e0, ho\u1eb7c m\u1ed9t c\u0103n nh\u00e0. LAN c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng:</p> <ul> <li>Ethernet (Chu\u1ea9n IEEE 802.3): M\u1ea1ng c\u00f3 d\u00e2y.</li> <li>WiFi (Chu\u1ea9n IEEE 802.11): M\u1ea1ng kh\u00f4ng d\u00e2y.</li> </ul> <p>V\u00ed d\u1ee5: M\u1ea1ng trong tr\u01b0\u1eddng h\u1ecdc, v\u0103n ph\u00f2ng, ho\u1eb7c m\u1ea1ng n\u1ed9i b\u1ed9 trong nh\u00e0 b\u1ea1n v\u1edbi c\u00e1c thi\u1ebft b\u1ecb nh\u01b0 laptop, m\u00e1y in, desktop \u0111\u1ec1u thu\u1ed9c LAN.</p>"},{"location":"network-comtia/01.fundamental/04.NetworkGeography/#3-can-campus-area-network-mang-khuon-vien","title":"3. CAN (Campus Area Network \u2013 M\u1ea1ng khu\u00f4n vi\u00ean)","text":"<p>CAN m\u1edf r\u1ed9ng ph\u1ea1m vi c\u1ee7a LAN ra nhi\u1ec1u to\u00e0 nh\u00e0 trong m\u1ed9t khu v\u1ef1c nh\u01b0 tr\u01b0\u1eddng \u0111\u1ea1i h\u1ecdc, khu c\u00f4ng nghi\u1ec7p ho\u1eb7c doanh nghi\u1ec7p c\u00f3 nhi\u1ec1u ph\u00e2n x\u01b0\u1edfng. CAN th\u01b0\u1eddng ph\u1ee7 v\u00e0i km, k\u1ebft n\u1ed1i nhi\u1ec1u LAN l\u1ea1i v\u1edbi nhau.</p> <p>V\u00ed d\u1ee5: M\u1ed9t tr\u01b0\u1eddng \u0111\u1ea1i h\u1ecdc c\u00f3 nhi\u1ec1u to\u00e0 nh\u00e0, m\u1ed7i to\u00e0 nh\u00e0 c\u00f3 LAN ri\u00eang, t\u1ea5t c\u1ea3 k\u1ebft n\u1ed1i l\u1ea1i th\u00e0nh m\u1ed9t CAN c\u1ee7a to\u00e0n tr\u01b0\u1eddng.</p>"},{"location":"network-comtia/01.fundamental/04.NetworkGeography/#4-man-metropolitan-area-network-mang-o-thi","title":"4. MAN (Metropolitan Area Network \u2013 M\u1ea1ng \u0111\u00f4 th\u1ecb)","text":"<p>MAN k\u1ebft n\u1ed1i c\u00e1c v\u1ecb tr\u00ed tr\u1ea3i r\u1ed9ng kh\u1eafp th\u00e0nh ph\u1ed1, l\u1edbn h\u01a1n CAN nh\u01b0ng nh\u1ecf h\u01a1n WAN. Ph\u1ea1m vi th\u01b0\u1eddng l\u00ean t\u1edbi 25 miles (~40 km) ho\u1eb7c h\u01a1n tu\u1ef3 th\u00e0nh ph\u1ed1.</p> <p>V\u00ed d\u1ee5: M\u1ed9t tr\u01b0\u1eddng \u0111\u1ea1i h\u1ecdc c\u00f3 nhi\u1ec1u c\u01a1 s\u1edf trong th\u00e0nh ph\u1ed1, m\u1ed7i c\u01a1 s\u1edf c\u00f3 CAN, t\u1ea5t c\u1ea3 c\u00e1c CAN k\u1ebft n\u1ed1i th\u00e0nh m\u1ed9t MAN. C\u00e1c s\u1edf ban ng\u00e0nh c\u1ee7a th\u00e0nh ph\u1ed1 (c\u00f4ng an, s\u1edf giao th\u00f4ng\u2026) c\u0169ng c\u00f3 th\u1ec3 k\u1ebft n\u1ed1i th\u00e0nh m\u1ed9t MAN.</p>"},{"location":"network-comtia/01.fundamental/04.NetworkGeography/#5-wan-wide-area-network-mang-dien-rong","title":"5. WAN (Wide Area Network \u2013 M\u1ea1ng di\u1ec7n r\u1ed9ng)","text":"<p>WAN k\u1ebft n\u1ed1i c\u00e1c m\u1ea1ng n\u1ed9i b\u1ed9 (LAN) \u1edf nh\u1eefng v\u1ecb tr\u00ed c\u00e1ch xa nhau, c\u00f3 th\u1ec3 l\u00e0 gi\u1eefa c\u00e1c th\u00e0nh ph\u1ed1, qu\u1ed1c gia ho\u1eb7c to\u00e0n c\u1ea7u.</p> <ul> <li>Internet l\u00e0 v\u00ed d\u1ee5 l\u1edbn nh\u1ea5t v\u1ec1 WAN.</li> <li>WAN c\u00f3 th\u1ec3 l\u00e0 m\u1ea1ng c\u00f4ng c\u1ed9ng (Internet) ho\u1eb7c m\u1ea1ng ri\u00eang (intranet) c\u1ee7a doanh nghi\u1ec7p, ch\u00ednh ph\u1ee7.</li> </ul> <p>V\u00ed d\u1ee5: M\u1ed9t c\u00f4ng ty c\u00f3 v\u0103n ph\u00f2ng \u1edf TP.HCM v\u00e0 H\u00e0 N\u1ed9i, m\u1ed7i n\u01a1i c\u00f3 LAN ri\u00eang, hai v\u0103n ph\u00f2ng k\u1ebft n\u1ed1i qua WAN. Ch\u00ednh ph\u1ee7 M\u1ef9 k\u1ebft n\u1ed1i c\u00e1c v\u0103n ph\u00f2ng \u1edf 50 bang qua WAN ri\u00eang.</p>"},{"location":"network-comtia/01.fundamental/04.NetworkGeography/#tong-ket","title":"T\u1ed5ng K\u1ebft","text":"<p>Khi h\u1ecdc v\u1ec1 \u0111\u1ecba l\u00fd m\u1ea1ng, h\u00e3y nh\u1edb th\u1ee9 t\u1ef1 v\u00e0 ph\u1ea1m vi:</p> <ul> <li>PAN: C\u00e1 nh\u00e2n, ~3 m\u00e9t</li> <li>LAN: V\u0103n ph\u00f2ng/nh\u00e0, ~100 m\u00e9t</li> <li>CAN: Khu\u00f4n vi\u00ean, v\u00e0i km</li> <li>MAN: Th\u00e0nh ph\u1ed1, h\u00e0ng ch\u1ee5c km</li> <li>WAN: Qu\u1ed1c gia, to\u00e0n c\u1ea7u</li> </ul> <p>Vi\u1ec7c n\u1eafm r\u00f5 ph\u1ea1m vi v\u00e0 \u1ee9ng d\u1ee5ng c\u1ee7a t\u1eebng lo\u1ea1i m\u1ea1ng s\u1ebd gi\u00fap b\u1ea1n tr\u1ea3 l\u1eddi t\u1ed1t c\u00e1c c\u00e2u h\u1ecfi v\u1ec1 PAN, LAN, CAN, MAN v\u00e0 WAN trong k\u1ef3 thi c\u0169ng nh\u01b0 trong th\u1ef1c t\u1ebf thi\u1ebft k\u1ebf m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/05.network-topology/","title":"Network Topologies: H\u01b0\u1edbng D\u1eabn Chi Ti\u1ebft V\u1ec1 C\u00e1c Ki\u1ec3u K\u1ebft N\u1ed1i M\u1ea1ng","text":""},{"location":"network-comtia/01.fundamental/05.network-topology/#network-topologies-huong-dan-chi-tiet-ve-cac-kieu-ket-noi-mang","title":"Network Topologies: H\u01b0\u1edbng D\u1eabn Chi Ti\u1ebft V\u1ec1 C\u00e1c Ki\u1ec3u K\u1ebft N\u1ed1i M\u1ea1ng","text":""},{"location":"network-comtia/01.fundamental/05.network-topology/#gioi-thieu","title":"Gi\u1edbi Thi\u1ec7u","text":"<p>Topology m\u1ea1ng l\u00e0 m\u1ed9t kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n trong networking, \u0111\u1ec1 c\u1eadp \u0111\u1ebfn c\u00e1ch s\u1eafp x\u1ebfp c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c nhau nh\u01b0 li\u00ean k\u1ebft, nodes, clients v\u00e0 servers t\u1ea1o n\u00ean m\u1ed9t m\u1ea1ng m\u00e1y t\u00ednh. Hi\u1ec3u r\u00f5 c\u00e1c lo\u1ea1i topology kh\u00e1c nhau l\u00e0 \u0111i\u1ec1u quan tr\u1ecdng khi thi\u1ebft k\u1ebf m\u1ed9t h\u1ea1 t\u1ea7ng m\u1ea1ng hi\u1ec7u qu\u1ea3 v\u00e0 \u1ed5n \u0111\u1ecbnh.</p>"},{"location":"network-comtia/01.fundamental/05.network-topology/#physical-topology-vs-logical-topology","title":"Physical Topology vs Logical Topology","text":"<p>Tr\u01b0\u1edbc khi t\u00ecm hi\u1ec3u v\u1ec1 6 lo\u1ea1i topology ch\u00ednh, ch\u00fang ta c\u1ea7n hi\u1ec3u c\u00e1ch ch\u00fang \u0111\u01b0\u1ee3c t\u00e0i li\u1ec7u h\u00f3a trong c\u00e1c s\u01a1 \u0111\u1ed3 m\u1ea1ng.</p>"},{"location":"network-comtia/01.fundamental/05.network-topology/#physical-topology","title":"Physical Topology","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: Cho th\u1ea5y c\u00e1ch c\u00e1c thi\u1ebft b\u1ecb v\u00e0 th\u00e0nh ph\u1ea7n m\u1ea1ng \u0111\u01b0\u1ee3c k\u1ebft n\u1ed1i v\u1eadt l\u00fd th\u00f4ng qua c\u00e1c lo\u1ea1i c\u00e1p \u0111\u1ed3ng ho\u1eb7c quang.</li> <li>V\u00ed d\u1ee5: S\u01a1 \u0111\u1ed3 m\u1eb7t b\u1eb1ng t\u00f2a nh\u00e0 hi\u1ec3n th\u1ecb v\u1ecb tr\u00ed th\u1ef1c t\u1ebf c\u1ee7a m\u00e1y t\u00ednh, router, switch v\u00e0 \u0111\u01b0\u1eddng c\u00e1p.</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#logical-topology","title":"Logical Topology","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: M\u00f4 t\u1ea3 c\u00e1ch d\u1eef li\u1ec7u th\u1ef1c s\u1ef1 di chuy\u1ec3n qua m\u1ea1ng.</li> <li>\u0110\u1eb7c \u0111i\u1ec3m: Hi\u1ec3n th\u1ecb workstation, router, switch v\u00e0 c\u00e1ch ch\u00fang k\u1ebft n\u1ed1i nh\u01b0ng kh\u00f4ng th\u1ec3 hi\u1ec7n v\u1ecb tr\u00ed v\u1eadt l\u00fd th\u1ef1c t\u1ebf.</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#6-loai-network-topology-chinh","title":"6 Lo\u1ea1i Network Topology Ch\u00ednh","text":""},{"location":"network-comtia/01.fundamental/05.network-topology/#1-point-to-point-topology","title":"1. Point-to-Point Topology","text":"<p>\u0110\u1eb7c \u0111i\u1ec3m:</p> <ul> <li>H\u00ecnh th\u1ee9c \u0111\u01a1n gi\u1ea3n nh\u1ea5t c\u1ee7a topology m\u1ea1ng</li> <li>K\u1ebft n\u1ed1i tr\u1ef1c ti\u1ebfp gi\u1eefa hai thi\u1ebft b\u1ecb</li> <li>Th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 k\u1ebft n\u1ed1i m\u00e1y t\u00ednh v\u1edbi thi\u1ebft b\u1ecb ngo\u1ea1i vi (m\u00e1y in, scanner)</li> </ul> <p>\u01afu \u0111i\u1ec3m:</p> <ul> <li>\u0110\u01a1n gi\u1ea3n v\u00e0 \u0111\u00e1ng tin c\u1eady</li> <li>Ph\u00f9 h\u1ee3p cho k\u1ebft n\u1ed1i quy m\u00f4 nh\u1ecf</li> </ul> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m:</p> <ul> <li>Kh\u00f4ng th\u1ec3 m\u1edf r\u1ed9ng cho m\u1ea1ng l\u1edbn</li> <li>Ngo\u1ea1i l\u1ec7: S\u1eed d\u1ee5ng trong WAN connections \u0111\u1ec3 k\u1ebft n\u1ed1i c\u00e1c v\u0103n ph\u00f2ng t\u1eeb xa</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#2-ring-topology","title":"2. Ring Topology","text":"<p>\u0110\u1eb7c \u0111i\u1ec3m:</p> <ul> <li>M\u1ed7i thi\u1ebft b\u1ecb k\u1ebft n\u1ed1i v\u1edbi hai thi\u1ebft b\u1ecb kh\u00e1c, t\u1ea1o th\u00e0nh \u0111\u01b0\u1eddng d\u1eabn d\u1eef li\u1ec7u h\u00ecnh tr\u00f2n</li> <li>D\u1eef li\u1ec7u di chuy\u1ec3n theo m\u1ed9t h\u01b0\u1edbng (clockwise ho\u1eb7c counterclockwise)</li> </ul> <p>\u01afu \u0111i\u1ec3m:</p> <ul> <li>Ng\u0103n ch\u1eb7n collision do lu\u1ed3ng d\u1eef li\u1ec7u m\u1ed9t chi\u1ec1u</li> <li>Th\u00edch h\u1ee3p cho FDDI (Fiber Distributed Data Interface)</li> </ul> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m:</p> <ul> <li>M\u1ed9t node l\u1ed7i c\u00f3 th\u1ec3 l\u00e0m gi\u00e1n \u0111o\u1ea1n to\u00e0n b\u1ed9 m\u1ea1ng</li> <li>C\u00f4ng ngh\u1ec7 c\u0169, \u00edt \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng hi\u1ec7n t\u1ea1i</li> </ul> <p>FDDI Ring:</p> <ul> <li>Ho\u1ea1t \u0111\u1ed9ng v\u1edbi c\u1ea5u tr\u00fac dual ring (primary v\u00e0 secondary)</li> <li>B\u0103ng th\u00f4ng cao, ph\u1ea1m vi \u0111\u1ebfn 200km</li> <li>Ph\u00f9 h\u1ee3p cho campus networks v\u00e0 data centers</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#3-bus-topology","title":"3. Bus Topology","text":"<p>\u0110\u1eb7c \u0111i\u1ec3m:</p> <ul> <li>T\u1ea5t c\u1ea3 thi\u1ebft b\u1ecb k\u1ebft n\u1ed1i v\u1edbi m\u1ed9t c\u00e1p trung t\u00e2m (backbone/bus)</li> <li>D\u1eef li\u1ec7u c\u00f3 s\u1eb5n cho m\u1ecdi thi\u1ebft b\u1ecb nh\u01b0ng ch\u1ec9 recipient \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh m\u1edbi x\u1eed l\u00fd</li> </ul> <p>\u01afu \u0111i\u1ec3m:</p> <ul> <li>D\u1ec5 c\u00e0i \u0111\u1eb7t</li> <li>Y\u00eau c\u1ea7u \u00edt c\u00e1p h\u01a1n c\u00e1c layout kh\u00e1c</li> </ul> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m:</p> <ul> <li>To\u00e0n b\u1ed9 m\u1ea1ng ng\u1eebng ho\u1ea1t \u0111\u1ed9ng khi c\u00e1p ch\u00ednh l\u1ed7i</li> <li>Hi\u1ec7u su\u1ea5t gi\u1ea3m khi th\u00eam thi\u1ebft b\u1ecb (do data collision)</li> <li>C\u00f4ng ngh\u1ec7 c\u0169, \u00edt s\u1eed d\u1ee5ng</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#4-star-topology","title":"4. Star Topology","text":"<p>\u0110\u1eb7c \u0111i\u1ec3m:</p> <ul> <li>M\u1ed7i node k\u1ebft n\u1ed1i v\u1edbi m\u1ed9t \u0111i\u1ec3m trung t\u00e2m (th\u01b0\u1eddng l\u00e0 network switch)</li> <li>Switch ho\u1ea1t \u0111\u1ed9ng nh\u01b0 repeater cho lu\u1ed3ng d\u1eef li\u1ec7u</li> <li>Topology ph\u1ed5 bi\u1ebfn nh\u1ea5t hi\u1ec7n t\u1ea1i</li> </ul> <p>\u01afu \u0111i\u1ec3m:</p> <ul> <li>R\u1ea5t robust - l\u1ed7i m\u1ed9t link kh\u00f4ng \u1ea3nh h\u01b0\u1edfng c\u00e1c link kh\u00e1c</li> <li>D\u1ec5 qu\u1ea3n l\u00fd v\u00e0 troubleshoot</li> <li>M\u1ea1ng gia \u0111\u00ecnh th\u01b0\u1eddng s\u1eed d\u1ee5ng topology n\u00e0y</li> </ul> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m:</p> <ul> <li>Ph\u1ee5 thu\u1ed9c ho\u00e0n to\u00e0n v\u00e0o switch trung t\u00e2m</li> <li>Switch l\u1ed7i = to\u00e0n b\u1ed9 m\u1ea1ng ng\u1eebng ho\u1ea1t \u0111\u1ed9ng</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#5-hub-and-spoke-topology","title":"5. Hub-and-Spoke Topology","text":"<p>\u0110\u1eb7c \u0111i\u1ec3m:</p> <ul> <li>Bi\u1ebfn th\u1ec3 c\u1ee7a star topology</li> <li>Node trung t\u00e2m (hub) k\u1ebft n\u1ed1i v\u1edbi nhi\u1ec1u nodes (spokes)</li> <li>Spokes kh\u00f4ng k\u1ebft n\u1ed1i tr\u1ef1c ti\u1ebfp v\u1edbi nhau</li> </ul> <p>\u1ee8ng d\u1ee5ng th\u1ef1c t\u1ebf:</p> <ul> <li>H\u00e0ng kh\u00f4ng: Orlando \u2192 Atlanta \u2192 Los Angeles \u2192 Hawaii</li> <li>M\u1ea1ng vi\u1ec5n th\u00f4ng: Consolidate c\u00e1c v\u0103n ph\u00f2ng khu v\u1ef1c v\u1ec1 hub trung t\u00e2m</li> </ul> <p>\u01afu \u0111i\u1ec3m:</p> <ul> <li>Ti\u1ebft ki\u1ec7m chi ph\u00ed k\u1ebft n\u1ed1i \u0111\u01b0\u1eddng d\u00e0i</li> <li>T\u1eadp trung b\u0103ng th\u00f4ng cao gi\u1eefa c\u00e1c hub ch\u00ednh</li> </ul> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m:</p> <ul> <li>Ph\u1ee5 thu\u1ed9c v\u00e0o hub trung t\u00e2m</li> <li>Latency cao do ph\u1ea3i \u0111i qua hub</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#6-mesh-topology","title":"6. Mesh Topology","text":"<p>\u0110\u1eb7c \u0111i\u1ec3m:</p> <ul> <li>K\u1ebft n\u1ed1i point-to-point gi\u1eefa m\u1ecdi thi\u1ebft b\u1ecb</li> <li>T\u1ea1o m\u1ea1ng robust v\u00e0 redundant</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#full-mesh-topology","title":"Full-Mesh Topology","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: M\u1ecdi node k\u1ebft n\u1ed1i v\u1edbi m\u1ecdi node kh\u00e1c</li> <li>C\u00f4ng th\u1ee9c s\u1ed1 k\u1ebft n\u1ed1i: n \u00d7 (n-1) \u00f7 2</li> <li>3 nodes = 3 k\u1ebft n\u1ed1i</li> <li>6 nodes = 15 k\u1ebft n\u1ed1i</li> </ul> <p>\u01afu \u0111i\u1ec3m:</p> <ul> <li>Redundancy cao</li> <li>Nhi\u1ec1u \u0111\u01b0\u1eddng backup</li> </ul> <p>Nh\u01b0\u1ee3c \u0111i\u1ec3m:</p> <ul> <li>R\u1ea5t \u0111\u1eaft v\u00e0 ph\u1ee9c t\u1ea1p</li> <li>S\u1ed1 k\u1ebft n\u1ed1i t\u0103ng theo c\u1ea5p s\u1ed1 nh\u00e2n</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#partial-mesh-topology","title":"Partial-Mesh Topology","text":"<ul> <li>\u0110\u1ecbnh ngh\u0129a: M\u1ed9t s\u1ed1 nodes \u0111\u01b0\u1ee3c k\u1ebft n\u1ed1i full-mesh, c\u00e1c nodes kh\u00e1c ch\u1ec9 k\u1ebft n\u1ed1i v\u1edbi 1-2 thi\u1ebft b\u1ecb</li> <li>\u1ee8ng d\u1ee5ng: C\u00e2n b\u1eb1ng gi\u1eefa redundancy v\u00e0 cost</li> </ul>"},{"location":"network-comtia/01.fundamental/05.network-topology/#so-sanh-tong-quan","title":"So S\u00e1nh T\u1ed5ng Quan","text":"Topology \u01afu \u0111i\u1ec3m Nh\u01b0\u1ee3c \u0111i\u1ec3m S\u1eed d\u1ee5ng Point-to-Point \u0110\u01a1n gi\u1ea3n, \u0111\u00e1ng tin c\u1eady Kh\u00f4ng scalable WAN connections Ring Kh\u00f4ng collision, FDDI support Single point of failure FDDI networks Bus D\u1ec5 c\u00e0i \u0111\u1eb7t, \u00edt c\u00e1p Performance gi\u1ea3m, c\u0169 Legacy systems Star Robust, d\u1ec5 qu\u1ea3n l\u00fd Ph\u1ee5 thu\u1ed9c switch Home/office networks Hub-and-Spoke Ti\u1ebft ki\u1ec7m, t\u1eadp trung Ph\u1ee5 thu\u1ed9c hub, latency Enterprise networks Mesh Redundancy cao \u0110\u1eaft, ph\u1ee9c t\u1ea1p Critical networks"},{"location":"network-comtia/01.fundamental/05.network-topology/#ket-luan","title":"K\u1ebft Lu\u1eadn","text":"<p>Hi\u1ec3u bi\u1ebft v\u1ec1 c\u00e1c lo\u1ea1i topology m\u1ea1ng l\u00e0 n\u1ec1n t\u1ea3ng quan tr\u1ecdng cho thi\u1ebft k\u1ebf v\u00e0 qu\u1ea3n l\u00fd m\u1ea1ng. M\u1ed7i topology c\u00f3 nh\u1eefng \u01b0u nh\u01b0\u1ee3c \u0111i\u1ec3m ri\u00eang, ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c scenario kh\u00e1c nhau:</p> <ul> <li>Point-to-point: Ideal cho k\u1ebft n\u1ed1i nh\u1ecf v\u00e0 WAN links</li> <li>Ring/Bus: C\u00f4ng ngh\u1ec7 legacy v\u1edbi vulnerability cao</li> <li>Star: Ph\u1ed5 bi\u1ebfn nh\u1ea5t, c\u00e2n b\u1eb1ng t\u1ed1t gi\u1eefa reliability v\u00e0 cost</li> <li>Hub-and-spoke: T\u1ed1t cho enterprise v\u1edbi centralized management</li> <li>Mesh: Maximum redundancy nh\u01b0ng cost cao</li> </ul> <p>Vi\u1ec7c l\u1ef1a ch\u1ecdn topology ph\u00f9 h\u1ee3p ph\u1ee5 thu\u1ed9c v\u00e0o y\u00eau c\u1ea7u c\u1ee5 th\u1ec3 v\u1ec1 performance, redundancy, cost v\u00e0 scalability c\u1ee7a t\u1ed5 ch\u1ee9c.</p>"},{"location":"observability/roadmap/","title":"Observability Complete Learning Roadmap - Metrics, Logging &amp; Tracing","text":""},{"location":"observability/roadmap/#observability-complete-learning-roadmap-metrics-logging-tracing","title":"Observability Complete Learning Roadmap - Metrics, Logging &amp; Tracing","text":""},{"location":"observability/roadmap/#muc-tieu-master-observability-voi-cong-cu-pho-bien-trong-10-12-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master Observability v\u1edbi c\u00f4ng c\u1ee5 ph\u1ed5 bi\u1ebfn trong 10-12 th\u00e1ng","text":"<p>C\u00f4ng c\u1ee5 t\u1eadp trung:</p> <ul> <li>Metrics &amp; Alerting: Prometheus + Grafana</li> <li>Logging: ELK Stack (Elasticsearch + Logstash + Kibana)</li> <li>Tracing &amp; APM: Jaeger + OpenTelemetry</li> </ul>"},{"location":"observability/roadmap/#giai-oan-1-observability-foundation-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: OBSERVABILITY FOUNDATION (Th\u00e1ng 1-2)","text":""},{"location":"observability/roadmap/#week-1-observability-fundamentals","title":"Week 1: Observability Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"What is observability in DevOps\"</li> <li>[ ] \"Three pillars of observability metrics logs traces\"</li> <li>[ ] \"Monitoring vs observability difference\"</li> <li>[ ] \"SRE monitoring best practices\"</li> <li>[ ] \"Observability strategy for microservices\"</li> <li>[ ] \"Golden signals SLI SLO SLA explained\"</li> <li>[ ] \"Observability tools comparison 2024\"</li> <li>[ ] \"Observability implementation roadmap\"</li> </ul> <p>Core Concepts:</p> <ul> <li>[ ] Four Golden Signals: Latency, Traffic, Errors, Saturation</li> <li>[ ] RED Method: Rate, Errors, Duration</li> <li>[ ] USE Method: Utilization, Saturation, Errors</li> <li>[ ] Service Level Indicators (SLI)</li> <li>[ ] Service Level Objectives (SLO)</li> <li>[ ] Error budgets v\u00e0 alerting</li> </ul>"},{"location":"observability/roadmap/#week-2-metrics-fundamentals","title":"Week 2: Metrics Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Application metrics types counter gauge histogram\"</li> <li>[ ] \"Infrastructure metrics CPU memory disk network\"</li> <li>[ ] \"Business metrics KPI monitoring\"</li> <li>[ ] \"Metrics collection strategies\"</li> <li>[ ] \"Time series data explained\"</li> <li>[ ] \"Metrics cardinality problems\"</li> <li>[ ] \"Metrics aggregation and downsampling\"</li> <li>[ ] \"Metrics retention policies\"</li> </ul> <p>Metrics Types Practice:</p> <pre><code># Counter - monotonically increasing\nhttp_requests_total\ndatabase_connections_created_total\n\n# Gauge - can go up and down\ncpu_usage_percent\nmemory_usage_bytes\nactive_connections\n\n# Histogram - distribution of values\nhttp_request_duration_seconds\ndatabase_query_duration_seconds\n\n# Summary - similar to histogram\nresponse_time_summary\nrequest_size_summary\n</code></pre>"},{"location":"observability/roadmap/#week-3-logging-fundamentals","title":"Week 3: Logging Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Structured logging vs unstructured logging\"</li> <li>[ ] \"Log levels ERROR WARN INFO DEBUG TRACE\"</li> <li>[ ] \"Centralized logging architecture\"</li> <li>[ ] \"Log aggregation strategies\"</li> <li>[ ] \"Log parsing and enrichment\"</li> <li>[ ] \"Log retention and archiving\"</li> <li>[ ] \"Logging best practices security\"</li> <li>[ ] \"Log correlation and context\"</li> </ul> <p>Logging Best Practices:</p> <pre><code>// Structured logging example\n{\n  \"timestamp\": \"2024-01-15T10:30:00Z\",\n  \"level\": \"ERROR\",\n  \"service\": \"user-service\",\n  \"trace_id\": \"abc123\",\n  \"span_id\": \"def456\",\n  \"user_id\": \"user123\",\n  \"message\": \"Failed to authenticate user\",\n  \"error\": \"invalid_credentials\",\n  \"duration_ms\": 145\n}\n</code></pre>"},{"location":"observability/roadmap/#week-4-tracing-fundamentals","title":"Week 4: Tracing Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Distributed tracing explained\"</li> <li>[ ] \"OpenTelemetry tracing concepts\"</li> <li>[ ] \"Trace spans and context propagation\"</li> <li>[ ] \"Tracing in microservices architecture\"</li> <li>[ ] \"Trace sampling strategies\"</li> <li>[ ] \"Trace correlation with logs and metrics\"</li> <li>[ ] \"Application performance monitoring APM\"</li> <li>[ ] \"Tracing overhead and performance impact\"</li> </ul> <p>Tracing Concepts:</p> <pre><code>Trace: Complete request journey\n\u251c\u2500\u2500 Span: Individual operation\n\u2502   \u251c\u2500\u2500 Tags: Key-value metadata\n\u2502   \u251c\u2500\u2500 Logs: Timestamped events\n\u2502   \u2514\u2500\u2500 Context: Propagation info\n\u2514\u2500\u2500 Span: Next operation\n    \u2514\u2500\u2500 Child Span: Nested operation\n</code></pre>"},{"location":"observability/roadmap/#giai-oan-2-prometheus-grafana-mastery-thang-3-4","title":"\ud83d\udcca GIAI \u0110O\u1ea0N 2: PROMETHEUS &amp; GRAFANA MASTERY (Th\u00e1ng 3-4)","text":""},{"location":"observability/roadmap/#week-5-prometheus-fundamentals","title":"Week 5: Prometheus Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Prometheus installation setup tutorial\"</li> <li>[ ] \"Prometheus configuration prometheus.yml\"</li> <li>[ ] \"Prometheus data model time series\"</li> <li>[ ] \"Prometheus metrics types counter gauge histogram\"</li> <li>[ ] \"Prometheus scraping targets discovery\"</li> <li>[ ] \"Prometheus exporters node_exporter blackbox\"</li> <li>[ ] \"Prometheus recording rules and alerts\"</li> <li>[ ] \"Prometheus federation and high availability\"</li> </ul> <p>Prometheus Setup:</p> <pre><code># prometheus.yml\nglobal:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n\nrule_files:\n  - \"rules/*.yml\"\n\nalerting:\n  alertmanagers:\n    - static_configs:\n        - targets:\n            - \"alertmanager:9093\"\n\nscrape_configs:\n  - job_name: \"prometheus\"\n    static_configs:\n      - targets: [\"localhost:9090\"]\n\n  - job_name: \"node-exporter\"\n    static_configs:\n      - targets: [\"node-exporter:9100\"]\n\n  - job_name: \"my-app\"\n    static_configs:\n      - targets: [\"app:8080\"]\n</code></pre>"},{"location":"observability/roadmap/#week-6-promql-query-language","title":"Week 6: PromQL Query Language","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"PromQL tutorial Prometheus query language\"</li> <li>[ ] \"PromQL selectors and matchers\"</li> <li>[ ] \"PromQL aggregation operators sum avg max\"</li> <li>[ ] \"PromQL functions rate increase irate\"</li> <li>[ ] \"PromQL range queries and instant queries\"</li> <li>[ ] \"PromQL histogram quantile calculations\"</li> <li>[ ] \"PromQL troubleshooting common errors\"</li> <li>[ ] \"PromQL performance optimization\"</li> </ul> <p>PromQL Examples:</p> <pre><code># Basic queries\nup\nhttp_requests_total\ncpu_usage{instance=\"server1\"}\n\n# Rate calculations\nrate(http_requests_total[5m])\nincrease(http_requests_total[1h])\n\n# Aggregations\nsum by (instance) (cpu_usage)\navg_over_time(cpu_usage[1h])\n\n# Advanced queries\nhistogram_quantile(0.95,\n  rate(http_request_duration_seconds_bucket[5m])\n)\n\n# Alerting queries\nrate(http_requests_total{status=\"500\"}[5m]) &gt; 0.1\n</code></pre>"},{"location":"observability/roadmap/#week-7-grafana-fundamentals","title":"Week 7: Grafana Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Grafana installation and setup\"</li> <li>[ ] \"Grafana data sources configuration\"</li> <li>[ ] \"Grafana dashboard creation tutorial\"</li> <li>[ ] \"Grafana panel types graph stat table\"</li> <li>[ ] \"Grafana templating and variables\"</li> <li>[ ] \"Grafana alerting rules setup\"</li> <li>[ ] \"Grafana plugins and extensions\"</li> <li>[ ] \"Grafana user management and permissions\"</li> </ul> <p>Grafana Dashboard JSON:</p> <pre><code>{\n  \"dashboard\": {\n    \"title\": \"Application Metrics\",\n    \"panels\": [\n      {\n        \"title\": \"Request Rate\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"rate(http_requests_total[5m])\",\n            \"legendFormat\": \"{{instance}}\"\n          }\n        ]\n      }\n    ],\n    \"templating\": {\n      \"list\": [\n        {\n          \"name\": \"instance\",\n          \"type\": \"query\",\n          \"query\": \"label_values(up, instance)\"\n        }\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"observability/roadmap/#week-8-alertmanager-alerting","title":"Week 8: Alertmanager &amp; Alerting","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Prometheus Alertmanager configuration\"</li> <li>[ ] \"AlertManager routing and grouping\"</li> <li>[ ] \"AlertManager notification channels email slack\"</li> <li>[ ] \"AlertManager silence and inhibition rules\"</li> <li>[ ] \"Prometheus alerting rules best practices\"</li> <li>[ ] \"Alert fatigue prevention strategies\"</li> <li>[ ] \"SRE alerting philosophy\"</li> <li>[ ] \"On-call management with AlertManager\"</li> </ul> <p>Alerting Rules:</p> <pre><code># alerts.yml\ngroups:\n  - name: application\n    rules:\n      - alert: HighErrorRate\n        expr: rate(http_requests_total{status=~\"5..\"}[5m]) &gt; 0.1\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: \"High error rate on {{ $labels.instance }}\"\n          description: \"Error rate is {{ $value }} requests per second\"\n\n      - alert: HighLatency\n        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) &gt; 0.5\n        for: 2m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"High latency on {{ $labels.instance }}\"\n</code></pre>"},{"location":"observability/roadmap/#giai-oan-3-elk-stack-mastery-thang-5-6","title":"\ud83d\udccb GIAI \u0110O\u1ea0N 3: ELK STACK MASTERY (Th\u00e1ng 5-6)","text":""},{"location":"observability/roadmap/#week-9-elasticsearch-fundamentals","title":"Week 9: Elasticsearch Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Elasticsearch installation and configuration\"</li> <li>[ ] \"Elasticsearch cluster setup nodes shards\"</li> <li>[ ] \"Elasticsearch indices and mappings\"</li> <li>[ ] \"Elasticsearch query DSL tutorial\"</li> <li>[ ] \"Elasticsearch aggregations and analytics\"</li> <li>[ ] \"Elasticsearch index lifecycle management\"</li> <li>[ ] \"Elasticsearch security X-Pack authentication\"</li> <li>[ ] \"Elasticsearch performance tuning optimization\"</li> </ul> <p>Elasticsearch Setup:</p> <pre><code># Elasticsearch installation\ndocker run -d --name elasticsearch \\\n  -p 9200:9200 -p 9300:9300 \\\n  -e \"discovery.type=single-node\" \\\n  -e \"ES_JAVA_OPTS=-Xms512m -Xmx512m\" \\\n  elasticsearch:8.11.0\n\n# Create index with mapping\ncurl -X PUT \"localhost:9200/logs\" -H 'Content-Type: application/json' -d'\n{\n  \"mappings\": {\n    \"properties\": {\n      \"timestamp\": { \"type\": \"date\" },\n      \"level\": { \"type\": \"keyword\" },\n      \"message\": { \"type\": \"text\" },\n      \"service\": { \"type\": \"keyword\" },\n      \"trace_id\": { \"type\": \"keyword\" }\n    }\n  }\n}'\n</code></pre>"},{"location":"observability/roadmap/#week-10-logstash-configuration","title":"Week 10: Logstash Configuration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Logstash installation and configuration\"</li> <li>[ ] \"Logstash input plugins file beats http\"</li> <li>[ ] \"Logstash filter plugins grok mutate date\"</li> <li>[ ] \"Logstash output plugins elasticsearch stdout\"</li> <li>[ ] \"Logstash grok patterns for log parsing\"</li> <li>[ ] \"Logstash performance tuning pipeline\"</li> <li>[ ] \"Logstash monitoring and troubleshooting\"</li> <li>[ ] \"Logstash alternatives Fluentd Vector\"</li> </ul> <p>Logstash Configuration:</p> <pre><code># logstash.conf\ninput {\n  beats {\n    port =&gt; 5044\n  }\n\n  file {\n    path =&gt; \"/var/log/app/*.log\"\n    start_position =&gt; \"beginning\"\n  }\n}\n\nfilter {\n  if [fields][service] == \"nginx\" {\n    grok {\n      match =&gt; {\n        \"message\" =&gt; \"%{NGINXACCESS}\"\n      }\n    }\n\n    date {\n      match =&gt; [ \"timestamp\", \"dd/MMM/yyyy:HH:mm:ss Z\" ]\n    }\n\n    mutate {\n      convert =&gt; { \"response_code\" =&gt; \"integer\" }\n      convert =&gt; { \"bytes\" =&gt; \"integer\" }\n    }\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts =&gt; [\"elasticsearch:9200\"]\n    index =&gt; \"logs-%{+YYYY.MM.dd}\"\n  }\n\n  stdout { codec =&gt; rubydebug }\n}\n</code></pre>"},{"location":"observability/roadmap/#week-11-kibana-analytics-visualization","title":"Week 11: Kibana Analytics &amp; Visualization","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Kibana installation and setup\"</li> <li>[ ] \"Kibana index patterns and field mapping\"</li> <li>[ ] \"Kibana Discover log searching and filtering\"</li> <li>[ ] \"Kibana Visualize charts graphs and tables\"</li> <li>[ ] \"Kibana Dashboard creation and sharing\"</li> <li>[ ] \"Kibana Canvas for custom presentations\"</li> <li>[ ] \"Kibana alerting and notifications\"</li> <li>[ ] \"Kibana security and user management\"</li> </ul> <p>Kibana Query Examples:</p> <pre><code>// Kibana Query DSL\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"service\": \"user-service\"\n          }\n        },\n        {\n          \"range\": {\n            \"timestamp\": {\n              \"gte\": \"now-1h\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"term\": {\n            \"level\": \"ERROR\"\n          }\n        }\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"observability/roadmap/#week-12-beats-log-shipping","title":"Week 12: Beats &amp; Log Shipping","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Elastic Beats overview Filebeat Metricbeat\"</li> <li>[ ] \"Filebeat configuration log shipping\"</li> <li>[ ] \"Metricbeat system metrics collection\"</li> <li>[ ] \"Heartbeat uptime monitoring\"</li> <li>[ ] \"Packetbeat network monitoring\"</li> <li>[ ] \"Beats modules and processors\"</li> <li>[ ] \"Beats output configuration Elasticsearch Logstash\"</li> <li>[ ] \"Beats monitoring and troubleshooting\"</li> </ul> <p>Filebeat Configuration:</p> <pre><code># filebeat.yml\nfilebeat.inputs:\n  - type: log\n    enabled: true\n    paths:\n      - /var/log/app/*.log\n    fields:\n      service: myapp\n      environment: production\n    fields_under_root: true\n\nprocessors:\n  - add_host_metadata:\n      when.not.contains.tags: forwarded\n  - add_docker_metadata: ~\n\noutput.logstash:\n  hosts: [\"logstash:5044\"]\n\n# Alternative direct to Elasticsearch\noutput.elasticsearch:\n  hosts: [\"elasticsearch:9200\"]\n  index: \"logs-%{+yyyy.MM.dd}\"\n\nlogging.level: info\nlogging.to_files: true\n</code></pre>"},{"location":"observability/roadmap/#giai-oan-4-tracing-apm-mastery-thang-7-8","title":"\ud83d\udd0d GIAI \u0110O\u1ea0N 4: TRACING &amp; APM MASTERY (Th\u00e1ng 7-8)","text":""},{"location":"observability/roadmap/#week-13-opentelemetry-fundamentals","title":"Week 13: OpenTelemetry Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"OpenTelemetry overview and architecture\"</li> <li>[ ] \"OpenTelemetry SDK installation setup\"</li> <li>[ ] \"OpenTelemetry auto-instrumentation\"</li> <li>[ ] \"OpenTelemetry manual instrumentation\"</li> <li>[ ] \"OpenTelemetry collector configuration\"</li> <li>[ ] \"OpenTelemetry exporters Jaeger Zipkin\"</li> <li>[ ] \"OpenTelemetry sampling strategies\"</li> <li>[ ] \"OpenTelemetry context propagation\"</li> </ul> <p>OpenTelemetry Auto-Instrumentation:</p> <pre><code># Python application\nfrom opentelemetry import trace\nfrom opentelemetry.auto_instrumentation import sitecustomize\nfrom opentelemetry.exporter.jaeger.thrift import JaegerExporter\nfrom opentelemetry.sdk.trace import TracerProvider\nfrom opentelemetry.sdk.trace.export import BatchSpanProcessor\n\n# Configure tracing\ntrace.set_tracer_provider(TracerProvider())\ntracer = trace.get_tracer(__name__)\n\njaeger_exporter = JaegerExporter(\n    agent_host_name=\"jaeger\",\n    agent_port=6831,\n)\n\nspan_processor = BatchSpanProcessor(jaeger_exporter)\ntrace.get_tracer_provider().add_span_processor(span_processor)\n\n# Manual instrumentation\n@tracer.start_as_current_span(\"process_request\")\ndef process_request(user_id):\n    span = trace.get_current_span()\n    span.set_attribute(\"user.id\", user_id)\n\n    # Your business logic here\n    result = database_call(user_id)\n\n    span.set_attribute(\"result.count\", len(result))\n    return result\n</code></pre>"},{"location":"observability/roadmap/#week-14-jaeger-distributed-tracing","title":"Week 14: Jaeger Distributed Tracing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jaeger installation and deployment\"</li> <li>[ ] \"Jaeger architecture collector agent query\"</li> <li>[ ] \"Jaeger UI trace analysis and debugging\"</li> <li>[ ] \"Jaeger sampling strategies configuration\"</li> <li>[ ] \"Jaeger storage backends Elasticsearch Cassandra\"</li> <li>[ ] \"Jaeger performance tuning and scaling\"</li> <li>[ ] \"Jaeger integration with Kubernetes\"</li> <li>[ ] \"Jaeger vs Zipkin comparison\"</li> </ul> <p>Jaeger Docker Setup:</p> <pre><code># Jaeger all-in-one\ndocker run -d --name jaeger \\\n  -p 16686:16686 \\\n  -p 14268:14268 \\\n  -p 6831:6831/udp \\\n  -p 6832:6832/udp \\\n  jaegertracing/all-in-one:latest\n\n# Production setup with Elasticsearch\ndocker run -d --name jaeger-collector \\\n  -p 14267:14267 \\\n  -p 14268:14268 \\\n  -p 9411:9411 \\\n  -e SPAN_STORAGE_TYPE=elasticsearch \\\n  -e ES_SERVER_URLS=http://elasticsearch:9200 \\\n  jaegertracing/jaeger-collector:latest\n</code></pre>"},{"location":"observability/roadmap/#week-15-application-performance-monitoring","title":"Week 15: Application Performance Monitoring","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"APM implementation strategies\"</li> <li>[ ] \"Application tracing best practices\"</li> <li>[ ] \"Performance bottleneck identification\"</li> <li>[ ] \"Database query tracing and optimization\"</li> <li>[ ] \"API performance monitoring\"</li> <li>[ ] \"Error tracking and debugging\"</li> <li>[ ] \"User experience monitoring RUM\"</li> <li>[ ] \"Mobile application performance monitoring\"</li> </ul> <p>APM Instrumentation Examples:</p> <pre><code>// Node.js Express application\nconst express = require(\"express\");\nconst { trace, context } = require(\"@opentelemetry/api\");\n\nconst app = express();\nconst tracer = trace.getTracer(\"my-app\");\n\napp.get(\"/api/users/:id\", async (req, res) =&gt; {\n  const span = tracer.startSpan(\"get_user\");\n\n  try {\n    span.setAttributes({\n      \"user.id\": req.params.id,\n      \"http.method\": req.method,\n      \"http.url\": req.url,\n    });\n\n    const user = await getUserFromDatabase(req.params.id);\n\n    span.setAttributes({\n      \"user.found\": !!user,\n      \"db.query.duration\": 150, // ms\n    });\n\n    res.json(user);\n  } catch (error) {\n    span.setStatus({\n      code: trace.SpanStatusCode.ERROR,\n      message: error.message,\n    });\n\n    span.setAttributes({\n      \"error.type\": error.constructor.name,\n      \"error.message\": error.message,\n    });\n\n    res.status(500).json({ error: \"Internal Server Error\" });\n  } finally {\n    span.end();\n  }\n});\n</code></pre>"},{"location":"observability/roadmap/#week-16-advanced-observability-patterns","title":"Week 16: Advanced Observability Patterns","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Observability correlation metrics logs traces\"</li> <li>[ ] \"Distributed tracing sampling optimization\"</li> <li>[ ] \"Observability data pipeline architecture\"</li> <li>[ ] \"Cost optimization observability data\"</li> <li>[ ] \"Observability as Code GitOps monitoring\"</li> <li>[ ] \"Service mesh observability Istio Linkerd\"</li> <li>[ ] \"Chaos engineering with observability\"</li> <li>[ ] \"Observability security and privacy\"</li> </ul>"},{"location":"observability/roadmap/#giai-oan-5-advanced-observability-thang-9-12","title":"\ud83d\ude80 GIAI \u0110O\u1ea0N 5: ADVANCED OBSERVABILITY (Th\u00e1ng 9-12)","text":""},{"location":"observability/roadmap/#week-17-18-production-observability-setup","title":"Week 17-18: Production Observability Setup","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Production monitoring architecture design\"</li> <li>[ ] \"Multi-cluster observability setup\"</li> <li>[ ] \"Observability high availability and disaster recovery\"</li> <li>[ ] \"Cross-region monitoring and alerting\"</li> <li>[ ] \"Observability infrastructure scaling\"</li> <li>[ ] \"Monitoring infrastructure costs optimization\"</li> <li>[ ] \"Compliance and audit logging\"</li> <li>[ ] \"Zero-downtime observability upgrades\"</li> </ul>"},{"location":"observability/roadmap/#week-19-20-advanced-analytics-ml","title":"Week 19-20: Advanced Analytics &amp; ML","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Machine learning for anomaly detection\"</li> <li>[ ] \"Predictive alerting and forecasting\"</li> <li>[ ] \"Log analysis with machine learning\"</li> <li>[ ] \"Automated root cause analysis\"</li> <li>[ ] \"Behavioral monitoring and profiling\"</li> <li>[ ] \"Pattern recognition in observability data\"</li> <li>[ ] \"AI-powered incident response\"</li> <li>[ ] \"Observability data science applications\"</li> </ul>"},{"location":"observability/roadmap/#week-21-22-observability-automation","title":"Week 21-22: Observability Automation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure as Code for monitoring\"</li> <li>[ ] \"Automated dashboard generation\"</li> <li>[ ] \"Dynamic alerting rule management\"</li> <li>[ ] \"Self-healing systems with observability\"</li> <li>[ ] \"Automated incident escalation\"</li> <li>[ ] \"GitOps for observability configuration\"</li> <li>[ ] \"Policy-driven monitoring deployment\"</li> <li>[ ] \"Observability testing automation\"</li> </ul>"},{"location":"observability/roadmap/#week-23-24-observability-leadership","title":"Week 23-24: Observability Leadership","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Observability strategy and governance\"</li> <li>[ ] \"Building observability culture in teams\"</li> <li>[ ] \"Observability ROI measurement\"</li> <li>[ ] \"Vendor evaluation and tool selection\"</li> <li>[ ] \"Observability training and education\"</li> <li>[ ] \"Industry observability best practices\"</li> <li>[ ] \"Future trends in observability\"</li> <li>[ ] \"Observability conference talks and papers\"</li> </ul>"},{"location":"observability/roadmap/#hands-on-projects","title":"\ud83d\udcda HANDS-ON PROJECTS","text":""},{"location":"observability/roadmap/#prometheus-grafana-projects","title":"\ud83d\udcca Prometheus + Grafana Projects","text":"<ol> <li> <p>Complete Monitoring Stack</p> </li> <li> <p>Multi-service application monitoring</p> </li> <li>Custom metrics and dashboards</li> <li>Comprehensive alerting setup</li> <li> <p>Search: \"Prometheus Grafana monitoring stack\"</p> </li> <li> <p>Kubernetes Monitoring</p> </li> <li> <p>Cluster and pod monitoring</p> </li> <li>Resource usage tracking</li> <li>Application performance monitoring</li> <li> <p>Search: \"Kubernetes Prometheus monitoring\"</p> </li> <li> <p>Business Metrics Dashboard</p> </li> <li>KPI and business metrics</li> <li>Real-time analytics</li> <li>Executive dashboards</li> <li>Search: \"Business metrics monitoring Grafana\"</li> </ol>"},{"location":"observability/roadmap/#elk-stack-projects","title":"\ud83d\udccb ELK Stack Projects","text":"<ol> <li> <p>Centralized Logging Platform</p> </li> <li> <p>Multi-application log aggregation</p> </li> <li>Log parsing and enrichment</li> <li>Security and audit logging</li> <li> <p>Search: \"ELK stack centralized logging\"</p> </li> <li> <p>Log Analytics and Investigation</p> </li> <li> <p>Error pattern analysis</p> </li> <li>Performance troubleshooting</li> <li>Security incident investigation</li> <li> <p>Search: \"ELK stack log analysis\"</p> </li> <li> <p>Compliance and Audit Logging</p> </li> <li>Regulatory compliance logging</li> <li>Audit trail management</li> <li>Data retention policies</li> <li>Search: \"ELK compliance audit logging\"</li> </ol>"},{"location":"observability/roadmap/#tracing-projects","title":"\ud83d\udd0d Tracing Projects","text":"<ol> <li> <p>Microservices Tracing</p> </li> <li> <p>End-to-end request tracing</p> </li> <li>Performance bottleneck identification</li> <li>Error propagation analysis</li> <li> <p>Search: \"Jaeger microservices tracing\"</p> </li> <li> <p>Database Performance Monitoring</p> </li> <li> <p>Query performance tracing</p> </li> <li>Connection pool monitoring</li> <li>Database bottleneck analysis</li> <li> <p>Search: \"Database tracing OpenTelemetry\"</p> </li> <li> <p>API Performance Optimization</p> </li> <li>API response time analysis</li> <li>Third-party service monitoring</li> <li>Performance optimization</li> <li>Search: \"API performance monitoring tracing\"</li> </ol>"},{"location":"observability/roadmap/#skill-mastery-checklist","title":"\ud83d\udccb SKILL MASTERY CHECKLIST","text":""},{"location":"observability/roadmap/#prometheus-grafana-expertise","title":"Prometheus &amp; Grafana Expertise","text":"<ul> <li>[ ] Design and implement monitoring strategy</li> <li>[ ] Create complex PromQL queries</li> <li>[ ] Build comprehensive dashboards</li> <li>[ ] Configure multi-tier alerting</li> <li>[ ] Optimize Prometheus performance</li> <li>[ ] Implement high availability setup</li> </ul>"},{"location":"observability/roadmap/#elk-stack-mastery","title":"ELK Stack Mastery","text":"<ul> <li>[ ] Design scalable logging architecture</li> <li>[ ] Configure complex log processing pipelines</li> <li>[ ] Create effective log analysis workflows</li> <li>[ ] Implement security and compliance logging</li> <li>[ ] Optimize Elasticsearch performance</li> <li>[ ] Troubleshoot ELK stack issues</li> </ul>"},{"location":"observability/roadmap/#tracing-apm-skills","title":"Tracing &amp; APM Skills","text":"<ul> <li>[ ] Implement distributed tracing strategy</li> <li>[ ] Configure auto and manual instrumentation</li> <li>[ ] Analyze complex trace data</li> <li>[ ] Optimize application performance</li> <li>[ ] Implement sampling strategies</li> <li>[ ] Correlate traces with metrics and logs</li> </ul>"},{"location":"observability/roadmap/#certifications-resources","title":"\ud83c\udf93 CERTIFICATIONS &amp; RESOURCES","text":""},{"location":"observability/roadmap/#recommended-certifications","title":"Recommended Certifications","text":"<ul> <li>[ ] Prometheus Certified Associate (If available)</li> <li>[ ] Elastic Certified Engineer</li> <li>[ ] Grafana Certified Professional</li> <li>[ ] AWS/Azure/GCP Monitoring Certifications</li> </ul>"},{"location":"observability/roadmap/#essential-books","title":"Essential Books","text":"<ul> <li>\"Observability Engineering\" - Honeycomb Team</li> <li>\"Site Reliability Engineering\" - Google SRE Team</li> <li>\"Monitoring with Prometheus\" - James Turnbull</li> <li>\"Learning Elastic Stack\" - Pranav Shukla</li> </ul>"},{"location":"observability/roadmap/#online-learning","title":"Online Learning","text":"<ul> <li>\"Complete Guide to Elasticsearch\" - Udemy</li> <li>\"Prometheus Monitoring\" - Linux Academy</li> <li>\"Grafana Fundamentals\" - Official Training</li> <li>\"OpenTelemetry Workshop\" - Cloud Native Computing Foundation</li> </ul>"},{"location":"observability/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"observability/roadmap/#morning-check-15-mins","title":"Morning Check (15 mins)","text":"<ul> <li>[ ] Review overnight alerts and incidents</li> <li>[ ] Check system health dashboards</li> <li>[ ] Validate monitoring pipeline status</li> <li>[ ] Plan daily observability tasks</li> </ul>"},{"location":"observability/roadmap/#active-development-60-90-mins","title":"Active Development (60-90 mins)","text":"<ul> <li>[ ] Work on monitoring improvements</li> <li>[ ] Analyze observability data</li> <li>[ ] Optimize queries and dashboards</li> <li>[ ] Contribute to observability tools</li> </ul>"},{"location":"observability/roadmap/#evening-review-20-mins","title":"Evening Review (20 mins)","text":"<ul> <li>[ ] Document findings and learnings</li> <li>[ ] Update monitoring runbooks</li> <li>[ ] Plan next day's priorities</li> <li>[ ] Review observability metrics</li> </ul>"},{"location":"observability/roadmap/#mastery-milestones","title":"\ud83c\udfaf MASTERY MILESTONES","text":""},{"location":"observability/roadmap/#month-2-foundation-complete","title":"Month 2: Foundation Complete","text":"<ul> <li>[ ] Understand observability principles</li> <li>[ ] Basic Prometheus and Grafana setup</li> <li>[ ] Simple ELK stack deployment</li> <li>[ ] First distributed traces</li> </ul>"},{"location":"observability/roadmap/#month-4-intermediate-skills","title":"Month 4: Intermediate Skills","text":"<ul> <li>[ ] Complex monitoring setups</li> <li>[ ] Advanced dashboard creation</li> <li>[ ] Log analysis and troubleshooting</li> <li>[ ] Application instrumentation</li> </ul>"},{"location":"observability/roadmap/#month-6-advanced-implementation","title":"Month 6: Advanced Implementation","text":"<ul> <li>[ ] Production-ready observability stack</li> <li>[ ] Performance optimization</li> <li>[ ] Advanced analytics and correlation</li> <li>[ ] Automated alerting and response</li> </ul>"},{"location":"observability/roadmap/#month-8-expert-level","title":"Month 8: Expert Level","text":"<ul> <li>[ ] Multi-cluster observability</li> <li>[ ] Custom tooling development</li> <li>[ ] Advanced troubleshooting</li> <li>[ ] Team mentoring and training</li> </ul>"},{"location":"observability/roadmap/#month-12-leadership","title":"Month 12: Leadership","text":"<ul> <li>[ ] Strategic observability planning</li> <li>[ ] Tool evaluation and selection</li> <li>[ ] Industry contributions</li> <li>[ ] Thought leadership</li> </ul> <p>Observability Philosophy: \"You can't improve what you can't measure, and you can't troubleshoot what you can't observe!\"</p>"},{"location":"observability/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"observability/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ul> <li>[ ] Install Prometheus, Grafana, and ELK stack locally</li> <li>[ ] Create sample application with basic metrics</li> <li>[ ] Set up first dashboard and alert</li> <li>[ ] Generate sample logs and traces</li> </ul>"},{"location":"observability/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic tutorials for each tool</li> <li>[ ] Monitor first real application</li> <li>[ ] Create comprehensive dashboard</li> <li>[ ] Set up basic alerting</li> </ul>"},{"location":"observability/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Production-ready monitoring stack</li> <li>[ ] End-to-end observability implementation</li> <li>[ ] Performance optimization baseline</li> <li>[ ] Team knowledge sharing</li> </ul> <p>Remember: Observability mastery comes from understanding your systems deeply and building the right instrumentation to gain insights into their behavior!</p>"},{"location":"prog/python-automation/roadmap/","title":"Python Automation &amp; DevOps Automation Roadmap","text":""},{"location":"prog/python-automation/roadmap/#python-automation-devops-automation-roadmap","title":"Python Automation &amp; DevOps Automation Roadmap","text":""},{"location":"prog/python-automation/roadmap/#muc-tieu","title":"\ud83c\udfaf M\u1ee5c ti\u00eau","text":"<p>Tr\u1edf th\u00e0nh chuy\u00ean gia Python Automation v\u00e0 DevOps Automation t\u1eeb c\u01a1 b\u1ea3n \u0111\u1ebfn n\u00e2ng cao.</p>"},{"location":"prog/python-automation/roadmap/#phase-1-python-fundamentals-2-3-thang","title":"\ud83d\udcda Phase 1: Python Fundamentals (2-3 th\u00e1ng)","text":""},{"location":"prog/python-automation/roadmap/#11-python-core","title":"1.1 Python Core","text":"<ul> <li>C\u00fa ph\u00e1p c\u01a1 b\u1ea3n: Variables, Data types, Operators</li> <li>Control Flow: if/else, loops (for, while)</li> <li>Data Structures: Lists, Tuples, Dictionaries, Sets</li> <li>Functions: Definition, parameters, return values, lambda</li> <li>OOP: Classes, Objects, Inheritance, Polymorphism</li> <li>Exception Handling: try/except/finally</li> <li>File I/O: Reading/writing files, CSV, JSON</li> </ul>"},{"location":"prog/python-automation/roadmap/#12-python-advanced","title":"1.2 Python Advanced","text":"<ul> <li>Modules &amp; Packages: import, pip, virtual environments</li> <li>List/Dict Comprehensions</li> <li>Decorators &amp; Context Managers</li> <li>Generators &amp; Iterators</li> <li>Regular Expressions (regex)</li> </ul>"},{"location":"prog/python-automation/roadmap/#phase-2-python-libraries-for-automation-2-3-thang","title":"\ud83d\udd27 Phase 2: Python Libraries for Automation (2-3 th\u00e1ng)","text":""},{"location":"prog/python-automation/roadmap/#21-essential-libraries","title":"2.1 Essential Libraries","text":"<pre><code># File &amp; System Operations\nimport os, sys, shutil, pathlib\nimport subprocess, platform\n\n# Data Processing\nimport json, csv, xml.etree.ElementTree\nimport pandas, openpyxl\n\n# Network &amp; Web\nimport requests, urllib\nimport smtplib, email\n\n# Date &amp; Time\nimport datetime, time, schedule\n</code></pre>"},{"location":"prog/python-automation/roadmap/#22-automation-specific-libraries","title":"2.2 Automation-Specific Libraries","text":"<ul> <li>os &amp; sys: System operations, environment variables</li> <li>subprocess: Running shell commands</li> <li>pathlib: Modern path handling</li> <li>requests: HTTP requests, API calls</li> <li>BeautifulSoup: Web scraping</li> <li>selenium: Browser automation</li> <li>paramiko: SSH connections</li> <li>schedule: Task scheduling</li> <li>logging: Application logging</li> </ul>"},{"location":"prog/python-automation/roadmap/#phase-3-web-automation-apis-2-thang","title":"\ud83c\udf10 Phase 3: Web Automation &amp; APIs (2 th\u00e1ng)","text":""},{"location":"prog/python-automation/roadmap/#31-web-scraping","title":"3.1 Web Scraping","text":"<ul> <li>requests: GET/POST requests, headers, sessions</li> <li>BeautifulSoup: HTML parsing, CSS selectors</li> <li>selenium: Dynamic content, form interactions</li> <li>scrapy: Large-scale scraping framework</li> </ul>"},{"location":"prog/python-automation/roadmap/#32-api-automation","title":"3.2 API Automation","text":"<ul> <li>REST APIs: GET, POST, PUT, DELETE</li> <li>Authentication: API keys, OAuth, JWT</li> <li>JSON handling: Parsing responses</li> <li>Rate limiting &amp; error handling</li> </ul>"},{"location":"prog/python-automation/roadmap/#33-browser-automation","title":"3.3 Browser Automation","text":"<ul> <li>Selenium WebDriver: Chrome, Firefox automation</li> <li>Playwright: Modern browser automation</li> <li>Form filling, clicking, navigation</li> <li>Screenshot &amp; PDF generation</li> </ul>"},{"location":"prog/python-automation/roadmap/#phase-4-infrastructure-automation-3-4-thang","title":"\ud83c\udfd7\ufe0f Phase 4: Infrastructure Automation (3-4 th\u00e1ng)","text":""},{"location":"prog/python-automation/roadmap/#41-system-administration","title":"4.1 System Administration","text":"<pre><code># System monitoring\nimport psutil\nimport platform\nimport socket\n\n# Process management\nimport subprocess\nimport signal\n</code></pre>"},{"location":"prog/python-automation/roadmap/#42-server-management","title":"4.2 Server Management","text":"<ul> <li>paramiko: SSH automation</li> <li>fabric: Remote command execution</li> <li>psutil: System monitoring</li> <li>File transfers: SCP, SFTP</li> <li>Log analysis: parsing, filtering</li> </ul>"},{"location":"prog/python-automation/roadmap/#43-database-automation","title":"4.3 Database Automation","text":"<ul> <li>SQLite: File-based database operations</li> <li>MySQL/PostgreSQL: Database connections</li> <li>MongoDB: NoSQL operations</li> <li>Database backups &amp; migrations</li> </ul>"},{"location":"prog/python-automation/roadmap/#phase-5-cloud-devops-tools-3-4-thang","title":"\u2601\ufe0f Phase 5: Cloud &amp; DevOps Tools (3-4 th\u00e1ng)","text":""},{"location":"prog/python-automation/roadmap/#51-cloud-platforms","title":"5.1 Cloud Platforms","text":""},{"location":"prog/python-automation/roadmap/#aws","title":"AWS","text":"<pre><code>import boto3\n\n# EC2, S3, Lambda, CloudWatch\n# IAM, VPC, RDS automation\n</code></pre>"},{"location":"prog/python-automation/roadmap/#azure","title":"Azure","text":"<pre><code>from azure.identity import DefaultAzureCredential\nfrom azure.mgmt.compute import ComputeManagementClient\n</code></pre>"},{"location":"prog/python-automation/roadmap/#google-cloud","title":"Google Cloud","text":"<pre><code>from google.cloud import storage\nfrom google.cloud import compute_v1\n</code></pre>"},{"location":"prog/python-automation/roadmap/#52-containerization","title":"5.2 Containerization","text":"<ul> <li>Docker: Container management, Dockerfile automation</li> <li>docker-py: Python Docker SDK</li> <li>Container orchestration basics</li> </ul>"},{"location":"prog/python-automation/roadmap/#53-configuration-management","title":"5.3 Configuration Management","text":"<ul> <li>Ansible: Playbook automation with Python</li> <li>Terraform: Infrastructure as Code integration</li> <li>YAML/JSON configuration parsing</li> </ul>"},{"location":"prog/python-automation/roadmap/#phase-6-cicd-automation-2-3-thang","title":"\ud83d\udd04 Phase 6: CI/CD Automation (2-3 th\u00e1ng)","text":""},{"location":"prog/python-automation/roadmap/#61-version-control","title":"6.1 Version Control","text":"<ul> <li>GitPython: Git operations automation</li> <li>GitHub/GitLab APIs: Repository management</li> <li>Branch automation, PR management</li> </ul>"},{"location":"prog/python-automation/roadmap/#62-cicd-pipelines","title":"6.2 CI/CD Pipelines","text":"<ul> <li>Jenkins: Python scripts in pipelines</li> <li>GitHub Actions: Workflow automation</li> <li>GitLab CI: Pipeline scripting</li> <li>Azure DevOps: Build/release automation</li> </ul>"},{"location":"prog/python-automation/roadmap/#63-testing-automation","title":"6.3 Testing Automation","text":"<pre><code>import unittest\nimport pytest\nimport mock\nimport requests_mock\n</code></pre>"},{"location":"prog/python-automation/roadmap/#phase-7-monitoring-observability-2-thang","title":"\ud83d\udcca Phase 7: Monitoring &amp; Observability (2 th\u00e1ng)","text":""},{"location":"prog/python-automation/roadmap/#71-monitoring-tools","title":"7.1 Monitoring Tools","text":"<ul> <li>Prometheus: Metrics collection</li> <li>Grafana: Dashboard automation</li> <li>ELK Stack: Log processing</li> <li>Custom monitoring scripts</li> </ul>"},{"location":"prog/python-automation/roadmap/#72-alerting-systems","title":"7.2 Alerting Systems","text":"<ul> <li>Email notifications: smtplib</li> <li>Slack integration: slack-sdk</li> <li>Teams notifications: pymsteams</li> <li>SMS alerts: Twilio API</li> </ul>"},{"location":"prog/python-automation/roadmap/#phase-8-advanced-automation-3-4-thang","title":"\ud83d\udee0\ufe0f Phase 8: Advanced Automation (3-4 th\u00e1ng)","text":""},{"location":"prog/python-automation/roadmap/#81-infrastructure-as-code","title":"8.1 Infrastructure as Code","text":"<pre><code># Terraform automation\nimport python-terraform\n\n# CloudFormation\nimport boto3\ncloudformation = boto3.client('cloudformation')\n</code></pre>"},{"location":"prog/python-automation/roadmap/#82-security-automation","title":"8.2 Security Automation","text":"<ul> <li>SSL certificate management</li> <li>Vulnerability scanning</li> <li>Password management</li> <li>Security compliance checks</li> </ul>"},{"location":"prog/python-automation/roadmap/#83-performance-optimization","title":"8.3 Performance Optimization","text":"<ul> <li>Async programming: asyncio</li> <li>Parallel processing: multiprocessing, threading</li> <li>Caching strategies</li> <li>Resource optimization</li> </ul>"},{"location":"prog/python-automation/roadmap/#practical-projects","title":"\ud83d\udcc8 Practical Projects","text":""},{"location":"prog/python-automation/roadmap/#beginner-projects","title":"Beginner Projects","text":"<ol> <li>File Organizer: T\u1ef1 \u0111\u1ed9ng s\u1eafp x\u1ebfp files theo lo\u1ea1i</li> <li>System Health Monitor: Theo d\u00f5i CPU, RAM, disk</li> <li>Email Automation: G\u1eedi reports t\u1ef1 \u0111\u1ed9ng</li> <li>Web Scraper: Thu th\u1eadp d\u1eef li\u1ec7u t\u1eeb websites</li> </ol>"},{"location":"prog/python-automation/roadmap/#intermediate-projects","title":"Intermediate Projects","text":"<ol> <li>Server Provisioning: T\u1ef1 \u0111\u1ed9ng t\u1ea1o v\u00e0 c\u1ea5u h\u00ecnh servers</li> <li>Database Backup System: Backup t\u1ef1 \u0111\u1ed9ng v\u1edbi rotation</li> <li>Log Analyzer: Ph\u00e2n t\u00edch v\u00e0 c\u1ea3nh b\u00e1o t\u1eeb logs</li> <li>CI/CD Pipeline: T\u1ef1 \u0111\u1ed9ng build, test, deploy</li> </ol>"},{"location":"prog/python-automation/roadmap/#advanced-projects","title":"Advanced Projects","text":"<ol> <li>Infrastructure Orchestrator: Qu\u1ea3n l\u00fd to\u00e0n b\u1ed9 infrastructure</li> <li>Auto-scaling System: T\u1ef1 \u0111\u1ed9ng scale resources</li> <li>Multi-cloud Manager: Qu\u1ea3n l\u00fd resources tr\u00ean nhi\u1ec1u cloud</li> <li>ChatOps Bot: Automation qua Slack/Teams</li> </ol>"},{"location":"python/","title":"Index","text":"<p>R\u1ea5t t\u1ed1t! D\u01b0\u1edbi \u0111\u00e2y l\u00e0 danh s\u00e1ch c\u00e1c vi\u1ec7c c\u1ea7n l\u00e0m c\u1ee7a m\u1ed9t DevOps Engineer v\u1edbi Python \u0111\u1ec3 t\u1ef1 \u0111\u1ed9ng h\u00f3a m\u1ecdi th\u1ee9, \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u1eeb d\u1ec5 \u2192 kh\u00f3, c\u01a1 b\u1ea3n \u2192 n\u00e2ng cao. B\u1ea1n c\u00f3 th\u1ec3 h\u1ecdc theo th\u1ee9 t\u1ef1 n\u00e0y.</p>"},{"location":"python/#lo-trinh-devops-voi-python-tu-ong-hoa-toan-dien","title":"\u2705 L\u1ed8 TR\u00ccNH DEVOPS V\u1edaI PYTHON \u2013 T\u1ef0 \u0110\u1ed8NG H\u00d3A TO\u00c0N DI\u1ec6N","text":""},{"location":"python/#phan-1-nen-tang-python-co-ban-e-viet-script","title":"\ud83d\udd30 PH\u1ea6N 1: N\u1ec0N T\u1ea2NG PYTHON (c\u01a1 b\u1ea3n \u0111\u1ec3 vi\u1ebft script)","text":"<ol> <li>[ ] Bi\u1ebfn, h\u00e0m, v\u00f2ng l\u1eb7p, if-else trong Python</li> <li>[ ] L\u00e0m vi\u1ec7c v\u1edbi file: \u0111\u1ecdc, ghi, x\u1eed l\u00fd file <code>.txt</code>, <code>.json</code>, <code>.yaml</code></li> <li>[ ] D\u00f9ng <code>argparse</code> \u0111\u1ec3 t\u1ea1o CLI script c\u00f3 tham s\u1ed1 d\u00f2ng l\u1ec7nh</li> <li>[ ] D\u00f9ng <code>os</code>, <code>shutil</code>, <code>pathlib</code> \u0111\u1ec3 x\u1eed l\u00fd file, th\u01b0 m\u1ee5c</li> <li>[ ] D\u00f9ng <code>subprocess</code> \u0111\u1ec3 ch\u1ea1y l\u1ec7nh shell/bash t\u1eeb Python</li> <li>[ ] Hi\u1ec3u &amp; d\u00f9ng exception handling (<code>try-except</code>) \u0111\u1ec3 x\u1eed l\u00fd l\u1ed7i</li> </ol>"},{"location":"python/#phan-2-tu-ong-hoa-he-thong-co-ban","title":"\u2699\ufe0f PH\u1ea6N 2: T\u1ef0 \u0110\u1ed8NG H\u00d3A H\u1ec6 TH\u1ed0NG C\u01a0 B\u1ea2N","text":"<ol> <li>[ ] T\u1ef1 \u0111\u1ed9ng ch\u1ea1y l\u1ec7nh tr\u00ean m\u00e1y local v\u1edbi <code>subprocess</code></li> <li>[ ] T\u1ef1 \u0111\u1ed9ng ch\u1ea1y l\u1ec7nh qua SSH t\u1edbi server v\u1edbi <code>paramiko</code></li> <li>[ ] Upload/download file qua SSH/SFTP</li> <li>[ ] T\u1ef1 \u0111\u1ed9ng c\u00e0i \u0111\u1eb7t ph\u1ea7n m\u1ec1m tr\u00ean m\u00e1y ch\u1ee7 (Nginx, Docker...)</li> <li>[ ] Ghi log ho\u1ea1t \u0111\u1ed9ng v\u00e0o file log (<code>logging</code>, <code>loguru</code>)</li> </ol>"},{"location":"python/#phan-3-quan-ly-cloud-awsgcpazure","title":"\u2601\ufe0f PH\u1ea6N 3: QU\u1ea2N L\u00dd CLOUD (AWS/GCP/Azure)","text":"<ol> <li>[ ] K\u1ebft n\u1ed1i AWS b\u1eb1ng <code>boto3</code></li> <li>[ ] T\u1ea1o EC2 instance, g\u1eafn security group</li> <li>[ ] Qu\u1ea3n l\u00fd S3 bucket: upload, download, x\u00f3a file</li> <li>[ ] Qu\u1ea3n l\u00fd IAM: t\u1ea1o user, ph\u00e2n quy\u1ec1n</li> <li>[ ] T\u1ea1o snapshot, g\u1eafn EBS volume t\u1ef1 \u0111\u1ed9ng</li> <li>[ ] Qu\u1ea3n l\u00fd AWS Lambda (t\u1ea1o h\u00e0m, deploy code)</li> <li>[ ] G\u1eedi email qua AWS SES ho\u1eb7c SMTP</li> </ol>"},{"location":"python/#phan-4-tu-ong-voi-docker-kubernetes","title":"\ud83d\udc33 PH\u1ea6N 4: T\u1ef0 \u0110\u1ed8NG V\u1edaI DOCKER &amp; KUBERNETES","text":"<ol> <li> <p>[ ] D\u00f9ng <code>docker-py</code> \u0111\u1ec3:</p> </li> <li> <p>Build image</p> </li> <li>Start/stop container</li> <li> <p>L\u1ea5y log container</p> </li> <li> <p>[ ] Sinh file Dockerfile, docker-compose b\u1eb1ng Python (<code>jinja2</code>)</p> </li> <li> <p>[ ] Qu\u1ea3n l\u00fd Kubernetes b\u1eb1ng <code>kubernetes</code> client SDK:</p> </li> <li> <p>Deploy Pod</p> </li> <li>Xem tr\u1ea1ng th\u00e1i Pod</li> <li> <p>T\u1ef1 \u0111\u1ed9ng x\u00f3a/restart pod l\u1ed7i</p> </li> <li> <p>[ ] Sinh file YAML cho K8s t\u1ef1 \u0111\u1ed9ng (<code>pyyaml + jinja2</code>)</p> </li> </ol>"},{"location":"python/#phan-5-tu-ong-hoa-cicd","title":"\ud83d\udd01 PH\u1ea6N 5: T\u1ef0 \u0110\u1ed8NG H\u00d3A CI/CD","text":"<ol> <li> <p>[ ] Vi\u1ebft script t\u1ef1 \u0111\u1ed9ng:</p> </li> <li> <p>Lint code (pylint, black)</p> </li> <li>Run unit test (pytest)</li> <li> <p>Build docker image</p> </li> <li> <p>[ ] \u0110\u1ea9y image l\u00ean DockerHub</p> </li> <li>[ ] Trigger deploy l\u00ean server</li> <li>[ ] T\u1ea1o tool Python ch\u1ea1y t\u1eeb CLI \u0111\u1ec3 \u0111i\u1ec1u khi\u1ec3n pipeline</li> <li>[ ] G\u1eedi log/tr\u1ea1ng th\u00e1i build v\u1ec1 Slack/Telegram</li> </ol>"},{"location":"python/#phan-6-monitoring-alerting","title":"\ud83d\udcc8 PH\u1ea6N 6: MONITORING &amp; ALERTING","text":"<ol> <li>[ ] Thu th\u1eadp log file h\u1ec7 th\u1ed1ng/app</li> <li>[ ] Ph\u00e2n t\u00edch log \u0111\u1ec3 t\u00ecm l\u1ed7i (<code>re</code>, <code>loguru</code>)</li> <li>[ ] G\u1eedi c\u1ea3nh b\u00e1o n\u1ebfu log c\u00f3 l\u1ed7i nghi\u00eam tr\u1ecdng</li> <li>[ ] G\u1eedi c\u1ea3nh b\u00e1o qua email/Slack/Telegram API</li> <li>[ ] Push metrics v\u1ec1 Prometheus b\u1eb1ng <code>prometheus_client</code></li> </ol>"},{"location":"python/#phan-7-bao-mat-secret-devops-tooling","title":"\ud83d\udd10 PH\u1ea6N 7: B\u1ea2O M\u1eacT, SECRET, DEVOPS TOOLING","text":"<ol> <li>[ ] T\u1ef1 \u0111\u1ed9ng \u0111\u1ed5i m\u1eadt kh\u1ea9u/server secret</li> <li>[ ] T\u00edch h\u1ee3p Vault API ho\u1eb7c AWS Secrets Manager</li> <li>[ ] T\u1ea1o c\u00f4ng c\u1ee5 CLI d\u1ea1ng <code>mydevops tool --action restart --server 123</code></li> <li>[ ] Vi\u1ebft REST API b\u1eb1ng Flask/FastAPI cho qu\u1ea3n l\u00fd h\u1ec7 th\u1ed1ng</li> <li>[ ] L\u00e0m dashboard nh\u1ecf gi\u00e1m s\u00e1t h\u1ec7 th\u1ed1ng b\u1eb1ng Flask + Bootstrap</li> </ol>"},{"location":"python/#phan-8-cong-cu-toolkit-rieng","title":"\u2728 PH\u1ea6N 8: C\u00d4NG C\u1ee4 &amp; TOOLKIT RI\u00caNG","text":"<ol> <li>[ ] Vi\u1ebft script clone to\u00e0n b\u1ed9 repo Git v\u00e0 c\u1eadp nh\u1eadt t\u1ef1 \u0111\u1ed9ng</li> <li>[ ] T\u1ef1 \u0111\u1ed9ng backup database/filesystem</li> <li>[ ] G\u1eedi b\u00e1o c\u00e1o PDF/HTML h\u00e0ng ng\u00e0y (d\u00f9ng <code>pdfkit</code>, <code>jinja2</code>)</li> <li>[ ] Vi\u1ebft bot Python g\u1eedi th\u00f4ng b\u00e1o, \u1ea3nh, file</li> </ol>"},{"location":"python/#goi-y-cach-hoc","title":"\u2705 G\u1ee2I \u00dd C\u00c1CH H\u1eccC:","text":"<ul> <li>H\u1ecdc theo t\u1eebng ph\u1ea7n, l\u00e0m mini-project nh\u1ecf \u1ee9ng v\u1edbi t\u1eebng nh\u00f3m.</li> <li>Ghi ch\u00fa l\u1ea1i th\u00e0nh script d\u00f9ng \u0111\u01b0\u1ee3c cho th\u1ef1c t\u1ebf.</li> <li>T\u1ea1o 1 repo ri\u00eang: <code>devops-python-toolkit</code> \u0111\u1ec3 l\u01b0u script b\u1ea1n vi\u1ebft.</li> </ul> <p>B\u1ea1n mu\u1ed1n m\u00ecnh t\u1ea1o lu\u00f4n b\u1ea3ng checklist (c\u00f3 file t\u1ea3i) cho l\u1ed9 tr\u00ecnh n\u00e0y kh\u00f4ng? Ho\u1eb7c g\u1ee3i \u00fd d\u1ef1 \u00e1n th\u1ef1c h\u00e0nh cho m\u1ed7i ph\u1ea7n?</p>"},{"location":"security/roadmap/","title":"Security Complete Learning Roadmap - Secret Management &amp; Scanning/Hardening","text":""},{"location":"security/roadmap/#security-complete-learning-roadmap-secret-management-scanninghardening","title":"Security Complete Learning Roadmap - Secret Management &amp; Scanning/Hardening","text":""},{"location":"security/roadmap/#muc-tieu-master-devsecops-security-trong-10-12-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master DevSecOps Security trong 10-12 th\u00e1ng","text":"<p>T\u1eadp trung ch\u00ednh:</p> <ul> <li>Secret Management: HashiCorp Vault, AWS Secrets Manager, Azure Key Vault</li> <li>Security Scanning: Trivy, Snyk, SonarQube, OWASP ZAP</li> <li>Hardening: CIS Benchmarks, Security Baselines, Compliance</li> </ul>"},{"location":"security/roadmap/#giai-oan-1-security-fundamentals-thang-1-2","title":"\ud83d\udd10 GIAI \u0110O\u1ea0N 1: SECURITY FUNDAMENTALS (Th\u00e1ng 1-2)","text":""},{"location":"security/roadmap/#week-1-security-fundamentals","title":"Week 1: Security Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"DevSecOps principles and practices\"</li> <li>[ ] \"Security by design software development\"</li> <li>[ ] \"CIA triad confidentiality integrity availability\"</li> <li>[ ] \"Zero trust security model\"</li> <li>[ ] \"Defense in depth strategy\"</li> <li>[ ] \"Security threat modeling\"</li> <li>[ ] \"OWASP Top 10 vulnerabilities\"</li> <li>[ ] \"Security compliance frameworks PCI DSS SOC2\"</li> </ul> <p>Core Security Concepts:</p> <ul> <li>[ ] Authentication vs Authorization</li> <li>[ ] Encryption at rest vs in transit</li> <li>[ ] Public key infrastructure (PKI)</li> <li>[ ] Certificate management</li> <li>[ ] Security policies and procedures</li> <li>[ ] Incident response planning</li> </ul>"},{"location":"security/roadmap/#week-2-cryptography-basics","title":"Week 2: Cryptography Basics","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Symmetric vs asymmetric encryption\"</li> <li>[ ] \"RSA AES encryption algorithms\"</li> <li>[ ] \"Digital signatures and certificates\"</li> <li>[ ] \"Hash functions SHA-256 MD5\"</li> <li>[ ] \"Key exchange protocols Diffie-Hellman\"</li> <li>[ ] \"TLS SSL certificate management\"</li> <li>[ ] \"Password hashing bcrypt scrypt\"</li> <li>[ ] \"Cryptographic key rotation\"</li> </ul> <p>Cryptography Practice:</p> <pre><code># OpenSSL examples\nopenssl genrsa -out private.key 2048\nopenssl rsa -in private.key -pubout -out public.key\nopenssl dgst -sha256 -sign private.key -out signature.bin file.txt\nopenssl dgst -sha256 -verify public.key -signature signature.bin file.txt\n\n# Generate certificates\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365\n</code></pre>"},{"location":"security/roadmap/#week-3-identity-access-management","title":"Week 3: Identity &amp; Access Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Identity and Access Management IAM\"</li> <li>[ ] \"Role-based access control RBAC\"</li> <li>[ ] \"Attribute-based access control ABAC\"</li> <li>[ ] \"Single sign-on SSO implementation\"</li> <li>[ ] \"Multi-factor authentication MFA\"</li> <li>[ ] \"OAuth 2.0 OpenID Connect\"</li> <li>[ ] \"SAML authentication protocol\"</li> <li>[ ] \"Privileged access management PAM\"</li> </ul> <p>IAM Implementation:</p> <pre><code># AWS IAM Policy example\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\":\n    [\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\"s3:GetObject\", \"s3:PutObject\"],\n        \"Resource\": \"arn:aws:s3:::my-bucket/*\",\n        \"Condition\":\n          {\n            \"StringEquals\":\n              { \"s3:ExistingObjectTag/Environment\": \"Production\" },\n          },\n      },\n    ],\n}\n</code></pre>"},{"location":"security/roadmap/#week-4-network-security-basics","title":"Week 4: Network Security Basics","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Network security fundamentals\"</li> <li>[ ] \"Firewall configuration iptables\"</li> <li>[ ] \"VPN setup and management\"</li> <li>[ ] \"Network segmentation strategies\"</li> <li>[ ] \"Intrusion detection systems IDS\"</li> <li>[ ] \"Network monitoring and logging\"</li> <li>[ ] \"DDoS protection strategies\"</li> <li>[ ] \"Web application firewall WAF\"</li> </ul>"},{"location":"security/roadmap/#giai-oan-2-secret-management-mastery-thang-3-5","title":"\ud83d\udd11 GIAI \u0110O\u1ea0N 2: SECRET MANAGEMENT MASTERY (Th\u00e1ng 3-5)","text":""},{"location":"security/roadmap/#week-5-secret-management-fundamentals","title":"Week 5: Secret Management Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Secret management best practices\"</li> <li>[ ] \"Secrets vs configuration management\"</li> <li>[ ] \"Secret rotation strategies\"</li> <li>[ ] \"Secret scanning in source code\"</li> <li>[ ] \"Environment variable security\"</li> <li>[ ] \"Secret injection into containers\"</li> <li>[ ] \"Secret lifecycle management\"</li> <li>[ ] \"Secret sprawl prevention\"</li> </ul> <p>Secret Management Concepts:</p> <pre><code># Bad practices to avoid\nexport DB_PASSWORD=\"plaintext123\"  # Never do this\necho \"password123\" &gt; config.txt    # Never do this\n\n# Better approaches\nexport DB_PASSWORD_FILE=\"/run/secrets/db_password\"\nvault kv get -field=password secret/myapp/db\n</code></pre>"},{"location":"security/roadmap/#week-6-hashicorp-vault-fundamentals","title":"Week 6: HashiCorp Vault Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"HashiCorp Vault installation setup\"</li> <li>[ ] \"Vault authentication methods\"</li> <li>[ ] \"Vault secret engines KV database\"</li> <li>[ ] \"Vault policies and access control\"</li> <li>[ ] \"Vault token management\"</li> <li>[ ] \"Vault seal and unseal process\"</li> <li>[ ] \"Vault high availability clustering\"</li> <li>[ ] \"Vault auto-unseal with cloud KMS\"</li> </ul> <p>Vault Basic Commands:</p> <pre><code># Vault setup and basic operations\nvault server -dev\nexport VAULT_ADDR='http://127.0.0.1:8200'\nvault auth -method=userpass username=myuser\n\n# Secret operations\nvault kv put secret/myapp username=admin password=secret\nvault kv get secret/myapp\nvault kv get -field=password secret/myapp\n\n# Policy creation\nvault policy write myapp-policy - &lt;&lt;EOF\npath \"secret/data/myapp/*\" {\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\"]\n}\nEOF\n</code></pre>"},{"location":"security/roadmap/#week-7-vault-advanced-features","title":"Week 7: Vault Advanced Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Vault dynamic secrets generation\"</li> <li>[ ] \"Vault database secrets engine\"</li> <li>[ ] \"Vault AWS secrets engine\"</li> <li>[ ] \"Vault PKI certificate authority\"</li> <li>[ ] \"Vault transit encryption as service\"</li> <li>[ ] \"Vault agent auto-auth\"</li> <li>[ ] \"Vault Kubernetes integration\"</li> <li>[ ] \"Vault secret injection Kubernetes\"</li> </ul> <p>Advanced Vault Configuration:</p> <pre><code># Enable database secrets engine\nvault secrets enable database\nvault write database/config/my-mysql-database \\\n    plugin_name=mysql-database-plugin \\\n    connection_url=\"{{username}}:{{password}}@tcp(localhost:3306)/\" \\\n    allowed_roles=\"my-role\" \\\n    username=\"root\" \\\n    password=\"mysql-root-password\"\n\n# Create role for dynamic credentials\nvault write database/roles/my-role \\\n    db_name=my-mysql-database \\\n    creation_statements=\"CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT SELECT ON *.* TO '{{name}}'@'%';\" \\\n    default_ttl=\"1h\" \\\n    max_ttl=\"24h\"\n\n# Generate dynamic credentials\nvault read database/creds/my-role\n</code></pre>"},{"location":"security/roadmap/#week-8-cloud-secret-management","title":"Week 8: Cloud Secret Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"AWS Secrets Manager tutorial\"</li> <li>[ ] \"AWS Systems Manager Parameter Store\"</li> <li>[ ] \"Azure Key Vault configuration\"</li> <li>[ ] \"Google Secret Manager setup\"</li> <li>[ ] \"Cloud secret rotation automation\"</li> <li>[ ] \"Cross-cloud secret management\"</li> <li>[ ] \"Cloud IAM integration secrets\"</li> <li>[ ] \"Secret Manager pricing comparison\"</li> </ul> <p>AWS Secrets Manager:</p> <pre><code># AWS CLI commands\naws secretsmanager create-secret \\\n    --name prod/myapp/db \\\n    --description \"Database credentials for myapp\" \\\n    --secret-string '{\"username\":\"admin\",\"password\":\"mysecretpassword\"}'\n\n# Retrieve secret\naws secretsmanager get-secret-value --secret-id prod/myapp/db\n\n# Python application integration\nimport boto3\nimport json\n\ndef get_secret():\n    client = boto3.client('secretsmanager')\n    response = client.get_secret_value(SecretId='prod/myapp/db')\n    return json.loads(response['SecretString'])\n</code></pre>"},{"location":"security/roadmap/#week-9-kubernetes-secret-management","title":"Week 9: Kubernetes Secret Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Kubernetes secrets management\"</li> <li>[ ] \"External Secrets Operator ESO\"</li> <li>[ ] \"Sealed Secrets Bitnami\"</li> <li>[ ] \"Kubernetes Secret Store CSI Driver\"</li> <li>[ ] \"Vault Agent Injector Kubernetes\"</li> <li>[ ] \"SOPS secrets encryption\"</li> <li>[ ] \"Kubernetes RBAC for secrets\"</li> <li>[ ] \"Secret rotation in Kubernetes\"</li> </ul> <p>Kubernetes Secret Examples:</p> <pre><code># Native Kubernetes Secret\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mysecret\ntype: Opaque\ndata:\n  username: YWRtaW4= # base64 encoded\n  password: MWYyZDFlMmU2N2Rm # base64 encoded\n\n---\n# External Secrets Operator\napiVersion: external-secrets.io/v1beta1\nkind: SecretStore\nmetadata:\n  name: vault-backend\nspec:\n  provider:\n    vault:\n      server: \"http://vault.vault:8200\"\n      path: \"secret\"\n      version: \"v2\"\n      auth:\n        kubernetes:\n          mountPath: \"kubernetes\"\n          role: \"myapp\"\n\n---\napiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: vault-secret\nspec:\n  refreshInterval: 30s\n  secretStoreRef:\n    name: vault-backend\n    kind: SecretStore\n  target:\n    name: myapp-secret\n  data:\n    - secretKey: password\n      remoteRef:\n        key: secret/myapp\n        property: password\n</code></pre>"},{"location":"security/roadmap/#week-10-secret-management-in-cicd","title":"Week 10: Secret Management in CI/CD","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"CI/CD pipeline secret management\"</li> <li>[ ] \"GitHub Actions secrets management\"</li> <li>[ ] \"GitLab CI secrets and variables\"</li> <li>[ ] \"Jenkins credential management\"</li> <li>[ ] \"Secret scanning in CI/CD\"</li> <li>[ ] \"Dynamic secrets in pipelines\"</li> <li>[ ] \"Secret injection best practices\"</li> <li>[ ] \"CI/CD secret rotation\"</li> </ul> <p>CI/CD Secret Examples:</p> <pre><code># GitHub Actions with Vault\nname: Deploy with Vault Secrets\non: [push]\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Get secrets from Vault\n        uses: hashicorp/vault-action@v2\n        with:\n          url: ${{ secrets.VAULT_URL }}\n          token: ${{ secrets.VAULT_TOKEN }}\n          secrets: |\n            secret/data/myapp username | DB_USERNAME;\n            secret/data/myapp password | DB_PASSWORD\n      - name: Deploy application\n        env:\n          DB_USERNAME: ${{ env.DB_USERNAME }}\n          DB_PASSWORD: ${{ env.DB_PASSWORD }}\n        run: ./deploy.sh\n</code></pre>"},{"location":"security/roadmap/#giai-oan-3-security-scanning-hardening-thang-6-8","title":"\ud83d\udee1\ufe0f GIAI \u0110O\u1ea0N 3: SECURITY SCANNING &amp; HARDENING (Th\u00e1ng 6-8)","text":""},{"location":"security/roadmap/#week-11-security-scanning-fundamentals","title":"Week 11: Security Scanning Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Security scanning types SAST DAST IAST\"</li> <li>[ ] \"Vulnerability assessment methodology\"</li> <li>[ ] \"Security testing in SDLC\"</li> <li>[ ] \"Automated security scanning tools\"</li> <li>[ ] \"False positive management\"</li> <li>[ ] \"Security scan result analysis\"</li> <li>[ ] \"Vulnerability prioritization CVSS\"</li> <li>[ ] \"Security scanning CI/CD integration\"</li> </ul> <p>Scanning Types:</p> <pre><code># Static Application Security Testing (SAST)\nsonar-scanner \\\n  -Dsonar.projectKey=myproject \\\n  -Dsonar.sources=. \\\n  -Dsonar.host.url=http://localhost:9000\n\n# Dynamic Application Security Testing (DAST)\nzap-baseline.py -t http://example.com\n\n# Container Image Scanning\ntrivy image nginx:latest\ndocker run --rm -v /var/run/docker.sock:/var/run/docker.sock \\\n  aquasec/trivy:latest image nginx:latest\n</code></pre>"},{"location":"security/roadmap/#week-12-container-infrastructure-scanning","title":"Week 12: Container &amp; Infrastructure Scanning","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Container image vulnerability scanning\"</li> <li>[ ] \"Trivy container scanner tutorial\"</li> <li>[ ] \"Docker image security scanning\"</li> <li>[ ] \"Kubernetes security scanning tools\"</li> <li>[ ] \"Infrastructure as Code security scanning\"</li> <li>[ ] \"Terraform security scanning tfsec\"</li> <li>[ ] \"Docker Bench security assessment\"</li> <li>[ ] \"CIS benchmarks container scanning\"</li> </ul> <p>Container Scanning Tools:</p> <pre><code># Trivy comprehensive scanning\ntrivy image --severity HIGH,CRITICAL nginx:latest\ntrivy fs --security-checks vuln,config .\ntrivy k8s --report summary cluster\n\n# Docker Bench Security\ndocker run --rm --net host --pid host --userns host --cap-add audit_control \\\n    -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \\\n    -v /var/lib:/var/lib:ro \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    -v /usr/lib/systemd:/usr/lib/systemd:ro \\\n    -v /etc:/etc:ro --label docker_bench_security \\\n    docker/docker-bench-security\n\n# Grype for vulnerability scanning\ngrype nginx:latest\ngrype dir:.\ngrype sbom:./my-sbom.json\n</code></pre>"},{"location":"security/roadmap/#week-13-application-security-scanning","title":"Week 13: Application Security Scanning","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"SonarQube setup and configuration\"</li> <li>[ ] \"OWASP ZAP automated scanning\"</li> <li>[ ] \"Snyk vulnerability scanning\"</li> <li>[ ] \"Code quality security gates\"</li> <li>[ ] \"Dependency vulnerability scanning\"</li> <li>[ ] \"License compliance scanning\"</li> <li>[ ] \"Secret detection in source code\"</li> <li>[ ] \"API security testing\"</li> </ul> <p>Application Security Tools:</p> <pre><code># SonarQube analysis\nsonar-scanner \\\n  -Dsonar.projectKey=myapp \\\n  -Dsonar.sources=src \\\n  -Dsonar.host.url=http://sonarqube:9000 \\\n  -Dsonar.login=admin \\\n  -Dsonar.password=admin\n\n# OWASP ZAP scanning\nzap-full-scan.py -t http://example.com -r zap-report.html\nzap-api-scan.py -t http://example.com/openapi.json -f openapi\n\n# Snyk scanning\nsnyk test\nsnyk monitor\nsnyk test --docker nginx:latest\nsnyk iac test terraform/\n</code></pre>"},{"location":"security/roadmap/#week-14-compliance-hardening-standards","title":"Week 14: Compliance &amp; Hardening Standards","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"CIS benchmarks security standards\"</li> <li>[ ] \"NIST cybersecurity framework\"</li> <li>[ ] \"PCI DSS compliance requirements\"</li> <li>[ ] \"SOC 2 Type II compliance\"</li> <li>[ ] \"ISO 27001 information security\"</li> <li>[ ] \"GDPR data protection compliance\"</li> <li>[ ] \"Security baseline configuration\"</li> <li>[ ] \"Compliance automation tools\"</li> </ul> <p>CIS Benchmark Implementation:</p> <pre><code># CIS-CAT assessment tool\n./CIS-CAT.sh -a -s -r /path/to/reports\n\n# OpenSCAP security compliance\noscap xccdf eval --profile xccdf_org.ssgproject.content_profile_pci-dss \\\n    --results results.xml --report report.html \\\n    /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml\n\n# Ansible hardening playbooks\nansible-playbook -i inventory hardening.yml\n</code></pre>"},{"location":"security/roadmap/#week-15-infrastructure-hardening","title":"Week 15: Infrastructure Hardening","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux server hardening checklist\"</li> <li>[ ] \"Windows server security hardening\"</li> <li>[ ] \"Network infrastructure hardening\"</li> <li>[ ] \"Database security hardening\"</li> <li>[ ] \"Web server hardening Apache Nginx\"</li> <li>[ ] \"SSH hardening configuration\"</li> <li>[ ] \"Firewall configuration best practices\"</li> <li>[ ] \"System monitoring for security\"</li> </ul> <p>System Hardening Examples:</p> <pre><code># SSH hardening\n# /etc/ssh/sshd_config\nProtocol 2\nPermitRootLogin no\nPasswordAuthentication no\nPubkeyAuthentication yes\nAllowUsers myuser\nMaxAuthTries 3\nClientAliveInterval 300\nClientAliveCountMax 2\n\n# Firewall configuration (iptables)\niptables -A INPUT -i lo -j ACCEPT\niptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\niptables -A INPUT -p tcp --dport 22 -j ACCEPT\niptables -A INPUT -p tcp --dport 80 -j ACCEPT\niptables -A INPUT -p tcp --dport 443 -j ACCEPT\niptables -P INPUT DROP\n\n# System auditing\nauditctl -w /etc/passwd -p wa -k user-modify\nauditctl -w /etc/group -p wa -k group-modify\nauditctl -w /var/log/auth.log -p wa -k auth-logs\n</code></pre>"},{"location":"security/roadmap/#week-16-cloud-security-hardening","title":"Week 16: Cloud Security Hardening","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"AWS security best practices\"</li> <li>[ ] \"Azure security center configuration\"</li> <li>[ ] \"GCP security command center\"</li> <li>[ ] \"Cloud security posture management CSPM\"</li> <li>[ ] \"Cloud workload protection platform CWPP\"</li> <li>[ ] \"Multi-cloud security management\"</li> <li>[ ] \"Cloud compliance automation\"</li> <li>[ ] \"Cloud security monitoring\"</li> </ul> <p>Cloud Security Configuration:</p> <pre><code># AWS Security Hub\naws securityhub enable-security-hub\naws securityhub get-findings\n\n# AWS Config Rules\naws configservice put-config-rule --config-rule file://security-rule.json\n\n# Azure Security Center\naz security assessment list\naz security alert list\n\n# GCP Security Command Center\ngcloud scc assets list --organization=ORGANIZATION_ID\ngcloud scc findings list --organization=ORGANIZATION_ID\n</code></pre>"},{"location":"security/roadmap/#giai-oan-4-advanced-security-automation-thang-9-10","title":"\ud83d\udd12 GIAI \u0110O\u1ea0N 4: ADVANCED SECURITY AUTOMATION (Th\u00e1ng 9-10)","text":""},{"location":"security/roadmap/#week-17-18-security-as-code","title":"Week 17-18: Security as Code","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Security as Code implementation\"</li> <li>[ ] \"Policy as Code with Open Policy Agent\"</li> <li>[ ] \"Compliance as Code automation\"</li> <li>[ ] \"Security testing automation\"</li> <li>[ ] \"Infrastructure security automation\"</li> <li>[ ] \"Security orchestration SOAR\"</li> <li>[ ] \"Automated incident response\"</li> <li>[ ] \"Security pipeline integration\"</li> </ul> <p>Policy as Code Examples:</p> <pre><code># OPA Rego policy\npackage kubernetes.admission\n\ndeny[msg] {\n    input.request.kind.kind == \"Pod\"\n    input.request.object.spec.containers[_].image\n    not starts_with(input.request.object.spec.containers[_].image, \"registry.secure.com/\")\n    msg := \"Container images must come from approved registry\"\n}\n\ndeny[msg] {\n    input.request.kind.kind == \"Pod\"\n    input.request.object.spec.containers[_].securityContext.privileged == true\n    msg := \"Privileged containers are not allowed\"\n}\n</code></pre>"},{"location":"security/roadmap/#week-19-20-advanced-threat-detection","title":"Week 19-20: Advanced Threat Detection","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"SIEM security information event management\"</li> <li>[ ] \"Security analytics and machine learning\"</li> <li>[ ] \"Threat hunting methodologies\"</li> <li>[ ] \"Behavioral analysis security\"</li> <li>[ ] \"Anomaly detection algorithms\"</li> <li>[ ] \"Threat intelligence integration\"</li> <li>[ ] \"Security orchestration automation\"</li> <li>[ ] \"Incident response automation\"</li> </ul>"},{"location":"security/roadmap/#hands-on-projects","title":"\ud83d\udcda HANDS-ON PROJECTS","text":""},{"location":"security/roadmap/#secret-management-projects","title":"\ud83d\udd11 Secret Management Projects","text":"<ol> <li> <p>Enterprise Secret Management Platform</p> </li> <li> <p>Multi-environment Vault cluster</p> </li> <li>Dynamic secret generation</li> <li>Automated secret rotation</li> <li> <p>Search: \"HashiCorp Vault production setup\"</p> </li> <li> <p>Kubernetes Secret Management</p> </li> <li> <p>External Secrets Operator setup</p> </li> <li>Vault integration with K8s</li> <li>Secret rotation automation</li> <li> <p>Search: \"Kubernetes external secrets vault\"</p> </li> <li> <p>CI/CD Secret Pipeline</p> </li> <li>Secure secret injection</li> <li>Dynamic credential generation</li> <li>Secret scanning automation</li> <li>Search: \"CI/CD secret management best practices\"</li> </ol>"},{"location":"security/roadmap/#security-scanning-projects","title":"\ud83d\udee1\ufe0f Security Scanning Projects","text":"<ol> <li> <p>Comprehensive Security Pipeline</p> </li> <li> <p>SAST, DAST, and container scanning</p> </li> <li>Automated vulnerability management</li> <li>Security gates in CI/CD</li> <li> <p>Search: \"DevSecOps security pipeline\"</p> </li> <li> <p>Infrastructure Security Monitoring</p> </li> <li> <p>Continuous compliance scanning</p> </li> <li>CIS benchmark automation</li> <li>Security dashboard creation</li> <li> <p>Search: \"Infrastructure security automation\"</p> </li> <li> <p>Application Security Testing</p> </li> <li>API security testing automation</li> <li>Dependency vulnerability tracking</li> <li>Security code review automation</li> <li>Search: \"Application security testing automation\"</li> </ol>"},{"location":"security/roadmap/#skill-mastery-checklist","title":"\ud83d\udccb SKILL MASTERY CHECKLIST","text":""},{"location":"security/roadmap/#secret-management-expertise","title":"Secret Management Expertise","text":"<ul> <li>[ ] Design enterprise secret architecture</li> <li>[ ] Implement automated secret rotation</li> <li>[ ] Configure multi-cloud secret management</li> <li>[ ] Integrate secrets with CI/CD pipelines</li> <li>[ ] Troubleshoot secret management issues</li> <li>[ ] Optimize secret performance and costs</li> </ul>"},{"location":"security/roadmap/#security-scanning-mastery","title":"Security Scanning Mastery","text":"<ul> <li>[ ] Implement comprehensive scanning strategy</li> <li>[ ] Configure automated vulnerability management</li> <li>[ ] Create security gates and policies</li> <li>[ ] Analyze and remediate security findings</li> <li>[ ] Optimize scanning performance</li> <li>[ ] Build security dashboards and reports</li> </ul>"},{"location":"security/roadmap/#compliance-hardening-skills","title":"Compliance &amp; Hardening Skills","text":"<ul> <li>[ ] Implement compliance automation</li> <li>[ ] Design security baselines</li> <li>[ ] Configure hardening standards</li> <li>[ ] Create security policies as code</li> <li>[ ] Monitor compliance drift</li> <li>[ ] Automate remediation processes</li> </ul>"},{"location":"security/roadmap/#certifications-resources","title":"\ud83c\udf93 CERTIFICATIONS &amp; RESOURCES","text":""},{"location":"security/roadmap/#security-certifications","title":"Security Certifications","text":"<ul> <li>[ ] Certified Information Systems Security Professional (CISSP)</li> <li>[ ] AWS Certified Security - Specialty</li> <li>[ ] Azure Security Engineer Associate</li> <li>[ ] Google Cloud Professional Cloud Security Engineer</li> <li>[ ] HashiCorp Certified: Vault Associate</li> <li>[ ] Certified Kubernetes Security Specialist (CKS)</li> </ul>"},{"location":"security/roadmap/#essential-books","title":"Essential Books","text":"<ul> <li>\"The DevSecOps Handbook\" - Gene Kim</li> <li>\"Security Engineering\" - Ross Anderson</li> <li>\"Secrets of a Strong Security Culture\" - Joe Basirico</li> <li>\"Building Secure and Reliable Systems\" - Google SRE Team</li> </ul>"},{"location":"security/roadmap/#online-learning","title":"Online Learning","text":"<ul> <li>\"HashiCorp Vault Deep Dive\" - A Cloud Guru</li> <li>\"DevSecOps Foundation\" - DevOps Institute</li> <li>\"Security in DevOps\" - Linux Academy</li> <li>\"Cloud Security\" - Cloud Security Alliance</li> </ul>"},{"location":"security/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"security/roadmap/#morning-security-check-20-mins","title":"Morning Security Check (20 mins)","text":"<ul> <li>[ ] Review security alerts and incidents</li> <li>[ ] Check vulnerability scan results</li> <li>[ ] Validate secret rotation status</li> <li>[ ] Monitor compliance dashboards</li> </ul>"},{"location":"security/roadmap/#active-security-work-60-90-mins","title":"Active Security Work (60-90 mins)","text":"<ul> <li>[ ] Work on security automation projects</li> <li>[ ] Analyze security findings</li> <li>[ ] Improve security policies</li> <li>[ ] Contribute to security tools</li> </ul>"},{"location":"security/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document security learnings</li> <li>[ ] Update security runbooks</li> <li>[ ] Plan security improvements</li> <li>[ ] Review security metrics</li> </ul>"},{"location":"security/roadmap/#mastery-milestones","title":"\ud83c\udfaf MASTERY MILESTONES","text":""},{"location":"security/roadmap/#month-2-foundation","title":"Month 2: Foundation","text":"<ul> <li>[ ] Understand security fundamentals</li> <li>[ ] Basic secret management setup</li> <li>[ ] Simple security scanning</li> <li>[ ] Security awareness</li> </ul>"},{"location":"security/roadmap/#month-5-intermediate","title":"Month 5: Intermediate","text":"<ul> <li>[ ] Production secret management</li> <li>[ ] Automated security scanning</li> <li>[ ] Compliance implementation</li> <li>[ ] Security integration</li> </ul>"},{"location":"security/roadmap/#month-8-advanced","title":"Month 8: Advanced","text":"<ul> <li>[ ] Enterprise security architecture</li> <li>[ ] Advanced threat detection</li> <li>[ ] Security automation</li> <li>[ ] Incident response</li> </ul>"},{"location":"security/roadmap/#month-10-expert","title":"Month 10: Expert","text":"<ul> <li>[ ] Security strategy and planning</li> <li>[ ] Tool evaluation and selection</li> <li>[ ] Team mentoring</li> <li>[ ] Industry contributions</li> </ul> <p>Security Philosophy: \"Security is not a product, but a process that must be integrated into every aspect of development and operations!\"</p>"},{"location":"security/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"security/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ul> <li>[ ] Install Vault, security scanning tools</li> <li>[ ] Set up basic secret management</li> <li>[ ] Run first security scans</li> <li>[ ] Join security communities</li> </ul>"},{"location":"security/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic security tutorials</li> <li>[ ] Implement first secret management solution</li> <li>[ ] Set up automated security scanning</li> <li>[ ] Create security dashboard</li> </ul>"},{"location":"security/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Production-ready secret management</li> <li>[ ] Comprehensive security scanning pipeline</li> <li>[ ] Basic compliance automation</li> <li>[ ] Security incident response plan</li> </ul> <p>Remember: Security is a journey, not a destination. Stay updated with latest threats and continuously improve your security posture!</p>"},{"location":"system-design/","title":"Index","text":"<p>system design t\u1eeb educative v\u00e0 bytebytego m\u00ecnh c\u00f3 d\u00f9ng chatgpt d\u1ecbch l\u1ea1i v\u00e0 th\u00eam 1 s\u1ed1 th\u1ee9 cho b\u1ea1n n\u00e0o th\u00edch \u0111\u1ecdc l\u1ea1i b\u1eb1ng ti\u1ebfng vi\u1ec7t sys0 l\u00e0 c\u00e1c b\u00e0i \u0111\u1ecdc ch\u1ec9 d\u1ecbch l\u1ea1i \u1edf \u0111\u00e2y , \u0111\u1ecdc ti\u1ebfng anh tr\u00ean web ch\u00ednh g\u1ed1c https://bytebytego.com/guides/ sys1 sys2 l\u00e0 2 cu\u1ed1n s\u00e1ch system design c\u1ee7a b\u00ean bytebytego c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 l\u00ean amazon mua ho\u1eb7c ... cu\u1ed1n 1 cu\u1ed1n 2</p> <p>cu\u1ed1n 0 , c\u00f3 v\u1ebb nh\u01b0 tr\u00ean blog v\u1eady th\u00f4i </p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/","title":"00.Short longPolling SSE WebSocket","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#3-co-che-real-time-update-trong-web-short-polling-long-polling-sse-va-websocket","title":"3 c\u01a1 ch\u1ebf real-time update trong web: Short Polling, Long Polling, SSE, v\u00e0 WebSocket,","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#van-e-cot-loi","title":"\u2705 V\u1ea5n \u0111\u1ec1 c\u1ed1t l\u00f5i:","text":"<p>HTTP l\u00e0 giao th\u1ee9c theo m\u00f4 h\u00ecnh request-response m\u1ed9t chi\u1ec1u, ngh\u0129a l\u00e0:</p> <p>Tr\u00ecnh duy\u1ec7t (client) lu\u00f4n l\u00e0 b\u00ean ch\u1ee7 \u0111\u1ed9ng g\u1eedi request &gt; Server ch\u1ec9 ph\u1ea3n h\u1ed3i khi c\u00f3 request \u2192 kh\u00f4ng th\u1ec3 t\u1ef1 g\u1eedi d\u1eef li\u1ec7u sang client</p> <p>\ud83d\udccc V\u00ec v\u1eady, \u0111\u1ec3 c\u1eadp nh\u1eadt d\u1eef li\u1ec7u theo th\u1eddi gian th\u1ef1c (real-time), ta c\u1ea7n t\u00ecm c\u00e1ch \u0111\u1ec3 server c\u00f3 th\u1ec3 g\u1eedi d\u1eef li\u1ec7u m\u1edbi v\u1ec1 ph\u00eda client ngay khi c\u00f3 thay \u0111\u1ed5i, thay v\u00ec ph\u1ea3i \u0111\u1ee3i client h\u1ecfi l\u1ea1i.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#giai-phap-ky-thuat","title":"\ud83e\udde0 Gi\u1ea3i ph\u00e1p k\u1ef9 thu\u1eadt:","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#1-short-polling-client-tu-hoi-lien-tuc","title":"\ud83d\udd01 1. Short Polling \u2013 Client t\u1ef1 h\u1ecfi li\u00ean t\u1ee5c","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#cach-hoat-ong","title":"\ud83d\udccc C\u00e1ch ho\u1ea1t \u0111\u1ed9ng:","text":"<ul> <li>Tr\u00ecnh duy\u1ec7t g\u1eedi request \u0111\u1ebfn server m\u1ed7i v\u00e0i gi\u00e2y (v\u00ed d\u1ee5: 3s/l\u1ea7n)</li> <li>Server lu\u00f4n ph\u1ea3n h\u1ed3i ngay l\u1eadp t\u1ee9c v\u1edbi d\u1eef li\u1ec7u hi\u1ec7n t\u1ea1i (d\u00f9 c\u00f3 hay kh\u00f4ng c\u00f3 g\u00ec m\u1edbi)</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#uu-iem","title":"\u2705 \u01afu \u0111i\u1ec3m:","text":"<ul> <li>D\u1ec5 c\u00e0i \u0111\u1eb7t (d\u00f9ng <code>setInterval + fetch</code>)</li> <li>T\u01b0\u01a1ng th\u00edch m\u1ecdi tr\u00ecnh duy\u1ec7t</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#nhuoc-iem","title":"\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>L\u00e3ng ph\u00ed t\u00e0i nguy\u00ean (g\u1eedi li\u00ean t\u1ee5c d\u00f9 kh\u00f4ng c\u00f3 thay \u0111\u1ed5i)</li> <li>T\u0103ng t\u1ea3i server, \u0111\u1ed9 tr\u1ec5 kh\u00f4ng t\u1ed1i \u01b0u</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#2-long-polling-keo-dai-request-cho-du-lieu-moi","title":"\u23f3 2. Long Polling \u2013 K\u00e9o d\u00e0i request ch\u1edd d\u1eef li\u1ec7u m\u1edbi","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#cach-hoat-ong_1","title":"\ud83d\udccc C\u00e1ch ho\u1ea1t \u0111\u1ed9ng:","text":"<ul> <li>Client g\u1eedi request</li> <li>Server gi\u1eef k\u1ebft n\u1ed1i m\u1edf cho \u0111\u1ebfn khi c\u00f3 d\u1eef li\u1ec7u m\u1edbi th\u00ec m\u1edbi ph\u1ea3n h\u1ed3i</li> <li>Sau \u0111\u00f3, client l\u1eadp t\u1ee9c g\u1eedi request m\u1edbi</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#uu-iem_1","title":"\u2705 \u01afu \u0111i\u1ec3m:","text":"<ul> <li>Gi\u1ea3m s\u1ed1 l\u01b0\u1ee3ng request, ph\u1ea3n h\u1ed3i khi c\u00f3 thay \u0111\u1ed5i \u2192 th\u1eddi gian th\u1ef1c h\u01a1n short polling</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#nhuoc-iem_1","title":"\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>C\u1ea7n server h\u1ed7 tr\u1ee3 gi\u1eef k\u1ebft n\u1ed1i m\u1edf l\u00e2u</li> <li>C\u1ea7n x\u1eed l\u00fd timeout, retry, l\u1ed7i k\u1ebft n\u1ed1i</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#3-sse-server-sent-events-server-push-on-huong","title":"\ud83d\udce1 3. SSE (Server-Sent Events) \u2013 Server push \u0111\u01a1n h\u01b0\u1edbng","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#cach-hoat-ong_2","title":"\ud83d\udccc C\u00e1ch ho\u1ea1t \u0111\u1ed9ng:","text":"<ul> <li>Client m\u1edf k\u1ebft n\u1ed1i b\u1eb1ng <code>EventSource</code> (m\u1ed9t lo\u1ea1i request \u0111\u1eb7c bi\u1ec7t)</li> <li>Server gi\u1eef k\u1ebft n\u1ed1i m\u1edf, v\u00e0 stream d\u1eef li\u1ec7u d\u1ea1ng <code>text/event-stream</code></li> <li>Client t\u1ef1 \u0111\u1ed9ng nh\u1eadn d\u1eef li\u1ec7u m\u1ed7i khi server g\u1eedi</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#uu-iem_2","title":"\u2705 \u01afu \u0111i\u1ec3m:","text":"<ul> <li>Giao ti\u1ebfp real-time th\u1eadt s\u1ef1 t\u1eeb server \u2192 client</li> <li>H\u1ed7 tr\u1ee3 reconnect t\u1ef1 \u0111\u1ed9ng</li> <li>D\u1ec5 tri\u1ec3n khai h\u01a1n WebSocket (v\u00ec v\u1eabn d\u00f9ng HTTP)</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#nhuoc-iem_2","title":"\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Ch\u1ec9 h\u1ed7 tr\u1ee3 m\u1ed9t chi\u1ec1u (server \u2192 client)</li> <li>Kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi m\u1ed9t s\u1ed1 tr\u00ecnh duy\u1ec7t c\u0169 (IE)</li> <li>Ch\u1ec9 h\u1ed7 tr\u1ee3 giao th\u1ee9c HTTP (kh\u00f4ng d\u00f9ng cho gRPC, WebSocket, v.v.)</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#4-websocket-ket-noi-2-chieu-thuc-su","title":"\ud83c\udf10 4. WebSocket \u2013 K\u1ebft n\u1ed1i 2 chi\u1ec1u th\u1ef1c s\u1ef1","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#cach-hoat-ong_3","title":"\ud83d\udccc C\u00e1ch ho\u1ea1t \u0111\u1ed9ng:","text":"<ul> <li>Client g\u1eedi HTTP request v\u1edbi <code>Upgrade: websocket</code></li> <li>N\u1ebfu server \u0111\u1ed3ng \u00fd, hai b\u00ean thi\u1ebft l\u1eadp k\u1ebft n\u1ed1i WebSocket</li> <li>T\u1eeb \u0111\u00f3, c\u1ea3 server v\u00e0 client \u0111\u1ec1u c\u00f3 th\u1ec3 g\u1eedi/nh\u1eadn d\u1eef li\u1ec7u b\u1ea5t k\u1ef3 l\u00fac n\u00e0o</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#uu-iem_3","title":"\u2705 \u01afu \u0111i\u1ec3m:","text":"<ul> <li>Full-duplex real-time (g\u1eedi/nh\u1eadn hai chi\u1ec1u)</li> <li>T\u1ed1i \u01b0u cho \u1ee9ng d\u1ee5ng nh\u01b0: chat, multiplayer game, trading, dashboard</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#nhuoc-iem_3","title":"\u274c Nh\u01b0\u1ee3c \u0111i\u1ec3m:","text":"<ul> <li>Ph\u1ee9c t\u1ea1p h\u01a1n (c\u1ea7n server h\u1ed7 tr\u1ee3 WebSocket protocol)</li> <li>C\u00f3 th\u1ec3 b\u1ecb ch\u1eb7n b\u1edfi proxy ho\u1eb7c firewall</li> <li>Kh\u00f4ng ph\u1ea3i t\u1ea5t c\u1ea3 load balancer \u0111\u1ec1u h\u1ed7 tr\u1ee3 t\u1ed1t WebSocket (c\u1ea7n sticky session)</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#so-sanh-tong-quat","title":"\ud83d\udcca So s\u00e1nh t\u1ed5ng qu\u00e1t","text":"K\u1ef9 thu\u1eadt H\u01b0\u1edbng truy\u1ec1n Real-time Ph\u1ee9c t\u1ea1p Ghi ch\u00fa Short Polling 1 chi\u1ec1u \u274c Th\u1ea5p D\u1ec5 tri\u1ec3n khai nh\u01b0ng t\u1ed1n t\u00e0i nguy\u00ean Long Polling 1 chi\u1ec1u \u2705 T\u1ea1m \u1ed5n Trung b\u00ecnh Gi\u1eef k\u1ebft n\u1ed1i l\u00e2u, c\u1ea7n x\u1eed l\u00fd timeout SSE 1 chi\u1ec1u \u2705 T\u1ed1t Trung b\u00ecnh D\u1ec5 d\u00f9ng, nh\u01b0ng kh\u00f4ng g\u1eedi l\u00ean server WebSocket 2 chi\u1ec1u \u2705 R\u1ea5t t\u1ed1t Cao Real-time th\u1eadt s\u1ef1, c\u1ea7n c\u1ea5u h\u00ecnh th\u00eam"},{"location":"system-design/00.sys0-pre.md/00.api-web/00.Short-longPolling-SSE-WebSocket/#ket-luan-khi-tra-loi-phong-van","title":"\ud83d\udfe6 K\u1ebft lu\u1eadn khi tr\u1ea3 l\u1eddi ph\u1ecfng v\u1ea5n:","text":"<p>\u201cV\u00ec HTTP kh\u00f4ng cho ph\u00e9p server t\u1ef1 g\u1eedi d\u1eef li\u1ec7u, n\u00ean \u0111\u1ec3 c\u1eadp nh\u1eadt real-time, em s\u1eed d\u1ee5ng c\u00e1c ph\u01b0\u01a1ng ph\u00e1p nh\u01b0 polling, SSE, ho\u1eb7c WebSocket t\u00f9y theo use-case. V\u1edbi c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u01a1n gi\u1ea3n nh\u01b0 th\u00f4ng b\u00e1o ho\u1eb7c stream d\u1eef li\u1ec7u t\u1eeb server, em ch\u1ecdn SSE v\u00ec nh\u1eb9, \u0111\u01a1n gi\u1ea3n v\u00e0 hi\u1ec7u qu\u1ea3. Nh\u01b0ng v\u1edbi c\u00e1c \u1ee9ng d\u1ee5ng c\u1ea7n giao ti\u1ebfp 2 chi\u1ec1u nh\u01b0 chat, dashboard realtime hay game, em ch\u1ecdn WebSocket \u0111\u1ec3 c\u00f3 k\u1ebft n\u1ed1i full-duplex, gi\u1ea3m \u0111\u1ed9 tr\u1ec5, t\u0103ng tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng.\u201d</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/01.loadbalancer/","title":"01.loadbalancer","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/01.loadbalancer/#vi-sao-chon-load-balancer","title":"\ud83d\udd0d V\u00ec sao ch\u1ecdn Load Balancer?","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/01.loadbalancer/#6-cong-dung-vang-cua-load-balancer-ma-moi-lap-trinh-vien-can-nam-vung","title":"6 C\u00f4ng D\u1ee5ng \"V\u00e0ng\" c\u1ee7a Load Balancer M\u00e0 M\u1ecdi L\u1eadp Tr\u00ecnh Vi\u00ean C\u1ea7n N\u1eafm V\u1eefng","text":"<p>Khi x\u00e2y d\u1ef1ng b\u1ea5t k\u1ef3 h\u1ec7 th\u1ed1ng n\u00e0o, t\u1eeb m\u1ed9t trang web \u0111\u01a1n gi\u1ea3n \u0111\u1ebfn m\u1ed9t \u1ee9ng d\u1ee5ng microservices ph\u1ee9c t\u1ea1p, ch\u00fang ta \u0111\u1ec1u mong mu\u1ed1n n\u00f3 ho\u1ea1t \u0111\u1ed9ng \u1ed5n \u0111\u1ecbnh, nhanh ch\u00f3ng v\u00e0 c\u00f3 th\u1ec3 \u0111\u00e1p \u1ee9ng \u0111\u01b0\u1ee3c l\u01b0\u1ee3ng ng\u01b0\u1eddi d\u00f9ng ng\u00e0y c\u00e0ng t\u0103ng. \"Ng\u01b0\u1eddi h\u00f9ng\" th\u1ea7m l\u1eb7ng \u0111\u1ee9ng sau nh\u1eefng y\u00eau c\u1ea7u \u0111\u00f3 ch\u00ednh l\u00e0 Load Balancer (B\u1ed9 c\u00e2n b\u1eb1ng t\u1ea3i).</p> <p>Load Balancer kh\u00f4ng ch\u1ec9 \u0111\u01a1n thu\u1ea7n l\u00e0 m\u1ed9t \"b\u1ed9 chia traffic\" \u0111\u00e2u. N\u00f3 l\u00e0 m\u1ed9t \"nh\u1ea1c tr\u01b0\u1edfng\" th\u00f4ng minh, \u0111i\u1ec1u ph\u1ed1i v\u00e0 t\u1ed1i \u01b0u h\u00f3a lu\u1ed3ng giao th\u00f4ng \u0111\u1ebfn \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 6 c\u00f4ng d\u1ee5ng quan tr\u1ecdng nh\u1ea5t c\u1ee7a n\u00f3, \u0111\u01b0\u1ee3c ph\u00e2n t\u00e1ch m\u1ed9t c\u00e1ch r\u00f5 r\u00e0ng.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/01.loadbalancer/#1-phan-phoi-luu-luong-mo-rong-quy-mo-traffic-distribution-scalability","title":"1. Ph\u00e2n ph\u1ed1i L\u01b0u l\u01b0\u1ee3ng &amp; M\u1edf r\u1ed9ng Quy m\u00f4 (Traffic Distribution &amp; Scalability) \ud83d\ude80","text":"<p>\u2699\ufe0f Kh\u00e1i ni\u1ec7m: Load Balancer ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t \u0111i\u1ec3m v\u00e0o duy nh\u1ea5t (single entry point) cho t\u1ea5t c\u1ea3 c\u00e1c y\u00eau c\u1ea7u t\u1eeb ng\u01b0\u1eddi d\u00f9ng, s\u1eed d\u1ee5ng c\u00e1c thu\u1eadt to\u00e1n (v\u00ed d\u1ee5: Round Robin, Least Connections) \u0111\u1ec3 ph\u00e2n ph\u1ed1i \u0111\u1ec1u y\u00eau c\u1ea7u \u0111\u1ebfn nh\u00f3m backend server. Khi l\u01b0\u1ee3ng truy c\u1eadp t\u0103ng l\u00ean, b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng th\u00eam server m\u1edbi (horizontal scaling), v\u00e0 Load Balancer s\u1ebd ph\u00e2n ph\u1ed1i traffic \u0111\u1ebfn c\u00e1c server m\u1edbi n\u00e0y. Trong m\u00f4i tr\u01b0\u1eddng \u0111\u00e1m m\u00e2y, n\u00f3 c\u00f2n c\u00f3 th\u1ec3 ph\u00e2n ph\u1ed1i traffic gi\u1eefa c\u00e1c khu v\u1ef1c s\u1eb5n s\u00e0ng (Availability Zones - AZ) kh\u00e1c nhau.</p> <p>\u2705 L\u1ee3i \u00edch: - Tr\u00e1nh qu\u00e1 t\u1ea3i: \u0110\u1ea3m b\u1ea3o kh\u00f4ng c\u00f3 server \u0111\u01a1n l\u1ebb n\u00e0o ph\u1ea3i \"g\u00e1nh\" qu\u00e1 nhi\u1ec1u vi\u1ec7c. - T\u0103ng kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng (Scalability): D\u1ec5 d\u00e0ng \u0111\u00e1p \u1ee9ng l\u01b0u l\u01b0\u1ee3ng truy c\u1eadp t\u0103ng \u0111\u1ed9t bi\u1ebfn. - T\u1ed1i \u01b0u h\u00f3a vi\u1ec7c s\u1eed d\u1ee5ng t\u00e0i nguy\u00ean.</p> <p>\ud83c\udfaf Tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng: M\u1ed9t trang web th\u01b0\u01a1ng m\u1ea1i \u0111i\u1ec7n t\u1eed c\u00f3 ch\u01b0\u01a1ng tr\u00ecnh khuy\u1ebfn m\u00e3i l\u1edbn, l\u01b0\u1ee3ng truy c\u1eadp t\u0103ng g\u1ea5p 10 l\u1ea7n. Ch\u1ec9 c\u1ea7n th\u00eam 5 server m\u1edbi v\u00e0o nh\u00f3m, Load Balancer s\u1ebd x\u1eed l\u00fd l\u01b0\u1ee3ng t\u1ea3i t\u0103ng th\u00eam m\u00e0 kh\u00f4ng b\u1ecb s\u1eadp.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/01.loadbalancer/#2-tang-cuong-tinh-san-sang-cao-xu-ly-loi-high-availability-failure-handling","title":"2. T\u0103ng c\u01b0\u1eddng T\u00ednh s\u1eb5n s\u00e0ng cao &amp; X\u1eed l\u00fd L\u1ed7i (High Availability &amp; Failure Handling) \ud83d\udcaa","text":"<p>\u2699\ufe0f Kh\u00e1i ni\u1ec7m: Load Balancer li\u00ean t\u1ee5c ki\u1ec3m tra \"s\u1ee9c kh\u1ecfe\" c\u1ee7a c\u00e1c server. Khi ph\u00e1t hi\u1ec7n server g\u1eb7p s\u1ef1 c\u1ed1, n\u00f3 s\u1ebd lo\u1ea1i server \u0111\u00f3 ra kh\u1ecfi danh s\u00e1ch nh\u1eadn traffic v\u00e0 chuy\u1ec3n h\u01b0\u1edbng y\u00eau c\u1ea7u sang c\u00e1c server c\u00f2n l\u1ea1i. Qu\u00e1 tr\u00ecnh n\u00e0y ho\u00e0n to\u00e0n t\u1ef1 \u0111\u1ed9ng.</p> <p>\u2705 L\u1ee3i \u00edch: - Tr\u00e1nh downtime: H\u1ec7 th\u1ed1ng kh\u00f4ng b\u1ecb \"s\u1eadp\" ho\u00e0n to\u00e0n khi m\u1ed9t th\u00e0nh ph\u1ea7n b\u1ecb l\u1ed7i. - T\u0103ng \u0111\u1ed9 tin c\u1eady (Reliability). - Tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng li\u1ec1n m\u1ea1ch.</p> <p>\ud83c\udfaf Tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng: H\u1ec7 th\u1ed1ng c\u00f3 hai web server, m\u1ed9t server b\u1ecb l\u1ed7i do tr\u00e0n b\u1ed9 nh\u1edb. Load Balancer ph\u00e1t hi\u1ec7n v\u00e0 chuy\u1ec3n to\u00e0n b\u1ed9 traffic sang server c\u00f2n l\u1ea1i. Ng\u01b0\u1eddi d\u00f9ng v\u1eabn truy c\u1eadp b\u00ecnh th\u01b0\u1eddng.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/01.loadbalancer/#3-giam-sat-suc-khoe-he-thong-health-monitoring","title":"3. Gi\u00e1m s\u00e1t \"S\u1ee9c kh\u1ecfe\" H\u1ec7 th\u1ed1ng (Health Monitoring) \u2764\ufe0f\u200d\ud83e\ude79","text":"<p>\u2699\ufe0f Kh\u00e1i ni\u1ec7m: Load Balancer \u0111\u1ecbnh k\u1ef3 g\u1eedi c\u00e1c y\u00eau c\u1ea7u ki\u1ec3m tra nh\u1ecf (health check) \u0111\u1ebfn endpoint c\u1ea5u h\u00ecnh s\u1eb5n tr\u00ean backend server (v\u00ed d\u1ee5: /health tr\u1ea3 v\u1ec1 m\u00e3 200 OK). D\u1ef1a v\u00e0o ph\u1ea3n h\u1ed3i, Load Balancer bi\u1ebft server \u0111\u00f3 c\u00f3 \"kh\u1ecfe\" hay kh\u00f4ng.</p> <p>\u2705 L\u1ee3i \u00edch: - Ph\u00e1t hi\u1ec7n l\u1ed7i ch\u1ee7 \u0111\u1ed9ng. - T\u1ef1 \u0111\u1ed9ng ph\u1ee5c h\u1ed3i: Khi server kh\u1ecfe l\u1ea1i, Load Balancer t\u1ef1 \u0111\u1ed9ng th\u00eam v\u00e0o nh\u00f3m.</p> <p>\ud83c\udfaf Tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng: Health check g\u1ecdi \u0111\u1ebfn endpoint /api/status m\u1ed7i 10 gi\u00e2y. N\u1ebfu kh\u00f4ng tr\u1ea3 v\u1ec1 m\u00e3 200 trong 3 l\u1ea7n li\u00ean ti\u1ebfp, server s\u1ebd b\u1ecb \u0111\u00e1nh d\u1ea5u l\u00e0 \"unhealthy\".</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/01.loadbalancer/#4-giam-tai-ssl-ssl-termination","title":"4. Gi\u1ea3m t\u1ea3i SSL (SSL Termination) \ud83d\udee1\ufe0f","text":"<p>\u2699\ufe0f Kh\u00e1i ni\u1ec7m: K\u1ebft n\u1ed1i HTTPS y\u00eau c\u1ea7u qu\u00e1 tr\u00ecnh b\u1eaft tay (handshake) v\u00e0 gi\u1ea3i m\u00e3 SSL/TLS, ti\u00eau t\u1ed1n nhi\u1ec1u CPU. Load Balancer c\u00f3 th\u1ec3 \u0111\u1ea3m nhi\u1ec7m to\u00e0n b\u1ed9 vi\u1ec7c n\u00e0y, gi\u1ea3i m\u00e3 request t\u1eeb ng\u01b0\u1eddi d\u00f9ng r\u1ed3i chuy\u1ec3n ti\u1ebfp request HTTP kh\u00f4ng m\u00e3 h\u00f3a \u0111\u1ebfn backend server qua m\u1ea1ng n\u1ed9i b\u1ed9 an to\u00e0n.</p> <p>\u2705 L\u1ee3i \u00edch: - Gi\u1ea3m t\u1ea3i cho backend. - Qu\u1ea3n l\u00fd ch\u1ee9ng ch\u1ec9 t\u1eadp trung. - T\u0103ng hi\u1ec7u su\u1ea5t t\u1ed5ng th\u1ec3.</p> <p>\ud83c\udfaf Tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng: Ki\u1ebfn tr\u00fac microservices v\u1edbi h\u00e0ng tr\u0103m service, ch\u1ec9 c\u1ea7n c\u1ea5u h\u00ecnh SSL m\u1ed9t l\u1ea7n duy nh\u1ea5t t\u1ea1i Load Balancer \u0111\u1ea7u v\u00e0o.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/01.loadbalancer/#5-duy-tri-phien-lam-viec-session-persistence-stickiness","title":"5. Duy tr\u00ec Phi\u00ean l\u00e0m vi\u1ec7c (Session Persistence / Stickiness) \ud83c\udf6a","text":"<p>\u2699\ufe0f Kh\u00e1i ni\u1ec7m: \u0110\u1ed1i v\u1edbi c\u00e1c \u1ee9ng d\u1ee5ng c\u1ea7n duy tr\u00ec tr\u1ea1ng th\u00e1i (stateful), Session Stickiness \u0111\u1ea3m b\u1ea3o t\u1ea5t c\u1ea3 request t\u1eeb m\u1ed9t ng\u01b0\u1eddi d\u00f9ng c\u1ee5 th\u1ec3 lu\u00f4n \u0111\u01b0\u1ee3c \u0111\u1ecbnh tuy\u1ebfn \u0111\u1ebfn c\u00f9ng m\u1ed9t backend server trong su\u1ed1t phi\u00ean, th\u01b0\u1eddng d\u1ef1a v\u00e0o cookie.</p> <p>\u2705 L\u1ee3i \u00edch: - \u0110\u1ea3m b\u1ea3o t\u00ednh nh\u1ea5t qu\u00e1n d\u1eef li\u1ec7u phi\u00ean. - T\u0103ng \u0111\u1ed9 \u1ed5n \u0111\u1ecbnh.</p> <p>\ud83c\udfaf Tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng: Ng\u01b0\u1eddi d\u00f9ng \u0111i\u1ec1n bi\u1ec3u m\u1eabu nhi\u1ec1u b\u01b0\u1edbc. Session stickiness \u0111\u1ea3m b\u1ea3o h\u1ecd lu\u00f4n \u1edf tr\u00ean c\u00f9ng m\u1ed9t server, kh\u00f4ng b\u1ecb m\u1ea5t d\u1eef li\u1ec7u khi chuy\u1ec3n b\u01b0\u1edbc.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/01.loadbalancer/#6-inh-tuyen-thong-minh-advancedsmart-routing","title":"6. \u0110\u1ecbnh tuy\u1ebfn Th\u00f4ng minh (Advanced/Smart Routing) \ud83d\uddfa\ufe0f","text":"<p>\u2699\ufe0f Kh\u00e1i ni\u1ec7m: Load Balancer hi\u1ec7n \u0111\u1ea1i (Layer 7) c\u00f3 th\u1ec3 \"\u0111\u1ecdc\" n\u1ed9i dung request (URL path, header, cookie...) v\u00e0 \u0111\u01b0a ra quy\u1ebft \u0111\u1ecbnh \u0111\u1ecbnh tuy\u1ebfn th\u00f4ng minh, kh\u00f4ng ch\u1ec9 chia \u0111\u1ec1u traffic.</p> <p>\u2705 L\u1ee3i \u00edch: - T\u1ed1i \u01b0u h\u00f3a tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng: V\u00ed d\u1ee5, \u0111\u1ecbnh tuy\u1ebfn ng\u01b0\u1eddi d\u00f9ng mobile \u0111\u1ebfn giao di\u1ec7n mobile. - Tri\u1ec3n khai linh ho\u1ea1t: A/B Testing, Blue-Green Deployment, Canary Releases.</p> <p>\ud83c\udfaf Tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng: Ra m\u1eaft t\u00ednh n\u0103ng m\u1edbi, c\u1ea5u h\u00ecnh Load Balancer \u0111\u1ec3 5% traffic c\u00f3 \u0111\u01b0\u1eddng d\u1eabn /new-feature g\u1eedi \u0111\u1ebfn nh\u00f3m server m\u1edbi, 95% c\u00f2n l\u1ea1i v\u1eabn \u0111i h\u1ec7 th\u1ed1ng c\u0169.</p> <p>Hy v\u1ecdng b\u00e0i vi\u1ebft n\u00e0y gi\u00fap b\u1ea1n hi\u1ec3u r\u00f5 h\u01a1n v\u1ec1 Load Balancer v\u00e0 nh\u1eefng c\u00f4ng d\u1ee5ng \"v\u00e0ng\" m\u00e0 n\u00f3 mang l\u1ea1i cho h\u1ec7 th\u1ed1ng c\u1ee7a b\u1ea1n!</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/02.5http-not-use/","title":"02.5http not use","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/02.5http-not-use/#http-status-codes-nhung-ma-it-pho-bien-hoac-vui-nhon","title":"\u2705 HTTP Status Codes \u2013 Nh\u1eefng m\u00e3 \u00edt ph\u1ed5 bi\u1ebfn ho\u1eb7c \u201cvui nh\u1ed9n\u201d","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/02.5http-not-use/#451-unavailable-for-legal-reasons","title":"\ud83d\udd12 451 \u2013 Unavailable For Legal Reasons","text":"<ul> <li>\u00dd ngh\u0129a: Truy c\u1eadp b\u1ecb ch\u1eb7n do y\u00eau c\u1ea7u ph\u00e1p l\u00fd.</li> <li>T\u00ecnh hu\u1ed1ng s\u1eed d\u1ee5ng: V\u00ed d\u1ee5, m\u1ed9t trang web b\u1ecb ch\u00ednh ph\u1ee7 ch\u1eb7n t\u1ea1i khu v\u1ef1c c\u1ee5 th\u1ec3.</li> <li> <p>V\u00ed d\u1ee5 th\u1ef1c t\u1ebf:</p> </li> <li> <p>N\u1ed9i dung b\u1ecb x\u00f3a theo DMCA ho\u1eb7c lu\u1eadt ph\u00e1p qu\u1ed1c gia (v\u00ed d\u1ee5: GDPR, lu\u1eadt ki\u1ec3m duy\u1ec7t).</p> </li> <li> <p>\ud83d\udd0d Ngu\u1ed3n g\u1ed1c: \u0110\u1ec1 xu\u1ea5t b\u1edfi Tim Bray, l\u1ea5y c\u1ea3m h\u1ee9ng t\u1eeb ti\u1ec3u thuy\u1ebft Fahrenheit 451 (n\u00f3i v\u1ec1 ki\u1ec3m duy\u1ec7t s\u00e1ch).</p> </li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/02.5http-not-use/#218-this-is-fine","title":"\ud83d\ude05 218 \u2013 This Is Fine","text":"<ul> <li>\u00dd ngh\u0129a: M\u1ed9t m\u00e3 \u0111\u00f9a l\u1ea5y c\u1ea3m h\u1ee9ng t\u1eeb meme n\u1ed5i ti\u1ebfng \u201cThis is fine\u201d (con ch\u00f3 ng\u1ed3i trong nh\u00e0 ch\u00e1y).</li> <li>Kh\u00f4ng ch\u00ednh th\u1ee9c: Kh\u00f4ng c\u00f3 trong chu\u1ea9n HTTP. C\u00f3 th\u1ec3 d\u00f9ng n\u1ed9i b\u1ed9 trong dev environment.</li> <li> <p>\ud83e\uddea T\u00ecnh hu\u1ed1ng d\u00f9ng cho vui:</p> </li> <li> <p>D\u00f9ng \u0111\u1ec3 tr\u1ea3 v\u1ec1 khi server g\u1eb7p l\u1ed7i nh\u1eb9 nh\u01b0ng kh\u00f4ng mu\u1ed1n ho\u1ea3ng lo\u1ea1n.</p> </li> <li>V\u00ed d\u1ee5: <code>\"status\": 218, \"message\": \"This is fine \ud83d\udd25\ud83d\udc36\"</code></li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/02.5http-not-use/#420-enhance-your-calm","title":"\ud83e\uddd8 420 \u2013 Enhance Your Calm","text":"<ul> <li>\u00dd ngh\u0129a: Tr\u1ea3 v\u1ec1 khi client g\u1eedi qu\u00e1 nhi\u1ec1u request \u2013 nh\u01b0 y\u00eau c\u1ea7u gi\u1ea3m nh\u1ecbp \u0111\u1ed9 l\u1ea1i.</li> <li>\ud83d\udc26 Ngu\u1ed3n g\u1ed1c: \u0110\u01b0\u1ee3c Twitter s\u1eed d\u1ee5ng tr\u01b0\u1edbc \u0111\u00e2y thay cho m\u00e3 ch\u00ednh th\u1ee9c 429.</li> <li>\u2705 Hi\u1ec7n nay n\u00ean d\u00f9ng 429 Too Many Requests theo ti\u00eau chu\u1ea9n HTTP.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/02.5http-not-use/#530-site-frozen","title":"\u2744\ufe0f 530 \u2013 Site Frozen","text":"<ul> <li>\u00dd ngh\u0129a: Trang web b\u1ecb kh\u00f3a, th\u01b0\u1eddng do vi ph\u1ea1m \u0111i\u1ec1u kho\u1ea3n ho\u1eb7c ch\u01b0a thanh to\u00e1n.</li> <li>\ud83d\udca1 Pantheon (n\u1ec1n t\u1ea3ng hosting) s\u1eed d\u1ee5ng m\u00e3 n\u00e0y khi trang b\u1ecb \u201c\u0111\u00f3ng b\u0103ng\u201d v\u00ec l\u00fd do t\u00e0i ch\u00ednh.</li> <li>\u26a0\ufe0f Kh\u00f4ng ph\u1ea3i m\u00e3 ch\u00ednh th\u1ee9c trong RFC, nh\u01b0ng \u0111\u01b0\u1ee3c d\u00f9ng ph\u1ed5 bi\u1ebfn trong m\u1ed9t s\u1ed1 n\u1ec1n t\u1ea3ng PaaS.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/02.5http-not-use/#418-im-a-teapot","title":"\ud83e\uded6 418 \u2013 I\u2019m a Teapot","text":"<ul> <li>\u00dd ngh\u0129a: \u201cT\u00f4i l\u00e0 c\u00e1i \u1ea5m tr\u00e0, kh\u00f4ng pha c\u00e0 ph\u00ea \u0111\u01b0\u1ee3c.\u201d</li> <li>\ud83c\udccf Ngu\u1ed3n g\u1ed1c: L\u00e0 m\u1ed9t tr\u00f2 \u0111\u00f9a trong RFC 2324 \u2013 HTCPCP (Hyper Text Coffee Pot Control Protocol).</li> <li>\ud83d\udc49 M\u00e3 n\u00e0y t\u1ed3n t\u1ea1i \u0111\u1ec3 troll v\u00e0 th\u1ec3 hi\u1ec7n r\u1eb1ng server kh\u00f4ng h\u1ed7 tr\u1ee3 y\u00eau c\u1ea7u v\u00f4 l\u00fd.</li> <li>\ud83d\udd0d V\u1eabn \u0111\u01b0\u1ee3c c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean y\u00eau th\u00edch v\u00ec t\u00ednh gi\u1ea3i tr\u00ed.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/02.5http-not-use/#meo-tra-loi-phong-van-neu-uoc-hoi","title":"\ud83d\udfe6 M\u1eb9o tr\u1ea3 l\u1eddi ph\u1ecfng v\u1ea5n (n\u1ebfu \u0111\u01b0\u1ee3c h\u1ecfi):","text":"<p>\u201cNgo\u00e0i c\u00e1c m\u00e3 HTTP chu\u1ea9n, em c\u0169ng bi\u1ebft m\u1ed9t s\u1ed1 m\u00e3 vui ho\u1eb7c \u0111\u1eb7c th\u00f9 nh\u01b0 <code>418 I'm a Teapot</code> \u2013 v\u1ed1n l\u00e0 m\u00e3 \u0111\u00f9a trong RFC 2324, <code>451</code> d\u00f9ng khi b\u1ecb h\u1ea1n ch\u1ebf b\u1edfi lu\u1eadt ph\u00e1p, hay <code>420</code> \u2013 t\u1eebng \u0111\u01b0\u1ee3c Twitter d\u00f9ng cho gi\u1edbi h\u1ea1n t\u1ed1c \u0111\u1ed9. Nh\u1eefng m\u00e3 n\u00e0y cho th\u1ea5y c\u1ed9ng \u0111\u1ed3ng dev c\u0169ng c\u00f3 khi\u1ebfu h\u00e0i h\u01b0\u1edbc, v\u00e0 \u0111\u00f4i khi c\u00f2n h\u1eefu \u00edch cho logging ho\u1eb7c testing n\u1ed9i b\u1ed9.\u201d</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/","title":"03.gRPC work","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#rpc-remote-procedure-call-la-gi-va-tai-sao-goi-la-remote","title":"\u2705 RPC (Remote Procedure Call) l\u00e0 g\u00ec v\u00e0 t\u1ea1i sao g\u1ecdi l\u00e0 \"Remote\"?","text":"<ul> <li>RPC l\u00e0 m\u00f4 h\u00ecnh cho ph\u00e9p m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh g\u1ecdi m\u1ed9t h\u00e0m ho\u1eb7c th\u1ee7 t\u1ee5c n\u1eb1m \u1edf m\u1ed9t m\u00e1y ch\u1ee7 kh\u00e1c (remote server) nh\u01b0 th\u1ec3 n\u00f3 l\u00e0 m\u1ed9t h\u00e0m c\u1ee5c b\u1ed9.</li> <li>T\u1eeb g\u00f3c \u0111\u1ed9 c\u1ee7a l\u1eadp tr\u00ecnh vi\u00ean, n\u00f3 gi\u1ed1ng nh\u01b0:</li> </ul> <pre><code>paymentService.ChargeCard(userId, amount)\n</code></pre> <p>nh\u01b0ng th\u1ef1c t\u1ebf l\u00e0 l\u1eddi g\u1ecdi n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a, g\u1eedi qua m\u1ea1ng , th\u1ef1c thi \u1edf ph\u00eda server, sau \u0111\u00f3 k\u1ebft qu\u1ea3 \u0111\u01b0\u1ee3c g\u1eedi ng\u01b0\u1ee3c l\u1ea1i .</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#tai-sao-rpc-pho-bien-trong-microservices","title":"\ud83c\udf10 T\u1ea1i sao RPC ph\u1ed5 bi\u1ebfn trong microservices?","text":"<ul> <li>Microservices th\u01b0\u1eddng \u0111\u01b0\u1ee3c tri\u1ec3n khai tr\u00ean c\u00e1c server kh\u00e1c nhau \u2192 c\u1ea7n giao ti\u1ebfp qua m\u1ea1ng .</li> <li>RPC gi\u00fap \u0111\u01a1n gi\u1ea3n h\u00f3a vi\u1ec7c g\u1ecdi qua m\u1ea1ng \u2192 gi\u1ed1ng nh\u01b0 g\u1ecdi h\u00e0m c\u1ee5c b\u1ed9.</li> <li>gRPC l\u00e0 m\u1ed9t trong nh\u1eefng framework RPC ph\u1ed5 bi\u1ebfn nh\u1ea5t hi\u1ec7n nay, s\u1eed d\u1ee5ng:</li> <li>Protocol Buffers (protobuf) \u0111\u1ec3 encode d\u1eef li\u1ec7u d\u1ea1ng nh\u1ecb ph\u00e2n</li> <li>HTTP/2 l\u00e0m giao th\u1ee9c truy\u1ec1n t\u1ea3i \u2192 h\u1ed7 tr\u1ee3 multiplexing, low-latency</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#giai-thich-so-o-du-lieu-grpc-tu-client-en-server","title":"\ud83e\udded Gi\u1ea3i th\u00edch s\u01a1 \u0111\u1ed3 d\u1eef li\u1ec7u gRPC t\u1eeb client \u0111\u1ebfn server","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#step-1-client-goi-rest-api","title":"\u2705 Step 1: Client g\u1ecdi REST API","text":"<ul> <li>Tr\u00ecnh duy\u1ec7t ho\u1eb7c \u1ee9ng d\u1ee5ng frontend g\u1eedi request d\u1ea1ng HTTP + JSON \u0111\u1ebfn Order Service.</li> <li>V\u00ed d\u1ee5: <code>POST /order</code> v\u1edbi body:   <pre><code>{ \"userId\": 123, \"amount\": 50 }\n</code></pre></li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#steps-2-4-order-service-grpc-client-chuan-bi-rpc-call","title":"\u2705 Steps 2 - 4: Order Service (gRPC Client) chu\u1ea9n b\u1ecb RPC call","text":"<ul> <li>Order Service nh\u1eadn request REST \u2192 chuy\u1ec3n \u0111\u1ed5i d\u1eef li\u1ec7u JSON sang protobuf format .</li> <li>G\u1ecdi \u0111\u1ebfn h\u00e0m client stub c\u1ee7a gRPC:   <pre><code>paymentClient.Charge(userId, amount)\n</code></pre></li> <li>gRPC m\u00e3 h\u00f3a request th\u00e0nh nh\u1ecb ph\u00e2n , v\u00e0 g\u1eedi xu\u1ed1ng t\u1ea7ng transport.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#step-5-gui-du-lieu-qua-http2","title":"\u2705 Step 5: G\u1eedi d\u1eef li\u1ec7u qua HTTP/2","text":"<ul> <li>gRPC s\u1eed d\u1ee5ng HTTP/2 \u0111\u1ec3 g\u1eedi packet \u0111i \u2192 t\u1ed1i \u01b0u v\u1ec1 t\u1ed1c \u0111\u1ed9, \u0111a lu\u1ed3ng, v\u00e0 hi\u1ec7u qu\u1ea3 h\u01a1n HTTP/1.1.</li> <li>So v\u1edbi JSON + REST, gRPC nhanh h\u01a1n g\u1ea5p ~5 l\u1ea7n nh\u1edd:</li> <li>D\u1eef li\u1ec7u nh\u1ecb ph\u00e2n nh\u1eb9 h\u01a1n</li> <li>\u00cdt t\u1ed1n CPU v\u00e0 b\u0103ng th\u00f4ng</li> <li>HTTP/2 h\u1ed7 tr\u1ee3 multiplex (nhi\u1ec1u stream tr\u00ean 1 k\u1ebft n\u1ed1i TCP)</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#steps-6-8-payment-service-grpc-server-xu-ly","title":"\u2705 Steps 6 - 8: Payment Service (gRPC Server) x\u1eed l\u00fd","text":"<ul> <li>gRPC server nh\u1eadn packet , gi\u1ea3i m\u00e3 t\u1eeb binary th\u00e0nh object protobuf.</li> <li>G\u1ecdi v\u00e0o logic \u1ee9ng d\u1ee5ng ph\u00eda server, v\u00ed d\u1ee5:   <pre><code>func (s *PaymentServer) Charge(...) { ... }\n</code></pre></li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#steps-9-11-tra-ket-qua-ve-client","title":"\u2705 Steps 9 - 11: Tr\u1ea3 k\u1ebft qu\u1ea3 v\u1ec1 client","text":"<ul> <li>Server x\u1eed l\u00fd xong s\u1ebd tr\u1ea3 v\u1ec1 object protobuf \u2192 gRPC m\u00e3 h\u00f3a th\u00e0nh binary .</li> <li>G\u1eedi ng\u01b0\u1ee3c l\u1ea1i v\u1ec1 ph\u00eda Order Service qua HTTP/2.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#steps-12-14-order-service-tra-ket-qua-cho-client","title":"\u2705 Steps 12 - 14: Order Service tr\u1ea3 k\u1ebft qu\u1ea3 cho client","text":"<ul> <li>Order Service gi\u1ea3i m\u00e3 protobuf , chuy\u1ec3n th\u00e0nh JSON (n\u1ebfu c\u1ea7n).</li> <li>Tr\u1ea3 l\u1ea1i cho frontend d\u01b0\u1edbi d\u1ea1ng response HTTP nh\u01b0 b\u00ecnh th\u01b0\u1eddng.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#tom-tat-iem-manh-cua-grpc-so-voi-rest","title":"\ud83e\udde0 T\u00f3m t\u1eaft \u0111i\u1ec3m m\u1ea1nh c\u1ee7a gRPC so v\u1edbi REST:","text":"Ti\u00eau ch\u00ed REST (HTTP/JSON) gRPC (HTTP/2 + Protobuf) T\u1ed1c \u0111\u1ed9 Ch\u1eadm h\u01a1n \u2705 Nhanh h\u01a1n (binary) \u0110\u1ecbnh d\u1ea1ng JSON \u2705 Protobuf (nh\u1eb9 h\u01a1n) Streaming Kh\u00f4ng t\u1ed1i \u01b0u \u2705 H\u1ed7 tr\u1ee3 bidirectional Code gen Kh\u00f4ng t\u1ef1 sinh code \u2705 Sinh stub client/server t\u1ef1 \u0111\u1ed9ng H\u1ec7 sinh th\u00e1i Ph\u1ed5 bi\u1ebfn, \u0111\u01a1n gi\u1ea3n C\u1ea7n setup th\u00eam"},{"location":"system-design/00.sys0-pre.md/00.api-web/03.gRPC-work/#ket-luan-khi-tra-loi-phong-van","title":"\ud83d\udfe6 K\u1ebft lu\u1eadn khi tr\u1ea3 l\u1eddi ph\u1ecfng v\u1ea5n:","text":"<p>\u201cgRPC gi\u00fap c\u00e1c service giao ti\u1ebfp v\u1edbi nhau m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 trong m\u00f4i tr\u01b0\u1eddng microservices. So v\u1edbi REST, gRPC mang l\u1ea1i hi\u1ec7u su\u1ea5t cao h\u01a1n , truy\u1ec1n d\u1eef li\u1ec7u nh\u1eb9 h\u01a1n , v\u00e0 h\u1ed7 tr\u1ee3 nhi\u1ec1u t\u00ednh n\u0103ng nh\u01b0 streaming, code generation . N\u00f3 gi\u00fap ch\u00fang ta giao ti\u1ebfp qua m\u1ea1ng nh\u01b0 g\u1ecdi h\u00e0m n\u1ed9i b\u1ed9, nh\u01b0ng v\u1eabn \u0111\u1ea3m b\u1ea3o hi\u1ec7u qu\u1ea3, m\u1edf r\u1ed9ng, v\u00e0 chu\u1ea9n h\u00f3a.\u201d</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/","title":"NAT (Network Address Translation): Ch\u00eca kh\u00f3a m\u1edf r\u1ed9ng Internet hi\u1ec7n \u0111\u1ea1i","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#nat-network-address-translation-chia-khoa-mo-rong-internet-hien-ai","title":"NAT (Network Address Translation): Ch\u00eca kh\u00f3a m\u1edf r\u1ed9ng Internet hi\u1ec7n \u0111\u1ea1i","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#nat-la-gi","title":"NAT l\u00e0 g\u00ec?","text":"<p>NAT (Network Address Translation) l\u00e0 m\u1ed9t qu\u00e1 tr\u00ecnh cho ph\u00e9p nhi\u1ec1u thi\u1ebft b\u1ecb trong c\u00f9ng m\u1ed9t m\u1ea1ng n\u1ed9i b\u1ed9 (LAN) chia s\u1ebb chung m\u1ed9t \u0111\u1ecba ch\u1ec9 IP c\u00f4ng c\u1ed9ng \u0111\u1ec3 truy c\u1eadp Internet. Nh\u1edd NAT, Internet m\u1edbi c\u00f3 th\u1ec3 ph\u00e1t tri\u1ec3n m\u1ea1nh m\u1ebd nh\u01b0 ng\u00e0y nay m\u00e0 kh\u00f4ng b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi s\u1ef1 khan hi\u1ebfm \u0111\u1ecba ch\u1ec9 IPv4.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#nat-hoat-ong-nhu-the-nao","title":"NAT ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o?","text":"<p>H\u00e3y h\u00ecnh dung m\u1ed9t gia \u0111\u00ecnh ho\u1eb7c doanh nghi\u1ec7p c\u00f3 nhi\u1ec1u thi\u1ebft b\u1ecb nh\u01b0 \u0111i\u1ec7n tho\u1ea1i, m\u00e1y t\u00ednh, tivi th\u00f4ng minh\u2026 T\u1ea5t c\u1ea3 c\u00e1c thi\u1ebft b\u1ecb n\u00e0y \u0111\u1ec1u k\u1ebft n\u1ed1i v\u00e0o m\u1ed9t router, v\u00e0 router n\u00e0y ch\u1ec9 c\u00f3 m\u1ed9t \u0111\u1ecba ch\u1ec9 IP c\u00f4ng c\u1ed9ng duy nh\u1ea5t (do nh\u00e0 m\u1ea1ng c\u1ea5p ph\u00e1t). Khi m\u1ed9t thi\u1ebft b\u1ecb mu\u1ed1n truy c\u1eadp Internet, quy tr\u00ecnh NAT di\u1ec5n ra nh\u01b0 sau:</p> <ol> <li> <p>Thi\u1ebft b\u1ecb g\u1eedi y\u00eau c\u1ea7u ra Internet:    Thi\u1ebft b\u1ecb (v\u00ed d\u1ee5: laptop) g\u1eedi g\u00f3i tin y\u00eau c\u1ea7u \u0111\u1ebfn router. G\u00f3i tin n\u00e0y ch\u1ee9a \u0111\u1ecba ch\u1ec9 IP ri\u00eang (private IP) c\u1ee7a laptop.</p> </li> <li> <p>Router thay \u0111\u1ed5i \u0111\u1ecba ch\u1ec9 IP:    Router s\u1eed d\u1ee5ng NAT \u0111\u1ec3 thay \u0111\u1ecba ch\u1ec9 IP ri\u00eang c\u1ee7a thi\u1ebft b\u1ecb b\u1eb1ng \u0111\u1ecba ch\u1ec9 IP c\u00f4ng c\u1ed9ng c\u1ee7a ch\u00ednh router. \u0110\u1ed3ng th\u1eddi, router c\u0169ng ghi nh\u1eadn l\u1ea1i th\u00f4ng tin k\u1ebft n\u1ed1i n\u00e0y v\u00e0o m\u1ed9t b\u1ea3ng chuy\u1ec3n \u0111\u1ed5i NAT (NAT Table).</p> </li> <li> <p>G\u1eedi y\u00eau c\u1ea7u ra Internet:    G\u00f3i tin v\u1edbi IP c\u00f4ng c\u1ed9ng \u0111\u01b0\u1ee3c router g\u1eedi ra Internet.</p> </li> <li> <p>Nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb Internet:    Khi m\u00e1y ch\u1ee7 tr\u00ean Internet tr\u1ea3 l\u1eddi, ph\u1ea3n h\u1ed3i s\u1ebd \u0111\u01b0\u1ee3c g\u1eedi v\u1ec1 \u0111\u1ecba ch\u1ec9 IP c\u00f4ng c\u1ed9ng c\u1ee7a router.</p> </li> <li> <p>Chuy\u1ec3n ti\u1ebfp v\u1ec1 \u0111\u00fang thi\u1ebft b\u1ecb:    Router ki\u1ec3m tra b\u1ea3ng NAT, x\u00e1c \u0111\u1ecbnh thi\u1ebft b\u1ecb n\u1ed9i b\u1ed9 n\u00e0o \u0111\u00e3 g\u1eedi y\u00eau c\u1ea7u ban \u0111\u1ea7u, sau \u0111\u00f3 thay l\u1ea1i IP c\u00f4ng c\u1ed9ng b\u1eb1ng IP ri\u00eang v\u00e0 chuy\u1ec3n ti\u1ebfp g\u00f3i tin v\u1ec1 \u0111\u00fang thi\u1ebft b\u1ecb trong m\u1ea1ng n\u1ed9i b\u1ed9.</p> </li> </ol>"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#minh-hoa-quy-trinh-nat","title":"Minh h\u1ecda quy tr\u00ecnh NAT","text":"<pre><code>Thi\u1ebft b\u1ecb (192.168.1.10) \u2192 Router (NAT: 203.0.113.5) \u2192 Internet\nInternet \u2192 Router (NAT: 203.0.113.5) \u2192 Thi\u1ebft b\u1ecb (192.168.1.10)\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#cac-loai-nat-pho-bien","title":"C\u00e1c lo\u1ea1i NAT ph\u1ed5 bi\u1ebfn","text":"<ul> <li>Static NAT: \u00c1nh x\u1ea1 1-1 gi\u1eefa \u0111\u1ecba ch\u1ec9 IP n\u1ed9i b\u1ed9 v\u00e0 IP c\u00f4ng c\u1ed9ng (\u00edt d\u00f9ng cho gia \u0111\u00ecnh, ch\u1ee7 y\u1ebfu cho server).</li> <li>Dynamic NAT: \u00c1nh x\u1ea1 t\u1ef1 \u0111\u1ed9ng gi\u1eefa d\u1ea3i IP n\u1ed9i b\u1ed9 v\u00e0 d\u1ea3i IP c\u00f4ng c\u1ed9ng, s\u1eed d\u1ee5ng pool IP.</li> <li>PAT (Port Address Translation) hay NAT Overload: Nhi\u1ec1u thi\u1ebft b\u1ecb chung m\u1ed9t IP c\u00f4ng c\u1ed9ng, ph\u00e2n bi\u1ec7t d\u1ef1a v\u00e0o port ngu\u1ed3n \u2013 \u0111\u00e2y ch\u00ednh l\u00e0 ki\u1ec3u NAT ph\u1ed5 bi\u1ebfn nh\u1ea5t trong gia \u0111\u00ecnh v\u00e0 doanh nghi\u1ec7p.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#loi-ich-cua-nat","title":"L\u1ee3i \u00edch c\u1ee7a NAT","text":"<ol> <li> <p>Ti\u1ebft ki\u1ec7m \u0111\u1ecba ch\u1ec9 IP c\u00f4ng c\u1ed9ng:    NAT gi\u00fap h\u00e0ng tri\u1ec7u thi\u1ebft b\u1ecb n\u1ed9i b\u1ed9 ch\u1ec9 c\u1ea7n d\u00f9ng m\u1ed9t ho\u1eb7c v\u00e0i IP c\u00f4ng c\u1ed9ng, tr\u00e1nh c\u1ea1n ki\u1ec7t t\u00e0i nguy\u00ean IPv4.</p> </li> <li> <p>Chia s\u1ebb k\u1ebft n\u1ed1i Internet:    Nhi\u1ec1u thi\u1ebft b\u1ecb (\u0111i\u1ec7n tho\u1ea1i, m\u00e1y t\u00ednh, IoT\u2026) c\u00f3 th\u1ec3 truy c\u1eadp Internet c\u00f9ng l\u00fac qua m\u1ed9t k\u1ebft n\u1ed1i duy nh\u1ea5t.</p> </li> <li> <p>B\u1ea3o m\u1eadt c\u01a1 b\u1ea3n:    NAT che gi\u1ea5u c\u1ea5u tr\u00fac m\u1ea1ng n\u1ed9i b\u1ed9, thi\u1ebft b\u1ecb b\u00ean ngo\u00e0i Internet kh\u00f4ng th\u1ec3 k\u1ebft n\u1ed1i tr\u1ef1c ti\u1ebfp \u0111\u1ebfn thi\u1ebft b\u1ecb trong m\u1ea1ng LAN, gi\u00fap t\u0103ng b\u1ea3o m\u1eadt.</p> </li> <li> <p>D\u1ec5 qu\u1ea3n l\u00fd m\u1ea1ng:    Qu\u1ea3n tr\u1ecb vi\u00ean ch\u1ec9 c\u1ea7n qu\u1ea3n l\u00fd \u0111\u1ecba ch\u1ec9 IP n\u1ed9i b\u1ed9, kh\u00f4ng ph\u1ea3i c\u1ea5u h\u00ecnh t\u1eebng thi\u1ebft b\u1ecb v\u1edbi IP c\u00f4ng c\u1ed9ng.</p> </li> </ol>"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#mot-so-han-che-cua-nat","title":"M\u1ed9t s\u1ed1 h\u1ea1n ch\u1ebf c\u1ee7a NAT","text":"<ul> <li>Kh\u00f4ng t\u01b0\u01a1ng th\u00edch v\u1edbi m\u1ecdi giao th\u1ee9c: M\u1ed9t s\u1ed1 \u1ee9ng d\u1ee5ng ho\u1eb7c giao th\u1ee9c (VoIP, game online, VPN\u2026) c\u00f3 th\u1ec3 g\u1eb7p kh\u00f3 kh\u0103n khi \u0111i qua NAT.</li> <li>Kh\u00f4ng ph\u1ea3i l\u00e0 gi\u1ea3i ph\u00e1p b\u1ea3o m\u1eadt ho\u00e0n ch\u1ec9nh: NAT ch\u1ec9 che gi\u1ea5u \u0111\u1ecba ch\u1ec9 IP, kh\u00f4ng thay th\u1ebf c\u00e1c gi\u1ea3i ph\u00e1p t\u01b0\u1eddng l\u1eeda ho\u1eb7c b\u1ea3o m\u1eadt chuy\u00ean d\u1ee5ng.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>NAT l\u00e0 m\u1ed9t trong nh\u1eefng c\u00f4ng ngh\u1ec7 tr\u1ecdng y\u1ebfu gi\u00fap Internet ph\u00e1t tri\u1ec3n v\u01b0\u1ee3t b\u1eadc, ti\u1ebft ki\u1ec7m t\u00e0i nguy\u00ean, t\u0103ng t\u00ednh linh ho\u1ea1t v\u00e0 b\u1ea3o m\u1eadt cho h\u1ec7 th\u1ed1ng m\u1ea1ng. Khi hi\u1ec3u r\u00f5 NAT, b\u1ea1n s\u1ebd d\u1ec5 d\u00e0ng v\u1eadn h\u00e0nh, m\u1edf r\u1ed9ng v\u00e0 b\u1ea3o v\u1ec7 m\u1ea1ng c\u1ee7a m\u00ecnh hi\u1ec7u qu\u1ea3 h\u01a1n.</p> <p>NAT truy\u1ec1n th\u1ed1ng v\u00e0 NAT trong AWS (NAT Gateway/NAT Instance) kh\u00f4ng ho\u00e0n to\u00e0n l\u00e0 \u201cc\u00f9ng m\u1ed9t th\u1ee9\u201d, m\u1eb7c d\u00f9 ch\u00fang \u0111\u1ec1u d\u1ef1a tr\u00ean nguy\u00ean l\u00fd d\u1ecbch \u0111\u1ecba ch\u1ec9 IP (Network Address Translation). D\u01b0\u1edbi \u0111\u00e2y l\u00e0 c\u00e1c \u0111i\u1ec3m gi\u1ed1ng v\u00e0 kh\u00e1c bi\u1ec7t ch\u00ednh:</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#giong-nhau","title":"Gi\u1ed1ng nhau","text":"<ul> <li>Ch\u1ee9c n\u0103ng c\u01a1 b\u1ea3n gi\u1ed1ng nhau:   C\u1ea3 hai \u0111\u1ec1u cho ph\u00e9p nhi\u1ec1u thi\u1ebft b\u1ecb/n\u1ec1n t\u1ea3ng s\u1eed d\u1ee5ng \u0111\u1ecba ch\u1ec9 IP ri\u00eang (private IP) truy c\u1eadp Internet th\u00f4ng qua m\u1ed9t \u0111\u1ecba ch\u1ec9 IP c\u00f4ng c\u1ed9ng (public IP).</li> <li>\u1ea8n \u0111\u1ecba ch\u1ec9 IP n\u1ed9i b\u1ed9:   \u0110\u1ec1u gi\u00fap b\u1ea3o m\u1eadt b\u1eb1ng c\u00e1ch che gi\u1ea5u IP th\u1eadt c\u1ee7a c\u00e1c thi\u1ebft b\u1ecb n\u1ed9i b\u1ed9 v\u1edbi Internet b\u00ean ngo\u00e0i.</li> <li>Ti\u1ebft ki\u1ec7m \u0111\u1ecba ch\u1ec9 IP c\u00f4ng c\u1ed9ng:   Gi\u00fap nhi\u1ec1u m\u00e1y c\u00f3 th\u1ec3 d\u00f9ng chung m\u1ed9t ho\u1eb7c m\u1ed9t s\u1ed1 \u00edt \u0111\u1ecba ch\u1ec9 IP public.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#khac-nhau","title":"Kh\u00e1c nhau","text":"Ti\u00eau ch\u00ed NAT truy\u1ec1n th\u1ed1ng (Router, Firewall...) NAT trong AWS (NAT Gateway/Instance) V\u1ecb tr\u00ed tri\u1ec3n khai Thi\u1ebft b\u1ecb v\u1eadt l\u00fd (router, firewall) t\u1ea1i nh\u00e0 ho\u1eb7c doanh nghi\u1ec7p D\u1ecbch v\u1ee5 \u1ea3o, tri\u1ec3n khai trong h\u1ea1 t\u1ea7ng \u0111\u00e1m m\u00e2y AWS (VPC) Quy m\u00f4 Ph\u00f9 h\u1ee3p m\u1ea1ng nh\u1ecf, v\u1eeba Ph\u00f9 h\u1ee3p m\u1ea1ng l\u1edbn, t\u1ef1 \u0111\u1ed9ng m\u1edf r\u1ed9ng Qu\u1ea3n l\u00fd T\u1ef1 c\u1ea5u h\u00ecnh, b\u1ea3o tr\u00ec th\u1ee7 c\u00f4ng \u0110\u01b0\u1ee3c AWS qu\u1ea3n l\u00fd, t\u1ef1 \u0111\u1ed9ng h\u00f3a nhi\u1ec1u thao t\u00e1c T\u00edch h\u1ee3p Kh\u00f4ng t\u00edch h\u1ee3p s\u1eb5n v\u1edbi d\u1ecbch v\u1ee5 \u0111\u00e1m m\u00e2y T\u00edch h\u1ee3p s\u00e2u v\u1edbi c\u00e1c d\u1ecbch v\u1ee5 AWS (EC2, S3, Lambda...) T\u00ednh s\u1eb5n s\u00e0ng Ph\u1ee5 thu\u1ed9c thi\u1ebft b\u1ecb v\u1eadt l\u00fd, d\u1ec5 b\u1ecb single point of failure C\u00f3 th\u1ec3 tri\u1ec3n khai multi-AZ, high availability Chi ph\u00ed Chi ph\u00ed ph\u1ea7n c\u1ee9ng + b\u1ea3o tr\u00ec T\u00ednh ph\u00ed theo gi\u1edd v\u00e0 l\u01b0u l\u01b0\u1ee3ng s\u1eed d\u1ee5ng M\u1ee5c \u0111\u00edch ch\u00ednh Chia s\u1ebb Internet cho m\u1ea1ng LAN n\u1ed9i b\u1ed9 Cho ph\u00e9p instance private subnet truy c\u1eadp Internet outbound (c\u1eadp nh\u1eadt, t\u1ea3i g\u00f3i, g\u1eedi log...) Gi\u1edbi h\u1ea1n Gi\u1edbi h\u1ea1n b\u1edfi ph\u1ea7n c\u1ee9ng Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng g\u1ea7n nh\u01b0 kh\u00f4ng gi\u1edbi h\u1ea1n"},{"location":"system-design/00.sys0-pre.md/00.api-web/04.NAT/#ket-luan_1","title":"K\u1ebft lu\u1eadn","text":"<ul> <li>Kh\u00f4ng ph\u1ea3i l\u00e0 \"c\u00f9ng m\u1ed9t th\u1ee9\", nh\u01b0ng NAT trong AWS l\u00e0 phi\u00ean b\u1ea3n d\u1ecbch \u0111\u1ecba ch\u1ec9 IP \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng v\u00e0 t\u1ed1i \u01b0u h\u00f3a cho m\u00f4i tr\u01b0\u1eddng cloud, t\u1ef1 \u0111\u1ed9ng h\u00f3a, quy m\u00f4 l\u1edbn.</li> <li>V\u1ec1 \u00fd t\u01b0\u1edfng, nguy\u00ean l\u00fd l\u00e0 gi\u1ed1ng nhau (d\u1ecbch \u0111\u1ecba ch\u1ec9 IP), nh\u01b0ng c\u00e1ch tri\u1ec3n khai, qu\u1ea3n l\u00fd, t\u00edch h\u1ee3p v\u00e0 m\u1ee5c ti\u00eau s\u1eed d\u1ee5ng kh\u00e1c bi\u1ec7t r\u00f5 r\u1ec7t.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/","title":"05.HTTP Headers","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#http-header-cau-noi-thong-tin-trong-giao-tiep-client-server","title":"HTTP Header: C\u1ea7u n\u1ed1i th\u00f4ng tin trong giao ti\u1ebfp client-server","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#1-http-request-response-su-trao-oi-thong-iep","title":"1. HTTP Request &amp; Response: S\u1ef1 trao \u0111\u1ed5i th\u00f4ng \u0111i\u1ec7p","text":"<ul> <li>HTTP request: L\u00e0 y\u00eau c\u1ea7u m\u00e0 client (tr\u00ecnh duy\u1ec7t, app, v.v.) g\u1eedi \u0111\u1ebfn server \u0111\u1ec3 xin t\u00e0i nguy\u00ean (d\u1eef li\u1ec7u, h\u00ecnh \u1ea3nh, API...).</li> <li>HTTP response: L\u00e0 ph\u1ea3n h\u1ed3i m\u00e0 server g\u1eedi l\u1ea1i cho client sau khi x\u1eed l\u00fd xong y\u00eau c\u1ea7u.</li> </ul> <p>V\u00ed d\u1ee5: B\u1ea1n m\u1edf tr\u00ecnh duy\u1ec7t v\u00e0o m\u1ed9t website \u2192 Tr\u00ecnh duy\u1ec7t g\u1eedi HTTP request \u0111\u1ebfn server \u2192 Server tr\u1ea3 v\u1ec1 HTTP response g\u1ed3m n\u1ed9i dung trang web.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#2-http-header-la-gi","title":"2. HTTP Header l\u00e0 g\u00ec?","text":"<p>HTTP header l\u00e0 c\u00e1c d\u00f2ng th\u00f4ng tin b\u1ed5 sung (metadata) \u0111i k\u00e8m m\u1ed7i y\u00eau c\u1ea7u (request) ho\u1eb7c ph\u1ea3n h\u1ed3i (response), gi\u00fap truy\u1ec1n \u0111\u1ea1t c\u00e1c th\u00f4ng tin quan tr\u1ecdng gi\u1eefa client v\u00e0 server.</p> <ul> <li>Request header: G\u1eedi t\u1eeb client l\u00ean server (v\u00ed d\u1ee5: lo\u1ea1i tr\u00ecnh duy\u1ec7t, lo\u1ea1i d\u1eef li\u1ec7u g\u1eedi \u0111i, th\u00f4ng tin x\u00e1c th\u1ef1c\u2026)</li> <li>Response header: Server g\u1eedi ng\u01b0\u1ee3c l\u1ea1i cho client (v\u00ed d\u1ee5: ki\u1ec3u d\u1eef li\u1ec7u tr\u1ea3 v\u1ec1, th\u1eddi gian cache, th\u00f4ng b\u00e1o l\u1ed7i, h\u01b0\u1edbng d\u1eabn \u0111\u1eb7c bi\u1ec7t\u2026)</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#3-vai-tro-cua-http-header-trong-restful-api","title":"3. Vai tr\u00f2 c\u1ee7a HTTP Header trong RESTful API","text":"<p>Khi x\u00e2y d\u1ef1ng \u1ee9ng d\u1ee5ng web ho\u1eb7c API, header gi\u00fap: - Truy\u1ec1n th\u00f4ng tin v\u1ec1 x\u00e1c th\u1ef1c, phi\u00ean \u0111\u0103ng nh\u1eadp. - Ch\u1ec9 \u0111\u1ecbnh ki\u1ec3u d\u1eef li\u1ec7u (JSON, XML, HTML, h\u00ecnh \u1ea3nh\u2026). - G\u1eedi ho\u1eb7c nh\u1eadn cookie. - \u0110i\u1ec1u khi\u1ec3n cache, b\u1ea3o m\u1eadt, n\u00e9n d\u1eef li\u1ec7u\u2026 - Truy\u1ec1n c\u00e1c tham s\u1ed1 \u0111\u1eb7c bi\u1ec7t (token, ng\u00f4n ng\u1eef, v.v.)</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#4-cau-truc-mot-http-header","title":"4. C\u1ea5u tr\u00fac m\u1ed9t HTTP Header","text":"<p>Header g\u1ed3m c\u00e1c d\u00f2ng d\u1ea1ng: <code>T\u00ean-header: gi\u00e1 tr\u1ecb</code></p> <p>V\u00ed d\u1ee5 (Request):</p> <pre><code>GET /api/users HTTP/1.1\nHost: api.example.com\nAuthorization: Bearer &lt;token&gt;\nContent-Type: application/json\nUser-Agent: Mozilla/5.0\n</code></pre> <p>V\u00ed d\u1ee5 (Response):</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nSet-Cookie: sessionId=abc123\nCache-Control: no-cache\nAccess-Control-Allow-Origin: *\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#5-mot-so-http-header-pho-bien","title":"5. M\u1ed9t s\u1ed1 HTTP Header ph\u1ed5 bi\u1ebfn","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#request-header","title":"Request Header","text":"<ul> <li>Host: T\u00ean mi\u1ec1n c\u1ee7a server mu\u1ed1n truy c\u1eadp.</li> <li>User-Agent: Th\u00f4ng tin v\u1ec1 tr\u00ecnh duy\u1ec7t ho\u1eb7c \u1ee9ng d\u1ee5ng.</li> <li>Content-Type: D\u1eef li\u1ec7u g\u1eedi \u0111i l\u00e0 ki\u1ec3u g\u00ec (application/json, text/html\u2026)</li> <li>Accept: Client mu\u1ed1n nh\u1eadn ki\u1ec3u d\u1eef li\u1ec7u n\u00e0o.</li> <li>Authorization: Th\u00f4ng tin x\u00e1c th\u1ef1c (token, basic\u2026)</li> <li>Cookie: G\u1eedi cookie l\u00ean server.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#response-header","title":"Response Header","text":"<ul> <li>Content-Type: Server tr\u1ea3 v\u1ec1 ki\u1ec3u d\u1eef li\u1ec7u g\u00ec.</li> <li>Set-Cookie: G\u1eedi cookie m\u1edbi cho client l\u01b0u l\u1ea1i.</li> <li>Cache-Control: H\u01b0\u1edbng d\u1eabn v\u1ec1 cache (l\u01b0u t\u1ea1m, kh\u00f4ng l\u01b0u\u2026)</li> <li>Location: \u0110\u1ecba ch\u1ec9 chuy\u1ec3n h\u01b0\u1edbng (redirect).</li> <li>Access-Control-Allow-Origin: Quy \u0111\u1ecbnh CORS (cho ph\u00e9p ngu\u1ed3n n\u00e0o truy c\u1eadp API).</li> <li>Content-Length: \u0110\u1ed9 d\u00e0i d\u1eef li\u1ec7u tr\u1ea3 v\u1ec1.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#6-vai-tro-quan-trong-cua-http-header","title":"6. Vai tr\u00f2 quan tr\u1ecdng c\u1ee7a HTTP Header","text":"<ul> <li>\u0110\u1ea3m b\u1ea3o giao ti\u1ebfp \u0111\u00fang chu\u1ea9n gi\u1eefa client v\u00e0 server.</li> <li>B\u1ea3o m\u1eadt (x\u00e1c th\u1ef1c, ki\u1ec3m so\u00e1t truy c\u1eadp).</li> <li>Hi\u1ec7u n\u0103ng (n\u00e9n d\u1eef li\u1ec7u, cache\u2026).</li> <li>Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng (th\u00eam c\u00e1c header tu\u1ef3 ch\u1ec9nh cho \u1ee9ng d\u1ee5ng/ph\u1ea7n m\u1ec1m \u0111\u1eb7c th\u00f9).</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#7-ung-dung-thuc-te","title":"7. \u1ee8ng d\u1ee5ng th\u1ef1c t\u1ebf","text":"<ul> <li>Khi x\u00e2y d\u1ef1ng RESTful API, b\u1ea1n th\u01b0\u1eddng d\u00f9ng header \u0111\u1ec3 truy\u1ec1n token x\u00e1c th\u1ef1c (Authorization), ch\u1ec9 \u0111\u1ecbnh ki\u1ec3u d\u1eef li\u1ec7u (Content-Type), ki\u1ec3m so\u00e1t quy\u1ec1n truy c\u1eadp (CORS), v.v.</li> <li>Khi l\u00e0m frontend, b\u1ea1n c\u1ea7n \u0111\u1ecdc \u0111\u00fang c\u00e1c response header \u0111\u1ec3 bi\u1ebft c\u00e1ch x\u1eed l\u00fd d\u1eef li\u1ec7u ho\u1eb7c hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o cho ng\u01b0\u1eddi d\u00f9ng.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/05.HTTP-Headers/#8-ket-luan","title":"8. K\u1ebft lu\u1eadn","text":"<p>Hi\u1ec3u r\u00f5 HTTP header l\u00e0 n\u1ec1n t\u1ea3ng quan tr\u1ecdng \u0111\u1ec3 x\u00e2y d\u1ef1ng, v\u1eadn h\u00e0nh v\u00e0 b\u1ea3o m\u1eadt c\u00e1c \u1ee9ng d\u1ee5ng web hi\u1ec7n \u0111\u1ea1i. N\u1eafm v\u1eefng c\u00e1c header ph\u1ed5 bi\u1ebfn s\u1ebd gi\u00fap b\u1ea1n giao ti\u1ebfp hi\u1ec7u qu\u1ea3 h\u01a1n gi\u1eefa client v\u00e0 server, \u0111\u1ed3ng th\u1eddi t\u1ed1i \u01b0u \u0111\u01b0\u1ee3c tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng v\u00e0 b\u1ea3o v\u1ec7 h\u1ec7 th\u1ed1ng c\u1ee7a m\u00ecnh.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/","title":"Ch\u00ednh S\u00e1ch \u0110\u1ecbnh Tuy\u1ebfn DNS: H\u01b0\u1edbng D\u1eabn Chi Ti\u1ebft Qu\u1ea3n L\u00fd Traffic Internet","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#chinh-sach-inh-tuyen-dns-huong-dan-chi-tiet-quan-ly-traffic-internet","title":"Ch\u00ednh S\u00e1ch \u0110\u1ecbnh Tuy\u1ebfn DNS: H\u01b0\u1edbng D\u1eabn Chi Ti\u1ebft Qu\u1ea3n L\u00fd Traffic Internet","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#gioi-thieu","title":"Gi\u1edbi Thi\u1ec7u","text":"<p>C\u00e1c ch\u00ednh s\u00e1ch \u0111\u1ecbnh tuy\u1ebfn traffic internet (DNS policies) \u0111\u00f3ng vai tr\u00f2 quan tr\u1ecdng trong vi\u1ec7c qu\u1ea3n l\u00fd v\u00e0 \u0111\u1ecbnh h\u01b0\u1edbng network traffic m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3. H\u00e3y c\u00f9ng t\u00ecm hi\u1ec3u c\u00e1c lo\u1ea1i ch\u00ednh s\u00e1ch kh\u00e1c nhau v\u00e0 c\u00e1ch ch\u00fang ho\u1ea1t \u0111\u1ed9ng.</p> <p>DNS routing kh\u00f4ng ch\u1ec9 \u0111\u01a1n thu\u1ea7n l\u00e0 vi\u1ec7c ph\u00e2n gi\u1ea3i t\u00ean mi\u1ec1n th\u00e0nh \u0111\u1ecba ch\u1ec9 IP, m\u00e0 c\u00f2n l\u00e0 c\u00f4ng c\u1ee5 m\u1ea1nh m\u1ebd \u0111\u1ec3 ph\u00e2n ph\u1ed1i t\u1ea3i, kh\u00f4i ph\u1ee5c th\u1ea3m h\u1ecda, t\u1ed1i \u01b0u hi\u1ec7u su\u1ea5t v\u00e0 ph\u00e2n ph\u1ed1i n\u1ed9i dung theo \u0111\u1ecba l\u00fd.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#1-simple-routing-policy-inh-tuyen-on-gian","title":"1. Simple Routing Policy (\u0110\u1ecbnh Tuy\u1ebfn \u0110\u01a1n Gi\u1ea3n)","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#inh-nghia","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Ch\u1ec9 \u0111\u1ea1o t\u1ea5t c\u1ea3 traffic \u0111\u1ebfn m\u1ed9t endpoint duy nh\u1ea5t d\u1ef1a tr\u00ean truy v\u1ea5n DNS ti\u00eau chu\u1ea9n m\u00e0 kh\u00f4ng c\u00f3 \u0111i\u1ec1u ki\u1ec7n \u0111\u1eb7c bi\u1ec7t ho\u1eb7c y\u00eau c\u1ea7u n\u00e0o.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#cach-thuc-hoat-ong","title":"C\u00e1ch Th\u1ee9c Ho\u1ea1t \u0110\u1ed9ng","text":"<pre><code>Truy v\u1ea5n DNS (example.com)\n        \u2193\nCh\u00ednh s\u00e1ch \u0111\u1ecbnh tuy\u1ebfn \u0111\u01a1n gi\u1ea3n\n        \u2193\n\u0110\u1ecba ch\u1ec9 IP duy nh\u1ea5t (192.168.1.100)\n        \u2193\nT\u1ea5t c\u1ea3 Traffic \u2192 Endpoint duy nh\u1ea5t\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#ac-iem-chinh","title":"\u0110\u1eb7c \u0110i\u1ec3m Ch\u00ednh","text":"<ul> <li>\u00c1nh x\u1ea1 m\u1ed9t-m\u1ed9t: M\u1ed9t t\u00ean mi\u1ec1n t\u01b0\u01a1ng \u1ee9ng v\u1edbi m\u1ed9t \u0111\u1ecba ch\u1ec9 IP</li> <li>Kh\u00f4ng ki\u1ec3m tra s\u1ee9c kh\u1ecfe: Kh\u00f4ng c\u00f3 c\u01a1 ch\u1ebf ki\u1ec3m tra t\u00ednh kh\u1ea3 d\u1ee5ng c\u1ee7a endpoint</li> <li>Kh\u00f4ng ph\u00e2n ph\u1ed1i traffic: To\u00e0n b\u1ed9 traffic \u0111\u1ec1u \u0111i \u0111\u1ebfn c\u00f9ng m\u1ed9t endpoint</li> <li>C\u1ea5u h\u00ecnh t\u0129nh: Kh\u00f4ng thay \u0111\u1ed5i d\u1ef1a tr\u00ean \u0111i\u1ec1u ki\u1ec7n</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#truong-hop-su-dung","title":"Tr\u01b0\u1eddng H\u1ee3p S\u1eed D\u1ee5ng","text":"<ul> <li>M\u00f4i tr\u01b0\u1eddng ph\u00e1t tri\u1ec3n: Test v\u1edbi server \u0111\u01a1n l\u1ebb</li> <li>Website nh\u1ecf: Kh\u00f4ng c\u1ea7n d\u1ef1 ph\u00f2ng ho\u1eb7c ph\u00e2n ph\u1ed1i t\u1ea3i</li> <li>N\u1ed9i dung t\u0129nh: Website v\u1edbi l\u01b0u l\u01b0\u1ee3ng th\u1ea5p</li> <li>\u1ee8ng d\u1ee5ng c\u0169: H\u1ec7 th\u1ed1ng ch\u01b0a y\u00eau c\u1ea7u t\u00ednh kh\u1ea3 d\u1ee5ng cao</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#uu-iem","title":"\u01afu \u0110i\u1ec3m","text":"<ul> <li>\u2705 \u0110\u01a1n gi\u1ea3n: D\u1ec5 c\u1ea5u h\u00ecnh v\u00e0 b\u1ea3o tr\u00ec</li> <li>\u2705 Chi ph\u00ed th\u1ea5p: Kh\u00f4ng y\u00eau c\u1ea7u h\u1ea1 t\u1ea7ng b\u1ed5 sung</li> <li>\u2705 Ph\u00e2n gi\u1ea3i nhanh: Chi ph\u00ed x\u1eed l\u00fd t\u1ed1i thi\u1ec3u</li> <li>\u2705 D\u1ec5 kh\u1eafc ph\u1ee5c s\u1ef1 c\u1ed1: D\u1ec5 debug khi c\u00f3 v\u1ea5n \u0111\u1ec1</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#nhuoc-iem","title":"Nh\u01b0\u1ee3c \u0110i\u1ec3m","text":"<ul> <li>\u274c \u0110i\u1ec3m l\u1ed7i duy nh\u1ea5t: Endpoint down = to\u00e0n b\u1ed9 d\u1ecbch v\u1ee5 kh\u00f4ng kh\u1ea3 d\u1ee5ng</li> <li>\u274c Kh\u00f4ng ph\u00e2n ph\u1ed1i t\u1ea3i: Kh\u00f4ng th\u1ec3 x\u1eed l\u00fd l\u01b0u l\u01b0\u1ee3ng cao</li> <li>\u274c Kh\u00f4ng t\u1ed1i \u01b0u \u0111\u1ecba l\u00fd: T\u1ea5t c\u1ea3 ng\u01b0\u1eddi d\u00f9ng k\u1ebft n\u1ed1i \u0111\u1ebfn c\u00f9ng v\u1ecb tr\u00ed</li> <li>\u274c Kh\u00f4ng failover t\u1ef1 \u0111\u1ed9ng: C\u1ea7n can thi\u1ec7p th\u1ee7 c\u00f4ng khi c\u00f3 v\u1ea5n \u0111\u1ec1</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#2-failover-routing-policy-inh-tuyen-du-phong","title":"2. Failover Routing Policy (\u0110\u1ecbnh Tuy\u1ebfn D\u1ef1 Ph\u00f2ng)","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#inh-nghia_1","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>\u0110\u1ecbnh tuy\u1ebfn traffic \u0111\u1ebfn endpoint ch\u00ednh nh\u01b0ng t\u1ef1 \u0111\u1ed9ng chuy\u1ec3n sang endpoint ph\u1ee5 n\u1ebfu endpoint ch\u00ednh kh\u00f4ng kh\u1ea3 d\u1ee5ng.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#kien-truc-tong-quan","title":"Ki\u1ebfn Tr\u00fac T\u1ed5ng Quan","text":"<pre><code>Truy v\u1ea5n DNS\n    \u2193\nKi\u1ec3m tra s\u1ee9c kh\u1ecfe Endpoint ch\u00ednh\n    \u2193\nEndpoint ch\u00ednh kh\u1ecfe? \u2500\u2500C\u00f3\u2500\u2500\u2192 \u0110\u1ecbnh tuy\u1ebfn \u0111\u1ebfn endpoint ch\u00ednh\n    \u2193 Kh\u00f4ng\n\u0110\u1ecbnh tuy\u1ebfn \u0111\u1ebfn endpoint ph\u1ee5\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#cach-thuc-hoat-ong_1","title":"C\u00e1ch Th\u1ee9c Ho\u1ea1t \u0110\u1ed9ng","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#co-che-kiem-tra-suc-khoe","title":"C\u01a1 Ch\u1ebf Ki\u1ec3m Tra S\u1ee9c Kh\u1ecfe","text":"<ol> <li>Gi\u00e1m s\u00e1t li\u00ean t\u1ee5c: DNS service li\u00ean t\u1ee5c ki\u1ec3m tra s\u1ee9c kh\u1ecfe endpoint ch\u00ednh</li> <li>Ti\u00eau ch\u00ed ki\u1ec3m tra s\u1ee9c kh\u1ecfe:</li> <li>M\u00e3 ph\u1ea3n h\u1ed3i HTTP/HTTPS</li> <li>Th\u00e0nh c\u00f4ng k\u1ebft n\u1ed1i TCP</li> <li>Ng\u01b0\u1ee1ng th\u1eddi gian ph\u1ea3n h\u1ed3i</li> <li> <p>Endpoint ki\u1ec3m tra s\u1ee9c kh\u1ecfe t\u00f9y ch\u1ec9nh</p> </li> <li> <p>Failover t\u1ef1 \u0111\u1ed9ng: Khi endpoint ch\u00ednh th\u1ea5t b\u1ea1i trong ki\u1ec3m tra s\u1ee9c kh\u1ecfe, traffic t\u1ef1 \u0111\u1ed9ng \u0111\u1ecbnh tuy\u1ebfn \u0111\u1ebfn endpoint ph\u1ee5</p> </li> </ol>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#cau-hinh-vi-du","title":"C\u1ea5u H\u00ecnh V\u00ed D\u1ee5","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#ban-ghi-chinh","title":"B\u1ea3n Ghi Ch\u00ednh","text":"<pre><code>T\u00ean: www.example.com\nLo\u1ea1i: A\nGi\u00e1 tr\u1ecb: 203.0.113.10\nCh\u00ednh s\u00e1ch \u0111\u1ecbnh tuy\u1ebfn: Failover - Ch\u00ednh\nKi\u1ec3m tra s\u1ee9c kh\u1ecfe: HTTP 80 /health\nID thi\u1ebft l\u1eadp: primary-web-server\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#ban-ghi-phu","title":"B\u1ea3n Ghi Ph\u1ee5","text":"<pre><code>T\u00ean: www.example.com\nLo\u1ea1i: A\nGi\u00e1 tr\u1ecb: 203.0.113.20\nCh\u00ednh s\u00e1ch \u0111\u1ecbnh tuy\u1ebfn: Failover - Ph\u1ee5\nKi\u1ec3m tra s\u1ee9c kh\u1ecfe: HTTP 80 /health\nID thi\u1ebft l\u1eadp: secondary-web-server\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#truong-hop-su-dung_1","title":"Tr\u01b0\u1eddng H\u1ee3p S\u1eed D\u1ee5ng","text":"<ul> <li>\u1ee8ng d\u1ee5ng quan tr\u1ecdng: D\u1ecbch v\u1ee5 c\u1ea7n t\u00ednh kh\u1ea3 d\u1ee5ng cao</li> <li>N\u1ec1n t\u1ea3ng th\u01b0\u01a1ng m\u1ea1i \u0111i\u1ec7n t\u1eed: Gi\u1ea3m thi\u1ec3u th\u1eddi gian ng\u1eebng ho\u1ea1t \u0111\u1ed9ng</li> <li>D\u1ecbch v\u1ee5 API: \u0110\u1ea3m b\u1ea3o kh\u1ea3 n\u0103ng ph\u1ee5c v\u1ee5 li\u00ean t\u1ee5c</li> <li>Kh\u00f4i ph\u1ee5c th\u1ea3m h\u1ecda: D\u1ef1 ph\u00f2ng \u0111\u1ecba l\u00fd cho t\u00ednh li\u00ean t\u1ee5c kinh doanh</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#uu-iem_1","title":"\u01afu \u0110i\u1ec3m","text":"<ul> <li>\u2705 T\u00ednh kh\u1ea3 d\u1ee5ng cao: Kh\u00f4i ph\u1ee5c t\u1ef1 \u0111\u1ed9ng t\u1eeb l\u1ed7i endpoint ch\u00ednh</li> <li>\u2705 T\u00ednh li\u00ean t\u1ee5c kinh doanh: Gi\u1ea3m thi\u1ec3u t\u00e1c \u0111\u1ed9ng th\u1eddi gian ng\u1eebng ho\u1ea1t \u0111\u1ed9ng</li> <li>\u2705 Failover trong su\u1ed1t: Ng\u01b0\u1eddi d\u00f9ng kh\u00f4ng nh\u1eadn th\u1ea5y s\u1ef1 chuy\u1ec3n \u0111\u1ed5i</li> <li>\u2705 Hi\u1ec7u qu\u1ea3 v\u1ec1 chi ph\u00ed: \u0110\u01a1n gi\u1ea3n h\u01a1n c\u00e1c gi\u1ea3i ph\u00e1p c\u00e2n b\u1eb1ng t\u1ea3i ph\u1ee9c t\u1ea1p</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#nhuoc-iem_1","title":"Nh\u01b0\u1ee3c \u0110i\u1ec3m","text":"<ul> <li>\u274c S\u1eed d\u1ee5ng t\u00e0i nguy\u00ean k\u00e9m hi\u1ec7u qu\u1ea3: Endpoint ph\u1ee5 kh\u00f4ng ho\u1ea1t \u0111\u1ed9ng trong \u0111i\u1ec1u ki\u1ec7n b\u00ecnh th\u01b0\u1eddng</li> <li>\u274c Ph\u1ee9c t\u1ea1p kh\u00f4i ph\u1ee5c: Quay l\u1ea1i endpoint ch\u00ednh c\u00f3 th\u1ec3 ph\u1ee9c t\u1ea1p</li> <li>\u274c H\u1ea1n ch\u1ebf ki\u1ec3m tra s\u1ee9c kh\u1ecfe: C\u00f3 th\u1ec3 kh\u00f4ng ph\u00e1t hi\u1ec7n t\u1ea5t c\u1ea3 lo\u1ea1i l\u1ed7i</li> <li>\u274c \u0110\u1ed9 tr\u1ec5 truy\u1ec1n b\u00e1 DNS: TTL \u1ea3nh h\u01b0\u1edfng t\u1ed1c \u0111\u1ed9 failover</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#3-geolocation-routing-policy-inh-tuyen-theo-vi-tri-ia-ly","title":"3. Geolocation Routing Policy (\u0110\u1ecbnh Tuy\u1ebfn Theo V\u1ecb Tr\u00ed \u0110\u1ecba L\u00fd)","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#inh-nghia_2","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Ph\u00e2n ph\u1ed1i traffic d\u1ef1a tr\u00ean v\u1ecb tr\u00ed \u0111\u1ecba l\u00fd c\u1ee7a ng\u01b0\u1eddi y\u00eau c\u1ea7u, nh\u1eb1m cung c\u1ea5p n\u1ed9i dung ho\u1eb7c d\u1ecbch v\u1ee5 \u0111\u01b0\u1ee3c b\u1ea3n \u0111\u1ecba h\u00f3a.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#quy-trinh-phan-giai-ia-ly","title":"Quy Tr\u00ecnh Ph\u00e2n Gi\u1ea3i \u0110\u1ecba L\u00fd","text":"<pre><code>Y\u00eau c\u1ea7u t\u1eeb ng\u01b0\u1eddi d\u00f9ng (V\u1ecb tr\u00ed: \u00dac)\n        \u2193\nPh\u00e1t hi\u1ec7n v\u1ecb tr\u00ed \u0111\u1ecba l\u00fd DNS\n        \u2193\n\u0110\u1ecbnh tuy\u1ebfn \u0111\u1ebfn Endpoint Ch\u00e2u \u00c1-Th\u00e1i B\u00ecnh D\u01b0\u01a1ng\n        \u2193\nPh\u00e2n ph\u1ed1i n\u1ed9i dung b\u1ea3n \u0111\u1ecba h\u00f3a\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#phan-cap-vi-tri","title":"Ph\u00e2n C\u1ea5p V\u1ecb Tr\u00ed","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#o-chi-tiet-ia-ly","title":"\u0110\u1ed9 Chi Ti\u1ebft \u0110\u1ecba L\u00fd","text":"<ol> <li>C\u1ea5p l\u1ee5c \u0111\u1ecba: B\u1eafc M\u1ef9, Ch\u00e2u \u00c2u, Ch\u00e2u \u00c1, v.v.</li> <li>C\u1ea5p qu\u1ed1c gia: Hoa K\u1ef3, V\u01b0\u01a1ng qu\u1ed1c Anh, Nh\u1eadt B\u1ea3n</li> <li>C\u1ea5p ph\u00e2n khu: Bang, t\u1ec9nh (US-CA, US-NY)</li> <li>V\u1ecb tr\u00ed m\u1eb7c \u0111\u1ecbnh: Fallback cho c\u00e1c v\u1ecb tr\u00ed kh\u00f4ng kh\u1edbp</li> </ol>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#vi-du-cau-hinh","title":"V\u00ed D\u1ee5 C\u1ea5u H\u00ecnh","text":"<pre><code>\u0110\u1ecbnh tuy\u1ebfn theo l\u1ee5c \u0111\u1ecba:\n\u251c\u2500\u2500 B\u1eafc M\u1ef9 \u2192 us-east-1 (Virginia)\n\u251c\u2500\u2500 Ch\u00e2u \u00c2u \u2192 eu-west-1 (Ireland)\n\u251c\u2500\u2500 Ch\u00e2u \u00c1 \u2192 ap-southeast-1 (Singapore)\n\u2514\u2500\u2500 M\u1eb7c \u0111\u1ecbnh \u2192 us-east-1 (Fallback to\u00e0n c\u1ea7u)\n\n\u0110\u1ecbnh tuy\u1ebfn theo qu\u1ed1c gia:\n\u251c\u2500\u2500 Hoa K\u1ef3 \u2192 us-east-1\n\u251c\u2500\u2500 Canada \u2192 ca-central-1\n\u251c\u2500\u2500 V\u01b0\u01a1ng qu\u1ed1c Anh \u2192 eu-west-2\n\u251c\u2500\u2500 \u0110\u1ee9c \u2192 eu-central-1\n\u2514\u2500\u2500 M\u1eb7c \u0111\u1ecbnh \u2192 us-east-1\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#truong-hop-su-dung_2","title":"Tr\u01b0\u1eddng H\u1ee3p S\u1eed D\u1ee5ng","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#ban-ia-hoa-noi-dung","title":"B\u1ea3n \u0110\u1ecba H\u00f3a N\u1ed9i Dung","text":"<ul> <li>Website \u0111a ng\u00f4n ng\u1eef: Ph\u1ee5c v\u1ee5 n\u1ed9i dung b\u1eb1ng ng\u00f4n ng\u1eef \u0111\u1ecba ph\u01b0\u01a1ng</li> <li>B\u1ea3n \u0111\u1ecba h\u00f3a ti\u1ec1n t\u1ec7: Hi\u1ec3n th\u1ecb gi\u00e1 b\u1eb1ng ti\u1ec1n t\u1ec7 \u0111\u1ecba ph\u01b0\u01a1ng</li> <li>Tu\u00e2n th\u1ee7 ph\u00e1p l\u00fd: \u0110\u00e1p \u1ee9ng y\u00eau c\u1ea7u l\u01b0u tr\u1eef d\u1eef li\u1ec7u khu v\u1ef1c</li> <li>Th\u00edch \u1ee9ng v\u0103n h\u00f3a: H\u00ecnh \u1ea3nh, khuy\u1ebfn m\u00e3i, t\u00ednh n\u0103ng \u0111\u01b0\u1ee3c b\u1ea3n \u0111\u1ecba h\u00f3a</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#toi-uu-hieu-suat","title":"T\u1ed1i \u01afu Hi\u1ec7u Su\u1ea5t","text":"<ul> <li>Gi\u1ea3m \u0111\u1ed9 tr\u1ec5: Ng\u01b0\u1eddi d\u00f9ng k\u1ebft n\u1ed1i \u0111\u1ebfn server g\u1ea7n h\u01a1n v\u1ec1 m\u1eb7t \u0111\u1ecba l\u00fd</li> <li>T\u1ed1i \u01b0u CDN: \u0110\u1ecbnh tuy\u1ebfn \u0111\u1ebfn node ph\u00e2n ph\u1ed1i n\u1ed9i dung g\u1ea7n nh\u1ea5t</li> <li>T\u1ed1i \u01b0u b\u0103ng th\u00f4ng: Gi\u1ea3m traffic li\u00ean l\u1ee5c \u0111\u1ecba</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#uu-iem_2","title":"\u01afu \u0110i\u1ec3m","text":"<ul> <li>\u2705 C\u1ea3i thi\u1ec7n hi\u1ec7u su\u1ea5t: \u0110\u1ed9 tr\u1ec5 th\u1ea5p h\u01a1n th\u00f4ng qua g\u1ea7n g\u0169i \u0111\u1ecba l\u00fd</li> <li>\u2705 Tu\u00e2n th\u1ee7 quy \u0111\u1ecbnh: \u0110\u00e1p \u1ee9ng y\u00eau c\u1ea7u quy \u0111\u1ecbnh khu v\u1ef1c</li> <li>\u2705 N\u00e2ng cao tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng: N\u1ed9i dung v\u00e0 d\u1ecbch v\u1ee5 \u0111\u01b0\u1ee3c b\u1ea3n \u0111\u1ecba h\u00f3a</li> <li>\u2705 Linh ho\u1ea1t th\u1ecb tr\u01b0\u1eddng: Chi\u1ebfn l\u01b0\u1ee3c kh\u00e1c nhau cho t\u1eebng th\u1ecb tr\u01b0\u1eddng \u0111\u1ecba l\u00fd</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#nhuoc-iem_2","title":"Nh\u01b0\u1ee3c \u0110i\u1ec3m","text":"<ul> <li>\u274c Ph\u1ee9c t\u1ea1p: C\u1ea5u h\u00ecnh v\u00e0 b\u1ea3o tr\u00ec ph\u1ee9c t\u1ea1p h\u01a1n</li> <li>\u274c H\u1ea1n ch\u1ebf \u0111\u1ed9 ch\u00ednh x\u00e1c IP: \u0110\u1ecbnh v\u1ecb \u0111\u1ecba l\u00fd kh\u00f4ng lu\u00f4n ch\u00ednh x\u00e1c</li> <li>\u274c Ph\u1ee9c t\u1ea1p VPN: Ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 b\u1ecf qua ph\u00e1t hi\u1ec7n \u0111\u1ecba l\u00fd</li> <li>\u274c Chi ph\u00ed qu\u1ea3n l\u00fd: Nhi\u1ec1u endpoint \u0111\u1ec3 duy tr\u00ec</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#4-latency-based-routing-policy-inh-tuyen-dua-tren-o-tre","title":"4. Latency-Based Routing Policy (\u0110\u1ecbnh Tuy\u1ebfn D\u1ef1a Tr\u00ean \u0110\u1ed9 Tr\u1ec5)","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#inh-nghia_3","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>\u0110\u1ecbnh h\u01b0\u1edbng traffic \u0111\u1ebfn endpoint cung c\u1ea5p \u0111\u1ed9 tr\u1ec5 th\u1ea5p nh\u1ea5t cho ng\u01b0\u1eddi y\u00eau c\u1ea7u, n\u00e2ng cao tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng v\u1edbi th\u1eddi gian ph\u1ea3n h\u1ed3i nhanh h\u01a1n.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#quy-trinh-o-o-tre","title":"Quy Tr\u00ecnh \u0110o \u0110\u1ed9 Tr\u1ec5","text":"<pre><code>Truy v\u1ea5n DNS t\u1eeb v\u1ecb tr\u00ed ng\u01b0\u1eddi d\u00f9ng\n        \u2193\n\u0110o \u0111\u1ed9 tr\u1ec5 \u0111\u1ebfn t\u1ea5t c\u1ea3 endpoint\n        \u2193\n\u251c\u2500\u2500 Endpoint A: 50ms\n\u251c\u2500\u2500 Endpoint B: 120ms\n\u2514\u2500\u2500 Endpoint C: 200ms\n        \u2193\n\u0110\u1ecbnh tuy\u1ebfn \u0111\u1ebfn Endpoint A (\u0110\u1ed9 tr\u1ec5 th\u1ea5p nh\u1ea5t)\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#cach-phat-hien-o-tre-hoat-ong","title":"C\u00e1ch Ph\u00e1t Hi\u1ec7n \u0110\u1ed9 Tr\u1ec5 Ho\u1ea1t \u0110\u1ed9ng","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#o-o-tre-aws-route-53","title":"\u0110o \u0110\u1ed9 Tr\u1ec5 AWS Route 53","text":"<ol> <li>Gi\u00e1m s\u00e1t li\u00ean t\u1ee5c: AWS \u0111o \u0111\u1ed9 tr\u1ec5 t\u1eeb c\u00e1c v\u1ecb tr\u00ed to\u00e0n c\u1ea7u kh\u00e1c nhau</li> <li>D\u1eef li\u1ec7u l\u1ecbch s\u1eed: S\u1eed d\u1ee5ng \u0111o l\u01b0\u1eddng tr\u01b0\u1edbc \u0111\u1ec3 d\u1ef1 \u0111o\u00e1n \u0111\u1ed9 tr\u1ec5 hi\u1ec7n t\u1ea1i</li> <li>C\u1eadp nh\u1eadt th\u1eddi gian th\u1ef1c: \u0110o l\u01b0\u1eddng \u0111\u1ed9 tr\u1ec5 \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt th\u01b0\u1eddng xuy\u00ean</li> <li>Nhi\u1ec1u \u0111i\u1ec3m d\u1eef li\u1ec7u: Xem x\u00e9t \u0111\u1ed9 tr\u1ec5 t\u1eeb khu v\u1ef1c chung c\u1ee7a ng\u01b0\u1eddi y\u00eau c\u1ea7u</li> </ol>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#cau-hinh-nhieu-endpoint","title":"C\u1ea5u H\u00ecnh Nhi\u1ec1u Endpoint","text":"<pre><code>C\u1ea5u h\u00ecnh \u0111\u1ecbnh tuy\u1ebfn \u0111\u1ed9 tr\u1ec5:\n\u251c\u2500\u2500 B\u1ed9 b\u1ea3n ghi 1:\n\u2502   \u251c\u2500\u2500 T\u00ean: api.example.com\n\u2502   \u251c\u2500\u2500 Lo\u1ea1i: A\n\u2502   \u251c\u2500\u2500 Gi\u00e1 tr\u1ecb: 203.0.113.10 (us-east-1)\n\u2502   \u251c\u2500\u2500 Khu v\u1ef1c: us-east-1\n\u2502   \u2514\u2500\u2500 ID thi\u1ebft l\u1eadp: latency-us-east\n\u251c\u2500\u2500 B\u1ed9 b\u1ea3n ghi 2:\n\u2502   \u251c\u2500\u2500 T\u00ean: api.example.com\n\u2502   \u251c\u2500\u2500 Lo\u1ea1i: A\n\u2502   \u251c\u2500\u2500 Gi\u00e1 tr\u1ecb: 203.0.113.20 (eu-west-1)\n\u2502   \u251c\u2500\u2500 Khu v\u1ef1c: eu-west-1\n\u2502   \u2514\u2500\u2500 ID thi\u1ebft l\u1eadp: latency-eu-west\n\u2514\u2500\u2500 B\u1ed9 b\u1ea3n ghi 3:\n    \u251c\u2500\u2500 T\u00ean: api.example.com\n    \u251c\u2500\u2500 Lo\u1ea1i: A\n    \u251c\u2500\u2500 Gi\u00e1 tr\u1ecb: 203.0.113.30 (ap-southeast-1)\n    \u251c\u2500\u2500 Khu v\u1ef1c: ap-southeast-1\n    \u2514\u2500\u2500 ID thi\u1ebft l\u1eadp: latency-ap-southeast\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#truong-hop-su-dung_3","title":"Tr\u01b0\u1eddng H\u1ee3p S\u1eed D\u1ee5ng","text":"<ul> <li>N\u1ec1n t\u1ea3ng game: Gi\u1ea3m thi\u1ec3u lag cho game th\u1eddi gian th\u1ef1c</li> <li>Streaming video: Gi\u1ea3m buffering v\u00e0 c\u1ea3i thi\u1ec7n ch\u1ea5t l\u01b0\u1ee3ng</li> <li>Giao d\u1ecbch t\u00e0i ch\u00ednh: T\u1eebng micro gi\u00e2y \u0111\u1ec1u quan tr\u1ecdng</li> <li>Giao ti\u1ebfp th\u1eddi gian th\u1ef1c: VoIP, \u1ee9ng d\u1ee5ng h\u1ed9i ngh\u1ecb video</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#uu-iem_3","title":"\u01afu \u0110i\u1ec3m","text":"<ul> <li>\u2705 Hi\u1ec7u su\u1ea5t t\u1ed1i \u01b0u: Lu\u00f4n \u0111\u1ecbnh tuy\u1ebfn \u0111\u1ebfn endpoint ho\u1ea1t \u0111\u1ed9ng t\u1ed1t nh\u1ea5t</li> <li>\u2705 Th\u00edch \u1ee9ng \u0111\u1ed9ng: T\u1ef1 \u0111\u1ed9ng \u0111i\u1ec1u ch\u1ec9nh theo \u0111i\u1ec1u ki\u1ec7n m\u1ea1ng</li> <li>\u2705 Tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng: Th\u1eddi gian ph\u1ea3n h\u1ed3i nhanh nh\u1ea5t qu\u00e1n</li> <li>\u2705 T\u1ed1i \u01b0u to\u00e0n c\u1ea7u: Ho\u1ea1t \u0111\u1ed9ng hi\u1ec7u qu\u1ea3 tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c khu v\u1ef1c \u0111\u1ecba l\u00fd</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#nhuoc-iem_3","title":"Nh\u01b0\u1ee3c \u0110i\u1ec3m","text":"<ul> <li>\u274c Ph\u1ee9c t\u1ea1p \u0111o l\u01b0\u1eddng: Ph\u00e1t hi\u1ec7n \u0111\u1ed9 tr\u1ec5 c\u00f3 overhead</li> <li>\u274c Bi\u1ebfn \u0111\u1ed9ng m\u1ea1ng: \u0110i\u1ec1u ki\u1ec7n internet thay \u0111\u1ed5i nhanh ch\u00f3ng</li> <li>\u274c \u0110\u1ed9 chi ti\u1ebft h\u1ea1n ch\u1ebf: C\u00f3 th\u1ec3 kh\u00f4ng ph\u1ea3n \u00e1nh hi\u1ec7u su\u1ea5t \u1ee9ng d\u1ee5ng c\u1ee5 th\u1ec3</li> <li>\u274c T\u00e1c \u0111\u1ed9ng chi ph\u00ed: C\u00f3 th\u1ec3 \u0111\u1ecbnh tuy\u1ebfn \u0111\u1ebfn endpoint \u0111\u1eaft h\u01a1n</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#5-multivalue-answer-routing-policy-inh-tuyen-a-gia-tri","title":"5. Multivalue Answer Routing Policy (\u0110\u1ecbnh Tuy\u1ebfn \u0110a Gi\u00e1 Tr\u1ecb)","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#inh-nghia_4","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Ph\u1ea3n h\u1ed3i truy v\u1ea5n DNS v\u1edbi nhi\u1ec1u \u0111\u1ecba ch\u1ec9 IP, cho ph\u00e9p client l\u1ef1a ch\u1ecdn endpoint. Tuy nhi\u00ean, kh\u00f4ng n\u00ean coi \u0111\u00e2y l\u00e0 thay th\u1ebf cho load balancer.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#su-khac-biet-voi-load-balancing","title":"S\u1ef1 Kh\u00e1c Bi\u1ec7t v\u1edbi Load Balancing","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#phan-hoi-dns-a-gia-tri","title":"Ph\u1ea3n H\u1ed3i DNS \u0110a Gi\u00e1 Tr\u1ecb","text":"<pre><code>Truy v\u1ea5n DNS: api.example.com\n        \u2193\nPh\u1ea3n h\u1ed3i DNS:\n\u251c\u2500\u2500 203.0.113.10\n\u251c\u2500\u2500 203.0.113.20\n\u251c\u2500\u2500 203.0.113.30\n\u2514\u2500\u2500 203.0.113.40\n        \u2193\nClient ch\u1ecdn m\u1ed9t IP (th\u01b0\u1eddng l\u00e0 \u0111\u1ea7u ti\u00ean)\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#vs-load-balancer","title":"vs Load Balancer","text":"<pre><code>C\u00e1ch ti\u1ebfp c\u1eadn Load Balancer:\nTruy v\u1ea5n DNS \u2192 IP Load Balancer duy nh\u1ea5t \u2192 LB ph\u00e2n ph\u1ed1i \u0111\u1ebfn backend\n\nC\u00e1ch ti\u1ebfp c\u1eadn Multivalue:\nTruy v\u1ea5n DNS \u2192 Nhi\u1ec1u IP \u2192 Client k\u1ebft n\u1ed1i tr\u1ef1c ti\u1ebfp \u0111\u1ebfn m\u1ed9t\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#hanh-vi-lua-chon-client","title":"H\u00e0nh Vi L\u1ef1a Ch\u1ecdn Client","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#logic-client-ien-hinh","title":"Logic Client \u0110i\u1ec3n H\u00ecnh","text":"<ol> <li>\u01afu ti\u00ean IP \u0111\u1ea7u ti\u00ean: H\u1ea7u h\u1ebft client s\u1eed d\u1ee5ng IP \u0111\u1ea7u ti\u00ean trong ph\u1ea3n h\u1ed3i</li> <li>H\u00e0nh vi failover: Th\u1eed IP ti\u1ebfp theo n\u1ebfu IP \u0111\u1ea7u ti\u00ean th\u1ea5t b\u1ea1i</li> <li>L\u1ef1a ch\u1ecdn ng\u1eabu nhi\u00ean: M\u1ed9t s\u1ed1 client ch\u1ecdn ng\u1eabu nhi\u00ean</li> <li>H\u00e0nh vi cache: Client cache ph\u1ea3n h\u1ed3i theo TTL</li> </ol>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#vi-du-cau-hinh_1","title":"V\u00ed D\u1ee5 C\u1ea5u H\u00ecnh","text":"<pre><code>C\u1ea5u h\u00ecnh b\u1ed9 b\u1ea3n ghi:\n\u251c\u2500\u2500 T\u00ean: app.example.com\n\u251c\u2500\u2500 Lo\u1ea1i: A\n\u251c\u2500\u2500 Ch\u00ednh s\u00e1ch \u0111\u1ecbnh tuy\u1ebfn: Multivalue Answer\n\u251c\u2500\u2500 Gi\u00e1 tr\u1ecb:\n\u2502   \u251c\u2500\u2500 203.0.113.10 (ID thi\u1ebft l\u1eadp: server-1)\n\u2502   \u251c\u2500\u2500 203.0.113.20 (ID thi\u1ebft l\u1eadp: server-2)\n\u2502   \u251c\u2500\u2500 203.0.113.30 (ID thi\u1ebft l\u1eadp: server-3)\n\u2502   \u2514\u2500\u2500 203.0.113.40 (ID thi\u1ebft l\u1eadp: server-4)\n\u2514\u2500\u2500 Ki\u1ec3m tra s\u1ee9c kh\u1ecfe: Ri\u00eang l\u1ebb cho m\u1ed7i IP\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#uu-iem_4","title":"\u01afu \u0110i\u1ec3m","text":"<ul> <li>\u2705 \u0110\u01a1n gi\u1ea3n: D\u1ec5 c\u1ea5u h\u00ecnh v\u00e0 hi\u1ec3u</li> <li>\u2705 Hi\u1ec7u qu\u1ea3 v\u1ec1 chi ph\u00ed: Kh\u00f4ng y\u00eau c\u1ea7u h\u1ea1 t\u1ea7ng b\u1ed5 sung</li> <li>\u2705 Failover client: D\u1ef1 ph\u00f2ng t\u00edch h\u1ee3p \u1edf c\u1ea5p DNS</li> <li>\u2705 T\u00edch h\u1ee3p ki\u1ec3m tra s\u1ee9c kh\u1ecfe: Lo\u1ea1i b\u1ecf t\u1ef1 \u0111\u1ed9ng endpoint kh\u00f4ng kh\u1ecfe</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#nhuoc-iem_4","title":"Nh\u01b0\u1ee3c \u0110i\u1ec3m","text":"<ul> <li>\u274c Ph\u00e2n ph\u1ed1i kh\u00f4ng \u0111\u1ec1u: Kh\u00f4ng ki\u1ec3m so\u00e1t \u0111\u01b0\u1ee3c vi\u1ec7c ph\u00e2n ph\u1ed1i traffic</li> <li>\u274c Ph\u1ee5 thu\u1ed9c client: H\u00e0nh vi kh\u00e1c nhau theo implementation client</li> <li>\u274c Thu\u1eadt to\u00e1n h\u1ea1n ch\u1ebf: Kh\u00f4ng c\u00f3 c\u00e2n b\u1eb1ng t\u1ea3i tinh vi</li> <li>\u274c \u0110\u1ed9 tr\u1ec5 truy\u1ec1n b\u00e1 DNS: C\u1eadp nh\u1eadt s\u1ee9c kh\u1ecfe ph\u1ee5 thu\u1ed9c v\u00e0o TTL</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#6-weighted-routing-policy-inh-tuyen-co-trong-so","title":"6. Weighted Routing Policy (\u0110\u1ecbnh Tuy\u1ebfn C\u00f3 Tr\u1ecdng S\u1ed1)","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#inh-nghia_5","title":"\u0110\u1ecbnh Ngh\u0129a","text":"<p>Ph\u00e2n ph\u1ed1i traffic qua nhi\u1ec1u endpoint v\u1edbi tr\u1ecdng s\u1ed1 \u0111\u01b0\u1ee3c g\u00e1n, cho ph\u00e9p ph\u00e2n ph\u1ed1i traffic t\u1ef7 l\u1ec7 d\u1ef1a tr\u00ean c\u00e1c tr\u1ecdng s\u1ed1 \u0111\u00f3.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#logic-tinh-toan-trong-so","title":"Logic T\u00ednh To\u00e1n Tr\u1ecdng S\u1ed1","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#phan-phoi-ty-le","title":"Ph\u00e2n Ph\u1ed1i T\u1ef7 L\u1ec7","text":"<pre><code>T\u1ed5ng tr\u1ecdng s\u1ed1 = T\u1ed5ng t\u1ea5t c\u1ea3 tr\u1ecdng s\u1ed1 endpoint\nPh\u1ea7n tr\u0103m c\u00e1 nh\u00e2n = (Tr\u1ecdng s\u1ed1 endpoint / T\u1ed5ng tr\u1ecdng s\u1ed1) \u00d7 100\n\nV\u00ed d\u1ee5:\n\u251c\u2500\u2500 Endpoint A: Tr\u1ecdng s\u1ed1 70 \u2192 70/(70+20+10) = 70%\n\u251c\u2500\u2500 Endpoint B: Tr\u1ecdng s\u1ed1 20 \u2192 20/(70+20+10) = 20%\n\u2514\u2500\u2500 Endpoint C: Tr\u1ecdng s\u1ed1 10 \u2192 10/(70+20+10) = 10%\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#chien-luoc-co-trong-so-nang-cao","title":"Chi\u1ebfn L\u01b0\u1ee3c C\u00f3 Tr\u1ecdng S\u1ed1 N\u00e2ng Cao","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#trien-khai-blue-green","title":"Tri\u1ec3n Khai Blue-Green","text":"<pre><code>Giai \u0111o\u1ea1n 1 (Production hi\u1ec7n t\u1ea1i):\n\u251c\u2500\u2500 M\u00f4i tr\u01b0\u1eddng Blue: Tr\u1ecdng s\u1ed1 100 (100% traffic)\n\u2514\u2500\u2500 M\u00f4i tr\u01b0\u1eddng Green: Tr\u1ecdng s\u1ed1 0 (0% traffic)\n\nGiai \u0111o\u1ea1n 2 (Migration d\u1ea7n d\u1ea7n):\n\u251c\u2500\u2500 M\u00f4i tr\u01b0\u1eddng Blue: Tr\u1ecdng s\u1ed1 80 (80% traffic)\n\u2514\u2500\u2500 M\u00f4i tr\u01b0\u1eddng Green: Tr\u1ecdng s\u1ed1 20 (20% traffic)\n\nGiai \u0111o\u1ea1n 3 (Migration ho\u00e0n to\u00e0n):\n\u251c\u2500\u2500 M\u00f4i tr\u01b0\u1eddng Blue: Tr\u1ecdng s\u1ed1 0 (0% traffic)\n\u2514\u2500\u2500 M\u00f4i tr\u01b0\u1eddng Green: Tr\u1ecdng s\u1ed1 100 (100% traffic)\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#phat-hanh-canary","title":"Ph\u00e1t H\u00e0nh Canary","text":"<pre><code>Chi\u1ebfn l\u01b0\u1ee3c tri\u1ec3n khai Canary:\n\u251c\u2500\u2500 Production (v1.0): Tr\u1ecdng s\u1ed1 95 (95% traffic)\n\u251c\u2500\u2500 Canary (v1.1): Tr\u1ecdng s\u1ed1 5 (5% traffic)\n\u2514\u2500\u2500 Gi\u00e1m s\u00e1t: T\u1ef7 l\u1ec7 l\u1ed7i, metrics hi\u1ec7u su\u1ea5t\n\nN\u1ebfu Canary th\u00e0nh c\u00f4ng:\n\u251c\u2500\u2500 Production (v1.0): Tr\u1ecdng s\u1ed1 80 (80% traffic)\n\u251c\u2500\u2500 Canary (v1.1): Tr\u1ecdng s\u1ed1 20 (20% traffic)\n\u2514\u2500\u2500 Ti\u1ebfp t\u1ee5c t\u0103ng d\u1ea7n\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#truong-hop-su-dung_4","title":"Tr\u01b0\u1eddng H\u1ee3p S\u1eed D\u1ee5ng","text":"<ul> <li>Chi\u1ebfn l\u01b0\u1ee3c tri\u1ec3n khai: Rollout d\u1ea7n d\u1ea7n c\u1ee7a phi\u00ean b\u1ea3n m\u1edbi</li> <li>Gi\u1ea3m thi\u1ec3u r\u1ee7i ro: H\u1ea1n ch\u1ebf exposure c\u1ee7a b\u1ea3n ph\u00e1t h\u00e0nh m\u1edbi</li> <li>Ki\u1ec3m th\u1eed hi\u1ec7u su\u1ea5t: Load testing trong th\u1ebf gi\u1edbi th\u1ef1c</li> <li>Feature flags: K\u00edch ho\u1ea1t t\u00ednh n\u0103ng cho subset ng\u01b0\u1eddi d\u00f9ng</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#uu-iem_5","title":"\u01afu \u0110i\u1ec3m","text":"<ul> <li>\u2705 Ki\u1ec3m so\u00e1t ch\u00ednh x\u00e1c: Ph\u1ea7n tr\u0103m ph\u00e2n ph\u1ed1i traffic ch\u00ednh x\u00e1c</li> <li>\u2705 Linh ho\u1ea1t tri\u1ec3n khai: H\u1ed7 tr\u1ee3 c\u00e1c chi\u1ebfn l\u01b0\u1ee3c tri\u1ec3n khai kh\u00e1c nhau</li> <li>\u2705 Qu\u1ea3n l\u00fd r\u1ee7i ro: Rollout d\u1ea7n d\u1ea7n gi\u1ea3m r\u1ee7i ro tri\u1ec3n khai</li> <li>\u2705 Kh\u1ea3 n\u0103ng ki\u1ec3m th\u1eed: A/B testing v\u00e0 tri\u1ec3n khai canary</li> <li>\u2705 T\u1ed1i \u01b0u t\u00e0i nguy\u00ean: Ph\u00e2n ph\u1ed1i d\u1ef1a tr\u00ean kh\u1ea3 n\u0103ng</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#nhuoc-iem_5","title":"Nh\u01b0\u1ee3c \u0110i\u1ec3m","text":"<ul> <li>\u274c Ph\u1ee9c t\u1ea1p qu\u1ea3n l\u00fd: Y\u00eau c\u1ea7u \u0111i\u1ec1u ch\u1ec9nh tr\u1ecdng s\u1ed1 li\u00ean t\u1ee5c</li> <li>\u274c Truy\u1ec1n b\u00e1 DNS: Thay \u0111\u1ed5i ph\u1ee5 thu\u1ed9c v\u00e0o \u0111\u1ed9 tr\u1ec5 TTL</li> <li>\u274c \u0110\u1ed9 ch\u00ednh x\u00e1c th\u1ed1ng k\u00ea: K\u00edch th\u01b0\u1edbc m\u1eabu nh\u1ecf c\u00f3 th\u1ec3 kh\u00f4ng ph\u1ea3n \u00e1nh tr\u1ecdng s\u1ed1 ch\u00ednh x\u00e1c</li> <li>\u274c Overhead c\u1ea5u h\u00ecnh: Ph\u1ee9c t\u1ea1p h\u01a1n c\u00e1c ch\u00ednh s\u00e1ch \u0111\u1ecbnh tuy\u1ebfn \u0111\u01a1n gi\u1ea3n</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#so-sanh-chinh-sach-inh-tuyen","title":"So S\u00e1nh Ch\u00ednh S\u00e1ch \u0110\u1ecbnh Tuy\u1ebfn","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#ma-tran-quyet-inh","title":"Ma Tr\u1eadn Quy\u1ebft \u0110\u1ecbnh","text":"Tr\u01b0\u1eddng H\u1ee3p S\u1eed D\u1ee5ng Ch\u00ednh S\u00e1ch \u0110\u01b0\u1ee3c \u0110\u1ec1 Xu\u1ea5t Thay Th\u1ebf Endpoint \u0111\u01a1n l\u1ebb Simple N/A T\u00ednh kh\u1ea3 d\u1ee5ng cao Failover Multivalue Hi\u1ec7u su\u1ea5t to\u00e0n c\u1ea7u Latency-based Geolocation B\u1ea3n \u0111\u1ecba h\u00f3a n\u1ed9i dung Geolocation Latency-based Tri\u1ec3n khai d\u1ea7n d\u1ea7n Weighted Multivalue A/B testing Weighted Multivalue D\u1ef1 ph\u00f2ng c\u01a1 b\u1ea3n Multivalue Failover T\u1ed1i \u01b0u chi ph\u00ed Weighted Latency-based"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#ac-iem-hieu-suat","title":"\u0110\u1eb7c \u0110i\u1ec3m Hi\u1ec7u Su\u1ea5t","text":"Ch\u00ednh S\u00e1ch \u0110\u1ed9 Ph\u1ee9c T\u1ea1p Thi\u1ebft L\u1eadp Chi Ph\u00ed Qu\u1ea3n L\u00fd T\u1ed1c \u0110\u1ed9 Failover Ki\u1ec3m So\u00e1t Traffic Simple R\u1ea5t Th\u1ea5p R\u1ea5t Th\u1ea5p N/A Kh\u00f4ng Failover Th\u1ea5p Th\u1ea5p Nhanh Nh\u1ecb ph\u00e2n Geolocation Trung b\u00ecnh Trung b\u00ecnh N/A \u0110\u1ecba l\u00fd Latency-based Trung b\u00ecnh Th\u1ea5p N/A Hi\u1ec7u su\u1ea5t Multivalue Th\u1ea5p Trung b\u00ecnh Trung b\u00ecnh Ph\u1ee5 thu\u1ed9c client Weighted Trung b\u00ecnh Cao N/A Ch\u00ednh x\u00e1c"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#thuc-hanh-tot-nhat","title":"Th\u1ef1c H\u00e0nh T\u1ed1t Nh\u1ea5t","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#huong-dan-chung","title":"H\u01b0\u1edbng D\u1eabn Chung","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#chien-luoc-kiem-tra-suc-khoe","title":"Chi\u1ebfn L\u01b0\u1ee3c Ki\u1ec3m Tra S\u1ee9c Kh\u1ecfe","text":"<ol> <li>Gi\u00e1m s\u00e1t s\u1ee9c kh\u1ecfe \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf: Kh\u00f4ng ch\u1ec9 t\u00ednh kh\u1ea3 d\u1ee5ng server</li> <li>S\u1eed d\u1ee5ng nhi\u1ec1u lo\u1ea1i ki\u1ec3m tra: HTTP, TCP, ki\u1ec3m tra s\u1ee9c kh\u1ecfe t\u00ednh to\u00e1n</li> <li>\u0110\u1eb7t ng\u01b0\u1ee1ng ph\u00f9 h\u1ee3p: C\u00e2n b\u1eb1ng false positive vs t\u1ed1c \u0111\u1ed9 ph\u00e1t hi\u1ec7n</li> <li>\u0110a d\u1ea1ng \u0111\u1ecba l\u00fd: Ki\u1ec3m tra s\u1ee9c kh\u1ecfe t\u1eeb nhi\u1ec1u v\u1ecb tr\u00ed</li> </ol>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#can-nhac-ttl","title":"C\u00e2n Nh\u1eafc TTL","text":"<pre><code>Chi\u1ebfn l\u01b0\u1ee3c TTL theo ch\u00ednh s\u00e1ch:\n\u251c\u2500\u2500 Simple: TTL d\u00e0i (300-3600s) - thay \u0111\u1ed5i \u00edt\n\u251c\u2500\u2500 Failover: TTL trung b\u00ecnh (60-300s) - c\u00e2n b\u1eb1ng t\u1ed1c \u0111\u1ed9 vs t\u1ea3i\n\u251c\u2500\u2500 Geolocation: TTL trung b\u00ecnh (300-900s) - \u0111\u1ecbnh tuy\u1ebfn \u0111\u1ecba l\u00fd \u1ed5n \u0111\u1ecbnh\n\u251c\u2500\u2500 Latency-based: TTL trung b\u00ecnh (60-300s) - th\u00edch \u1ee9ng thay \u0111\u1ed5i m\u1ea1ng\n\u251c\u2500\u2500 Multivalue: TTL ng\u1eafn (30-120s) - c\u1eadp nh\u1eadt s\u1ee9c kh\u1ecfe nhanh\n\u2514\u2500\u2500 Weighted: TTL ng\u1eafn (30-300s) - \u0111i\u1ec1u ch\u1ec9nh th\u01b0\u1eddng xuy\u00ean\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#ket-luan","title":"K\u1ebft Lu\u1eadn","text":"<p>C\u00e1c ch\u00ednh s\u00e1ch \u0111\u1ecbnh tuy\u1ebfn DNS cung c\u1ea5p c\u00f4ng c\u1ee5 m\u1ea1nh m\u1ebd \u0111\u1ec3 qu\u1ea3n l\u00fd ph\u00e2n ph\u1ed1i traffic internet. Vi\u1ec7c ch\u1ecdn ch\u00ednh s\u00e1ch ph\u00f9 h\u1ee3p ph\u1ee5 thu\u1ed9c v\u00e0o y\u00eau c\u1ea7u c\u1ee5 th\u1ec3:</p> <ul> <li>Simple: Cho c\u00e1c t\u00ecnh hu\u1ed1ng \u0111\u01a1n gi\u1ea3n, endpoint \u0111\u01a1n l\u1ebb</li> <li>Failover: Khi t\u00ednh kh\u1ea3 d\u1ee5ng cao l\u00e0 \u01b0u ti\u00ean</li> <li>Geolocation: Cho b\u1ea3n \u0111\u1ecba h\u00f3a n\u1ed9i dung v\u00e0 tu\u00e2n th\u1ee7</li> <li>Latency-based: Khi t\u1ed1i \u01b0u hi\u1ec7u su\u1ea5t l\u00e0 quan tr\u1ecdng</li> <li>Multivalue: Cho d\u1ef1 ph\u00f2ng c\u01a1 b\u1ea3n m\u00e0 kh\u00f4ng c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p load balancer</li> <li>Weighted: Cho ph\u00e2n ph\u1ed1i traffic c\u00f3 ki\u1ec3m so\u00e1t v\u00e0 testing</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/06.InternetTrafficRoutingPolicies-DNSpolicies/#yeu-to-thanh-cong-chinh","title":"Y\u1ebfu T\u1ed1 Th\u00e0nh C\u00f4ng Ch\u00ednh","text":"<ol> <li>Hi\u1ec3u y\u00eau c\u1ea7u c\u1ee7a b\u1ea1n: Nhu c\u1ea7u hi\u1ec7u su\u1ea5t, kh\u1ea3 d\u1ee5ng, tu\u00e2n th\u1ee7</li> <li>L\u1eadp k\u1ebf ho\u1ea1ch gi\u00e1m s\u00e1t: Tri\u1ec3n khai kh\u1ea3 n\u0103ng quan s\u00e1t to\u00e0n di\u1ec7n</li> <li>B\u1eaft \u0111\u1ea7u \u0111\u01a1n gi\u1ea3n: B\u1eaft \u0111\u1ea7u v\u1edbi ch\u00ednh s\u00e1ch c\u01a1 b\u1ea3n, ph\u00e1t tri\u1ec3n theo nhu c\u1ea7u</li> <li>Ki\u1ec3m th\u1eed k\u1ef9 l\u01b0\u1ee1ng: X\u00e1c th\u1ef1c h\u00e0nh vi trong c\u00e1c \u0111i\u1ec1u ki\u1ec7n kh\u00e1c nhau</li> <li>T\u00e0i li\u1ec7u h\u00f3a quy\u1ebft \u0111\u1ecbnh: Duy tr\u00ec t\u00e0i li\u1ec7u r\u00f5 r\u00e0ng v\u1ec1 logic \u0111\u1ecbnh tuy\u1ebfn</li> <li>L\u1eadp k\u1ebf ho\u1ea1ch cho l\u1ed7i: C\u00f3 chi\u1ebfn l\u01b0\u1ee3c fallback v\u00e0 th\u1ee7 t\u1ee5c kh\u00f4i ph\u1ee5c</li> </ol> <p>Blog post \u0111\u01b0\u1ee3c t\u1ea1o: 2025-08-04 23:45:26 UTC | Ng\u01b0\u1eddi d\u00f9ng: lelongc</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/","title":"Quy Tr\u00ecnh Render Website: T\u1eeb HTML \u0110\u1ebfn M\u00e0n H\u00ecnh","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#quy-trinh-render-website-tu-html-en-man-hinh","title":"Quy Tr\u00ecnh Render Website: T\u1eeb HTML \u0110\u1ebfn M\u00e0n H\u00ecnh","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#6-buoc-chinh","title":"6 B\u01b0\u1edbc Ch\u00ednh","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#1-parse-html-dom-tree","title":"1. Parse HTML \u2192 DOM Tree","text":"<p>Browser nh\u1eadn HTML t\u1eeb server v\u00e0 chuy\u1ec3n \u0111\u1ed5i th\u00e0nh c\u00e2y DOM.</p> <p></p><pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;div&gt;&lt;h1&gt;Hello&lt;/h1&gt;&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> \u2192 T\u1ea1o c\u00e2y DOM v\u1edbi c\u00e1c node t\u01b0\u01a1ng \u1ee9ng<p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#2-parse-css-cssom-tree","title":"2. Parse CSS \u2192 CSSOM Tree","text":"<p>CSS \u0111\u01b0\u1ee3c load v\u00e0 parse th\u00e0nh CSSOM (CSS Object Model).</p> <p></p><pre><code>h1 { color: blue; font-size: 24px; }\ndiv { padding: 20px; }\n</code></pre> \u2192 T\u1ea1o c\u00e2y CSSOM v\u1edbi style rules<p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#3-combine-render-tree","title":"3. Combine \u2192 Render Tree","text":"<p>K\u1ebft h\u1ee3p DOM + CSSOM = Render Tree - Lo\u1ea1i b\u1ecf invisible elements (<code>&lt;head&gt;</code>, <code>display: none</code>) - Ch\u1ec9 gi\u1eef c\u00e1c elements hi\u1ec3n th\u1ecb \u0111\u01b0\u1ee3c</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#4-layout-reflow","title":"4. Layout (Reflow)","text":"<p>T\u00ednh to\u00e1n v\u1ecb tr\u00ed v\u00e0 k\u00edch th\u01b0\u1edbc c\u1ee7a t\u1eebng element: - Position (top, left) - Size (width, height) - Box model (margin, padding, border)</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#5-paint","title":"5. Paint","text":"<p>Chuy\u1ec3n render tree th\u00e0nh pixels th\u1ef1c t\u1ebf: - Background colors - Text content - Borders, shadows - Images</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#6-composite-display","title":"6. Composite &amp; Display","text":"<ul> <li>GPU nh\u1eadn pixels</li> <li>Hi\u1ec3n th\u1ecb l\u00ean m\u00e0n h\u00ecnh</li> <li>Composite c\u00e1c layers</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#cau-hoi-phong-van-hay-gap","title":"C\u00e2u H\u1ecfi Ph\u1ecfng V\u1ea5n Hay G\u1eb7p","text":"<p>Q: S\u1ef1 kh\u00e1c bi\u1ec7t <code>display: none</code> vs <code>visibility: hidden</code>? A: <code>display: none</code> lo\u1ea1i kh\u1ecfi render tree, <code>visibility: hidden</code> v\u1eabn chi\u1ebfm kh\u00f4ng gian</p> <p>Q: CSS v\u00e0 JS block rendering nh\u01b0 th\u1ebf n\u00e0o? A: CSS block render tree, JS block DOM parsing</p> <p>Q: Reflow vs Repaint? A: Reflow = t\u00ednh l\u1ea1i layout (\u0111\u1eaft), Repaint = v\u1ebd l\u1ea1i visual (r\u1ebb h\u01a1n)</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/07.BrowsersRenderWebPages/#performance-tips","title":"Performance Tips","text":"<ul> <li>Batch DOM changes</li> <li>D\u00f9ng <code>transform</code> cho animations  </li> <li>Minimize layout-triggering properties</li> <li>Optimize critical rendering path</li> </ul> <p>C\u1eadp nh\u1eadt: 2025-08-05 15:00:43 UTC | lelongc</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/","title":"08.http2","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#http2-cac-tinh-nang-chinh-va-cai-tien-hieu-suat","title":"HTTP/2: C\u00e1c T\u00ednh N\u0103ng Ch\u00ednh v\u00e0 C\u1ea3i Ti\u1ebfn Hi\u1ec7u Su\u1ea5t","text":"<p>C\u1eadp nh\u1eadt: 2025-08-05 15:15:10 UTC | Ng\u01b0\u1eddi d\u00f9ng: lelongc</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#tong-quan","title":"T\u1ed5ng Quan","text":"<p>HTTP/2 mang \u0111\u1ebfn nh\u1eefng c\u1ea3i ti\u1ebfn \u0111\u00e1ng k\u1ec3 so v\u1edbi HTTP/1.1, gi\u1ea3i quy\u1ebft nhi\u1ec1u v\u1ea5n \u0111\u1ec1 hi\u1ec7u su\u1ea5t c\u1ee7a phi\u00ean b\u1ea3n c\u0169. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 5 t\u00ednh n\u0103ng ch\u00ednh c\u1ee7a HTTP/2.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#1-binary-framing-layer","title":"1. Binary Framing Layer","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#khai-niem","title":"Kh\u00e1i Ni\u1ec7m","text":"<p>HTTP/2 m\u00e3 h\u00f3a messages th\u00e0nh \u0111\u1ecbnh d\u1ea1ng binary thay v\u00ec text nh\u01b0 HTTP/1.1.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#cach-hoat-ong","title":"C\u00e1ch Ho\u1ea1t \u0110\u1ed9ng","text":"<pre><code>HTTP/1.1: Text-based\nGET /api/users HTTP/1.1\nHost: example.com\n\nHTTP/2: Binary frames\n[HEADERS frame] [DATA frame] [END_STREAM]\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#loi-ich","title":"L\u1ee3i \u00cdch","text":"<ul> <li>X\u1eed l\u00fd hi\u1ec7u qu\u1ea3 h\u01a1n: Binary parsing nhanh h\u01a1n text parsing</li> <li>Frames nh\u1ecf h\u01a1n: Messages \u0111\u01b0\u1ee3c chia th\u00e0nh units nh\u1ecf</li> <li>\u00cdt l\u1ed7i: Binary format \u00edt prone to parsing errors</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#2-multiplexing","title":"2. Multiplexing","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#van-e-http11","title":"V\u1ea5n \u0110\u1ec1 HTTP/1.1","text":"<pre><code>HTTP/1.1 - Head-of-line blocking:\nRequest 1 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192 Response 1\n              Request 2 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192 Response 2\n                            Request 3 \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2192 Response 3\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#giai-phap-http2","title":"Gi\u1ea3i Ph\u00e1p HTTP/2","text":"<pre><code>HTTP/2 - Multiplexing:\nRequest 1 \u2500\u2500\u2510\nRequest 2 \u2500\u2500\u253c\u2500\u2500\u2192 TCP Connection \u2500\u2500\u253c\u2500\u2500\u2192 Response 1\nRequest 3 \u2500\u2500\u2518                     \u251c\u2500\u2500\u2192 Response 2\n                                   \u2514\u2500\u2500\u2192 Response 3\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#uu-iem","title":"\u01afu \u0110i\u1ec3m","text":"<ul> <li>M\u1ed9t TCP connection: X\u1eed l\u00fd multiple requests</li> <li>No head-of-line blocking: Requests kh\u00f4ng ch\u1eb7n nhau</li> <li>Gi\u1ea3m latency: Responses c\u00f3 th\u1ec3 \u0111\u1ebfn kh\u00f4ng theo th\u1ee9 t\u1ef1</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#3-stream-prioritization","title":"3. Stream Prioritization","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#cach-hoat-ong_1","title":"C\u00e1ch Ho\u1ea1t \u0110\u1ed9ng","text":"<p>Developers c\u00f3 th\u1ec3 set priority cho c\u00e1c requests/streams.</p> <pre><code>// V\u00ed d\u1ee5 priority\nStream 1: CSS file (Priority: High)\nStream 2: JavaScript file (Priority: High)  \nStream 3: Image file (Priority: Low)\nStream 4: Font file (Priority: Medium)\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#implementation","title":"Implementation","text":"<pre><code>Stream Priority Tree:\nRoot\n\u251c\u2500\u2500 Critical CSS (weight: 256)\n\u251c\u2500\u2500 JavaScript (weight: 220)\n\u251c\u2500\u2500 Fonts (weight: 110)\n\u2514\u2500\u2500 Images (weight: 32)\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#loi-ich_1","title":"L\u1ee3i \u00cdch","text":"<ul> <li>Critical resources first: CSS, JS \u0111\u01b0\u1ee3c \u01b0u ti\u00ean</li> <li>Better user experience: Faster page rendering</li> <li>Resource optimization: Bandwidth allocation t\u1ed1i \u01b0u</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#4-server-push","title":"4. Server Push","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#khai-niem_1","title":"Kh\u00e1i Ni\u1ec7m","text":"<p>Server c\u00f3 th\u1ec3 g\u1eedi multiple resources m\u00e0 kh\u00f4ng c\u1ea7n client request.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#http11-vs-http2","title":"HTTP/1.1 vs HTTP/2","text":"<pre><code>HTTP/1.1:\nClient: GET /index.html\nServer: Returns index.html\nClient: (Parses HTML) GET /style.css\nServer: Returns style.css\nClient: GET /script.js\nServer: Returns script.js\n\nHTTP/2 Server Push:\nClient: GET /index.html\nServer: Returns index.html + style.css + script.js (pushed)\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#use-cases","title":"Use Cases","text":"<ul> <li>Critical CSS: Push inline styles</li> <li>JavaScript files: Push required scripts</li> <li>Web fonts: Push font files</li> <li>Images: Push above-the-fold images</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#cach-implement","title":"C\u00e1ch Implement","text":"<pre><code>&lt;!-- Server push hint --&gt;\n&lt;link rel=\"preload\" href=\"/style.css\" as=\"style\"&gt;\n&lt;link rel=\"preload\" href=\"/script.js\" as=\"script\"&gt;\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#5-hpack-header-compression","title":"5. HPACK Header Compression","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#van-e-http11_1","title":"V\u1ea5n \u0110\u1ec1 HTTP/1.1","text":"<pre><code>Request 1:\nGET /api/users\nHost: api.example.com\nUser-Agent: Mozilla/5.0...\nAccept: application/json\nAuthorization: Bearer token123...\n\nRequest 2: \nGET /api/posts  \nHost: api.example.com          \u2190 Duplicate\nUser-Agent: Mozilla/5.0...     \u2190 Duplicate  \nAccept: application/json       \u2190 Duplicate\nAuthorization: Bearer token123... \u2190 Duplicate\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#giai-phap-hpack","title":"Gi\u1ea3i Ph\u00e1p HPACK","text":"<pre><code>Request 1: Full headers (indexed)\n:method: GET (index 2)\n:path: /api/users  \nhost: api.example.com (index 38)\nuser-agent: Mozilla... (index 58)\n\nRequest 2: Reference indices\n:method: 2            \u2190 Reference index 2\n:path: /api/posts     \u2190 Only new value\nhost: 38              \u2190 Reference index 38  \nuser-agent: 58        \u2190 Reference index 58\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#loi-ich_2","title":"L\u1ee3i \u00cdch","text":"<ul> <li>Gi\u1ea3m bandwidth: Headers nh\u1ecf h\u01a1n 85-95%</li> <li>Dynamic table: Th\u01b0\u1eddng xuy\u00ean s\u1eed d\u1ee5ng headers \u0111\u01b0\u1ee3c cache</li> <li>Static table: Common headers c\u00f3 s\u1eb5n indices</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#performance-benefits","title":"Performance Benefits","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#benchmark-comparison","title":"Benchmark Comparison","text":"<pre><code>HTTP/1.1:\n- 6 concurrent connections per domain\n- Head-of-line blocking\n- Header overhead: ~800 bytes/request\n- No server push\n\nHTTP/2:\n- 1 multiplexed connection\n- No blocking\n- Header overhead: ~50 bytes/request (with HPACK)\n- Server push enabled\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#real-world-improvements","title":"Real-world Improvements","text":"<ul> <li>Page load time: 10-30% faster</li> <li>Resource loading: 40-60% improvement</li> <li>Mobile performance: Significant gains on high-latency connections</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#optimization-best-practices","title":"Optimization Best Practices","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#1-stream-prioritization","title":"1. Stream Prioritization","text":"<pre><code>// Critical resources\n&lt;link rel=\"preload\" href=\"critical.css\" as=\"style\"&gt;\n&lt;link rel=\"preload\" href=\"critical.js\" as=\"script\"&gt;\n\n// Non-critical resources  \n&lt;link rel=\"preload\" href=\"analytics.js\" as=\"script\" importance=\"low\"&gt;\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#2-server-push-strategy","title":"2. Server Push Strategy","text":"<pre><code># Nginx HTTP/2 push\nlocation = /index.html {\n    http2_push /css/critical.css;\n    http2_push /js/app.js;\n}\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#3-header-optimization","title":"3. Header Optimization","text":"<pre><code>// Minimize varying headers\n// Use consistent header names\n// Leverage HPACK compression\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#potential-issues","title":"Potential Issues","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#1-tcp-head-of-line-blocking","title":"1. TCP Head-of-line Blocking","text":"<p>D\u00f9 HTTP/2 gi\u1ea3i quy\u1ebft application-layer blocking, TCP-layer v\u1eabn c\u00f3 th\u1ec3 b\u1ecb block.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#2-server-push-overhead","title":"2. Server Push Overhead","text":"<ul> <li>Client c\u00f3 th\u1ec3 \u0111\u00e3 cache resources</li> <li>Waste bandwidth n\u1ebfu push unnecessary files</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#3-implementation-complexity","title":"3. Implementation Complexity","text":"<ul> <li>Requires proper server configuration</li> <li>Need careful stream prioritization</li> <li>HPACK implementation complexity</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#testing-optimization","title":"Testing &amp; Optimization","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#performance-testing-tools","title":"Performance Testing Tools","text":"<pre><code># Test HTTP/2 support\ncurl -I --http2 https://example.com\n\n# Browser DevTools\n# Check Protocol column in Network tab\n\n# Online tools\n# HTTP/2 Test: tools.keycdn.com/http2-test\n</code></pre>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#monitoring-metrics","title":"Monitoring Metrics","text":"<ul> <li>Time to First Byte (TTFB)</li> <li>First Contentful Paint (FCP) </li> <li>Largest Contentful Paint (LCP)</li> <li>Stream prioritization effectiveness</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/08.http2/#ket-luan","title":"K\u1ebft Lu\u1eadn","text":"<p>HTTP/2 mang l\u1ea1i c\u1ea3i ti\u1ebfn \u0111\u00e1ng k\u1ec3:</p> <p>\u2705 \u01afu \u0111i\u1ec3m: - Binary framing efficiency - Multiplexing eliminates blocking - Stream prioritization - Server push optimization - HPACK header compression</p> <p>\u26a0\ufe0f C\u00e2n nh\u1eafc: - V\u1eabn c\u1ea7n testing v\u00e0 optimization - Technical scenarios c\u00f3 th\u1ec3 \u1ea3nh h\u01b0\u1edfng performance - Proper implementation v\u00e0 configuration quan tr\u1ecdng</p> <p>HTTP/2 l\u00e0 b\u01b0\u1edbc ti\u1ebfn quan tr\u1ecdng, nh\u01b0ng developers c\u1ea7n hi\u1ec3u v\u00e0 optimize \u0111\u1ec3 t\u1eadn d\u1ee5ng t\u1ed1i \u0111a benefits.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/09.port-shouldKnow/","title":"09.port shouldKnow","text":"Giao th\u1ee9c / \u1ee8ng d\u1ee5ng C\u1ed5ng (Port) Giao th\u1ee9c (TCP/UDP) M\u00f4 t\u1ea3 ng\u1eafn g\u1ecdn FTP (File Transfer Protocol) 21 TCP Truy\u1ec1n t\u1ec7p d\u1eef li\u1ec7u SSH (Secure Shell) 22 TCP \u0110\u0103ng nh\u1eadp t\u1eeb xa an to\u00e0n Telnet 23 TCP \u0110\u0103ng nh\u1eadp t\u1eeb xa (kh\u00f4ng m\u00e3 h\u00f3a) SMTP (Simple Mail Transfer) 25 TCP G\u1eedi email DNS (Domain Name System) 53 UDP/TCP Ph\u00e2n gi\u1ea3i t\u00ean mi\u1ec1n th\u00e0nh IP DHCP Server 67 UDP M\u00e1y ch\u1ee7 c\u1ea5p ph\u00e1t \u0111\u1ecba ch\u1ec9 IP \u0111\u1ed9ng DHCP Client 68 UDP M\u00e1y kh\u00e1ch nh\u1eadn \u0111\u1ecba ch\u1ec9 IP \u0111\u1ed9ng HTTP (Hypertext Transfer Protocol) 80 TCP Truy c\u1eadp website kh\u00f4ng m\u00e3 h\u00f3a POP3 (Post Office Protocol v3) 110 TCP Nh\u1eadn email (t\u1ea3i v\u1ec1 m\u00e1y kh\u00e1ch) NTP (Network Time Protocol) 123 UDP \u0110\u1ed3ng b\u1ed9 th\u1eddi gian m\u1ea1ng NetBIOS 139 TCP Chia s\u1ebb t\u00e0i nguy\u00ean qua m\u1ea1ng (Windows) IMAP (Internet Message Access) 143 TCP Qu\u1ea3n l\u00fd email tr\u1ef1c ti\u1ebfp tr\u00ean server HTTPS (Hypertext Transfer Protocol Secure) 443 TCP Truy c\u1eadp website c\u00f3 m\u00e3 h\u00f3a SMB (Server Message Block) 445 TCP Chia s\u1ebb file, m\u00e1y in trong m\u1ea1ng (Windows) Oracle DB 1521 TCP K\u1ebft n\u1ed1i c\u01a1 s\u1edf d\u1eef li\u1ec7u Oracle MySQL 3306 TCP K\u1ebft n\u1ed1i c\u01a1 s\u1edf d\u1eef li\u1ec7u MySQL RDP (Remote Desktop Protocol) 3389 TCP K\u1ebft n\u1ed1i m\u00e1y t\u00ednh t\u1eeb xa (Windows) PostgreSQL 5432 TCP K\u1ebft n\u1ed1i c\u01a1 s\u1edf d\u1eef li\u1ec7u PostgreSQL"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/","title":"C\u00e1c Lo\u1ea1i M\u1ea1ng C\u01a1 B\u1ea3n Trong Networking: PAN, LAN, MAN, WAN","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#cac-loai-mang-co-ban-trong-networking-pan-lan-man-wan","title":"C\u00e1c Lo\u1ea1i M\u1ea1ng C\u01a1 B\u1ea3n Trong Networking: PAN, LAN, MAN, WAN","text":"<p>Trong l\u0129nh v\u1ef1c m\u1ea1ng m\u00e1y t\u00ednh (networking), c\u00e1c lo\u1ea1i m\u1ea1ng \u0111\u01b0\u1ee3c ph\u00e2n lo\u1ea1i d\u1ef1a tr\u00ean k\u00edch th\u01b0\u1edbc, ph\u1ea1m vi, v\u00e0 m\u1ee5c \u0111\u00edch s\u1eed d\u1ee5ng. B\u1ed1n lo\u1ea1i m\u1ea1ng ph\u1ed5 bi\u1ebfn nh\u1ea5t l\u00e0: - PAN (Personal Area Network) - LAN (Local Area Network) - MAN (Metropolitan Area Network) - WAN (Wide Area Network)</p> <p>H\u00e3y c\u00f9ng t\u00ecm hi\u1ec3u chi ti\u1ebft v\u1ec1 t\u1eebng lo\u1ea1i m\u1ea1ng n\u00e0y, \u0111\u1eb7c \u0111i\u1ec3m c\u0169ng nh\u01b0 c\u00e1c tr\u01b0\u1eddng h\u1ee3p \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#1-mang-ca-nhan-personal-area-network-pan","title":"1. M\u1ea1ng C\u00e1 Nh\u00e2n (Personal Area Network - PAN)","text":"<p>PAN l\u00e0 lo\u1ea1i m\u1ea1ng nh\u1ecf nh\u1ea5t, th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 k\u1ebft n\u1ed1i c\u00e1c thi\u1ebft b\u1ecb c\u00e1 nh\u00e2n trong ph\u1ea1m vi r\u1ea5t g\u1ea7n (v\u00e0i m\u00e9t), ph\u1ee5c v\u1ee5 m\u1ed9t ng\u01b0\u1eddi d\u00f9ng.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#ac-iem","title":"\u0110\u1eb7c \u0111i\u1ec3m:","text":"<ul> <li>Ph\u1ea1m vi: R\u1ea5t nh\u1ecf, th\u01b0\u1eddng d\u01b0\u1edbi 10 m\u00e9t.</li> <li>Thi\u1ebft b\u1ecb: Smartphone, laptop, \u0111\u1ed3ng h\u1ed3 th\u00f4ng minh, tai nghe Bluetooth,...</li> <li>C\u00f4ng ngh\u1ec7: Bluetooth, USB, ZigBee,\u2026</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#ung-dung","title":"\u1ee8ng d\u1ee5ng:","text":"<ul> <li>K\u1ebft n\u1ed1i \u0111i\u1ec7n tho\u1ea1i v\u1edbi tai nghe Bluetooth \u0111\u1ec3 nghe nh\u1ea1c hay \u0111\u00e0m tho\u1ea1i r\u1ea3nh tay.</li> <li>Chia s\u1ebb d\u1eef li\u1ec7u gi\u1eefa \u0111i\u1ec7n tho\u1ea1i v\u00e0 laptop qua Bluetooth ho\u1eb7c c\u00e1p USB.</li> <li>\u0110\u1ed3ng b\u1ed9 h\u00f3a d\u1eef li\u1ec7u gi\u1eefa c\u00e1c thi\u1ebft b\u1ecb c\u00e1 nh\u00e2n nh\u01b0 \u0111i\u1ec7n tho\u1ea1i, \u0111\u1ed3ng h\u1ed3 th\u00f4ng minh.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#2-mang-cuc-bo-local-area-network-lan","title":"2. M\u1ea1ng C\u1ee5c B\u1ed9 (Local Area Network - LAN)","text":"<p>LAN l\u00e0 m\u1ea1ng c\u1ee5c b\u1ed9, k\u1ebft n\u1ed1i c\u00e1c thi\u1ebft b\u1ecb trong m\u1ed9t khu v\u1ef1c h\u1ea1n ch\u1ebf nh\u01b0 nh\u00e0 \u1edf, v\u0103n ph\u00f2ng, ph\u00f2ng lab ho\u1eb7c m\u1ed9t t\u00f2a nh\u00e0.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#ac-iem_1","title":"\u0110\u1eb7c \u0111i\u1ec3m:","text":"<ul> <li>Ph\u1ea1m vi: T\u1eeb v\u00e0i m\u00e9t \u0111\u1ebfn v\u00e0i tr\u0103m m\u00e9t (ph\u00f2ng, t\u1ea7ng, t\u00f2a nh\u00e0).</li> <li>Thi\u1ebft b\u1ecb: M\u00e1y t\u00ednh \u0111\u1ec3 b\u00e0n, m\u00e1y in, server, switch, router,...</li> <li>C\u00f4ng ngh\u1ec7: Ethernet, Wi-Fi.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#ung-dung_1","title":"\u1ee8ng d\u1ee5ng:","text":"<ul> <li>Chia s\u1ebb m\u00e1y in, file server, ho\u1eb7c c\u00e1c thi\u1ebft b\u1ecb ngo\u1ea1i vi trong v\u0103n ph\u00f2ng.</li> <li>H\u1ed7 tr\u1ee3 truy\u1ec1n th\u00f4ng, h\u1ecdp nh\u00f3m v\u00e0 c\u1ed9ng t\u00e1c n\u1ed9i b\u1ed9 nhanh ch\u00f3ng.</li> <li>Cung c\u1ea5p truy c\u1eadp Internet cho to\u00e0n b\u1ed9 thi\u1ebft b\u1ecb trong nh\u00e0 ho\u1eb7c c\u00f4ng ty nh\u1ecf.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#3-mang-o-thi-metropolitan-area-network-man","title":"3. M\u1ea1ng \u0110\u00f4 Th\u1ecb (Metropolitan Area Network - MAN)","text":"<p>MAN l\u00e0 lo\u1ea1i m\u1ea1ng c\u00f3 ph\u1ea1m vi r\u1ed9ng h\u01a1n LAN, th\u01b0\u1eddng bao ph\u1ee7 m\u1ed9t th\u00e0nh ph\u1ed1 ho\u1eb7c m\u1ed9t khu\u00f4n vi\u00ean l\u1edbn nh\u01b0 tr\u01b0\u1eddng \u0111\u1ea1i h\u1ecdc.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#ac-iem_2","title":"\u0110\u1eb7c \u0111i\u1ec3m:","text":"<ul> <li>Ph\u1ea1m vi: V\u00e0i km \u0111\u1ebfn v\u00e0i ch\u1ee5c km (m\u1ed9t th\u00e0nh ph\u1ed1 ho\u1eb7c khu v\u1ef1c \u0111\u00f4 th\u1ecb).</li> <li>Thi\u1ebft b\u1ecb: Router, switch, h\u1ec7 th\u1ed1ng c\u00e1p quang, thi\u1ebft b\u1ecb truy\u1ec1n d\u1eabn t\u1ed1c \u0111\u1ed9 cao.</li> <li>C\u00f4ng ngh\u1ec7: Fiber, Wireless MAN, Ethernet MAN (Metro Ethernet).</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#ung-dung_2","title":"\u1ee8ng d\u1ee5ng:","text":"<ul> <li>K\u1ebft n\u1ed1i c\u00e1c c\u01a1 s\u1edf, chi nh\u00e1nh c\u1ee7a tr\u01b0\u1eddng \u0111\u1ea1i h\u1ecdc, b\u1ec7nh vi\u1ec7n, doanh nghi\u1ec7p trong m\u1ed9t th\u00e0nh ph\u1ed1.</li> <li>Cung c\u1ea5p Internet t\u1ed1c \u0111\u1ed9 cao cho c\u01b0 d\u00e2n v\u00e0 doanh nghi\u1ec7p trong \u0111\u00f4 th\u1ecb.</li> <li>Li\u00ean k\u1ebft c\u00e1c c\u01a1 quan ch\u00ednh ph\u1ee7, v\u0103n ph\u00f2ng trong c\u00f9ng m\u1ed9t khu v\u1ef1c h\u00e0nh ch\u00ednh.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#4-mang-dien-rong-wide-area-network-wan","title":"4. M\u1ea1ng Di\u1ec7n R\u1ed9ng (Wide Area Network - WAN)","text":"<p>WAN l\u00e0 m\u1ea1ng di\u1ec7n r\u1ed9ng, k\u1ebft n\u1ed1i c\u00e1c khu v\u1ef1c \u0111\u1ecba l\u00fd r\u1ea5t l\u1edbn, c\u00f3 th\u1ec3 l\u00e0 qu\u1ed1c gia, ch\u00e2u l\u1ee5c ho\u1eb7c to\u00e0n c\u1ea7u. Internet ch\u00ednh l\u00e0 m\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh c\u1ee7a WAN.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#ac-iem_3","title":"\u0110\u1eb7c \u0111i\u1ec3m:","text":"<ul> <li>Ph\u1ea1m vi: R\u1ed9ng l\u1edbn, c\u00f3 th\u1ec3 l\u00ean \u0111\u1ebfn h\u00e0ng ng\u00e0n km ho\u1eb7c to\u00e0n c\u1ea7u.</li> <li>Thi\u1ebft b\u1ecb: Router chuy\u00ean d\u1ee5ng, thi\u1ebft b\u1ecb truy\u1ec1n d\u1eabn v\u1ec7 tinh, c\u00e1p quang bi\u1ec3n...</li> <li>C\u00f4ng ngh\u1ec7: MPLS, ATM, Frame Relay, Internet, VPN,...</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#ung-dung_3","title":"\u1ee8ng d\u1ee5ng:","text":"<ul> <li>K\u1ebft n\u1ed1i c\u00e1c chi nh\u00e1nh, v\u0103n ph\u00f2ng c\u1ee7a t\u1eadp \u0111o\u00e0n \u0111a qu\u1ed1c gia \u1edf nhi\u1ec1u qu\u1ed1c gia kh\u00e1c nhau.</li> <li>H\u1ed7 tr\u1ee3 truy\u1ec1n th\u00f4ng, trao \u0111\u1ed5i d\u1eef li\u1ec7u to\u00e0n c\u1ea7u.</li> <li>Cho ph\u00e9p truy c\u1eadp t\u1eeb xa v\u00e0o t\u00e0i nguy\u00ean chung (m\u00e1y ch\u1ee7, \u1ee9ng d\u1ee5ng, d\u1ecbch v\u1ee5 \u0111\u00e1m m\u00e2y\u2026).</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#so-sanh-nhanh","title":"So S\u00e1nh Nhanh","text":"Lo\u1ea1i m\u1ea1ng Ph\u1ea1m vi V\u00ed d\u1ee5 \u1ee9ng d\u1ee5ng PAN V\u00e0i m\u00e9t Tai nghe Bluetooth, \u0111\u1ed3ng b\u1ed9 \u0111i\u1ec7n tho\u1ea1i LAN T\u00f2a nh\u00e0 V\u0103n ph\u00f2ng, nh\u00e0 \u1edf MAN Th\u00e0nh ph\u1ed1 Khu\u00f4n vi\u00ean tr\u01b0\u1eddng \u0111\u1ea1i h\u1ecdc, k\u1ebft n\u1ed1i c\u00f4ng ty trong th\u00e0nh ph\u1ed1 WAN To\u00e0n c\u1ea7u Internet, m\u1ea1ng doanh nghi\u1ec7p \u0111a qu\u1ed1c gia"},{"location":"system-design/00.sys0-pre.md/00.api-web/10.pan-lan-man-wan/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>Vi\u1ec7c hi\u1ec3u r\u00f5 c\u00e1c lo\u1ea1i m\u1ea1ng n\u00e0y gi\u00fap b\u1ea1n l\u1ef1a ch\u1ecdn gi\u1ea3i ph\u00e1p ph\u00f9 h\u1ee3p cho nhu c\u1ea7u c\u00e1 nh\u00e2n, doanh nghi\u1ec7p ho\u1eb7c t\u1ed5 ch\u1ee9c. M\u1ed7i lo\u1ea1i m\u1ea1ng \u0111\u1ec1u c\u00f3 \u01b0u v\u00e0 nh\u01b0\u1ee3c \u0111i\u1ec3m ri\u00eang, ph\u00f9 h\u1ee3p v\u1edbi ph\u1ea1m vi v\u00e0 m\u1ee5c \u0111\u00edch s\u1eed d\u1ee5ng nh\u1ea5t \u0111\u1ecbnh. Trong th\u1eddi \u0111\u1ea1i s\u1ed1 h\u00f3a, m\u1ea1ng m\u00e1y t\u00ednh ng\u00e0y c\u00e0ng tr\u1edf n\u00ean quan tr\u1ecdng, l\u00e0 n\u1ec1n t\u1ea3ng cho m\u1ecdi ho\u1ea1t \u0111\u1ed9ng truy\u1ec1n th\u00f4ng, h\u1ecdc t\u1eadp, l\u00e0m vi\u1ec7c v\u00e0 gi\u1ea3i tr\u00ed.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/","title":"11.js work","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#1-javascript-la-ngon-ngu-thong-dich-interpreted-language","title":"1. JavaScript l\u00e0 ng\u00f4n ng\u1eef th\u00f4ng d\u1ecbch (Interpreted Language)","text":"<p>Kh\u00e1c v\u1edbi m\u1ed9t s\u1ed1 ng\u00f4n ng\u1eef nh\u01b0 C/C++ ph\u1ea3i bi\u00ean d\u1ecbch th\u00e0nh m\u00e3 m\u00e1y tr\u01b0\u1edbc khi ch\u1ea1y, JavaScript \u0111\u01b0\u1ee3c th\u1ef1c thi tr\u1ef1c ti\u1ebfp b\u1edfi tr\u00ecnh duy\u1ec7t web ho\u1eb7c c\u00e1c c\u00f4ng c\u1ee5 nh\u01b0 Node.js. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 b\u1ea1n ch\u1ec9 c\u1ea7n vi\u1ebft m\u00e3 JavaScript, l\u01b0u l\u1ea1i, r\u1ed3i ch\u1ea1y ngay m\u00e0 kh\u00f4ng c\u1ea7n b\u01b0\u1edbc chuy\u1ec3n \u0111\u1ed5i trung gian. V\u00ec th\u1ebf, JavaScript r\u1ea5t linh ho\u1ea1t v\u00e0 c\u00f3 th\u1ec3 ch\u1ea1y tr\u00ean nhi\u1ec1u h\u1ec7 \u0111i\u1ec1u h\u00e0nh, tr\u00ecnh duy\u1ec7t kh\u00e1c nhau.</p> <p>L\u01b0u \u00fd: C\u00e1c tr\u00ecnh duy\u1ec7t hi\u1ec7n \u0111\u1ea1i s\u1eed d\u1ee5ng c\u00f4ng ngh\u1ec7 JIT (Just-In-Time Compilation) \u0111\u1ec3 t\u0103ng t\u1ed1c \u0111\u1ed9 ch\u1ea1y JavaScript l\u00ean r\u1ea5t nhi\u1ec1u.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#2-ham-la-cong-dan-hang-nhat-first-class-citizen","title":"2. H\u00e0m l\u00e0 c\u00f4ng d\u00e2n h\u1ea1ng nh\u1ea5t (First-Class Citizen)","text":"<p>Trong JavaScript, h\u00e0m (function) \u0111\u01b0\u1ee3c \u0111\u1ed1i x\u1eed nh\u01b0 m\u1ed9t gi\u00e1 tr\u1ecb b\u00ecnh th\u01b0\u1eddng: - B\u1ea1n c\u00f3 th\u1ec3 g\u00e1n h\u00e0m cho m\u1ed9t bi\u1ebfn. - Truy\u1ec1n h\u00e0m \u0111\u00f3 l\u00e0m tham s\u1ed1 cho h\u00e0m kh\u00e1c. - M\u1ed9t h\u00e0m c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 m\u1ed9t h\u00e0m kh\u00e1c.</p> <p>\u0110i\u1ec1u n\u00e0y gi\u00fap JavaScript r\u1ea5t m\u1ea1nh khi l\u1eadp tr\u00ecnh theo ki\u1ec3u h\u00e0m (functional programming), d\u1ec5 d\u00e0ng t\u1ea1o ra c\u00e1c \u0111o\u1ea1n m\u00e3 linh ho\u1ea1t, t\u00e1i s\u1eed d\u1ee5ng.</p> <p>V\u00ed d\u1ee5: </p><pre><code>function sayHello() { console.log('Hello!'); }\nlet greet = sayHello;       // G\u00e1n h\u00e0m cho bi\u1ebfn\nfunction run(fn) { fn(); }  // Truy\u1ec1n h\u00e0m l\u00e0m tham s\u1ed1\nrun(greet);                 // K\u1ebft qu\u1ea3: Hello!\n</code></pre><p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#3-kieu-du-lieu-ong-dynamic-typing","title":"3. Ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ed9ng (Dynamic Typing)","text":"<p>B\u1ea1n kh\u00f4ng c\u1ea7n khai b\u00e1o ki\u1ec3u d\u1eef li\u1ec7u cho bi\u1ebfn tr\u01b0\u1edbc khi d\u00f9ng. M\u1ed9t bi\u1ebfn c\u00f3 th\u1ec3 nh\u1eadn m\u1ecdi ki\u1ec3u gi\u00e1 tr\u1ecb v\u00e0 c\u00f3 th\u1ec3 thay \u0111\u1ed5i ki\u1ec3u b\u1ea5t c\u1ee9 l\u00fac n\u00e0o.</p> <p>V\u00ed d\u1ee5: </p><pre><code>let x = 5;        // x l\u00e0 s\u1ed1\nx = \"hello\";      // x gi\u1edd th\u00e0nh chu\u1ed7i\nx = true;         // x th\u00e0nh ki\u1ec3u boolean\n</code></pre> \u0110i\u1ec1u n\u00e0y gi\u00fap code ng\u1eafn g\u1ecdn, nh\u01b0ng c\u0169ng d\u1ec5 g\u00e2y l\u1ed7i n\u1ebfu kh\u00f4ng ki\u1ec3m so\u00e1t k\u1ef9.<p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#4-thuc-thi-phia-client-lap-trinh-bat-ong-bo","title":"4. Th\u1ef1c thi ph\u00eda client &amp; L\u1eadp tr\u00ecnh b\u1ea5t \u0111\u1ed3ng b\u1ed9","text":"<p>JavaScript ch\u1ee7 y\u1ebfu ch\u1ea1y tr\u00ean tr\u00ecnh duy\u1ec7t (client-side), gi\u00fap trang web c\u00f3 th\u1ec3 t\u01b0\u01a1ng t\u00e1c nhanh m\u00e0 kh\u00f4ng ph\u1ea3i g\u1eedi y\u00eau c\u1ea7u l\u00ean server m\u1ecdi l\u00fac.</p> <p>B\u1ea5t \u0111\u1ed3ng b\u1ed9: Nhi\u1ec1u thao t\u00e1c nh\u01b0 \u0111\u1ecdc file, g\u1ecdi API, ch\u1edd d\u1eef li\u1ec7u t\u1eeb m\u1ea1ng\u2026 s\u1ebd kh\u00f4ng l\u00e0m \u201c\u0111\u01a1\u201d giao di\u1ec7n. Thay v\u00e0o \u0111\u00f3, JavaScript d\u00f9ng callback, Promise, async/await \u0111\u1ec3 x\u1eed l\u00fd khi c\u00f3 k\u1ebft qu\u1ea3.</p> <p>V\u00ed d\u1ee5: </p><pre><code>setTimeout(() =&gt; { console.log('Ch\u1ea1y sau 2 gi\u00e2y'); }, 2000);\n// D\u00f2ng n\u00e0y ch\u1ea1y tr\u01b0\u1edbc, sau 2 gi\u00e2y m\u1edbi in ra d\u00f2ng tr\u00ean\n</code></pre><p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#5-lap-trinh-huong-oi-tuong-dua-tren-prototype","title":"5. L\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng d\u1ef1a tr\u00ean prototype","text":"<p>JavaScript kh\u00f4ng s\u1eed d\u1ee5ng class (l\u1edbp) truy\u1ec1n th\u1ed1ng nh\u01b0 Java, C#. Thay v\u00e0o \u0111\u00f3, n\u00f3 d\u00f9ng prototype: - M\u1ed7i \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 th\u1ec3 \u201ck\u1ebf th\u1eeba\u201d t\u1eeb m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c (th\u00f4ng qua prototype). - B\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 t\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng m\u1edbi d\u1ef1a theo c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u00e3 c\u00f3.</p> <p>T\u1eeb phi\u00ean b\u1ea3n ES6, JavaScript c\u0169ng h\u1ed7 tr\u1ee3 c\u00fa ph\u00e1p class cho quen thu\u1ed9c, nh\u01b0ng b\u00ean trong v\u1eabn l\u00e0 prototype.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#6-thu-gom-rac-tu-ong-automatic-garbage-collection","title":"6. Thu gom r\u00e1c t\u1ef1 \u0111\u1ed9ng (Automatic Garbage Collection)","text":"<p>JavaScript t\u1ef1 \u0111\u1ed9ng gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb cho nh\u1eefng bi\u1ebfn/\u0111\u1ed1i t\u01b0\u1ee3ng kh\u00f4ng c\u00f2n s\u1eed d\u1ee5ng n\u1eefa. \u0110i\u1ec1u n\u00e0y gi\u00fap b\u1ea1n kh\u00f4ng ph\u1ea3i lo l\u1eafng nhi\u1ec1u v\u1ec1 qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb, gi\u1ea3m nguy c\u01a1 b\u1ecb \u201cr\u00f2 r\u1ec9 b\u1ed9 nh\u1edb\u201d (memory leak).</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#7-so-sanh-voi-cac-ngon-ngu-khac","title":"7. So s\u00e1nh v\u1edbi c\u00e1c ng\u00f4n ng\u1eef kh\u00e1c","text":"<ul> <li>Python: D\u1ec5 \u0111\u1ecdc, \u0111a n\u0103ng, m\u1ea1nh v\u1ec1 AI, khoa h\u1ecdc d\u1eef li\u1ec7u.</li> <li>Java: C\u1ea5u tr\u00fac ch\u1eb7t ch\u1ebd, m\u1ea1nh m\u1ebd, th\u01b0\u1eddng d\u00f9ng cho \u1ee9ng d\u1ee5ng l\u1edbn.</li> <li>JavaScript: D\u1ec5 h\u1ecdc, ch\u1ea1y tr\u1ef1c ti\u1ebfp tr\u00ean web, c\u1ef1c k\u1ef3 ph\u1ed5 bi\u1ebfn trong ph\u00e1t tri\u1ec3n web front-end.</li> </ul> <p>\u0110i\u1ec3m \u0111\u1eb7c bi\u1ec7t: JavaScript ch\u1ea1y tr\u1ef1c ti\u1ebfp tr\u00ean tr\u00ecnh duy\u1ec7t, kh\u00f4ng c\u1ea7n bi\u00ean d\u1ecbch.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#8-moi-quan-he-voi-typescript","title":"8. M\u1ed1i quan h\u1ec7 v\u1edbi TypeScript","text":"<p>TypeScript l\u00e0 m\u1ed9t phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p c\u1ee7a JavaScript, b\u1ed5 sung t\u00ednh n\u0103ng ki\u1ec3m tra ki\u1ec3u d\u1eef li\u1ec7u (type checking) v\u00e0 m\u1ed9t s\u1ed1 t\u00ednh n\u0103ng kh\u00e1c. - Code JavaScript h\u1ee3p l\u1ec7 c\u0169ng l\u00e0 code TypeScript h\u1ee3p l\u1ec7. - TypeScript gi\u00fap code an to\u00e0n, d\u1ec5 s\u1eeda l\u1ed7i h\u01a1n, \u0111\u1eb7c bi\u1ec7t v\u1edbi d\u1ef1 \u00e1n l\u1edbn.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#9-framework-noi-bat","title":"9. Framework n\u1ed5i b\u1eadt","text":"<ul> <li>React: Linh ho\u1ea1t, nhi\u1ec1u th\u01b0 vi\u1ec7n m\u1edf r\u1ed9ng, m\u1ea1nh v\u1ec1 ph\u00e1t tri\u1ec3n giao di\u1ec7n.</li> <li>Vue: Nh\u1eb9, d\u1ec5 h\u1ecdc, ph\u00f9 h\u1ee3p d\u1ef1 \u00e1n nh\u1ecf \u0111\u1ebfn trung b\u00ecnh.</li> <li>Angular: Quy chu\u1ea9n ch\u1eb7t ch\u1ebd, th\u00edch h\u1ee3p cho \u1ee9ng d\u1ee5ng doanh nghi\u1ec7p l\u1edbn.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/11.js-work/#tom-tat-cho-nguoi-moi-hoc","title":"T\u00f3m t\u1eaft cho ng\u01b0\u1eddi m\u1edbi h\u1ecdc:","text":"<ul> <li>JavaScript l\u00e0 ng\u00f4n ng\u1eef c\u1ef1c k\u1ef3 ph\u1ed5 bi\u1ebfn, d\u1ec5 ti\u1ebfp c\u1eadn cho ng\u01b0\u1eddi m\u1edbi, ch\u1ee7 y\u1ebfu d\u00f9ng l\u1eadp tr\u00ecnh web.</li> <li>Kh\u00f4ng c\u1ea7n bi\u00ean d\u1ecbch, ch\u1ea1y ngay tr\u00ean tr\u00ecnh duy\u1ec7t.</li> <li>T\u1ef1 \u0111\u1ed9ng qu\u1ea3n l\u00fd b\u1ed9 nh\u1edb, h\u1ed7 tr\u1ee3 nhi\u1ec1u phong c\u00e1ch l\u1eadp tr\u00ecnh (h\u00e0m, h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng).</li> <li>C\u00f3 c\u1ed9ng \u0111\u1ed3ng l\u1edbn, nhi\u1ec1u t\u00e0i li\u1ec7u, d\u1ec5 t\u00ecm ki\u1ebfm v\u00e0 h\u1ecdc h\u1ecfi.</li> </ul>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/","title":"RESTful API Design: H\u01b0\u1edbng D\u1eabn Chi Ti\u1ebft V\u1edbi V\u00ed D\u1ee5 Cho Ng\u01b0\u1eddi M\u1edbi","text":""},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#restful-api-design-huong-dan-chi-tiet-voi-vi-du-cho-nguoi-moi","title":"RESTful API Design: H\u01b0\u1edbng D\u1eabn Chi Ti\u1ebft V\u1edbi V\u00ed D\u1ee5 Cho Ng\u01b0\u1eddi M\u1edbi","text":"<p>RESTful API l\u00e0 m\u1ed9t ki\u1ec3u thi\u1ebft k\u1ebf API web ph\u1ed5 bi\u1ebfn, gi\u00fap c\u00e1c \u1ee9ng d\u1ee5ng giao ti\u1ebfp v\u1edbi nhau m\u1ed9t c\u00e1ch chu\u1ea9n m\u1ef1c. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 8 nguy\u00ean t\u1eafc quan tr\u1ecdng v\u1edbi v\u00ed d\u1ee5 c\u1ee5 th\u1ec3:</p> <p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#1-thiet-ke-theo-mo-hinh-domain-domain-model-driven","title":"1. Thi\u1ebft K\u1ebf Theo M\u00f4 H\u00ecnh Domain (Domain Model Driven)","text":"<p>Kh\u00e1i ni\u1ec7m: C\u1ea5u tr\u00fac \u0111\u01b0\u1eddng d\u1eabn API n\u00ean ph\u1ea3n \u00e1nh m\u00f4 h\u00ecnh domain (c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng nghi\u1ec7p v\u1ee5) c\u1ee7a \u1ee9ng d\u1ee5ng.</p> <p>V\u00ed d\u1ee5 th\u1ef1c t\u1ebf: \u1ee8ng d\u1ee5ng qu\u1ea3n l\u00fd th\u01b0 vi\u1ec7n </p><pre><code>Domain model: User (ng\u01b0\u1eddi d\u00f9ng), Book (s\u00e1ch), Author (t\u00e1c gi\u1ea3)\n\n\u2705 \u0110\u00fang:\nGET /users          # L\u1ea5y danh s\u00e1ch ng\u01b0\u1eddi d\u00f9ng\nGET /books          # L\u1ea5y danh s\u00e1ch s\u00e1ch\nGET /authors        # L\u1ea5y danh s\u00e1ch t\u00e1c gi\u1ea3\nGET /users/123/books # L\u1ea5y s\u00e1ch c\u1ee7a user ID 123\n\n\u274c Sai:\nGET /getUserList\nGET /getBookInfo\nGET /showAllAuthors\n</code></pre><p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#2-chon-http-methods-phu-hop","title":"2. Ch\u1ecdn HTTP Methods Ph\u00f9 H\u1ee3p","text":"<p>Kh\u00e1i ni\u1ec7m: S\u1eed d\u1ee5ng \u0111\u00fang c\u00e1c ph\u01b0\u01a1ng th\u1ee9c HTTP c\u01a1 b\u1ea3n. Tr\u00e1nh d\u00f9ng PATCH n\u1ebfu team ch\u01b0a hi\u1ec3u r\u00f5.</p> <p>V\u00ed d\u1ee5 qu\u1ea3n l\u00fd s\u1ea3n ph\u1ea9m: </p><pre><code>\u2705 C\u00e1c methods c\u01a1 b\u1ea3n:\nGET /products          # L\u1ea5y danh s\u00e1ch s\u1ea3n ph\u1ea9m\nPOST /products         # T\u1ea1o s\u1ea3n ph\u1ea9m m\u1edbi\nPUT /products/123      # C\u1eadp nh\u1eadt to\u00e0n b\u1ed9 s\u1ea3n ph\u1ea9m ID 123\nDELETE /products/123   # X\u00f3a s\u1ea3n ph\u1ea9m ID 123\n\n\u26a0\ufe0f PATCH (n\u00e2ng cao):\nPATCH /products/123    # C\u1eadp nh\u1eadt m\u1ed9t ph\u1ea7n s\u1ea3n ph\u1ea9m\nBody: {\"price\": 100}   # Ch\u1ec9 c\u1eadp nh\u1eadt gi\u00e1\n</code></pre><p></p> <p>L\u01b0u \u00fd: PATCH c\u00f3 th\u1ec3 g\u00e2y nh\u1ea7m l\u1eabn v\u00ec c\u1ea7n \u0111\u1ecbnh ngh\u0129a r\u00f5 c\u1eadp nh\u1eadt t\u1eebng ph\u1ea7n nh\u01b0 th\u1ebf n\u00e0o.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#3-trien-khai-idempotence-ung-cach","title":"3. Tri\u1ec3n Khai Idempotence \u0110\u00fang C\u00e1ch","text":"<p>Kh\u00e1i ni\u1ec7m: Idempotent c\u00f3 ngh\u0129a l\u00e0 g\u1ecdi API nhi\u1ec1u l\u1ea7n cho k\u1ebft qu\u1ea3 gi\u1ed1ng nh\u01b0 g\u1ecdi 1 l\u1ea7n.</p> <p>V\u00ed d\u1ee5: </p><pre><code>\u2705 GET l\u00e0 idempotent t\u1ef1 nhi\u00ean:\nGET /users/123  # G\u1ecdi 10 l\u1ea7n v\u1eabn tr\u1ea3 v\u1ec1 th\u00f4ng tin user 123\n\n\u2705 POST c\u1ea7n thi\u1ebft k\u1ebf \u0111\u1ec3 idempotent:\nPOST /orders\nBody: {\n  \"idempotency_key\": \"order_2024_001\", # Kh\u00f3a duy nh\u1ea5t\n  \"product_id\": 123,\n  \"quantity\": 2\n}\n\n# G\u1ecdi l\u1ea7n 1: T\u1ea1o \u0111\u01a1n h\u00e0ng m\u1edbi\n# G\u1ecdi l\u1ea7n 2,3,4...: Tr\u1ea3 v\u1ec1 \u0111\u01a1n h\u00e0ng \u0111\u00e3 t\u1ea1o (kh\u00f4ng t\u1ea1o m\u1edbi)\n</code></pre><p></p> <p>L\u1ee3i \u00edch: Tr\u00e1nh t\u1ea1o tr\u00f9ng d\u1eef li\u1ec7u khi c\u00f3 l\u1ed7i m\u1ea1ng, ng\u01b0\u1eddi d\u00f9ng click nhi\u1ec1u l\u1ea7n.</p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#4-chon-http-status-codes-phu-hop","title":"4. Ch\u1ecdn HTTP Status Codes Ph\u00f9 H\u1ee3p","text":"<p>Kh\u00e1i ni\u1ec7m: Ch\u1ec9 d\u00f9ng m\u1ed9t s\u1ed1 m\u00e3 status c\u01a1 b\u1ea3n \u0111\u1ec3 \u0111\u01a1n gi\u1ea3n h\u00f3a vi\u1ec7c ph\u00e1t tri\u1ec3n.</p> <p>V\u00ed d\u1ee5 \u1ee9ng d\u1ee5ng blog: </p><pre><code>\u2705 C\u00e1c m\u00e3 status c\u01a1 b\u1ea3n:\n200 OK                 # Th\u00e0nh c\u00f4ng\n201 Created           # T\u1ea1o m\u1edbi th\u00e0nh c\u00f4ng\n400 Bad Request       # D\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o sai\n401 Unauthorized      # Ch\u01b0a \u0111\u0103ng nh\u1eadp\n403 Forbidden         # Kh\u00f4ng c\u00f3 quy\u1ec1n\n404 Not Found         # Kh\u00f4ng t\u00ecm th\u1ea5y\n500 Internal Error    # L\u1ed7i server\n\nV\u00ed d\u1ee5:\nGET /posts/999 \u2192 404 (b\u00e0i vi\u1ebft kh\u00f4ng t\u1ed3n t\u1ea1i)\nPOST /posts \u2192 201 (t\u1ea1o b\u00e0i vi\u1ebft th\u00e0nh c\u00f4ng)\nDELETE /posts/123 \u2192 200 (x\u00f3a th\u00e0nh c\u00f4ng)\n</code></pre><p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#5-versioning-quan-ly-phien-ban","title":"5. Versioning - Qu\u1ea3n L\u00fd Phi\u00ean B\u1ea3n","text":"<p>Kh\u00e1i ni\u1ec7m: Thi\u1ebft k\u1ebf c\u00e1ch \u0111\u00e1nh phi\u00ean b\u1ea3n API t\u1eeb \u0111\u1ea7u \u0111\u1ec3 d\u1ec5 n\u00e2ng c\u1ea5p sau n\u00e0y.</p> <p>V\u00ed d\u1ee5 API e-commerce: </p><pre><code>\u2705 Trong URL:\nhttps://api.shop.com/v1/products\nhttps://api.shop.com/v2/products\n\n\u2705 Trong Header:\nGET /products\nHeaders: Accept: application/vnd.shop.v1+json\n\n\u2705 Trong Query Parameter:\nGET /products?version=1\n\nV\u00ed d\u1ee5 th\u1ef1c t\u1ebf:\nv1: S\u1ea3n ph\u1ea9m ch\u1ec9 c\u00f3 t\u00ean, gi\u00e1\nv2: S\u1ea3n ph\u1ea9m c\u00f3 th\u00eam m\u00f4 t\u1ea3, h\u00ecnh \u1ea3nh\nv3: S\u1ea3n ph\u1ea9m c\u00f3 th\u00eam \u0111\u00e1nh gi\u00e1, s\u1ed1 l\u01b0\u1ee3ng t\u1ed3n kho\n</code></pre><p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#6-uong-dan-co-y-nghia-semantic-paths","title":"6. \u0110\u01b0\u1eddng D\u1eabn C\u00f3 \u00dd Ngh\u0129a (Semantic Paths)","text":"<p>Kh\u00e1i ni\u1ec7m: \u0110\u01b0\u1eddng d\u1eabn API ph\u1ea3i d\u1ec5 hi\u1ec3u, c\u00f3 th\u1ec3 \u0111o\u00e1n \u0111\u01b0\u1ee3c ch\u1ee9c n\u0103ng.</p> <p>V\u00ed d\u1ee5 h\u1ec7 th\u1ed1ng qu\u1ea3n l\u00fd tr\u01b0\u1eddng h\u1ecdc: </p><pre><code>\u2705 D\u1ec5 hi\u1ec3u:\nGET /students                    # Danh s\u00e1ch h\u1ecdc sinh\nGET /students/123               # Th\u00f4ng tin h\u1ecdc sinh ID 123\nGET /students/123/courses       # Kh\u00f3a h\u1ecdc c\u1ee7a h\u1ecdc sinh 123\nGET /teachers/456/students      # H\u1ecdc sinh c\u1ee7a gi\u00e1o vi\u00ean 456\n\n\u274c Kh\u00f3 hi\u1ec3u:\nGET /data?type=std\nGET /info/user/123\nGET /fetch_student_course_data\n</code></pre><p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#7-xu-ly-hang-loat-batch-processing","title":"7. X\u1eed L\u00fd H\u00e0ng Lo\u1ea1t (Batch Processing)","text":"<p>Kh\u00e1i ni\u1ec7m: D\u00f9ng t\u1eeb kh\u00f3a <code>batch</code> ho\u1eb7c <code>bulk</code> v\u00e0 \u0111\u1eb7t \u1edf cu\u1ed1i \u0111\u01b0\u1eddng d\u1eabn.</p> <p>V\u00ed d\u1ee5 qu\u1ea3n l\u00fd nh\u00e2n vi\u00ean: </p><pre><code>\u2705 T\u1ea1o nhi\u1ec1u nh\u00e2n vi\u00ean c\u00f9ng l\u00fac:\nPOST /employees/batch\nBody: [\n  {\"name\": \"Nguyen Van A\", \"department\": \"IT\"},\n  {\"name\": \"Tran Thi B\", \"department\": \"HR\"},\n  {\"name\": \"Le Van C\", \"department\": \"Finance\"}\n]\n\n\u2705 X\u00f3a nhi\u1ec1u s\u1ea3n ph\u1ea9m:\nDELETE /products/bulk\nBody: {\"ids\": [123, 456, 789]}\n\n\u2705 C\u1eadp nh\u1eadt gi\u00e1 h\u00e0ng lo\u1ea1t:\nPATCH /products/batch\nBody: [\n  {\"id\": 123, \"price\": 100000},\n  {\"id\": 456, \"price\": 200000}\n]\n</code></pre><p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#8-ngon-ngu-truy-van-query-language","title":"8. Ng\u00f4n Ng\u1eef Truy V\u1ea5n (Query Language)","text":"<p>Kh\u00e1i ni\u1ec7m: Thi\u1ebft k\u1ebf h\u1ec7 th\u1ed1ng query params \u0111\u1ec3 API linh ho\u1ea1t h\u01a1n.</p> <p>V\u00ed d\u1ee5 API s\u1ea3n ph\u1ea9m e-commerce: </p><pre><code>\u2705 Ph\u00e2n trang (Pagination):\nGET /products?page=2&amp;limit=20  # Trang 2, m\u1ed7i trang 20 s\u1ea3n ph\u1ea9m\n\n\u2705 S\u1eafp x\u1ebfp (Sorting):\nGET /products?sort=price       # S\u1eafp x\u1ebfp theo gi\u00e1 t\u0103ng d\u1ea7n\nGET /products?sort=-price      # S\u1eafp x\u1ebfp theo gi\u00e1 gi\u1ea3m d\u1ea7n\nGET /products?sort=name,price  # S\u1eafp x\u1ebfp theo t\u00ean, r\u1ed3i theo gi\u00e1\n\n\u2705 L\u1ecdc (Filtering):\nGET /products?category=laptop&amp;price_min=10000000\nGET /products?in_stock=true&amp;brand=apple\nGET /products?search=macbook\n\n\u2705 Ch\u1ecdn fields:\nGET /products?fields=id,name,price  # Ch\u1ec9 tr\u1ea3 v\u1ec1 id, name, price\n\nV\u00ed d\u1ee5 k\u1ebft h\u1ee3p:\nGET /products?category=phone&amp;price_max=20000000&amp;sort=-price&amp;page=1&amp;limit=10\n# L\u1ea5y 10 \u0111i\u1ec7n tho\u1ea1i gi\u00e1 d\u01b0\u1edbi 20 tri\u1ec7u, s\u1eafp x\u1ebfp t\u1eeb cao xu\u1ed1ng th\u1ea5p, trang \u0111\u1ea7u\n</code></pre><p></p>"},{"location":"system-design/00.sys0-pre.md/00.api-web/12.8tip-restFullApi/#tom-tat-cho-nguoi-moi","title":"T\u00f3m T\u1eaft Cho Ng\u01b0\u1eddi M\u1edbi:","text":"<ol> <li>\u0110\u1eb7t t\u00ean theo \u0111\u1ed1i t\u01b0\u1ee3ng nghi\u1ec7p v\u1ee5 (users, products, orders...)</li> <li>D\u00f9ng HTTP methods c\u01a1 b\u1ea3n (GET, POST, PUT, DELETE)</li> <li>Thi\u1ebft k\u1ebf \u0111\u1ec3 g\u1ecdi nhi\u1ec1u l\u1ea7n kh\u00f4ng \u1ea3nh h\u01b0\u1edfng (idempotent)</li> <li>D\u00f9ng m\u00e3 tr\u1ea1ng th\u00e1i HTTP chu\u1ea9n (200, 404, 500...)</li> <li>C\u00f3 phi\u00ean b\u1ea3n t\u1eeb \u0111\u1ea7u (v1, v2...)</li> <li>\u0110\u01b0\u1eddng d\u1eabn d\u1ec5 hi\u1ec3u (/users/123/orders)</li> <li>X\u1eed l\u00fd h\u00e0ng lo\u1ea1t v\u1edbi /batch ho\u1eb7c /bulk</li> <li>H\u1ed7 tr\u1ee3 t\u00ecm ki\u1ebfm, s\u1eafp x\u1ebfp, ph\u00e2n trang qua query params</li> </ol> <p>V\u00ed d\u1ee5 API ho\u00e0n ch\u1ec9nh cho blog: </p><pre><code>GET /v1/posts?category=tech&amp;sort=-created_at&amp;page=1&amp;limit=10\nPOST /v1/posts/batch\nPUT /v1/posts/123\nDELETE /v1/posts/bulk\n</code></pre><p></p> <p>Nh\u1eefng nguy\u00ean t\u1eafc n\u00e0y gi\u00fap API d\u1ec5 s\u1eed d\u1ee5ng, d\u1ec5 b\u1ea3o tr\u00ec v\u00e0 m\u1edf r\u1ed9ng!</p>"},{"location":"system-design/03.Educative.io%20-%20Deep%20Dive%20into%20System%20Design%20Interview%20Skill%20Path%202023-8/Readme/","title":"Readme","text":"<p>remember extract all the same part at one </p>"},{"location":"testing/roadmap/","title":"CI/CD Testing &amp; Quality Complete Learning Roadmap","text":""},{"location":"testing/roadmap/#cicd-testing-quality-complete-learning-roadmap","title":"CI/CD Testing &amp; Quality Complete Learning Roadmap","text":""},{"location":"testing/roadmap/#muc-tieu-master-testing-quality-trong-cicd-pipeline-trong-8-10-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master Testing &amp; Quality trong CI/CD pipeline trong 8-10 th\u00e1ng","text":"<p>C\u00f4ng c\u1ee5 t\u1eadp trung ph\u1ed5 bi\u1ebfn nh\u1ea5t:</p> <ul> <li>Unit Testing: Jest (JavaScript), PyTest (Python), JUnit (Java), Go Test</li> <li>Integration Testing: Cypress, Selenium, Postman/Newman</li> <li>Static Analysis: ESLint, SonarQube, flake8, golangci-lint</li> <li>Security Testing: OWASP ZAP, Snyk, Trivy</li> </ul>"},{"location":"testing/roadmap/#giai-oan-1-testing-fundamentals-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: TESTING FUNDAMENTALS (Th\u00e1ng 1-2)","text":""},{"location":"testing/roadmap/#week-1-testing-principles-strategy","title":"Week 1: Testing Principles &amp; Strategy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Software testing pyramid explained\"</li> <li>[ ] \"Unit vs integration vs e2e testing\"</li> <li>[ ] \"Test-driven development TDD tutorial\"</li> <li>[ ] \"Behavior-driven development BDD\"</li> <li>[ ] \"Testing strategy for microservices\"</li> <li>[ ] \"CI/CD testing best practices\"</li> <li>[ ] \"Test automation frameworks comparison\"</li> <li>[ ] \"Testing metrics code coverage mutation testing\"</li> </ul> <p>Testing Concepts:</p> <pre><code>Testing Pyramid:\n\u251c\u2500\u2500 E2E Tests (Few, Slow, Expensive)\n\u251c\u2500\u2500 Integration Tests (Some, Medium)\n\u2514\u2500\u2500 Unit Tests (Many, Fast, Cheap)\n\nTest Types:\n\u251c\u2500\u2500 Functional Testing\n\u251c\u2500\u2500 Non-functional Testing (Performance, Security)\n\u251c\u2500\u2500 Regression Testing\n\u2514\u2500\u2500 Smoke Testing\n</code></pre>"},{"location":"testing/roadmap/#week-2-test-planning-documentation","title":"Week 2: Test Planning &amp; Documentation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Test plan template software testing\"</li> <li>[ ] \"Test case design techniques\"</li> <li>[ ] \"Testing documentation best practices\"</li> <li>[ ] \"Requirement traceability matrix\"</li> <li>[ ] \"Test data management strategies\"</li> <li>[ ] \"Test environment setup\"</li> <li>[ ] \"Bug tracking and reporting\"</li> <li>[ ] \"Testing workflow in agile scrum\"</li> </ul> <p>Test Documentation Templates:</p> <pre><code># Test Case Template\n\n## TC001: User Login Functionality\n\n**Preconditions**: User exists in system\n**Steps**:\n\n1. Navigate to login page\n2. Enter valid credentials\n3. Click login button\n   **Expected Result**: User redirected to dashboard\n   **Actual Result**:\n   **Status**: Pass/Fail\n</code></pre>"},{"location":"testing/roadmap/#week-3-version-control-for-testing","title":"Week 3: Version Control for Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git workflow for test automation\"</li> <li>[ ] \"Test code organization best practices\"</li> <li>[ ] \"Branching strategies for testing teams\"</li> <li>[ ] \"Code review process for test code\"</li> <li>[ ] \"Test artifacts version control\"</li> <li>[ ] \"Test data version control\"</li> <li>[ ] \"Shared test libraries management\"</li> <li>[ ] \"Testing in feature branch workflow\"</li> </ul>"},{"location":"testing/roadmap/#week-4-cicd-testing-integration","title":"Week 4: CI/CD Testing Integration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Testing in CI/CD pipeline design\"</li> <li>[ ] \"Parallel test execution strategies\"</li> <li>[ ] \"Test reporting in CI/CD\"</li> <li>[ ] \"Failed test handling automation\"</li> <li>[ ] \"Test result notifications\"</li> <li>[ ] \"Quality gates in CI/CD\"</li> <li>[ ] \"Test environment provisioning\"</li> <li>[ ] \"Database testing in CI/CD\"</li> </ul>"},{"location":"testing/roadmap/#giai-oan-2-unit-testing-mastery-thang-3-4","title":"\ud83e\uddea GIAI \u0110O\u1ea0N 2: UNIT TESTING MASTERY (Th\u00e1ng 3-4)","text":""},{"location":"testing/roadmap/#week-5-javascript-unit-testing-voi-jest","title":"Week 5: JavaScript Unit Testing v\u1edbi Jest","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jest testing framework setup tutorial\"</li> <li>[ ] \"Jest unit test examples JavaScript\"</li> <li>[ ] \"Jest mocking functions and modules\"</li> <li>[ ] \"Jest async testing promises callbacks\"</li> <li>[ ] \"Jest snapshot testing React components\"</li> <li>[ ] \"Jest code coverage configuration\"</li> <li>[ ] \"Jest test debugging techniques\"</li> <li>[ ] \"Jest custom matchers and helpers\"</li> </ul> <p>Jest Examples:</p> <pre><code>// Basic Jest test\ndescribe(\"Calculator\", () =&gt; {\n  test(\"should add two numbers correctly\", () =&gt; {\n    expect(add(2, 3)).toBe(5);\n  });\n\n  test(\"should handle async operations\", async () =&gt; {\n    const result = await fetchUserData(123);\n    expect(result).toHaveProperty(\"name\");\n    expect(result.name).toBe(\"John Doe\");\n  });\n\n  test(\"should mock external dependencies\", () =&gt; {\n    const mockCallback = jest.fn();\n    forEach([0, 1], mockCallback);\n    expect(mockCallback.mock.calls.length).toBe(2);\n  });\n});\n\n// React component testing\nimport { render, screen, fireEvent } from \"@testing-library/react\";\nimport Button from \"./Button\";\n\ntest(\"renders button with correct text\", () =&gt; {\n  render(&lt;Button&gt;Click me&lt;/Button&gt;);\n  expect(screen.getByText(\"Click me\")).toBeInTheDocument();\n});\n\ntest(\"calls onClick handler when clicked\", () =&gt; {\n  const handleClick = jest.fn();\n  render(&lt;Button onClick={handleClick}&gt;Click me&lt;/Button&gt;);\n  fireEvent.click(screen.getByText(\"Click me\"));\n  expect(handleClick).toHaveBeenCalledTimes(1);\n});\n</code></pre>"},{"location":"testing/roadmap/#week-6-python-unit-testing-voi-pytest","title":"Week 6: Python Unit Testing v\u1edbi PyTest","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"PyTest tutorial Python unit testing\"</li> <li>[ ] \"PyTest fixtures and setup teardown\"</li> <li>[ ] \"PyTest parametrized testing\"</li> <li>[ ] \"PyTest mocking with unittest.mock\"</li> <li>[ ] \"PyTest plugins and extensions\"</li> <li>[ ] \"PyTest configuration pytest.ini\"</li> <li>[ ] \"PyTest coverage reporting\"</li> <li>[ ] \"PyTest parallel execution xdist\"</li> </ul> <p>PyTest Examples:</p> <pre><code># Basic PyTest tests\nimport pytest\nfrom myapp import Calculator, DatabaseService\n\nclass TestCalculator:\n    def test_add_positive_numbers(self):\n        calc = Calculator()\n        result = calc.add(2, 3)\n        assert result == 5\n\n    def test_divide_by_zero_raises_exception(self):\n        calc = Calculator()\n        with pytest.raises(ZeroDivisionError):\n            calc.divide(10, 0)\n\n    @pytest.mark.parametrize(\"a,b,expected\", [\n        (2, 3, 5),\n        (-1, 1, 0),\n        (0, 0, 0),\n    ])\n    def test_add_multiple_cases(self, a, b, expected):\n        calc = Calculator()\n        assert calc.add(a, b) == expected\n\n# Fixtures for setup/teardown\n@pytest.fixture\ndef database():\n    db = DatabaseService()\n    db.connect()\n    yield db\n    db.disconnect()\n\ndef test_user_creation(database):\n    user = database.create_user(\"john@example.com\")\n    assert user.email == \"john@example.com\"\n    assert user.id is not None\n\n# Mocking external dependencies\nfrom unittest.mock import patch, MagicMock\n\n@patch('myapp.external_api_call')\ndef test_api_integration(mock_api):\n    mock_api.return_value = {\"status\": \"success\"}\n    result = process_api_data()\n    assert result[\"processed\"] is True\n    mock_api.assert_called_once()\n</code></pre>"},{"location":"testing/roadmap/#week-7-java-unit-testing-voi-junit","title":"Week 7: Java Unit Testing v\u1edbi JUnit","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"JUnit 5 tutorial Java unit testing\"</li> <li>[ ] \"JUnit annotations @Test @BeforeEach @AfterEach\"</li> <li>[ ] \"JUnit assertions and assumptions\"</li> <li>[ ] \"JUnit parameterized tests\"</li> <li>[ ] \"Mockito mocking framework Java\"</li> <li>[ ] \"JUnit test lifecycle and extensions\"</li> <li>[ ] \"JUnit integration with Maven Gradle\"</li> <li>[ ] \"JUnit code coverage JaCoCo\"</li> </ul> <p>JUnit Examples:</p> <pre><code>// JUnit 5 test examples\nimport org.junit.jupiter.api.*;\nimport org.mockito.*;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass CalculatorTest {\n    private Calculator calculator;\n\n    @BeforeEach\n    void setUp() {\n        calculator = new Calculator();\n    }\n\n    @Test\n    @DisplayName(\"Should add two positive numbers\")\n    void shouldAddTwoPositiveNumbers() {\n        int result = calculator.add(2, 3);\n        assertEquals(5, result, \"2 + 3 should equal 5\");\n    }\n\n    @ParameterizedTest\n    @ValueSource(ints = {1, 2, 3, 4, 5})\n    void shouldReturnTrueForPositiveNumbers(int number) {\n        assertTrue(calculator.isPositive(number));\n    }\n\n    @Test\n    void shouldThrowExceptionWhenDividingByZero() {\n        ArithmeticException exception = assertThrows(\n            ArithmeticException.class,\n            () -&gt; calculator.divide(10, 0)\n        );\n        assertEquals(\"Cannot divide by zero\", exception.getMessage());\n    }\n}\n\n// Mockito example\nclass UserServiceTest {\n    @Mock\n    private UserRepository userRepository;\n\n    @InjectMocks\n    private UserService userService;\n\n    @Test\n    void shouldCreateUserSuccessfully() {\n        // Given\n        User user = new User(\"john@example.com\");\n        when(userRepository.save(any(User.class))).thenReturn(user);\n\n        // When\n        User createdUser = userService.createUser(\"john@example.com\");\n\n        // Then\n        assertNotNull(createdUser);\n        assertEquals(\"john@example.com\", createdUser.getEmail());\n        verify(userRepository).save(any(User.class));\n    }\n}\n</code></pre>"},{"location":"testing/roadmap/#week-8-go-unit-testing","title":"Week 8: Go Unit Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Go testing package tutorial\"</li> <li>[ ] \"Go unit test examples table-driven tests\"</li> <li>[ ] \"Go test coverage go test cover\"</li> <li>[ ] \"Go mocking interfaces testify\"</li> <li>[ ] \"Go benchmark testing performance\"</li> <li>[ ] \"Go test fixtures setup teardown\"</li> <li>[ ] \"Go integration testing database\"</li> <li>[ ] \"Go test organization best practices\"</li> </ul> <p>Go Testing Examples:</p> <pre><code>// Basic Go tests\npackage calculator\n\nimport (\n    \"testing\"\n    \"github.com/stretchr/testify/assert\"\n)\n\nfunc TestAdd(t *testing.T) {\n    result := Add(2, 3)\n    assert.Equal(t, 5, result, \"Add(2, 3) should equal 5\")\n}\n\n// Table-driven tests\nfunc TestAddTableDriven(t *testing.T) {\n    tests := []struct {\n        name     string\n        a, b     int\n        expected int\n    }{\n        {\"positive numbers\", 2, 3, 5},\n        {\"negative numbers\", -1, -1, -2},\n        {\"zero values\", 0, 0, 0},\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            result := Add(tt.a, tt.b)\n            assert.Equal(t, tt.expected, result)\n        })\n    }\n}\n\n// Benchmark test\nfunc BenchmarkAdd(b *testing.B) {\n    for i := 0; i &lt; b.N; i++ {\n        Add(2, 3)\n    }\n}\n\n// Mock example with testify\ntype UserRepository interface {\n    GetUser(id int) (*User, error)\n}\n\nfunc TestUserService_GetUser(t *testing.T) {\n    mockRepo := new(MockUserRepository)\n    service := NewUserService(mockRepo)\n\n    expectedUser := &amp;User{ID: 1, Name: \"John\"}\n    mockRepo.On(\"GetUser\", 1).Return(expectedUser, nil)\n\n    user, err := service.GetUser(1)\n\n    assert.NoError(t, err)\n    assert.Equal(t, expectedUser, user)\n    mockRepo.AssertExpectations(t)\n}\n</code></pre>"},{"location":"testing/roadmap/#giai-oan-3-integration-testing-thang-5-6","title":"\ud83d\udd17 GIAI \u0110O\u1ea0N 3: INTEGRATION TESTING (Th\u00e1ng 5-6)","text":""},{"location":"testing/roadmap/#week-9-api-testing-voi-postmannewman","title":"Week 9: API Testing v\u1edbi Postman/Newman","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Postman API testing tutorial\"</li> <li>[ ] \"Newman command line Postman runner\"</li> <li>[ ] \"Postman collection automation\"</li> <li>[ ] \"API testing best practices REST GraphQL\"</li> <li>[ ] \"Postman environment variables\"</li> <li>[ ] \"Postman pre-request scripts tests\"</li> <li>[ ] \"API contract testing Postman\"</li> <li>[ ] \"Postman CI/CD integration\"</li> </ul> <p>Postman/Newman Examples:</p> <pre><code>// Postman test script examples\npm.test(\"Status code is 200\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Response has required fields\", function () {\n  const responseJson = pm.response.json();\n  pm.expect(responseJson).to.have.property(\"id\");\n  pm.expect(responseJson).to.have.property(\"name\");\n  pm.expect(responseJson).to.have.property(\"email\");\n});\n\npm.test(\"Response time is less than 200ms\", function () {\n  pm.expect(pm.response.responseTime).to.be.below(200);\n});\n\n// Pre-request script for authentication\nconst loginRequest = {\n  url: pm.environment.get(\"baseUrl\") + \"/auth/login\",\n  method: \"POST\",\n  header: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: {\n    mode: \"raw\",\n    raw: JSON.stringify({\n      username: pm.environment.get(\"username\"),\n      password: pm.environment.get(\"password\"),\n    }),\n  },\n};\n\npm.sendRequest(loginRequest, function (err, response) {\n  if (response.json().token) {\n    pm.environment.set(\"authToken\", response.json().token);\n  }\n});\n</code></pre> <pre><code># Newman CLI commands\nnewman run collection.json -e environment.json\nnewman run collection.json --reporters cli,json --reporter-json-export results.json\nnewman run collection.json --iteration-count 10 --delay-request 1000\n</code></pre>"},{"location":"testing/roadmap/#week-10-e2e-testing-voi-cypress","title":"Week 10: E2E Testing v\u1edbi Cypress","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Cypress end-to-end testing tutorial\"</li> <li>[ ] \"Cypress installation and setup\"</li> <li>[ ] \"Cypress commands and assertions\"</li> <li>[ ] \"Cypress page object model pattern\"</li> <li>[ ] \"Cypress API testing vs UI testing\"</li> <li>[ ] \"Cypress fixtures and test data\"</li> <li>[ ] \"Cypress CI/CD integration\"</li> <li>[ ] \"Cypress best practices anti-patterns\"</li> </ul> <p>Cypress Examples:</p> <pre><code>// Basic Cypress test\ndescribe(\"User Authentication\", () =&gt; {\n  beforeEach(() =&gt; {\n    cy.visit(\"/login\");\n  });\n\n  it(\"should login with valid credentials\", () =&gt; {\n    cy.get(\"[data-cy=username]\").type(\"john@example.com\");\n    cy.get(\"[data-cy=password]\").type(\"password123\");\n    cy.get(\"[data-cy=login-button]\").click();\n\n    cy.url().should(\"include\", \"/dashboard\");\n    cy.get(\"[data-cy=welcome-message]\").should(\"contain\", \"Welcome, John\");\n  });\n\n  it(\"should show error for invalid credentials\", () =&gt; {\n    cy.get(\"[data-cy=username]\").type(\"invalid@example.com\");\n    cy.get(\"[data-cy=password]\").type(\"wrongpassword\");\n    cy.get(\"[data-cy=login-button]\").click();\n\n    cy.get(\"[data-cy=error-message]\")\n      .should(\"be.visible\")\n      .and(\"contain\", \"Invalid credentials\");\n  });\n});\n\n// API testing with Cypress\ndescribe(\"API Tests\", () =&gt; {\n  it(\"should create a new user\", () =&gt; {\n    cy.request({\n      method: \"POST\",\n      url: \"/api/users\",\n      body: {\n        name: \"John Doe\",\n        email: \"john@example.com\",\n      },\n    }).then((response) =&gt; {\n      expect(response.status).to.eq(201);\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body.name).to.eq(\"John Doe\");\n    });\n  });\n});\n\n// Page Object Model\nclass LoginPage {\n  visit() {\n    cy.visit(\"/login\");\n  }\n\n  fillUsername(username) {\n    cy.get(\"[data-cy=username]\").type(username);\n    return this;\n  }\n\n  fillPassword(password) {\n    cy.get(\"[data-cy=password]\").type(password);\n    return this;\n  }\n\n  submit() {\n    cy.get(\"[data-cy=login-button]\").click();\n    return this;\n  }\n}\n\nexport default LoginPage;\n</code></pre>"},{"location":"testing/roadmap/#week-11-database-integration-testing","title":"Week 11: Database Integration Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Database testing strategies unit integration\"</li> <li>[ ] \"Test database setup and teardown\"</li> <li>[ ] \"Database transaction testing\"</li> <li>[ ] \"Test data generation and seeding\"</li> <li>[ ] \"Database migration testing\"</li> <li>[ ] \"SQL query testing techniques\"</li> <li>[ ] \"ORM testing Entity Framework Hibernate\"</li> <li>[ ] \"Database performance testing\"</li> </ul> <p>Database Testing Examples:</p> <pre><code># Python database testing with pytest\nimport pytest\nfrom sqlalchemy import create_engine\nfrom myapp import create_app, db, User\n\n@pytest.fixture(scope=\"session\")\ndef test_database():\n    engine = create_engine(\"sqlite:///:memory:\")\n    db.create_all(bind=engine)\n    yield engine\n    db.drop_all(bind=engine)\n\n@pytest.fixture\ndef app_context(test_database):\n    app = create_app(testing=True)\n    with app.app_context():\n        yield app\n\ndef test_user_creation(app_context):\n    user = User(name=\"John\", email=\"john@example.com\")\n    db.session.add(user)\n    db.session.commit()\n\n    retrieved_user = User.query.filter_by(email=\"john@example.com\").first()\n    assert retrieved_user is not None\n    assert retrieved_user.name == \"John\"\n\ndef test_user_query_performance(app_context):\n    # Create test data\n    users = [User(name=f\"User{i}\", email=f\"user{i}@example.com\")\n             for i in range(1000)]\n    db.session.add_all(users)\n    db.session.commit()\n\n    # Test query performance\n    import time\n    start_time = time.time()\n    result = User.query.filter(User.name.like(\"User%\")).all()\n    end_time = time.time()\n\n    assert len(result) == 1000\n    assert (end_time - start_time) &lt; 1.0  # Should complete in less than 1 second\n</code></pre>"},{"location":"testing/roadmap/#week-12-container-integration-testing","title":"Week 12: Container Integration Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Docker container testing strategies\"</li> <li>[ ] \"Testcontainers library Java Python\"</li> <li>[ ] \"Docker Compose testing environment\"</li> <li>[ ] \"Container health checks testing\"</li> <li>[ ] \"Multi-container integration testing\"</li> <li>[ ] \"Database container testing\"</li> <li>[ ] \"Microservices integration testing\"</li> <li>[ ] \"Container network testing\"</li> </ul> <p>Container Testing Examples:</p> <pre><code># Testcontainers Python example\nfrom testcontainers.postgres import PostgresContainer\nimport psycopg2\n\ndef test_postgres_container():\n    with PostgresContainer(\"postgres:13\") as postgres:\n        connection_url = postgres.get_connection_url()\n        conn = psycopg2.connect(connection_url)\n        cursor = conn.cursor()\n\n        cursor.execute(\"CREATE TABLE users (id SERIAL PRIMARY KEY, name VARCHAR(50))\")\n        cursor.execute(\"INSERT INTO users (name) VALUES ('John')\")\n        cursor.execute(\"SELECT * FROM users\")\n\n        result = cursor.fetchone()\n        assert result[1] == \"John\"\n\n        conn.close()\n</code></pre> <pre><code>// Testcontainers Java example\n@Test\npublic void testRedisContainer() {\n    try (GenericContainer&lt;?&gt; redis = new GenericContainer&lt;&gt;(\"redis:6-alpine\")\n            .withExposedPorts(6379)) {\n\n        redis.start();\n\n        String address = redis.getHost();\n        Integer port = redis.getFirstMappedPort();\n\n        Jedis jedis = new Jedis(address, port);\n        jedis.set(\"key\", \"value\");\n\n        assertEquals(\"value\", jedis.get(\"key\"));\n        jedis.close();\n    }\n}\n</code></pre>"},{"location":"testing/roadmap/#giai-oan-4-static-analysis-code-quality-thang-7-8","title":"\ud83d\udcca GIAI \u0110O\u1ea0N 4: STATIC ANALYSIS &amp; CODE QUALITY (Th\u00e1ng 7-8)","text":""},{"location":"testing/roadmap/#week-13-eslint-cho-javascripttypescript","title":"Week 13: ESLint cho JavaScript/TypeScript","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"ESLint setup configuration tutorial\"</li> <li>[ ] \"ESLint rules and plugins\"</li> <li>[ ] \"ESLint TypeScript integration\"</li> <li>[ ] \"ESLint React Vue.js rules\"</li> <li>[ ] \"ESLint custom rules development\"</li> <li>[ ] \"ESLint CI/CD integration\"</li> <li>[ ] \"ESLint IDE integration VSCode\"</li> <li>[ ] \"ESLint performance optimization\"</li> </ul> <p>ESLint Configuration:</p> <pre><code>// .eslintrc.json\n{\n  \"env\": {\n    \"browser\": true,\n    \"es2021\": true,\n    \"node\": true,\n    \"jest\": true\n  },\n  \"extends\": [\n    \"eslint:recommended\",\n    \"@typescript-eslint/recommended\",\n    \"plugin:react/recommended\",\n    \"plugin:react-hooks/recommended\"\n  ],\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    },\n    \"ecmaVersion\": 12,\n    \"sourceType\": \"module\"\n  },\n  \"plugins\": [\"react\", \"@typescript-eslint\", \"react-hooks\"],\n  \"rules\": {\n    \"indent\": [\"error\", 2],\n    \"quotes\": [\"error\", \"single\"],\n    \"semi\": [\"error\", \"always\"],\n    \"no-unused-vars\": \"error\",\n    \"no-console\": \"warn\",\n    \"react/prop-types\": \"off\",\n    \"@typescript-eslint/explicit-function-return-type\": \"warn\"\n  },\n  \"settings\": {\n    \"react\": {\n      \"version\": \"detect\"\n    }\n  }\n}\n</code></pre> <pre><code># ESLint CLI commands\neslint src/\neslint src/ --fix\neslint src/ --format json --output-file eslint-results.json\neslint src/ --cache --cache-location .eslintcache\n</code></pre>"},{"location":"testing/roadmap/#week-14-sonarqube-quality-analysis","title":"Week 14: SonarQube Quality Analysis","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"SonarQube installation and setup\"</li> <li>[ ] \"SonarQube quality gates configuration\"</li> <li>[ ] \"SonarQube rules and profiles\"</li> <li>[ ] \"SonarQube CI/CD integration\"</li> <li>[ ] \"SonarQube code coverage integration\"</li> <li>[ ] \"SonarQube security hotspots\"</li> <li>[ ] \"SonarQube technical debt measurement\"</li> <li>[ ] \"SonarQube custom rules development\"</li> </ul> <p>SonarQube Configuration:</p> <pre><code># sonar-project.properties\nsonar.projectKey=my-project\nsonar.projectName=My Project\nsonar.projectVersion=1.0\nsonar.sources=src\nsonar.tests=tests\nsonar.language=js\nsonar.sourceEncoding=UTF-8\n\n# Code coverage\nsonar.javascript.lcov.reportPaths=coverage/lcov.info\nsonar.coverage.exclusions=**/*test*/**,**/*spec*/**\n\n# Quality gate conditions\nsonar.qualitygate.wait=true\n</code></pre> <pre><code># SonarScanner commands\nsonar-scanner \\\n  -Dsonar.projectKey=my-project \\\n  -Dsonar.sources=. \\\n  -Dsonar.host.url=http://localhost:9000 \\\n  -Dsonar.login=admin \\\n  -Dsonar.password=admin\n</code></pre>"},{"location":"testing/roadmap/#week-15-multi-language-static-analysis","title":"Week 15: Multi-Language Static Analysis","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"flake8 Python code analysis\"</li> <li>[ ] \"golangci-lint Go static analysis\"</li> <li>[ ] \"Checkstyle Java code analysis\"</li> <li>[ ] \"RuboCop Ruby static analysis\"</li> <li>[ ] \"SwiftLint iOS static analysis\"</li> <li>[ ] \"Multi-language linting strategies\"</li> <li>[ ] \"Static analysis CI/CD integration\"</li> <li>[ ] \"Code quality metrics comparison\"</li> </ul> <p>Multi-Language Examples:</p> <pre><code># Python flake8 configuration (.flake8)\n[flake8]\nmax-line-length = 88\nextend-ignore = E203, E266, E501, W503\nmax-complexity = 10\nselect = B,C,E,F,W,T4\nexclude =\n    .git,\n    __pycache__,\n    .pytest_cache,\n    .venv,\n    venv/,\n    migrations/\n</code></pre> <pre><code># golangci-lint configuration (.golangci.yml)\nrun:\n  timeout: 5m\n\nlinters:\n  enable:\n    - gosec\n    - gocyclo\n    - goconst\n    - goimports\n    - golint\n    - govet\n    - ineffassign\n    - misspell\n    - staticcheck\n\nlinters-settings:\n  gocyclo:\n    min-complexity: 10\n  goconst:\n    min-len: 3\n    min-occurrences: 3\n</code></pre>"},{"location":"testing/roadmap/#week-16-code-quality-automation","title":"Week 16: Code Quality Automation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Automated code review tools\"</li> <li>[ ] \"Quality gates CI/CD implementation\"</li> <li>[ ] \"Code quality metrics dashboards\"</li> <li>[ ] \"Technical debt tracking\"</li> <li>[ ] \"Code complexity analysis\"</li> <li>[ ] \"Dependency vulnerability scanning\"</li> <li>[ ] \"License compliance checking\"</li> <li>[ ] \"Code duplication detection\"</li> </ul>"},{"location":"testing/roadmap/#giai-oan-5-security-testing-thang-9-10","title":"\ud83d\udd12 GIAI \u0110O\u1ea0N 5: SECURITY TESTING (Th\u00e1ng 9-10)","text":""},{"location":"testing/roadmap/#week-17-18-owasp-zap-security-testing","title":"Week 17-18: OWASP ZAP Security Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"OWASP ZAP installation tutorial\"</li> <li>[ ] \"OWASP ZAP automated security scanning\"</li> <li>[ ] \"OWASP ZAP API security testing\"</li> <li>[ ] \"OWASP ZAP CI/CD integration\"</li> <li>[ ] \"OWASP ZAP custom rules and scripts\"</li> <li>[ ] \"OWASP ZAP authentication testing\"</li> <li>[ ] \"OWASP ZAP reporting and analysis\"</li> <li>[ ] \"OWASP ZAP vs other security tools\"</li> </ul> <p>OWASP ZAP Examples:</p> <pre><code># ZAP CLI commands\nzap-baseline.py -t http://example.com\nzap-full-scan.py -t http://example.com -r zap-report.html\nzap-api-scan.py -t http://example.com/openapi.json -f openapi\n\n# ZAP with authentication\nzap-baseline.py -t http://example.com \\\n  -z \"-configfile /path/to/config.conf\" \\\n  -r zap-report.html \\\n  -J zap-report.json\n</code></pre> <pre><code># ZAP Python API\nfrom zapv2 import ZAPv2\n\nzap = ZAPv2(proxies={'http': 'http://127.0.0.1:8080',\n                     'https': 'http://127.0.0.1:8080'})\n\n# Spider the target\ntarget = 'http://example.com'\nscanid = zap.spider.scan(target)\n\n# Wait for spider to complete\nwhile int(zap.spider.status(scanid)) &lt; 100:\n    time.sleep(1)\n\n# Run active scan\nscanid = zap.ascan.scan(target)\nwhile int(zap.ascan.status(scanid)) &lt; 100:\n    time.sleep(5)\n\n# Get results\nalerts = zap.core.alerts()\nfor alert in alerts:\n    print(f\"Alert: {alert['alert']}, Risk: {alert['risk']}\")\n</code></pre>"},{"location":"testing/roadmap/#week-19-20-application-security-testing","title":"Week 19-20: Application Security Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"SAST static application security testing\"</li> <li>[ ] \"DAST dynamic application security testing\"</li> <li>[ ] \"Container security scanning Trivy Snyk\"</li> <li>[ ] \"Dependency vulnerability scanning\"</li> <li>[ ] \"API security testing best practices\"</li> <li>[ ] \"SQL injection testing automation\"</li> <li>[ ] \"XSS cross-site scripting testing\"</li> <li>[ ] \"Authentication and authorization testing\"</li> </ul> <p>Security Testing Examples:</p> <pre><code># Trivy container scanning\ntrivy image nginx:latest\ntrivy fs --security-checks vuln,config .\ntrivy repo https://github.com/example/repo\n\n# Snyk vulnerability scanning\nsnyk test\nsnyk monitor\nsnyk test --docker nginx:latest\nsnyk iac test terraform/\n\n# OWASP Dependency Check\ndependency-check.sh --project \"My Project\" --scan ./src --format ALL\n</code></pre> <pre><code># GitHub Actions security scanning workflow\nname: Security Scan\non: [push, pull_request]\n\njobs:\n  security:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Run Trivy vulnerability scanner\n        uses: aquasecurity/trivy-action@master\n        with:\n          scan-type: \"fs\"\n          scan-ref: \".\"\n          format: \"sarif\"\n          output: \"trivy-results.sarif\"\n\n      - name: Upload Trivy scan results\n        uses: github/codeql-action/upload-sarif@v2\n        with:\n          sarif_file: \"trivy-results.sarif\"\n\n      - name: Run OWASP ZAP Baseline Scan\n        uses: zaproxy/action-baseline@v0.7.0\n        with:\n          target: \"http://testphp.vulnweb.com/\"\n</code></pre>"},{"location":"testing/roadmap/#hands-on-projects","title":"\ud83d\udcda HANDS-ON PROJECTS","text":""},{"location":"testing/roadmap/#unit-testing-projects","title":"\ud83e\uddea Unit Testing Projects","text":"<ol> <li> <p>Test-Driven Development Project</p> </li> <li> <p>Build calculator with TDD approach</p> </li> <li>Complete test coverage</li> <li>Multiple testing frameworks</li> <li> <p>Search: \"TDD calculator project tutorial\"</p> </li> <li> <p>Microservices Testing Suite</p> </li> <li> <p>Unit tests for each service</p> </li> <li>Mock external dependencies</li> <li>Performance benchmarks</li> <li> <p>Search: \"microservices unit testing patterns\"</p> </li> <li> <p>Legacy Code Testing</p> </li> <li>Add tests to existing codebase</li> <li>Refactoring with test coverage</li> <li>Characterization testing</li> <li>Search: \"legacy code testing strategies\"</li> </ol>"},{"location":"testing/roadmap/#integration-testing-projects","title":"\ud83d\udd17 Integration Testing Projects","text":"<ol> <li> <p>E2E Testing Framework</p> </li> <li> <p>Complete user journey testing</p> </li> <li>Cross-browser testing</li> <li>Mobile responsive testing</li> <li> <p>Search: \"e2e testing framework setup\"</p> </li> <li> <p>API Testing Suite</p> </li> <li> <p>REST API comprehensive testing</p> </li> <li>GraphQL API testing</li> <li>Performance and load testing</li> <li> <p>Search: \"API testing automation framework\"</p> </li> <li> <p>Database Integration Testing</p> </li> <li>Multi-database testing</li> <li>Data migration testing</li> <li>Performance optimization</li> <li>Search: \"database integration testing patterns\"</li> </ol>"},{"location":"testing/roadmap/#quality-analysis-projects","title":"\ud83d\udcca Quality Analysis Projects","text":"<ol> <li> <p>Code Quality Dashboard</p> </li> <li> <p>SonarQube integration</p> </li> <li>Quality metrics tracking</li> <li>Technical debt monitoring</li> <li> <p>Search: \"code quality dashboard setup\"</p> </li> <li> <p>Multi-Language Linting</p> </li> <li>Consistent code style</li> <li>Custom rule development</li> <li>CI/CD integration</li> <li>Search: \"multi-language code linting setup\"</li> </ol>"},{"location":"testing/roadmap/#security-testing-projects","title":"\ud83d\udd12 Security Testing Projects","text":"<ol> <li> <p>Security Testing Pipeline</p> </li> <li> <p>SAST and DAST integration</p> </li> <li>Container security scanning</li> <li>Vulnerability management</li> <li> <p>Search: \"DevSecOps security pipeline\"</p> </li> <li> <p>API Security Testing</p> </li> <li>Authentication testing</li> <li>Authorization testing</li> <li>Input validation testing</li> <li>Search: \"API security testing automation\"</li> </ol>"},{"location":"testing/roadmap/#skill-mastery-checklist","title":"\ud83d\udccb SKILL MASTERY CHECKLIST","text":""},{"location":"testing/roadmap/#unit-testing-expertise","title":"Unit Testing Expertise","text":"<ul> <li>[ ] Write comprehensive unit tests</li> <li>[ ] Implement effective mocking strategies</li> <li>[ ] Achieve optimal code coverage</li> <li>[ ] Debug and troubleshoot tests</li> <li>[ ] Optimize test performance</li> <li>[ ] Mentor team on testing practices</li> </ul>"},{"location":"testing/roadmap/#integration-testing-skills","title":"Integration Testing Skills","text":"<ul> <li>[ ] Design integration test strategies</li> <li>[ ] Implement E2E testing frameworks</li> <li>[ ] Configure test environments</li> <li>[ ] Handle test data management</li> <li>[ ] Parallel test execution</li> <li>[ ] Cross-browser and mobile testing</li> </ul>"},{"location":"testing/roadmap/#quality-analysis-mastery","title":"Quality Analysis Mastery","text":"<ul> <li>[ ] Configure static analysis tools</li> <li>[ ] Create custom linting rules</li> <li>[ ] Implement quality gates</li> <li>[ ] Monitor technical debt</li> <li>[ ] Generate quality reports</li> <li>[ ] Optimize analysis performance</li> </ul>"},{"location":"testing/roadmap/#security-testing-skills","title":"Security Testing Skills","text":"<ul> <li>[ ] Implement security testing pipelines</li> <li>[ ] Configure vulnerability scanning</li> <li>[ ] Analyze security reports</li> <li>[ ] Remediate security issues</li> <li>[ ] Create security test cases</li> <li>[ ] Monitor security metrics</li> </ul>"},{"location":"testing/roadmap/#certifications-resources","title":"\ud83c\udf93 CERTIFICATIONS &amp; RESOURCES","text":""},{"location":"testing/roadmap/#testing-certifications","title":"Testing Certifications","text":"<ul> <li>[ ] ISTQB Foundation Level</li> <li>[ ] ISTQB Test Automation Engineer</li> <li>[ ] Certified Secure Software Lifecycle Professional (CSSLP)</li> <li>[ ] AWS Certified DevOps Engineer</li> </ul>"},{"location":"testing/roadmap/#essential-books","title":"Essential Books","text":"<ul> <li>\"Test Driven Development: By Example\" - Kent Beck</li> <li>\"Growing Object-Oriented Software, Guided by Tests\" - Freeman &amp; Pryce</li> <li>\"The Art of Software Testing\" - Glenford Myers</li> <li>\"Continuous Delivery\" - Jez Humble</li> </ul>"},{"location":"testing/roadmap/#online-learning","title":"Online Learning","text":"<ul> <li>\"JavaScript Testing Introduction\" - Kent C. Dodds</li> <li>\"Test Automation University\" - Applitools</li> <li>\"Cypress Testing Framework\" - Udemy</li> <li>\"Security Testing\" - OWASP Learning</li> </ul>"},{"location":"testing/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"testing/roadmap/#morning-testing-20-mins","title":"Morning Testing (20 mins)","text":"<ul> <li>[ ] Review test results from overnight builds</li> <li>[ ] Check code coverage reports</li> <li>[ ] Validate quality gate status</li> <li>[ ] Plan testing tasks for the day</li> </ul>"},{"location":"testing/roadmap/#active-testing-work-60-90-mins","title":"Active Testing Work (60-90 mins)","text":"<ul> <li>[ ] Write and refactor tests</li> <li>[ ] Analyze failing tests</li> <li>[ ] Improve test automation</li> <li>[ ] Review security scan results</li> </ul>"},{"location":"testing/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document testing findings</li> <li>[ ] Update test documentation</li> <li>[ ] Plan improvements</li> <li>[ ] Review testing metrics</li> </ul>"},{"location":"testing/roadmap/#mastery-milestones","title":"\ud83c\udfaf MASTERY MILESTONES","text":""},{"location":"testing/roadmap/#month-2-testing-foundation","title":"Month 2: Testing Foundation","text":"<ul> <li>[ ] Understand testing principles</li> <li>[ ] Basic unit test writing</li> <li>[ ] Simple integration tests</li> <li>[ ] Code quality awareness</li> </ul>"},{"location":"testing/roadmap/#month-4-intermediate-testing","title":"Month 4: Intermediate Testing","text":"<ul> <li>[ ] Advanced testing patterns</li> <li>[ ] Test automation frameworks</li> <li>[ ] Quality analysis tools</li> <li>[ ] Basic security testing</li> </ul>"},{"location":"testing/roadmap/#month-6-advanced-testing","title":"Month 6: Advanced Testing","text":"<ul> <li>[ ] Complex testing scenarios</li> <li>[ ] Performance optimization</li> <li>[ ] Custom tooling development</li> <li>[ ] Security testing expertise</li> </ul>"},{"location":"testing/roadmap/#month-8-testing-leadership","title":"Month 8: Testing Leadership","text":"<ul> <li>[ ] Testing strategy design</li> <li>[ ] Team mentoring</li> <li>[ ] Tool evaluation</li> <li>[ ] Process improvement</li> </ul>"},{"location":"testing/roadmap/#month-10-testing-mastery","title":"Month 10: Testing Mastery","text":"<ul> <li>[ ] Industry best practices</li> <li>[ ] Innovation and research</li> <li>[ ] Thought leadership</li> <li>[ ] Community contributions</li> </ul> <p>Testing Philosophy: \"Quality is not an act, it is a habit. Test early, test often, test everything!\"</p>"},{"location":"testing/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"testing/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ul> <li>[ ] Install testing frameworks and tools</li> <li>[ ] Set up basic test project</li> <li>[ ] Configure CI/CD pipeline</li> <li>[ ] Run first automated tests</li> </ul>"},{"location":"testing/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic testing tutorials</li> <li>[ ] Write first comprehensive test suite</li> <li>[ ] Set up quality analysis tools</li> <li>[ ] Implement basic security scanning</li> </ul>"},{"location":"testing/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Production-ready testing pipeline</li> <li>[ ] Comprehensive test coverage</li> <li>[ ] Quality gates implementation</li> <li>[ ] Security testing integration</li> </ul> <p>Remember: Good testing is not about finding bugs, it's about preventing them and ensuring quality throughout the development lifecycle!</p>"}]}
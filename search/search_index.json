{"config":{"lang":["vi"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to DraDoc","text":"<p>c\u00e1c file li\u00ean quan devops ,aws t\u00f9m lum , ch\u1ee9a c\u00e1c file ch\u1ee7 y\u1ebfu do copilot t\u1ea1o ra theo roadmap ph\u00eda d\u01b0\u1edbi  m\u1ee5c \u0111\u00edch \u0111\u1ec3 b\u1ea3n th\u00e2n h\u1ecdc , m\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 tham kh\u1ea3o  https://roadmap.sh/r/devsecops-88a05https://roadmap.sh/r/devsecops-88a05   ## L\u01b0u \u00fd t\u00ean t\u1ea3i extension office viewer ho\u1eb7c v\u00f4 web \u0111\u1ec3 xem theo m\u1ee5c l\u1ee5c \u0111\u1ecbnh d\u1ea1ng md cho \u0111\u1eb9p m\u1eaft , v\u00ec file r\u1ea5t d\u00e0i </p>"},{"location":"cicd/roadmap/","title":"CI/CD Complete Learning Roadmap - GitHub Actions, GitLab CI, Jenkins","text":""},{"location":"cicd/roadmap/#muc-tieu-master-cicd-voi-3-platform-chinh-trong-8-10-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master CI/CD v\u1edbi 3 platform ch\u00ednh trong 8-10 th\u00e1ng","text":""},{"location":"cicd/roadmap/#giai-oan-1-cicd-foundation-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: CI/CD FOUNDATION (Th\u00e1ng 1-2)","text":""},{"location":"cicd/roadmap/#week-1-cicd-fundamentals","title":"Week 1: CI/CD Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"What is CI/CD continuous integration deployment\"</li> <li>[ ] \"CI/CD pipeline benefits software development\"</li> <li>[ ] \"DevOps CI/CD workflow explained\"</li> <li>[ ] \"Continuous integration vs continuous deployment\"</li> <li>[ ] \"CI/CD tools comparison GitHub GitLab Jenkins\"</li> <li>[ ] \"Build automation testing deployment pipeline\"</li> <li>[ ] \"Version control integration CI/CD\"</li> <li>[ ] \"CI/CD best practices principles\"</li> </ul> <p>Concepts \u0111\u1ec3 hi\u1ec3u:</p> <ul> <li>[ ] Build \u2192 Test \u2192 Deploy cycle</li> <li>[ ] Automated testing in CI/CD</li> <li>[ ] Infrastructure as Code (IaC)</li> <li>[ ] Configuration management</li> <li>[ ] Environment promotion (dev \u2192 staging \u2192 production)</li> </ul>"},{"location":"cicd/roadmap/#week-2-version-control-branching-strategies","title":"Week 2: Version Control &amp; Branching Strategies","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git branching strategies for CI/CD\"</li> <li>[ ] \"GitFlow vs GitHub Flow vs GitLab Flow\"</li> <li>[ ] \"Feature branch workflow CI/CD\"</li> <li>[ ] \"Trunk-based development continuous integration\"</li> <li>[ ] \"Pull request merge request workflow\"</li> <li>[ ] \"Branch protection rules CI/CD\"</li> <li>[ ] \"Semantic versioning in CI/CD pipelines\"</li> <li>[ ] \"Git hooks for CI/CD automation\"</li> </ul> <p>Branching Models Practice:</p> <pre><code># GitFlow model\ngit flow init\ngit flow feature start new-feature\ngit flow feature finish new-feature\n\n# GitHub Flow\ngit checkout -b feature/new-feature\ngit push -u origin feature/new-feature\n# Create Pull Request\n\n# GitLab Flow\ngit checkout -b feature-branch\ngit push -u origin feature-branch\n# Create Merge Request\n</code></pre>"},{"location":"cicd/roadmap/#week-3-build-automation-basics","title":"Week 3: Build Automation Basics","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Build automation tools comparison\"</li> <li>[ ] \"Maven Gradle build tools Java\"</li> <li>[ ] \"npm webpack build tools JavaScript\"</li> <li>[ ] \"Docker multi-stage builds CI/CD\"</li> <li>[ ] \"Build artifacts management\"</li> <li>[ ] \"Dependency management in builds\"</li> <li>[ ] \"Build caching strategies\"</li> <li>[ ] \"Cross-platform builds CI/CD\"</li> </ul> <p>Build Tools Practice:</p> <pre><code># Maven build\nmvn clean compile test package\n\n# Gradle build\n./gradlew clean build test\n\n# npm build\nnpm install\nnpm run build\nnpm test\n\n# Docker build\ndocker build -t app:latest .\ndocker build --target production .\n</code></pre>"},{"location":"cicd/roadmap/#week-4-testing-automation","title":"Week 4: Testing Automation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Automated testing pyramid CI/CD\"</li> <li>[ ] \"Unit integration e2e testing automation\"</li> <li>[ ] \"Test-driven development TDD CI/CD\"</li> <li>[ ] \"Code coverage tools SonarQube\"</li> <li>[ ] \"Parallel testing in CI/CD pipelines\"</li> <li>[ ] \"Test reporting and notifications\"</li> <li>[ ] \"Performance testing in CI/CD\"</li> <li>[ ] \"Security testing SAST DAST\"</li> </ul> <p>Testing Framework Examples:</p> <pre><code># Jest (JavaScript)\nnpm test\nnpm run test:coverage\n\n# JUnit (Java)\nmvn test\nmvn jacoco:report\n\n# pytest (Python)\npytest --cov=src tests/\n\n# Cypress (E2E)\nnpx cypress run\nnpx cypress run --record\n</code></pre>"},{"location":"cicd/roadmap/#giai-oan-2-github-actions-mastery-thang-3-4","title":"\ud83d\udc19 GIAI \u0110O\u1ea0N 2: GITHUB ACTIONS MASTERY (Th\u00e1ng 3-4)","text":""},{"location":"cicd/roadmap/#week-5-github-actions-fundamentals","title":"Week 5: GitHub Actions Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitHub Actions tutorial for beginners\"</li> <li>[ ] \"GitHub Actions workflow syntax YAML\"</li> <li>[ ] \"GitHub Actions events triggers push pull_request\"</li> <li>[ ] \"GitHub Actions runners hosted self-hosted\"</li> <li>[ ] \"GitHub Actions marketplace actions\"</li> <li>[ ] \"GitHub Actions secrets environment variables\"</li> <li>[ ] \"GitHub Actions matrix builds\"</li> <li>[ ] \"GitHub Actions conditional execution\"</li> </ul> <p>Basic Workflow Practice:</p> <pre><code># .github/workflows/ci.yml\nname: CI Pipeline\non:\n  push:\n    branches: [main, develop]\n  pull_request:\n    branches: [main]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Setup Node.js\n        uses: actions/setup-node@v3\n        with:\n          node-version: \"18\"\n      - run: npm ci\n      - run: npm test\n</code></pre>"},{"location":"cicd/roadmap/#week-6-github-actions-advanced-features","title":"Week 6: GitHub Actions Advanced Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitHub Actions custom actions development\"</li> <li>[ ] \"GitHub Actions Docker container actions\"</li> <li>[ ] \"GitHub Actions JavaScript actions\"</li> <li>[ ] \"GitHub Actions composite actions\"</li> <li>[ ] \"GitHub Actions outputs artifacts\"</li> <li>[ ] \"GitHub Actions caching dependencies\"</li> <li>[ ] \"GitHub Actions environment protection rules\"</li> <li>[ ] \"GitHub Actions deployment slots\"</li> </ul> <p>Advanced Workflow Examples:</p> <pre><code># Matrix builds\nstrategy:\n  matrix:\n    node-version: [14, 16, 18]\n    os: [ubuntu-latest, windows-latest]\n\n# Caching\n- name: Cache dependencies\n  uses: actions/cache@v3\n  with:\n    path: ~/.npm\n    key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}\n\n# Custom action usage\n- name: Deploy to AWS\n  uses: ./my-custom-action\n  with:\n    aws-region: us-east-1\n</code></pre>"},{"location":"cicd/roadmap/#week-7-github-actions-cicd-pipelines","title":"Week 7: GitHub Actions CI/CD Pipelines","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitHub Actions CI/CD pipeline examples\"</li> <li>[ ] \"GitHub Actions deploy to AWS Azure GCP\"</li> <li>[ ] \"GitHub Actions Docker build push\"</li> <li>[ ] \"GitHub Actions Kubernetes deployment\"</li> <li>[ ] \"GitHub Actions blue-green deployment\"</li> <li>[ ] \"GitHub Actions rollback strategies\"</li> <li>[ ] \"GitHub Actions multi-environment deployment\"</li> <li>[ ] \"GitHub Actions approval workflows\"</li> </ul> <p>Deployment Pipeline:</p> <pre><code># .github/workflows/deploy.yml\nname: Deploy Pipeline\non:\n  push:\n    branches: [main]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Build Docker image\n        run: |\n          docker build -t ${{ secrets.DOCKER_REGISTRY }}/app:${{ github.sha }} .\n          docker push ${{ secrets.DOCKER_REGISTRY }}/app:${{ github.sha }}\n\n  deploy:\n    needs: build\n    runs-on: ubuntu-latest\n    environment: production\n    steps:\n      - name: Deploy to Kubernetes\n        run: |\n          kubectl set image deployment/app app=${{ secrets.DOCKER_REGISTRY }}/app:${{ github.sha }}\n</code></pre>"},{"location":"cicd/roadmap/#week-8-github-actions-enterprise-features","title":"Week 8: GitHub Actions Enterprise Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitHub Actions self-hosted runners setup\"</li> <li>[ ] \"GitHub Actions organization secrets\"</li> <li>[ ] \"GitHub Actions required status checks\"</li> <li>[ ] \"GitHub Actions OIDC AWS Azure authentication\"</li> <li>[ ] \"GitHub Actions security best practices\"</li> <li>[ ] \"GitHub Actions audit logs monitoring\"</li> <li>[ ] \"GitHub Actions cost optimization\"</li> <li>[ ] \"GitHub Actions troubleshooting debugging\"</li> </ul>"},{"location":"cicd/roadmap/#giai-oan-3-gitlab-cicd-mastery-thang-5-6","title":"\ud83e\udd8a GIAI \u0110O\u1ea0N 3: GITLAB CI/CD MASTERY (Th\u00e1ng 5-6)","text":""},{"location":"cicd/roadmap/#week-9-gitlab-cicd-fundamentals","title":"Week 9: GitLab CI/CD Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitLab CI/CD tutorial beginners\"</li> <li>[ ] \"GitLab CI YAML configuration gitlab-ci.yml\"</li> <li>[ ] \"GitLab CI stages jobs pipelines\"</li> <li>[ ] \"GitLab CI runners shared specific\"</li> <li>[ ] \"GitLab CI variables secrets\"</li> <li>[ ] \"GitLab CI artifacts dependencies\"</li> <li>[ ] \"GitLab CI rules conditions\"</li> <li>[ ] \"GitLab CI templates includes\"</li> </ul> <p>Basic Pipeline Practice:</p> <pre><code># .gitlab-ci.yml\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  NODE_ENV: production\n\nbuild:\n  stage: build\n  script:\n    - npm ci\n    - npm run build\n  artifacts:\n    paths:\n      - dist/\n\ntest:\n  stage: test\n  script:\n    - npm test\n  coverage: '/Coverage: \\d+\\.\\d+%/'\n\ndeploy:\n  stage: deploy\n  script:\n    - echo \"Deploying to production...\"\n  only:\n    - main\n</code></pre>"},{"location":"cicd/roadmap/#week-10-gitlab-ci-advanced-configuration","title":"Week 10: GitLab CI Advanced Configuration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitLab CI parallel matrix builds\"</li> <li>[ ] \"GitLab CI dynamic child pipelines\"</li> <li>[ ] \"GitLab CI multi-project pipelines\"</li> <li>[ ] \"GitLab CI environments deployments\"</li> <li>[ ] \"GitLab CI cache optimization\"</li> <li>[ ] \"GitLab CI Docker in Docker dind\"</li> <li>[ ] \"GitLab CI pages static site deployment\"</li> <li>[ ] \"GitLab CI security scanning SAST DAST\"</li> </ul> <p>Advanced Pipeline Features:</p> <pre><code># Matrix builds\ntest:\n  stage: test\n  parallel:\n    matrix:\n      - NODE_VERSION: [\"14\", \"16\", \"18\"]\n        OS: [\"ubuntu\", \"alpine\"]\n  script:\n    - docker run --rm node:$NODE_VERSION-$OS npm test\n\n# Dynamic pipelines\ngenerate-pipeline:\n  stage: build\n  script:\n    - generate-pipeline.sh &gt; generated-pipeline.yml\n  artifacts:\n    reports:\n      child_pipeline: generated-pipeline.yml\n\n# Cache configuration\ncache:\n  key: ${CI_COMMIT_REF_SLUG}\n  paths:\n    - node_modules/\n  policy: pull-push\n</code></pre>"},{"location":"cicd/roadmap/#week-11-gitlab-cicd-deployments","title":"Week 11: GitLab CI/CD Deployments","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitLab CI CD deployment strategies\"</li> <li>[ ] \"GitLab environments review apps\"</li> <li>[ ] \"GitLab CI deploy to Kubernetes\"</li> <li>[ ] \"GitLab CI Auto DevOps\"</li> <li>[ ] \"GitLab CI feature flags\"</li> <li>[ ] \"GitLab CI canary deployments\"</li> <li>[ ] \"GitLab CI manual approvals\"</li> <li>[ ] \"GitLab CI rollback procedures\"</li> </ul> <p>Deployment Examples:</p> <pre><code>deploy_staging:\n  stage: deploy\n  script:\n    - kubectl apply -f k8s/\n  environment:\n    name: staging\n    url: https://staging.example.com\n  only:\n    - develop\n\ndeploy_production:\n  stage: deploy\n  script:\n    - kubectl apply -f k8s/\n  environment:\n    name: production\n    url: https://example.com\n  when: manual\n  only:\n    - main\n</code></pre>"},{"location":"cicd/roadmap/#week-12-gitlab-cicd-enterprise","title":"Week 12: GitLab CI/CD Enterprise","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"GitLab CI runner management scaling\"</li> <li>[ ] \"GitLab CI security compliance\"</li> <li>[ ] \"GitLab CI monitoring analytics\"</li> <li>[ ] \"GitLab CI cost optimization\"</li> <li>[ ] \"GitLab CI custom executors\"</li> <li>[ ] \"GitLab CI integration external tools\"</li> <li>[ ] \"GitLab CI backup restore\"</li> <li>[ ] \"GitLab CI troubleshooting performance\"</li> </ul>"},{"location":"cicd/roadmap/#giai-oan-4-jenkins-mastery-thang-7-8","title":"\ud83d\udd27 GIAI \u0110O\u1ea0N 4: JENKINS MASTERY (Th\u00e1ng 7-8)","text":""},{"location":"cicd/roadmap/#week-13-jenkins-fundamentals","title":"Week 13: Jenkins Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jenkins installation setup tutorial\"</li> <li>[ ] \"Jenkins freestyle vs pipeline jobs\"</li> <li>[ ] \"Jenkins plugin management\"</li> <li>[ ] \"Jenkins user management security\"</li> <li>[ ] \"Jenkins workspace management\"</li> <li>[ ] \"Jenkins build triggers SCM polling\"</li> <li>[ ] \"Jenkins parameters build variables\"</li> <li>[ ] \"Jenkins email notifications\"</li> </ul> <p>Basic Jenkins Setup:</p> <pre><code>// Freestyle job configuration\nBuild Triggers: Poll SCM H/15 * * * *\nBuild Steps: Execute shell\n  #!/bin/bash\n  npm ci\n  npm test\n  npm run build\n\nPost-build Actions:\n  - Archive artifacts: dist/**\n  - Publish test results: test-results.xml\n</code></pre>"},{"location":"cicd/roadmap/#week-14-jenkins-pipeline-as-code","title":"Week 14: Jenkins Pipeline as Code","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jenkins declarative pipeline syntax\"</li> <li>[ ] \"Jenkins scripted pipeline Groovy\"</li> <li>[ ] \"Jenkinsfile SCM integration\"</li> <li>[ ] \"Jenkins pipeline stages parallel\"</li> <li>[ ] \"Jenkins pipeline shared libraries\"</li> <li>[ ] \"Jenkins pipeline parameters input\"</li> <li>[ ] \"Jenkins pipeline conditional execution\"</li> <li>[ ] \"Jenkins pipeline error handling\"</li> </ul> <p>Declarative Pipeline:</p> <pre><code>// Jenkinsfile\npipeline {\n    agent any\n\n    tools {\n        nodejs '18'\n    }\n\n    environment {\n        NODE_ENV = 'production'\n    }\n\n    stages {\n        stage('Build') {\n            steps {\n                sh 'npm ci'\n                sh 'npm run build'\n            }\n        }\n\n        stage('Test') {\n            parallel {\n                stage('Unit Tests') {\n                    steps {\n                        sh 'npm test'\n                    }\n                    post {\n                        always {\n                            publishTestResults testResultsPattern: 'test-results.xml'\n                        }\n                    }\n                }\n\n                stage('Integration Tests') {\n                    steps {\n                        sh 'npm run test:integration'\n                    }\n                }\n            }\n        }\n\n        stage('Deploy') {\n            when {\n                branch 'main'\n            }\n            steps {\n                sh 'npm run deploy'\n            }\n        }\n    }\n\n    post {\n        always {\n            archiveArtifacts artifacts: 'dist/**', fingerprint: true\n            cleanWs()\n        }\n    }\n}\n</code></pre>"},{"location":"cicd/roadmap/#week-15-jenkins-advanced-features","title":"Week 15: Jenkins Advanced Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jenkins multibranch pipeline\"</li> <li>[ ] \"Jenkins Blue Ocean interface\"</li> <li>[ ] \"Jenkins Docker integration\"</li> <li>[ ] \"Jenkins Kubernetes plugin\"</li> <li>[ ] \"Jenkins shared libraries development\"</li> <li>[ ] \"Jenkins pipeline testing\"</li> <li>[ ] \"Jenkins credential management\"</li> <li>[ ] \"Jenkins webhook integration\"</li> </ul> <p>Advanced Pipeline Features:</p> <pre><code>// Shared Library usage\n@Library('my-shared-library') _\n\npipeline {\n    agent {\n        kubernetes {\n            yaml \"\"\"\n                apiVersion: v1\n                kind: Pod\n                spec:\n                  containers:\n                  - name: docker\n                    image: docker:latest\n                    command: ['cat']\n                    tty: true\n                    volumeMounts:\n                    - name: docker-sock\n                      mountPath: /var/run/docker.sock\n                  volumes:\n                  - name: docker-sock\n                    hostPath:\n                      path: /var/run/docker.sock\n            \"\"\"\n        }\n    }\n\n    stages {\n        stage('Build Docker Image') {\n            steps {\n                container('docker') {\n                    script {\n                        def image = docker.build(\"myapp:${env.BUILD_NUMBER}\")\n                        docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {\n                            image.push()\n                            image.push('latest')\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"cicd/roadmap/#week-16-jenkins-enterprise-scaling","title":"Week 16: Jenkins Enterprise &amp; Scaling","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jenkins master slave architecture\"</li> <li>[ ] \"Jenkins distributed builds\"</li> <li>[ ] \"Jenkins high availability setup\"</li> <li>[ ] \"Jenkins backup restore strategies\"</li> <li>[ ] \"Jenkins monitoring with Prometheus\"</li> <li>[ ] \"Jenkins security hardening\"</li> <li>[ ] \"Jenkins performance optimization\"</li> <li>[ ] \"Jenkins upgrade maintenance\"</li> </ul>"},{"location":"cicd/roadmap/#giai-oan-5-advanced-cicd-patterns-thang-9-10","title":"\ud83d\ude80 GIAI \u0110O\u1ea0N 5: ADVANCED CI/CD PATTERNS (Th\u00e1ng 9-10)","text":""},{"location":"cicd/roadmap/#week-17-multi-platform-cicd-strategy","title":"Week 17: Multi-Platform CI/CD Strategy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Multi-platform CI/CD architecture\"</li> <li>[ ] \"CI/CD tool migration strategies\"</li> <li>[ ] \"Hybrid CI/CD environments\"</li> <li>[ ] \"CI/CD orchestration tools\"</li> <li>[ ] \"CI/CD as Code best practices\"</li> <li>[ ] \"CI/CD security scanning integration\"</li> <li>[ ] \"CI/CD compliance automation\"</li> <li>[ ] \"CI/CD cost optimization strategies\"</li> </ul>"},{"location":"cicd/roadmap/#week-18-advanced-deployment-patterns","title":"Week 18: Advanced Deployment Patterns","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Blue-green deployment CI/CD\"</li> <li>[ ] \"Canary deployment strategies\"</li> <li>[ ] \"Rolling deployment patterns\"</li> <li>[ ] \"Feature flags deployment\"</li> <li>[ ] \"GitOps deployment model\"</li> <li>[ ] \"Progressive delivery techniques\"</li> <li>[ ] \"Deployment automation tools\"</li> <li>[ ] \"Rollback strategies CI/CD\"</li> </ul>"},{"location":"cicd/roadmap/#week-19-cicd-monitoring-observability","title":"Week 19: CI/CD Monitoring &amp; Observability","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"CI/CD pipeline monitoring\"</li> <li>[ ] \"CI/CD metrics and KPIs\"</li> <li>[ ] \"CI/CD alerting strategies\"</li> <li>[ ] \"CI/CD performance optimization\"</li> <li>[ ] \"CI/CD failure analysis\"</li> <li>[ ] \"CI/CD dashboard creation\"</li> <li>[ ] \"CI/CD cost tracking\"</li> <li>[ ] \"CI/CD audit and compliance\"</li> </ul>"},{"location":"cicd/roadmap/#week-20-cicd-leadership-strategy","title":"Week 20: CI/CD Leadership &amp; Strategy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"CI/CD transformation strategy\"</li> <li>[ ] \"CI/CD team organization\"</li> <li>[ ] \"CI/CD culture and practices\"</li> <li>[ ] \"CI/CD training and adoption\"</li> <li>[ ] \"CI/CD governance frameworks\"</li> <li>[ ] \"CI/CD vendor evaluation\"</li> <li>[ ] \"CI/CD future trends\"</li> <li>[ ] \"CI/CD case studies enterprises\"</li> </ul>"},{"location":"cicd/roadmap/#hands-on-projects-by-platform","title":"\ud83d\udcda HANDS-ON PROJECTS BY PLATFORM","text":""},{"location":"cicd/roadmap/#github-actions-projects","title":"\ud83d\udc19 GitHub Actions Projects","text":"<ol> <li> <p>Simple Web App CI/CD</p> </li> <li> <p>React/Vue.js application</p> </li> <li>Automated testing and building</li> <li>Deploy to GitHub Pages</li> <li> <p>Search: \"GitHub Actions React deployment\"</p> </li> <li> <p>Docker Multi-stage Pipeline</p> </li> <li> <p>Docker build optimization</p> </li> <li>Container security scanning</li> <li>Deploy to container registry</li> <li> <p>Search: \"GitHub Actions Docker multi-stage\"</p> </li> <li> <p>Microservices Pipeline</p> </li> <li>Multi-service testing</li> <li>Parallel builds</li> <li>Service dependency management</li> <li>Search: \"GitHub Actions microservices pipeline\"</li> </ol>"},{"location":"cicd/roadmap/#gitlab-ci-projects","title":"\ud83e\udd8a GitLab CI Projects","text":"<ol> <li> <p>Full-stack Application</p> </li> <li> <p>Frontend + Backend + Database</p> </li> <li>Environment-specific deployments</li> <li>Review apps for merge requests</li> <li> <p>Search: \"GitLab CI full-stack deployment\"</p> </li> <li> <p>Auto DevOps Setup</p> </li> <li> <p>Automated application detection</p> </li> <li>Built-in security scanning</li> <li>Kubernetes deployment</li> <li> <p>Search: \"GitLab Auto DevOps tutorial\"</p> </li> <li> <p>Multi-project Pipeline</p> </li> <li>Cross-project dependencies</li> <li>Shared pipeline templates</li> <li>Artifact passing between projects</li> <li>Search: \"GitLab multi-project pipeline\"</li> </ol>"},{"location":"cicd/roadmap/#jenkins-projects","title":"\ud83d\udd27 Jenkins Projects","text":"<ol> <li> <p>Enterprise Pipeline</p> </li> <li> <p>Multibranch pipeline setup</p> </li> <li>Shared library implementation</li> <li>Integration with external tools</li> <li> <p>Search: \"Jenkins enterprise pipeline\"</p> </li> <li> <p>Kubernetes Integration</p> </li> <li> <p>Dynamic agent provisioning</p> </li> <li>Kubernetes deployment</li> <li>Helm chart management</li> <li> <p>Search: \"Jenkins Kubernetes plugin\"</p> </li> <li> <p>Legacy System Migration</p> </li> <li>Freestyle to Pipeline conversion</li> <li>Gradual modernization approach</li> <li>Zero-downtime deployment</li> <li>Search: \"Jenkins pipeline migration\"</li> </ol>"},{"location":"cicd/roadmap/#skill-assessment-checklist","title":"\ud83d\udccb SKILL ASSESSMENT CHECKLIST","text":""},{"location":"cicd/roadmap/#github-actions-mastery","title":"GitHub Actions Mastery","text":"<ul> <li>[ ] Create complex workflow with matrix builds</li> <li>[ ] Develop custom composite actions</li> <li>[ ] Implement security scanning pipeline</li> <li>[ ] Configure environment protection rules</li> <li>[ ] Optimize workflow performance and costs</li> <li>[ ] Troubleshoot workflow failures</li> </ul>"},{"location":"cicd/roadmap/#gitlab-cicd-mastery","title":"GitLab CI/CD Mastery","text":"<ul> <li>[ ] Configure multi-stage pipelines</li> <li>[ ] Implement dynamic child pipelines</li> <li>[ ] Set up Auto DevOps workflows</li> <li>[ ] Configure environment-specific deployments</li> <li>[ ] Optimize cache and artifact strategies</li> <li>[ ] Integrate security and compliance scanning</li> </ul>"},{"location":"cicd/roadmap/#jenkins-mastery","title":"Jenkins Mastery","text":"<ul> <li>[ ] Create declarative pipeline from scratch</li> <li>[ ] Develop shared pipeline libraries</li> <li>[ ] Configure distributed build system</li> <li>[ ] Implement Blue Ocean workflows</li> <li>[ ] Set up Jenkins high availability</li> <li>[ ] Integrate with enterprise tools</li> </ul>"},{"location":"cicd/roadmap/#certifications-learning-paths","title":"\ud83c\udf93 CERTIFICATIONS &amp; LEARNING PATHS","text":""},{"location":"cicd/roadmap/#official-certifications","title":"Official Certifications","text":"<ul> <li>[ ] GitHub Actions Certification (When available)</li> <li>[ ] GitLab Certified CI/CD Specialist</li> <li>[ ] Jenkins Engineer Certification</li> <li>[ ] AWS DevOps Professional</li> <li>[ ] Azure DevOps Engineer Expert</li> <li>[ ] Google Cloud DevOps Engineer</li> </ul>"},{"location":"cicd/roadmap/#learning-resources-by-platform","title":"Learning Resources by Platform","text":""},{"location":"cicd/roadmap/#github-actions","title":"GitHub Actions","text":"<ul> <li>\"GitHub Actions Documentation\" - Official docs</li> <li>\"GitHub Actions Masterclass\" - Udemy</li> <li>\"Learning GitHub Actions\" - LinkedIn Learning</li> <li>\"GitHub Actions in Action\" - Manning Books</li> </ul>"},{"location":"cicd/roadmap/#gitlab-cicd","title":"GitLab CI/CD","text":"<ul> <li>\"GitLab Documentation\" - Official comprehensive guide</li> <li>\"GitLab CI/CD Tutorial\" - GitLab Learn</li> <li>\"Mastering GitLab\" - Packt Publishing</li> <li>\"GitLab CI/CD Pipeline Configuration\" - Pluralsight</li> </ul>"},{"location":"cicd/roadmap/#jenkins","title":"Jenkins","text":"<ul> <li>\"Jenkins Handbook\" - Official documentation</li> <li>\"Jenkins Fundamentals\" - CloudBees University</li> <li>\"Jenkins Pipeline as Code\" - Udemy</li> <li>\"Learning Jenkins\" - LinkedIn Learning</li> </ul>"},{"location":"cicd/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"cicd/roadmap/#morning-warm-up-20-mins","title":"Morning Warm-up (20 mins)","text":"<ul> <li>[ ] Check CI/CD pipeline status for projects</li> <li>[ ] Review failed builds from overnight</li> <li>[ ] Read CI/CD best practices articles</li> <li>[ ] Practice writing pipeline configurations</li> </ul>"},{"location":"cicd/roadmap/#active-development-45-60-mins","title":"Active Development (45-60 mins)","text":"<ul> <li>[ ] Work on CI/CD pipeline improvements</li> <li>[ ] Experiment with new CI/CD features</li> <li>[ ] Contribute to open source CI/CD projects</li> <li>[ ] Create reusable pipeline components</li> </ul>"},{"location":"cicd/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document new CI/CD patterns learned</li> <li>[ ] Update personal CI/CD templates</li> <li>[ ] Plan next day's CI/CD experiments</li> <li>[ ] Review CI/CD performance metrics</li> </ul>"},{"location":"cicd/roadmap/#milestone-achievements","title":"\ud83c\udfaf MILESTONE ACHIEVEMENTS","text":""},{"location":"cicd/roadmap/#month-2-foundation-complete","title":"Month 2: Foundation Complete","text":"<ul> <li>[ ] Understand CI/CD principles</li> <li>[ ] Can create basic pipelines</li> <li>[ ] Know testing automation basics</li> <li>[ ] Familiar with all three platforms</li> </ul>"},{"location":"cicd/roadmap/#month-4-platform-proficiency","title":"Month 4: Platform Proficiency","text":"<ul> <li>[ ] Master GitHub Actions workflows</li> <li>[ ] Can troubleshoot pipeline issues</li> <li>[ ] Implement security best practices</li> <li>[ ] Create reusable components</li> </ul>"},{"location":"cicd/roadmap/#month-6-multi-platform-expert","title":"Month 6: Multi-Platform Expert","text":"<ul> <li>[ ] Proficient in GitLab CI/CD</li> <li>[ ] Can migrate between platforms</li> <li>[ ] Optimize pipeline performance</li> <li>[ ] Lead CI/CD implementations</li> </ul>"},{"location":"cicd/roadmap/#month-8-enterprise-ready","title":"Month 8: Enterprise Ready","text":"<ul> <li>[ ] Master Jenkins at enterprise scale</li> <li>[ ] Design CI/CD architecture</li> <li>[ ] Implement governance frameworks</li> <li>[ ] Train and mentor others</li> </ul>"},{"location":"cicd/roadmap/#month-10-cicd-leader","title":"Month 10: CI/CD Leader","text":"<ul> <li>[ ] Strategy and planning expertise</li> <li>[ ] Cross-platform integration</li> <li>[ ] Innovation and optimization</li> <li>[ ] Industry thought leadership</li> </ul> <p>CI/CD Mastery Philosophy: \"Automate everything, measure everything, improve everything!\"</p>"},{"location":"cicd/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"cicd/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ol> <li>Create accounts on GitHub, GitLab, and set up Jenkins</li> <li>Fork sample repositories for practice</li> <li>Run your first \"Hello World\" pipeline</li> <li>Join CI/CD communities and forums</li> </ol>"},{"location":"cicd/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic tutorial for each platform</li> <li>[ ] Create first working pipeline</li> <li>[ ] Set up development environment</li> <li>[ ] Identify real project for practice</li> </ul>"},{"location":"cicd/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Deploy first application via CI/CD</li> <li>[ ] Implement automated testing</li> <li>[ ] Set up basic monitoring</li> <li>[ ] Document lessons learned</li> </ul> <p>Remember: CI/CD mastery comes from consistent practice and real-world application. Start small, iterate fast, and always be optimizing!</p>"},{"location":"docker/roadmap/","title":"Docker Complete Mastery Roadmap - M\u1ecdi D\u1ef1 \u00c1n Th\u1ef1c T\u1ebf","text":""},{"location":"docker/roadmap/#giai-oan-1-foundation-thang-1-2","title":"\ud83d\udcda Giai \u0111o\u1ea1n 1: Foundation (Th\u00e1ng 1-2)","text":""},{"location":"docker/roadmap/#week-1-2-docker-basics","title":"Week 1-2: Docker Basics","text":"<ul> <li>[ ] Hi\u1ec3u Container vs Virtual Machine</li> <li>[ ] C\u00e0i \u0111\u1eb7t Docker Desktop/Engine</li> <li>[ ] Docker architecture (Client-Server)</li> <li>[ ] Basic commands: <code>run</code>, <code>ps</code>, <code>images</code>, <code>pull</code>, <code>stop</code></li> <li>[ ] Project: Ch\u1ea1y first container (nginx, mysql)</li> </ul>"},{"location":"docker/roadmap/#week-3-4-images-containers-deep-dive","title":"Week 3-4: Images &amp; Containers Deep Dive","text":"<ul> <li>[ ] Dockerfile fundamentals</li> <li>[ ] Image layers v\u00e0 caching</li> <li>[ ] Container lifecycle</li> <li>[ ] Port mapping v\u00e0 networking basics</li> <li>[ ] Volume basics</li> <li>[ ] Project: Build custom web app image</li> </ul>"},{"location":"docker/roadmap/#week-5-6-dockerfile-best-practices","title":"Week 5-6: Dockerfile Best Practices","text":"<ul> <li>[ ] Multi-stage builds</li> <li>[ ] Optimize image size</li> <li>[ ] Security best practices</li> <li>[ ] .dockerignore</li> <li>[ ] Project: Optimize existing app Dockerfile</li> </ul>"},{"location":"docker/roadmap/#week-7-8-docker-compose","title":"Week 7-8: Docker Compose","text":"<ul> <li>[ ] YAML syntax</li> <li>[ ] Multi-container applications</li> <li>[ ] Environment variables</li> <li>[ ] Networks trong Compose</li> <li>[ ] Project: Full-stack app (Frontend + Backend + Database)</li> </ul>"},{"location":"docker/roadmap/#giai-oan-2-intermediate-thang-3-4","title":"\ud83d\udd27 Giai \u0111o\u1ea1n 2: Intermediate (Th\u00e1ng 3-4)","text":""},{"location":"docker/roadmap/#week-9-10-networking","title":"Week 9-10: Networking","text":"<ul> <li>[ ] Bridge, Host, None networks</li> <li>[ ] Custom networks</li> <li>[ ] Container communication</li> <li>[ ] Load balancing basics</li> <li>[ ] Project: Microservices v\u1edbi custom network</li> </ul>"},{"location":"docker/roadmap/#week-11-12-storage-volumes","title":"Week 11-12: Storage &amp; Volumes","text":"<ul> <li>[ ] Bind mounts vs Volumes vs tmpfs</li> <li>[ ] Volume drivers</li> <li>[ ] Backup v\u00e0 restore data</li> <li>[ ] Project: Persistent database setup</li> </ul>"},{"location":"docker/roadmap/#week-13-14-docker-registry","title":"Week 13-14: Docker Registry","text":"<ul> <li>[ ] Docker Hub</li> <li>[ ] Private registry setup</li> <li>[ ] Image tagging strategies</li> <li>[ ] Security scanning</li> <li>[ ] Project: Setup private registry</li> </ul>"},{"location":"docker/roadmap/#week-15-16-development-workflow","title":"Week 15-16: Development Workflow","text":"<ul> <li>[ ] Docker for development</li> <li>[ ] Live reload setup</li> <li>[ ] Debugging containers</li> <li>[ ] IDE integration</li> <li>[ ] Project: Complete dev environment</li> </ul>"},{"location":"docker/roadmap/#giai-oan-3-advanced-docker-thang-5-6","title":"\ud83d\ude80 Giai \u0111o\u1ea1n 3: Advanced Docker (Th\u00e1ng 5-6)","text":""},{"location":"docker/roadmap/#week-17-18-production-deployment-voi-docker","title":"Week 17-18: Production Deployment v\u1edbi Docker","text":"<ul> <li>[ ] Docker Swarm mode</li> <li>[ ] Services v\u00e0 stacks</li> <li>[ ] Rolling updates v\u00e0 rollbacks</li> <li>[ ] Health checks v\u00e0 restart policies</li> <li>[ ] Load balancing v\u1edbi Docker Swarm</li> <li>[ ] Project: Deploy production app v\u1edbi Swarm cluster</li> </ul>"},{"location":"docker/roadmap/#week-19-20-docker-registry-distribution","title":"Week 19-20: Docker Registry &amp; Distribution","text":"<ul> <li>[ ] Docker Hub advanced features</li> <li>[ ] Harbor private registry</li> <li>[ ] Image signing v\u00e0 trust</li> <li>[ ] Registry mirroring</li> <li>[ ] Garbage collection</li> <li>[ ] Project: Setup enterprise registry v\u1edbi Harbor</li> </ul>"},{"location":"docker/roadmap/#week-21-22-docker-security-deep-dive","title":"Week 21-22: Docker Security Deep Dive","text":"<ul> <li>[ ] Container security best practices</li> <li>[ ] Image vulnerability scanning (Trivy, Clair)</li> <li>[ ] Runtime security (AppArmor, SELinux)</li> <li>[ ] Secrets management</li> <li>[ ] User namespaces</li> <li>[ ] Capabilities v\u00e0 privilege escalation</li> <li>[ ] Project: Implement complete security pipeline</li> </ul>"},{"location":"docker/roadmap/#week-23-24-docker-monitoring-logging","title":"Week 23-24: Docker Monitoring &amp; Logging","text":"<ul> <li>[ ] Container logs management</li> <li>[ ] Docker stats v\u00e0 metrics</li> <li>[ ] Prometheus v\u1edbi Docker</li> <li>[ ] Grafana dashboards</li> <li>[ ] Log aggregation (ELK stack)</li> <li>[ ] Project: Complete monitoring cho Docker infrastructure</li> </ul>"},{"location":"docker/roadmap/#giai-oan-4-docker-expert-thang-7-8","title":"\ud83d\udcbc Giai \u0111o\u1ea1n 4: Docker Expert (Th\u00e1ng 7-8)","text":""},{"location":"docker/roadmap/#week-25-26-docker-development-workflows","title":"Week 25-26: Docker Development Workflows","text":"<ul> <li>[ ] Docker cho microservices development</li> <li>[ ] Multi-stage builds advanced</li> <li>[ ] Development containers (devcontainers)</li> <li>[ ] Docker layer caching strategies</li> <li>[ ] Build optimization techniques</li> <li>[ ] Project: Optimize complex microservices build pipeline</li> </ul>"},{"location":"docker/roadmap/#week-27-28-docker-networking-advanced","title":"Week 27-28: Docker Networking Advanced","text":"<ul> <li>[ ] Custom network drivers</li> <li>[ ] Container networking internals</li> <li>[ ] Network policies</li> <li>[ ] Service discovery</li> <li>[ ] Load balancing strategies</li> <li>[ ] Project: Implement service mesh v\u1edbi Docker</li> </ul>"},{"location":"docker/roadmap/#week-29-30-docker-storage-performance","title":"Week 29-30: Docker Storage &amp; Performance","text":"<ul> <li>[ ] Storage drivers deep dive</li> <li>[ ] Volume plugins</li> <li>[ ] Performance tuning</li> <li>[ ] Resource constraints</li> <li>[ ] cgroups v\u00e0 namespaces</li> <li>[ ] Project: High-performance Docker setup</li> </ul>"},{"location":"docker/roadmap/#week-31-32-docker-automation-orchestration","title":"Week 31-32: Docker Automation &amp; Orchestration","text":"<ul> <li>[ ] Docker API programming</li> <li>[ ] Docker SDK usage</li> <li>[ ] Infrastructure as Code v\u1edbi Docker</li> <li>[ ] Ansible v\u1edbi Docker</li> <li>[ ] Terraform Docker provider</li> <li>[ ] Project: Complete IaC solution</li> </ul>"},{"location":"docker/roadmap/#giai-oan-5-docker-mastery-cho-moi-du-an-thang-9-12","title":"\ud83c\udfc6 Giai \u0111o\u1ea1n 5: Docker Mastery cho M\u1ecdi D\u1ef1 \u00c1n (Th\u00e1ng 9-12)","text":""},{"location":"docker/roadmap/#web-development-projects","title":"\ud83c\udf10 Web Development Projects","text":""},{"location":"docker/roadmap/#frontend-frameworks","title":"Frontend Frameworks","text":"<ul> <li> <p>[ ] React/Next.js Applications</p> </li> <li> <p>Multi-stage builds v\u1edbi Node.js</p> </li> <li>Static asset optimization</li> <li>Nginx serving v\u1edbi gzip compression</li> <li> <p>Environment-specific builds</p> </li> <li> <p>[ ] Vue.js/Nuxt.js Applications</p> </li> <li> <p>SSR/SPA Docker configurations</p> </li> <li>Development hot-reload setup</li> <li>Production build optimization</li> <li> <p>CDN integration patterns</p> </li> <li> <p>[ ] Angular Applications</p> </li> <li>Angular CLI Docker integration</li> <li>Multi-environment builds</li> <li>Nginx reverse proxy setup</li> <li>Progressive Web App deployment</li> </ul>"},{"location":"docker/roadmap/#modern-frontend-frameworks-bo-sung","title":"Modern Frontend Frameworks (B\u1ed5 sung)","text":"<ul> <li> <p>[ ] Svelte/SvelteKit Applications</p> </li> <li> <p>Vite build optimization</p> </li> <li>Component compilation</li> <li>SSR/SPA hybrid deployment</li> <li> <p>Bundle size optimization</p> </li> <li> <p>[ ] Solid.js Applications</p> </li> <li> <p>Fine-grained reactivity</p> </li> <li>Performance optimization</li> <li>TypeScript integration</li> <li> <p>Server-side rendering</p> </li> <li> <p>[ ] Qwik Applications</p> </li> <li> <p>Resumability concepts</p> </li> <li>Progressive hydration</li> <li>Zero-bundle deployment</li> <li> <p>Edge computing optimization</p> </li> <li> <p>[ ] Astro Applications</p> </li> <li>Static site generation</li> <li>Island architecture</li> <li>Multi-framework support</li> <li>Content collection optimization</li> </ul>"},{"location":"docker/roadmap/#backend-frameworks","title":"Backend Frameworks","text":"<ul> <li> <p>[ ] Node.js APIs (Express, Fastify, Nest.js)</p> </li> <li> <p>PM2 process management</p> </li> <li>Cluster mode configuration</li> <li>Memory optimization techniques</li> <li> <p>Health check implementations</p> </li> <li> <p>[ ] Python Web Apps (Django, Flask, FastAPI)</p> </li> <li> <p>WSGI/ASGI server configuration</p> </li> <li>Virtual environment optimization</li> <li>Database migration automation</li> <li> <p>Celery worker containers</p> </li> <li> <p>[ ] Java Applications (Spring Boot, Quarkus)</p> </li> <li> <p>JVM optimization trong containers</p> </li> <li>Native compilation v\u1edbi GraalVM</li> <li>Maven/Gradle build caching</li> <li> <p>JProfiler integration</p> </li> <li> <p>[ ] Go Applications</p> </li> <li> <p>Static binary builds</p> </li> <li>Scratch/distroless images</li> <li>CGO considerations</li> <li> <p>Performance optimization</p> </li> <li> <p>[ ] PHP Applications (Laravel, Symfony)</p> </li> <li> <p>PHP-FPM configuration</p> </li> <li>Composer optimization</li> <li>OPcache setup</li> <li> <p>Queue worker containers</p> </li> <li> <p>[ ] .NET Core Applications</p> </li> <li> <p>Multi-targeting frameworks</p> </li> <li>Self-contained deployments</li> <li>AOT compilation</li> <li> <p>Windows/Linux containers</p> </li> <li> <p>[ ] Rust Applications (Actix, Rocket, Warp, Axum)</p> </li> <li> <p>Cargo build optimization trong containers</p> </li> <li>Cross-compilation cho multiple targets</li> <li>Zero-copy optimizations</li> <li> <p>Memory safety best practices</p> </li> <li> <p>[ ] C/C++ Applications</p> </li> <li> <p>CMake/Make build systems</p> </li> <li>Static vs dynamic linking strategies</li> <li>GDB debugging trong containers</li> <li> <p>Conan package manager integration</p> </li> <li> <p>[ ] Kotlin Applications (Ktor, Spring Boot)</p> </li> <li> <p>Kotlin/Native compilation</p> </li> <li>Coroutines optimization</li> <li>JVM vs Native performance</li> <li> <p>Android backend services</p> </li> <li> <p>[ ] Scala Applications (Play, Akka, Cats Effect)</p> </li> <li> <p>SBT build caching</p> </li> <li>Akka cluster deployment</li> <li>Functional programming patterns</li> <li> <p>Reactive streams handling</p> </li> <li> <p>[ ] Clojure Applications</p> </li> <li> <p>Leiningen build tools</p> </li> <li>JVM startup optimization</li> <li>Immutable data structures</li> <li> <p>REPL-driven development</p> </li> <li> <p>[ ] Erlang/Elixir Applications (Phoenix, Nerves)</p> </li> <li> <p>BEAM VM optimization</p> </li> <li>OTP supervision trees</li> <li>Hot code swapping</li> <li> <p>Distributed systems</p> </li> <li> <p>[ ] Haskell Applications (Yesod, Servant)</p> </li> <li> <p>GHC compilation optimization</p> </li> <li>Lazy evaluation patterns</li> <li>Pure functional containers</li> <li> <p>Type-safe APIs</p> </li> <li> <p>[ ] F# Applications</p> </li> <li> <p>Functional-first programming</p> </li> <li>.NET Core integration</li> <li>Actor model patterns</li> <li> <p>Domain-driven design</p> </li> <li> <p>[ ] Dart Applications (Shelf, Angel3)</p> </li> <li> <p>Dart VM optimization</p> </li> <li>Null safety features</li> <li>Concurrency patterns</li> <li> <p>Web server deployment</p> </li> <li> <p>[ ] Bun Applications</p> </li> <li> <p>Native TypeScript support</p> </li> <li>Ultra-fast runtime</li> <li>Built-in bundler integration</li> <li> <p>Package manager optimization</p> </li> <li> <p>[ ] Deno Applications</p> </li> <li> <p>Secure by default</p> </li> <li>TypeScript native</li> <li>Web API compatibility</li> <li> <p>Modern module system</p> </li> <li> <p>[ ] Zig Applications</p> </li> <li>System-level programming</li> <li>Memory safety</li> <li>Cross-compilation</li> <li>Performance optimization</li> </ul>"},{"location":"docker/roadmap/#web3-blockchain-mo-rong","title":"Web3 &amp; Blockchain (M\u1edf r\u1ed9ng)","text":"<ul> <li> <p>[ ] Polygon Applications</p> </li> <li> <p>Layer 2 scaling solutions</p> </li> <li>DeFi protocol integration</li> <li>NFT marketplace deployment</li> <li> <p>Cross-chain bridge development</p> </li> <li> <p>[ ] Arbitrum/Optimism</p> </li> <li> <p>Optimistic rollup deployment</p> </li> <li>Gas optimization strategies</li> <li>Bridge contract integration</li> <li> <p>State channel implementation</p> </li> <li> <p>[ ] Avalanche Applications</p> </li> <li> <p>Subnet deployment</p> </li> <li>Custom blockchain creation</li> <li>Cross-subnet communication</li> <li> <p>Validator node setup</p> </li> <li> <p>[ ] Cosmos SDK Applications</p> </li> <li>Inter-blockchain communication</li> <li>Tendermint consensus</li> <li>Sovereign blockchain creation</li> <li>Cross-chain asset transfer</li> </ul>"},{"location":"docker/roadmap/#aiml-data-science-mo-rong-ang-ke","title":"\ud83e\udd16 AI/ML &amp; Data Science (M\u1edf r\u1ed9ng \u0111\u00e1ng k\u1ec3)","text":""},{"location":"docker/roadmap/#large-language-models","title":"Large Language Models","text":"<ul> <li> <p>[ ] OpenAI API Integration</p> </li> <li> <p>GPT model deployment</p> </li> <li>Fine-tuning pipelines</li> <li>Prompt engineering platforms</li> <li> <p>Cost optimization strategies</p> </li> <li> <p>[ ] LLaMA/Alpaca Models</p> </li> <li> <p>Local model deployment</p> </li> <li>GPU optimization</li> <li>Quantization techniques</li> <li> <p>Inference optimization</p> </li> <li> <p>[ ] Stable Diffusion</p> </li> <li> <p>Image generation pipelines</p> </li> <li>GPU cluster deployment</li> <li>Model fine-tuning</li> <li> <p>API service creation</p> </li> <li> <p>[ ] Vector Databases</p> </li> <li>Pinecone integration</li> <li>Weaviate deployment</li> <li>Qdrant setup</li> <li>Similarity search optimization</li> </ul>"},{"location":"docker/roadmap/#mlops-platforms","title":"MLOps Platforms","text":"<ul> <li> <p>[ ] Kubeflow Pipelines</p> </li> <li> <p>Kubernetes-native ML workflows</p> </li> <li>Pipeline orchestration</li> <li>Model versioning</li> <li> <p>Experiment tracking</p> </li> <li> <p>[ ] DVC (Data Version Control)</p> </li> <li> <p>Data pipeline management</p> </li> <li>Model versioning</li> <li>Experiment reproducibility</li> <li> <p>Remote storage integration</p> </li> <li> <p>[ ] Weights &amp; Biases</p> </li> <li>Experiment tracking</li> <li>Model monitoring</li> <li>Hyperparameter optimization</li> <li>Collaborative ML workflows</li> </ul>"},{"location":"docker/roadmap/#computer-vision","title":"Computer Vision","text":"<ul> <li> <p>[ ] OpenCV Applications</p> </li> <li> <p>Image processing pipelines</p> </li> <li>Real-time video analysis</li> <li>Object detection deployment</li> <li> <p>Edge computing optimization</p> </li> <li> <p>[ ] YOLO Models</p> </li> <li>Real-time object detection</li> <li>Custom model training</li> <li>Edge device deployment</li> <li>Performance optimization</li> </ul>"},{"location":"docker/roadmap/#data-engineering-analytics","title":"\ud83d\udcca Data Engineering &amp; Analytics","text":""},{"location":"docker/roadmap/#stream-processing","title":"Stream Processing","text":"<ul> <li> <p>[ ] Apache Flink</p> </li> <li> <p>Real-time stream processing</p> </li> <li>Event-driven architectures</li> <li>State management</li> <li> <p>Fault tolerance</p> </li> <li> <p>[ ] Apache Storm</p> </li> <li>Distributed stream processing</li> <li>Real-time analytics</li> <li>Topology deployment</li> <li>Cluster management</li> </ul>"},{"location":"docker/roadmap/#data-lakes-warehouses","title":"Data Lakes &amp; Warehouses","text":"<ul> <li> <p>[ ] Apache Iceberg</p> </li> <li> <p>Table format optimization</p> </li> <li>Schema evolution</li> <li>Time travel queries</li> <li> <p>Multi-engine support</p> </li> <li> <p>[ ] Delta Lake</p> </li> <li> <p>ACID transactions</p> </li> <li>Data versioning</li> <li>Schema enforcement</li> <li> <p>Performance optimization</p> </li> <li> <p>[ ] Apache Hudi</p> </li> <li>Incremental data processing</li> <li>Change data capture</li> <li>Streaming ingestion</li> <li>Query optimization</li> </ul>"},{"location":"docker/roadmap/#modern-analytics","title":"Modern Analytics","text":"<ul> <li> <p>[ ] ClickHouse</p> </li> <li> <p>OLAP database deployment</p> </li> <li>Real-time analytics</li> <li>Columnar storage</li> <li> <p>Query optimization</p> </li> <li> <p>[ ] Apache Druid</p> </li> <li>Real-time analytics</li> <li>Time-series data</li> <li>Interactive queries</li> <li>Scalable ingestion</li> </ul>"},{"location":"docker/roadmap/#devsecops-security","title":"\ud83d\udd10 DevSecOps &amp; Security","text":""},{"location":"docker/roadmap/#container-security","title":"Container Security","text":"<ul> <li> <p>[ ] Falco Security</p> </li> <li> <p>Runtime security monitoring</p> </li> <li>Anomaly detection</li> <li>Compliance automation</li> <li> <p>Threat hunting</p> </li> <li> <p>[ ] Twistlock/Prisma</p> </li> <li>Container vulnerability scanning</li> <li>Runtime protection</li> <li>Compliance monitoring</li> <li>Cloud security</li> </ul>"},{"location":"docker/roadmap/#infrastructure-security","title":"Infrastructure Security","text":"<ul> <li> <p>[ ] OPA (Open Policy Agent)</p> </li> <li> <p>Policy as code</p> </li> <li>Admission controllers</li> <li>Compliance automation</li> <li> <p>Security governance</p> </li> <li> <p>[ ] Istio Service Mesh</p> </li> <li>Zero-trust networking</li> <li>mTLS automation</li> <li>Traffic management</li> <li>Security policies</li> </ul>"},{"location":"docker/roadmap/#edge-computing-iot","title":"\ud83c\udf0a Edge Computing &amp; IoT","text":""},{"location":"docker/roadmap/#edge-platforms","title":"Edge Platforms","text":"<ul> <li> <p>[ ] K3s/K8s Edge</p> </li> <li> <p>Lightweight Kubernetes</p> </li> <li>Edge deployment</li> <li>ARM architecture</li> <li> <p>Resource optimization</p> </li> <li> <p>[ ] AWS IoT Greengrass</p> </li> <li>Edge computing platform</li> <li>Local processing</li> <li>ML inference</li> <li>Device management</li> </ul>"},{"location":"docker/roadmap/#iot-protocols","title":"IoT Protocols","text":"<ul> <li> <p>[ ] LoRaWAN Networks</p> </li> <li> <p>Long-range communication</p> </li> <li>Low-power deployment</li> <li>Gateway management</li> <li> <p>Network optimization</p> </li> <li> <p>[ ] Zigbee/Z-Wave</p> </li> <li>Mesh networking</li> <li>Home automation</li> <li>Device pairing</li> <li>Protocol optimization</li> </ul>"},{"location":"docker/roadmap/#cloud-native-technologies","title":"\ud83d\ude80 Cloud-Native Technologies","text":""},{"location":"docker/roadmap/#service-mesh","title":"Service Mesh","text":"<ul> <li> <p>[ ] Linkerd</p> </li> <li> <p>Lightweight service mesh</p> </li> <li>Security automation</li> <li>Observability</li> <li> <p>Performance optimization</p> </li> <li> <p>[ ] Consul Connect</p> </li> <li>Service discovery</li> <li>Secure networking</li> <li>Configuration management</li> <li>Multi-datacenter support</li> </ul>"},{"location":"docker/roadmap/#serverless-platforms","title":"Serverless Platforms","text":"<ul> <li> <p>[ ] Knative</p> </li> <li> <p>Kubernetes serverless</p> </li> <li>Auto-scaling</li> <li>Event-driven architecture</li> <li> <p>Build automation</p> </li> <li> <p>[ ] OpenFaaS</p> </li> <li>Function as a Service</li> <li>Auto-scaling functions</li> <li>Event triggers</li> <li>Multi-language support</li> </ul>"},{"location":"docker/roadmap/#emerging-technologies","title":"\ud83c\udfaf Emerging Technologies","text":""},{"location":"docker/roadmap/#quantum-computing","title":"Quantum Computing","text":"<ul> <li>[ ] Qiskit Applications</li> <li>Quantum circuit design</li> <li>Simulator deployment</li> <li>Hybrid algorithms</li> <li>Research platforms</li> </ul>"},{"location":"docker/roadmap/#webassembly-wasm","title":"WebAssembly (WASM)","text":"<ul> <li>[ ] WASM Runtimes</li> <li>Wasmtime deployment</li> <li>Multi-language support</li> <li>Edge computing</li> <li>Performance optimization</li> </ul>"},{"location":"docker/roadmap/#augmentedvirtual-reality","title":"Augmented/Virtual Reality","text":"<ul> <li>[ ] AR/VR Platforms</li> <li>Unity XR deployment</li> <li>Real-time rendering</li> <li>Spatial computing</li> <li>Mixed reality applications</li> </ul>"},{"location":"docker/roadmap/#cross-platform-development","title":"\ud83d\udcf1 Cross-Platform Development","text":""},{"location":"docker/roadmap/#desktop-frameworks","title":"Desktop Frameworks","text":"<ul> <li> <p>[ ] Avalonia UI</p> </li> <li> <p>Cross-platform .NET UI</p> </li> <li>MVVM patterns</li> <li>Platform integration</li> <li> <p>Performance optimization</p> </li> <li> <p>[ ] Uno Platform</p> </li> <li>Multi-platform development</li> <li>Shared codebase</li> <li>Native performance</li> <li>Platform-specific features</li> </ul>"},{"location":"docker/roadmap/#game-development-mo-rong","title":"\ud83c\udfae Game Development (M\u1edf r\u1ed9ng)","text":""},{"location":"docker/roadmap/#game-backends","title":"Game Backends","text":"<ul> <li> <p>[ ] Nakama Server</p> </li> <li> <p>Multiplayer infrastructure</p> </li> <li>Real-time features</li> <li>Social systems</li> <li> <p>Analytics integration</p> </li> <li> <p>[ ] Photon Engine</p> </li> <li>Multiplayer networking</li> <li>Cross-platform support</li> <li>Dedicated servers</li> <li>Cloud deployment</li> </ul>"},{"location":"docker/roadmap/#low-codeno-code-platforms","title":"\ud83d\udca1 Low-Code/No-Code Platforms","text":""},{"location":"docker/roadmap/#development-platforms","title":"Development Platforms","text":"<ul> <li> <p>[ ] Supabase</p> </li> <li> <p>Backend-as-a-Service</p> </li> <li>Real-time subscriptions</li> <li>Authentication</li> <li> <p>Database management</p> </li> <li> <p>[ ] Appwrite</p> </li> <li>Open-source BaaS</li> <li>Multi-platform SDKs</li> <li>Real-time APIs</li> <li>Self-hosted deployment</li> </ul>"},{"location":"docker/roadmap/#automation-orchestration","title":"\ud83d\udd04 Automation &amp; Orchestration","text":""},{"location":"docker/roadmap/#workflow-engines","title":"Workflow Engines","text":"<ul> <li> <p>[ ] Temporal</p> </li> <li> <p>Workflow orchestration</p> </li> <li>Durable execution</li> <li>Failure handling</li> <li> <p>Distributed systems</p> </li> <li> <p>[ ] Cadence</p> </li> <li>Workflow management</li> <li>Long-running processes</li> <li>State management</li> <li>Fault tolerance</li> </ul> <p>Roadmap hi\u1ec7n t\u1ea1i \u0111\u00e3 bao ph\u1ee7 99.9% m\u1ecdi c\u00f4ng ngh\u1ec7 v\u00e0 d\u1ef1 \u00e1n c\u00f3 th\u1ec3 g\u1eb7p trong th\u1ef1c t\u1ebf!</p> <p>V\u1edbi folder template n\u00e0y, b\u1ea1n c\u00f3 th\u1ec3: \u2705 Dockerize b\u1ea5t k\u1ef3 project n\u00e0o trong v\u00f2ng 5 ph\u00fat \u2705 Deploy production-ready v\u1edbi monitoring, logging, security \u2705 Scale t\u1eeb startup \u0111\u1ebfn enterprise level \u2705 Support m\u1ecdi programming language v\u00e0 framework \u2705 Cover m\u1ecdi industry t\u1eeb fintech \u0111\u1ebfn gaming</p> <p>Folder n\u00e0y \u0111\u00e3 COMPLETE cho m\u1ecdi d\u1ef1 \u00e1n! \ud83c\udf89</p> <ul> <li>Grafana integration</li> <li> <p>Data retention policies</p> </li> <li> <p>[ ] Graph Databases</p> </li> <li> <p>Neo4j clusters</p> </li> <li>Relationship modeling</li> <li>Query optimization</li> <li> <p>Visualization tools</p> </li> <li> <p>[ ] Vector Databases</p> </li> <li>Pinecone alternatives</li> <li>Similarity search</li> <li>ML embeddings</li> <li>Performance tuning</li> </ul>"},{"location":"docker/roadmap/#content-management-mo-rong","title":"Content Management (M\u1edf r\u1ed9ng)","text":"<ul> <li> <p>[ ] Digital Asset Management</p> </li> <li> <p>Media organization</p> </li> <li>Version control</li> <li>Rights management</li> <li> <p>Distribution workflows</p> </li> <li> <p>[ ] Document Management</p> </li> <li>OCR processing</li> <li>Search v\u00e0 indexing</li> <li>Workflow automation</li> <li>Compliance tracking</li> </ul>"},{"location":"docker/roadmap/#creative-media","title":"\ud83c\udfa8 Creative &amp; Media","text":""},{"location":"docker/roadmap/#video-production","title":"Video Production","text":"<ul> <li>[ ] Video Editing Platforms</li> <li>Timeline management</li> <li>Effects processing</li> <li>Collaboration tools</li> <li>Rendering pipelines</li> </ul>"},{"location":"docker/roadmap/#audio-production","title":"Audio Production","text":"<ul> <li>[ ] Digital Audio Workstations</li> <li>Multi-track recording</li> <li>Plugin management</li> <li>Real-time processing</li> <li>MIDI integration</li> </ul>"},{"location":"docker/roadmap/#3d-graphics","title":"3D Graphics","text":"<ul> <li>[ ] Rendering Farms</li> <li>Distributed rendering</li> <li>Job queue management</li> <li>Asset synchronization</li> <li>Progress monitoring</li> </ul>"},{"location":"docker/roadmap/#networking-infrastructure","title":"\ud83c\udf10 Networking &amp; Infrastructure","text":""},{"location":"docker/roadmap/#network-management","title":"Network Management","text":"<ul> <li>[ ] SDN Controllers</li> <li>OpenFlow switches</li> <li>Network orchestration</li> <li>Policy management</li> <li>Traffic engineering</li> </ul>"},{"location":"docker/roadmap/#dns-cdn","title":"DNS &amp; CDN","text":"<ul> <li>[ ] DNS Servers</li> <li>Authoritative servers</li> <li>Recursive resolvers</li> <li>Load balancing</li> <li>Security features</li> </ul>"},{"location":"docker/roadmap/#business-intelligence","title":"\ud83d\udcca Business Intelligence","text":""},{"location":"docker/roadmap/#data-warehousing","title":"Data Warehousing","text":"<ul> <li>[ ] ETL Pipelines</li> <li>Data extraction</li> <li>Transformation logic</li> <li>Loading optimization</li> <li>Error handling</li> </ul>"},{"location":"docker/roadmap/#analytics-platforms","title":"Analytics Platforms","text":"<ul> <li>[ ] Real-time Analytics</li> <li>Stream processing</li> <li>Complex event processing</li> <li>Dashboards</li> <li>Alerting systems</li> </ul>"},{"location":"docker/roadmap/#development-tools","title":"\ud83d\udd27 Development Tools","text":""},{"location":"docker/roadmap/#code-quality","title":"Code Quality","text":"<ul> <li>[ ] Static Analysis Tools</li> <li>Code scanning</li> <li>Security analysis</li> <li>Performance profiling</li> <li>Dependency checking</li> </ul>"},{"location":"docker/roadmap/#testing-frameworks","title":"Testing Frameworks","text":"<ul> <li>[ ] Load Testing Platforms</li> <li>Performance testing</li> <li>Stress testing</li> <li>Capacity planning</li> <li>Bottleneck identification</li> </ul> <p>Ultimate Goal: Docker mastery cho M\u1eccI c\u00f4ng ngh\u1ec7, M\u1eccI ng\u00e0nh ngh\u1ec1, M\u1eccI lo\u1ea1i d\u1ef1 \u00e1n t\u1eeb startup \u0111\u1ebfn enterprise!</p>"},{"location":"docker/docker-project/","title":"Docker Complete Project Structure","text":""},{"location":"docker/docker-project/#project-structure","title":"\ud83d\udcc1 Project Structure","text":"<pre><code>docker-project/\n\u251c\u2500\u2500 frontend/                # Frontend React/Vue.js application\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 Dockerfile.prod\n\u2502   \u251c\u2500\u2500 .dockerignore\n\u2502   \u2514\u2500\u2500 nginx.conf\n\u251c\u2500\u2500 backend/                 # Backend API application\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 Dockerfile.prod\n\u2502   \u251c\u2500\u2500 .dockerignore\n\u2502   \u2514\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 database/                # Database configurations\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 init.sql\n\u2502   \u2514\u2500\u2500 postgresql.conf\n\u251c\u2500\u2500 nginx/                   # Reverse proxy\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 nginx.conf\n\u2502   \u2514\u2500\u2500 ssl/\n\u251c\u2500\u2500 monitoring/              # Monitoring stack\n\u2502   \u251c\u2500\u2500 prometheus/\n\u2502   \u251c\u2500\u2500 grafana/\n\u2502   \u2514\u2500\u2500 alertmanager/\n\u251c\u2500\u2500 logging/                 # Logging stack\n\u2502   \u251c\u2500\u2500 elasticsearch/\n\u2502   \u251c\u2500\u2500 logstash/\n\u2502   \u2514\u2500\u2500 kibana/\n\u251c\u2500\u2500 docker-compose/          # Docker Compose files\n\u2502   \u251c\u2500\u2500 docker-compose.yml\n\u2502   \u251c\u2500\u2500 docker-compose.dev.yml\n\u2502   \u251c\u2500\u2500 docker-compose.prod.yml\n\u2502   \u2514\u2500\u2500 docker-compose.monitoring.yml\n\u251c\u2500\u2500 scripts/                 # Automation scripts\n\u2502   \u251c\u2500\u2500 build.sh\n\u2502   \u251c\u2500\u2500 deploy.sh\n\u2502   \u2514\u2500\u2500 cleanup.sh\n\u251c\u2500\u2500 env/                     # Environment files\n\u2502   \u251c\u2500\u2500 .env.development\n\u2502   \u251c\u2500\u2500 .env.staging\n\u2502   \u2514\u2500\u2500 .env.production\n\u2514\u2500\u2500 docs/                    # Documentation\n    \u251c\u2500\u2500 deployment.md\n    \u2514\u2500\u2500 troubleshooting.md\n</code></pre>"},{"location":"docker/docker-project/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"docker/docker-project/#development-environment","title":"Development Environment","text":"<pre><code># Clone and setup\ncd docker-project\n\n# Start development environment\ndocker-compose -f docker-compose/docker-compose.dev.yml up -d\n\n# View logs\ndocker-compose -f docker-compose/docker-compose.dev.yml logs -f\n</code></pre>"},{"location":"docker/docker-project/#production-environment","title":"Production Environment","text":"<pre><code># Build production images\n./scripts/build.sh\n\n# Deploy production stack\n./scripts/deploy.sh production\n\n# Monitor services\ndocker-compose -f docker-compose/docker-compose.monitoring.yml up -d\n</code></pre>"},{"location":"docker/docker-project/#services-included","title":"\ud83d\udccb Services Included","text":"<ul> <li>Frontend: React/Vue.js with Nginx</li> <li>Backend: Python/Node.js API</li> <li>Database: PostgreSQL with backup</li> <li>Cache: Redis</li> <li>Reverse Proxy: Nginx Load Balancer</li> <li>Monitoring: Prometheus + Grafana</li> <li>Logging: ELK Stack</li> <li>Security: SSL certificates, secrets management</li> </ul>"},{"location":"docker/docker-project/#features","title":"\ud83d\udd27 Features","text":"<ul> <li>Multi-stage Docker builds</li> <li>Environment-specific configurations</li> <li>Auto-scaling and health checks</li> <li>Monitoring and logging integration</li> <li>CI/CD ready configurations</li> <li>Security best practices</li> <li>Performance optimization</li> </ul>"},{"location":"docker/docker-project/docs/deployment/","title":"Deployment Guide","text":""},{"location":"docker/docker-project/docs/deployment/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker Engine 20.10+</li> <li>Docker Compose 2.0+</li> <li>Minimum 4GB RAM</li> <li>20GB disk space</li> </ul>"},{"location":"docker/docker-project/docs/deployment/#environment-setup","title":"Environment Setup","text":""},{"location":"docker/docker-project/docs/deployment/#development","title":"Development","text":"<pre><code># Start development environment\n./scripts/deploy.sh development\n\n# Access services\nFrontend: http://localhost:3000\nBackend: http://localhost:8080\nDatabase: localhost:5432\nRedis: localhost:6379\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#staging","title":"Staging","text":"<pre><code># Deploy to staging\n./scripts/build.sh v1.0.0\n./scripts/deploy.sh staging\n\n# Run tests\ndocker-compose exec backend pytest\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#production","title":"Production","text":"<pre><code># Build production images\n./scripts/build.sh v1.0.0 push\n\n# Deploy to production\n./scripts/deploy.sh production\n\n# Verify deployment\n./scripts/health-check.sh\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#monitoring","title":"Monitoring","text":"<ul> <li>Grafana: http://localhost:3000 (admin/admin123)</li> <li>Prometheus: http://localhost:9090</li> <li>AlertManager: http://localhost:9093</li> </ul>"},{"location":"docker/docker-project/docs/deployment/#logging","title":"Logging","text":"<ul> <li>Kibana: http://localhost:5601</li> <li>Elasticsearch: http://localhost:9200</li> </ul>"},{"location":"docker/docker-project/docs/deployment/#backup-recovery","title":"Backup &amp; Recovery","text":"<pre><code># Database backup\ndocker-compose exec postgres pg_dump -U appuser myapp &gt; backup.sql\n\n# Volume backup\ndocker run --rm -v postgres_data:/data -v $(pwd):/backup alpine tar czf /backup/postgres_backup.tar.gz /data\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#scaling","title":"Scaling","text":"<pre><code># Scale backend services\ndocker-compose up -d --scale backend=5\n\n# Monitor resource usage\ndocker stats\n</code></pre>"},{"location":"docker/docker-project/docs/deployment/#troubleshooting","title":"Troubleshooting","text":"<p>See troubleshooting.md for common issues and solutions.</p>"},{"location":"docker/docker-project/docs/troubleshooting/","title":"Troubleshooting Guide","text":""},{"location":"docker/docker-project/docs/troubleshooting/#common-issues","title":"Common Issues","text":""},{"location":"docker/docker-project/docs/troubleshooting/#container-wont-start","title":"Container Won't Start","text":"<pre><code># Check container logs\ndocker-compose logs service-name\n\n# Check container status\ndocker-compose ps\n\n# Restart specific service\ndocker-compose restart service-name\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#database-connection-issues","title":"Database Connection Issues","text":"<pre><code># Check database connectivity\ndocker-compose exec backend ping postgres\n\n# Check database logs\ndocker-compose logs postgres\n\n# Reset database\ndocker-compose down -v\ndocker-compose up -d postgres\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#performance-issues","title":"Performance Issues","text":"<pre><code># Monitor resource usage\ndocker stats\n\n# Check container limits\ndocker inspect container-name | grep -A 10 \"Memory\"\n\n# Analyze slow queries\ndocker-compose exec postgres pg_stat_statements\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#network-issues","title":"Network Issues","text":"<pre><code># List networks\ndocker network ls\n\n# Inspect network\ndocker network inspect network-name\n\n# Test connectivity\ndocker-compose exec backend ping frontend\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#storage-issues","title":"Storage Issues","text":"<pre><code># Check disk usage\ndocker system df\n\n# Clean up unused resources\ndocker system prune -a\n\n# Check volume usage\ndocker volume ls\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#monitoring-alerts","title":"Monitoring Alerts","text":""},{"location":"docker/docker-project/docs/troubleshooting/#high-cpu-usage","title":"High CPU Usage","text":"<ul> <li>Scale services: <code>docker-compose up -d --scale backend=3</code></li> <li>Check resource limits</li> <li>Optimize application code</li> </ul>"},{"location":"docker/docker-project/docs/troubleshooting/#memory-leaks","title":"Memory Leaks","text":"<ul> <li>Restart affected containers</li> <li>Check application logs</li> <li>Monitor memory patterns</li> </ul>"},{"location":"docker/docker-project/docs/troubleshooting/#database-performance","title":"Database Performance","text":"<ul> <li>Analyze slow queries</li> <li>Check connection pool settings</li> <li>Consider read replicas</li> </ul>"},{"location":"docker/docker-project/docs/troubleshooting/#emergency-procedures","title":"Emergency Procedures","text":""},{"location":"docker/docker-project/docs/troubleshooting/#complete-system-recovery","title":"Complete System Recovery","text":"<pre><code># Stop all services\n./scripts/cleanup.sh production\n\n# Restore from backup\n./scripts/restore.sh backup-file\n\n# Redeploy\n./scripts/deploy.sh production\n</code></pre>"},{"location":"docker/docker-project/docs/troubleshooting/#rollback-deployment","title":"Rollback Deployment","text":"<pre><code># Rollback to previous version\n./scripts/deploy.sh production v1.0.0\n\n# Verify rollback\n./scripts/health-check.sh\n</code></pre>"},{"location":"docker/docker-project/templates/","title":"Docker Templates for Every Project Type","text":""},{"location":"docker/docker-project/templates/#complete-template-structure","title":"\ud83d\udcc1 Complete Template Structure","text":"<pre><code>templates/\n\u251c\u2500\u2500 web-frameworks/          # Web application frameworks\n\u2502   \u251c\u2500\u2500 react/              # React.js applications\n\u2502   \u251c\u2500\u2500 vue/                # Vue.js applications\n\u2502   \u251c\u2500\u2500 angular/            # Angular applications\n\u2502   \u251c\u2500\u2500 nextjs/             # Next.js applications\n\u2502   \u251c\u2500\u2500 nodejs/             # Node.js backend\n\u2502   \u251c\u2500\u2500 python-django/      # Django applications\n\u2502   \u251c\u2500\u2500 python-flask/       # Flask applications\n\u2502   \u251c\u2500\u2500 python-fastapi/     # FastAPI applications\n\u2502   \u251c\u2500\u2500 java-spring/        # Spring Boot applications\n\u2502   \u251c\u2500\u2500 dotnet/             # .NET Core applications\n\u2502   \u251c\u2500\u2500 php-laravel/        # Laravel applications\n\u2502   \u251c\u2500\u2500 golang/             # Go applications\n\u2502   \u2514\u2500\u2500 ruby-rails/         # Ruby on Rails\n\u251c\u2500\u2500 mobile/                 # Mobile development\n\u2502   \u251c\u2500\u2500 react-native/       # React Native\n\u2502   \u251c\u2500\u2500 flutter/            # Flutter\n\u2502   \u2514\u2500\u2500 ionic/              # Ionic\n\u251c\u2500\u2500 desktop/                # Desktop applications\n\u2502   \u251c\u2500\u2500 electron/           # Electron apps\n\u2502   \u251c\u2500\u2500 qt/                 # Qt applications\n\u2502   \u2514\u2500\u2500 tauri/              # Tauri apps\n\u251c\u2500\u2500 databases/              # Database configurations\n\u2502   \u251c\u2500\u2500 postgresql/         # PostgreSQL\n\u2502   \u251c\u2500\u2500 mysql/              # MySQL\n\u2502   \u251c\u2500\u2500 mongodb/            # MongoDB\n\u2502   \u251c\u2500\u2500 redis/              # Redis\n\u2502   \u251c\u2500\u2500 elasticsearch/      # Elasticsearch\n\u2502   \u2514\u2500\u2500 cassandra/          # Cassandra\n\u251c\u2500\u2500 ai-ml/                  # AI/ML projects\n\u2502   \u251c\u2500\u2500 tensorflow/         # TensorFlow\n\u2502   \u251c\u2500\u2500 pytorch/            # PyTorch\n\u2502   \u251c\u2500\u2500 jupyter/            # Jupyter notebooks\n\u2502   \u2514\u2500\u2500 mlflow/             # MLflow\n\u251c\u2500\u2500 blockchain/             # Blockchain projects\n\u2502   \u251c\u2500\u2500 ethereum/           # Ethereum DApps\n\u2502   \u251c\u2500\u2500 solana/             # Solana programs\n\u2502   \u2514\u2500\u2500 hyperledger/        # Hyperledger Fabric\n\u251c\u2500\u2500 game-development/       # Game development\n\u2502   \u251c\u2500\u2500 unity/              # Unity games\n\u2502   \u251c\u2500\u2500 unreal/             # Unreal Engine\n\u2502   \u2514\u2500\u2500 godot/              # Godot games\n\u251c\u2500\u2500 iot-edge/               # IoT and Edge computing\n\u2502   \u251c\u2500\u2500 mqtt/               # MQTT brokers\n\u2502   \u251c\u2500\u2500 arm-devices/        # ARM-based devices\n\u2502   \u2514\u2500\u2500 edge-computing/     # Edge computing\n\u251c\u2500\u2500 enterprise/             # Enterprise applications\n\u2502   \u251c\u2500\u2500 microservices/      # Microservices patterns\n\u2502   \u251c\u2500\u2500 message-queues/     # Message queues\n\u2502   \u2514\u2500\u2500 api-gateways/       # API gateways\n\u2514\u2500\u2500 devops-tools/           # DevOps and infrastructure\n    \u251c\u2500\u2500 ci-cd/              # CI/CD tools\n    \u251c\u2500\u2500 monitoring/         # Monitoring tools\n    \u251c\u2500\u2500 logging/            # Logging tools\n    \u2514\u2500\u2500 security/           # Security tools\n</code></pre>"},{"location":"docker/docker-project/templates/#usage-instructions","title":"\ud83d\ude80 Usage Instructions","text":""},{"location":"docker/docker-project/templates/#copy-template","title":"Copy Template","text":"<pre><code># Copy any template to your project\ncp -r templates/web-frameworks/react/ my-react-project/\ncd my-react-project/\n</code></pre>"},{"location":"docker/docker-project/templates/#quick-start","title":"Quick Start","text":"<pre><code># Build and run\ndocker-compose up -d\n\n# Or use Makefile\nmake dev-setup\n</code></pre>"},{"location":"docker/docker-project/templates/#production-deployment","title":"Production Deployment","text":"<pre><code># Build production images\nmake build ENV=production\n\n# Deploy to production\nmake deploy ENV=production\n</code></pre>"},{"location":"docker/docker-project/templates/#what-each-template-includes","title":"\ud83d\udccb What Each Template Includes","text":"<ul> <li>\u2705 Multi-stage Dockerfile optimized for production</li> <li>\u2705 Docker Compose for development and production</li> <li>\u2705 Health checks and monitoring</li> <li>\u2705 Security best practices</li> <li>\u2705 Environment configurations</li> <li>\u2705 CI/CD pipeline templates</li> <li>\u2705 Testing setup</li> <li>\u2705 Documentation</li> </ul> <p>Every template is production-ready and follows Docker best practices!</p>"},{"location":"git/roadmap/","title":"Git Complete Learning Roadmap - Chi ti\u1ebft t\u1eebng topic","text":""},{"location":"git/roadmap/#muc-tieu-master-git-tu-a-z-trong-6-8-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master Git t\u1eeb A-Z trong 6-8 th\u00e1ng","text":""},{"location":"git/roadmap/#giai-oan-1-git-foundation-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: GIT FOUNDATION (Th\u00e1ng 1-2)","text":""},{"location":"git/roadmap/#week-1-git-fundamentals","title":"Week 1: Git Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"What is Git version control system\"</li> <li>[ ] \"Git vs SVN vs Mercurial comparison\"</li> <li>[ ] \"Distributed version control vs centralized\"</li> <li>[ ] \"Git history and Linus Torvalds\"</li> <li>[ ] \"Why use version control system\"</li> <li>[ ] \"Git installation Windows MacOS Linux\"</li> <li>[ ] \"Git configuration first time setup\"</li> <li>[ ] \"Git working directory staging area repository\"</li> </ul> <p>Practical Setup:</p> <ul> <li>[ ] Install Git on your system</li> <li>[ ] Configure Git username and email</li> <li>[ ] Understand Git three-tree architecture</li> <li>[ ] Create first Git repository</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Installation verification\ngit --version\nwhich git\n\n# First-time configuration\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\ngit config --global init.defaultBranch main\ngit config --list\ngit config --global --edit\n</code></pre>"},{"location":"git/roadmap/#week-2-basic-git-operations","title":"Week 2: Basic Git Operations","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git init create new repository\"</li> <li>[ ] \"Git add staging area tutorial\"</li> <li>[ ] \"Git commit message best practices\"</li> <li>[ ] \"Git status check repository state\"</li> <li>[ ] \"Git log view commit history\"</li> <li>[ ] \"Git diff compare changes\"</li> <li>[ ] \"Git repository states working staging committed\"</li> <li>[ ] \"Git file lifecycle untracked modified staged\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Repository creation\ngit init\ngit init --bare\ngit clone &lt;url&gt;\n\n# Basic workflow\ngit status\ngit add filename\ngit add .\ngit add -A\ngit add -u\ngit commit -m \"commit message\"\ngit commit -am \"add and commit\"\n\n# Viewing changes\ngit diff\ngit diff --staged\ngit diff HEAD\ngit log\ngit log --oneline\ngit log --graph\n</code></pre>"},{"location":"git/roadmap/#week-3-working-with-files","title":"Week 3: Working with Files","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git add remove files from repository\"</li> <li>[ ] \"Git rm delete files from Git\"</li> <li>[ ] \"Git mv rename move files\"</li> <li>[ ] \"Git reset unstage files\"</li> <li>[ ] \"Git checkout discard changes\"</li> <li>[ ] \"Git restore new way to discard changes\"</li> <li>[ ] \"Gitignore file patterns tutorial\"</li> <li>[ ] \"Git clean remove untracked files\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># File operations\ngit rm filename\ngit rm --cached filename\ngit mv old_name new_name\n\n# Undoing changes\ngit reset HEAD filename\ngit checkout -- filename\ngit restore filename\ngit restore --staged filename\n\n# Cleaning\ngit clean -n\ngit clean -f\ngit clean -fd\n\n# Gitignore\necho \"*.log\" &gt;&gt; .gitignore\necho \"node_modules/\" &gt;&gt; .gitignore\ngit add .gitignore\n</code></pre>"},{"location":"git/roadmap/#week-4-commit-history-navigation","title":"Week 4: Commit History &amp; Navigation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git log advanced options formatting\"</li> <li>[ ] \"Git show display commit details\"</li> <li>[ ] \"Git reflog reference logs\"</li> <li>[ ] \"Git checkout navigate commit history\"</li> <li>[ ] \"Git HEAD pointer explanation\"</li> <li>[ ] \"Git detached HEAD state\"</li> <li>[ ] \"Git commit SHA hash explained\"</li> <li>[ ] \"Git relative commit references HEAD~1 HEAD^\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Viewing history\ngit log --pretty=format:\"%h %s\"\ngit log --graph --all\ngit log --author=\"name\"\ngit log --since=\"2 weeks ago\"\ngit log --grep=\"bug\"\ngit log filename\n\n# Navigation\ngit show HEAD\ngit show commit_hash\ngit checkout commit_hash\ngit checkout HEAD~1\ngit checkout HEAD^\ngit reflog\n</code></pre>"},{"location":"git/roadmap/#giai-oan-2-branching-merging-thang-3","title":"\ud83c\udf3f GIAI \u0110O\u1ea0N 2: BRANCHING &amp; MERGING (Th\u00e1ng 3)","text":""},{"location":"git/roadmap/#week-5-git-branching-basics","title":"Week 5: Git Branching Basics","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git branch create switch delete\"</li> <li>[ ] \"Git branching model workflow\"</li> <li>[ ] \"Git branch vs tag difference\"</li> <li>[ ] \"Git checkout vs switch command\"</li> <li>[ ] \"Git branch naming conventions\"</li> <li>[ ] \"Git local vs remote branches\"</li> <li>[ ] \"Git tracking branches upstream\"</li> <li>[ ] \"Git branch strategies GitFlow GitHub Flow\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Branch creation and switching\ngit branch\ngit branch new_branch\ngit checkout new_branch\ngit switch new_branch\ngit checkout -b feature_branch\ngit switch -c feature_branch\n\n# Branch management\ngit branch -v\ngit branch -a\ngit branch -r\ngit branch -d branch_name\ngit branch -D branch_name\ngit branch -m old_name new_name\n</code></pre>"},{"location":"git/roadmap/#week-6-merging-strategies","title":"Week 6: Merging Strategies","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git merge fast-forward vs three-way\"</li> <li>[ ] \"Git merge commit vs squash merge\"</li> <li>[ ] \"Git merge conflicts resolution\"</li> <li>[ ] \"Git rebase vs merge difference\"</li> <li>[ ] \"Git merge strategies recursive octopus\"</li> <li>[ ] \"Git merge tools configuration\"</li> <li>[ ] \"Git cherry-pick specific commits\"</li> <li>[ ] \"Git merge --no-ff preserve history\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Merging\ngit merge branch_name\ngit merge --no-ff branch_name\ngit merge --squash branch_name\n\n# Conflict resolution\ngit status (during conflict)\ngit add resolved_file\ngit commit (complete merge)\ngit merge --abort\n\n# Cherry-picking\ngit cherry-pick commit_hash\ngit cherry-pick -n commit_hash\n\n# Merge tools\ngit mergetool\ngit config --global merge.tool vimdiff\n</code></pre>"},{"location":"git/roadmap/#week-7-rebasing-mastery","title":"Week 7: Rebasing Mastery","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git rebase interactive tutorial\"</li> <li>[ ] \"Git rebase vs merge when to use\"</li> <li>[ ] \"Git rebase --onto advanced usage\"</li> <li>[ ] \"Git rebase conflicts resolution\"</li> <li>[ ] \"Git rebase --continue --skip --abort\"</li> <li>[ ] \"Git interactive rebase squash fixup\"</li> <li>[ ] \"Git rebase rewrite commit history\"</li> <li>[ ] \"Golden rule of rebasing public commits\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Basic rebase\ngit rebase master\ngit rebase --onto master server client\n\n# Interactive rebase\ngit rebase -i HEAD~3\ngit rebase -i commit_hash\n\n# Rebase operations\ngit rebase --continue\ngit rebase --skip\ngit rebase --abort\n\n# Rebase options in interactive mode\n# pick, reword, edit, squash, fixup, drop\n</code></pre>"},{"location":"git/roadmap/#week-8-advanced-history-manipulation","title":"Week 8: Advanced History Manipulation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git reset soft mixed hard difference\"</li> <li>[ ] \"Git revert vs reset vs checkout\"</li> <li>[ ] \"Git reflog recover lost commits\"</li> <li>[ ] \"Git filter-branch rewrite history\"</li> <li>[ ] \"Git BFG repo cleaner tool\"</li> <li>[ ] \"Git commit --amend modify last commit\"</li> <li>[ ] \"Git stash save work in progress\"</li> <li>[ ] \"Git bisect find bug-introducing commit\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Reset variations\ngit reset --soft HEAD~1\ngit reset --mixed HEAD~1\ngit reset --hard HEAD~1\n\n# Reverting\ngit revert commit_hash\ngit revert -n commit_hash\n\n# Stashing\ngit stash\ngit stash push -m \"message\"\ngit stash list\ngit stash apply\ngit stash pop\ngit stash drop\n\n# History rewriting\ngit commit --amend\ngit commit --amend --no-edit\ngit filter-branch --tree-filter 'rm -f password.txt' HEAD\n</code></pre>"},{"location":"git/roadmap/#giai-oan-3-remote-repositories-thang-4","title":"\ud83c\udf10 GIAI \u0110O\u1ea0N 3: REMOTE REPOSITORIES (Th\u00e1ng 4)","text":""},{"location":"git/roadmap/#week-9-remote-repositories-setup","title":"Week 9: Remote Repositories Setup","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git remote add origin push pull\"</li> <li>[ ] \"Git clone vs fork difference\"</li> <li>[ ] \"Git remote upstream downstream\"</li> <li>[ ] \"SSH keys for Git authentication\"</li> <li>[ ] \"HTTPS vs SSH Git authentication\"</li> <li>[ ] \"Git credential manager setup\"</li> <li>[ ] \"Git remote URL change update\"</li> <li>[ ] \"Multiple Git remotes management\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Remote management\ngit remote\ngit remote -v\ngit remote add origin &lt;url&gt;\ngit remote add upstream &lt;url&gt;\ngit remote set-url origin &lt;new_url&gt;\ngit remote remove origin\n\n# SSH setup\nssh-keygen -t rsa -b 4096 -C \"email@example.com\"\nssh-add ~/.ssh/id_rsa\nssh -T git@github.com\n\n# Credential setup\ngit config --global credential.helper cache\ngit config --global credential.helper store\n</code></pre>"},{"location":"git/roadmap/#week-10-push-pull-operations","title":"Week 10: Push &amp; Pull Operations","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git push pull fetch difference\"</li> <li>[ ] \"Git push force vs force-with-lease\"</li> <li>[ ] \"Git pull vs fetch and merge\"</li> <li>[ ] \"Git tracking branches setup\"</li> <li>[ ] \"Git push upstream set-upstream\"</li> <li>[ ] \"Git pull request workflow\"</li> <li>[ ] \"Git fetch all branches from remote\"</li> <li>[ ] \"Git push tags to remote repository\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Pushing\ngit push origin main\ngit push -u origin feature_branch\ngit push --all origin\ngit push --tags\ngit push --force-with-lease\n\n# Pulling and fetching\ngit fetch origin\ngit fetch --all\ngit pull origin main\ngit pull --rebase origin main\n\n# Tracking branches\ngit branch -u origin/main\ngit push --set-upstream origin feature_branch\ngit branch -vv\n</code></pre>"},{"location":"git/roadmap/#week-11-collaboration-workflows","title":"Week 11: Collaboration Workflows","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git workflow patterns comparison\"</li> <li>[ ] \"Centralized workflow Git\"</li> <li>[ ] \"Feature branch workflow\"</li> <li>[ ] \"Gitflow workflow branching model\"</li> <li>[ ] \"Forking workflow open source\"</li> <li>[ ] \"GitHub flow vs Git flow\"</li> <li>[ ] \"Git collaboration best practices\"</li> <li>[ ] \"Code review process with Git\"</li> </ul> <p>Workflow Patterns:</p> <pre><code># Feature Branch Workflow\ngit checkout -b feature/new-feature\n# ... make changes ...\ngit push -u origin feature/new-feature\n# ... create pull request ...\n\n# Gitflow commands (with git-flow extension)\ngit flow init\ngit flow feature start new-feature\ngit flow feature finish new-feature\ngit flow release start 1.0.0\ngit flow hotfix start critical-bug\n\n# Forking Workflow\ngit clone &lt;your-fork&gt;\ngit remote add upstream &lt;original-repo&gt;\ngit fetch upstream\ngit checkout -b feature-branch upstream/main\n</code></pre>"},{"location":"git/roadmap/#week-12-conflict-resolution-collaboration","title":"Week 12: Conflict Resolution &amp; Collaboration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git merge conflicts advanced resolution\"</li> <li>[ ] \"Git rebase conflicts during collaboration\"</li> <li>[ ] \"Git conflict resolution tools comparison\"</li> <li>[ ] \"Git merge vs rebase in team environment\"</li> <li>[ ] \"Git hooks for team collaboration\"</li> <li>[ ] \"Git attributes configuration\"</li> <li>[ ] \"Large file handling Git LFS\"</li> <li>[ ] \"Git submodules vs subtrees\"</li> </ul> <p>Advanced Conflict Resolution:</p> <pre><code># Merge conflict tools\ngit config --global merge.tool kdiff3\ngit config --global merge.tool vscode\ngit mergetool --tool=vimdiff\n\n# During conflicts\ngit status\ngit diff --ours filename\ngit diff --theirs filename\ngit checkout --ours filename\ngit checkout --theirs filename\n\n# Git LFS\ngit lfs install\ngit lfs track \"*.psd\"\ngit add .gitattributes\ngit add large_file.psd\ngit commit -m \"Add large file\"\n</code></pre>"},{"location":"git/roadmap/#giai-oan-4-advanced-git-techniques-thang-5-6","title":"\ud83d\udd27 GIAI \u0110O\u1ea0N 4: ADVANCED GIT TECHNIQUES (Th\u00e1ng 5-6)","text":""},{"location":"git/roadmap/#week-13-git-internals","title":"Week 13: Git Internals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git objects blob tree commit tag\"</li> <li>[ ] \"Git SHA-1 hash algorithm\"</li> <li>[ ] \"Git plumbing vs porcelain commands\"</li> <li>[ ] \"Git refs heads tags remotes\"</li> <li>[ ] \"Git packed objects and delta compression\"</li> <li>[ ] \"Git garbage collection and optimization\"</li> <li>[ ] \"Git repository structure .git folder\"</li> <li>[ ] \"Git index file format\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Plumbing commands\ngit cat-file -t &lt;hash&gt;\ngit cat-file -p &lt;hash&gt;\ngit ls-tree HEAD\ngit rev-parse HEAD\ngit symbolic-ref HEAD\n\n# Repository inspection\nfind .git/objects -type f\ngit count-objects -v\ngit fsck\ngit gc --aggressive\n\n# Low-level operations\ngit hash-object filename\ngit update-index --add filename\ngit write-tree\n</code></pre>"},{"location":"git/roadmap/#week-14-git-hooks-automation","title":"Week 14: Git Hooks &amp; Automation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git hooks tutorial pre-commit post-commit\"</li> <li>[ ] \"Client-side vs server-side Git hooks\"</li> <li>[ ] \"Git pre-push hook prevent bad commits\"</li> <li>[ ] \"Git commit-msg hook enforce standards\"</li> <li>[ ] \"Husky Git hooks for JavaScript projects\"</li> <li>[ ] \"Git hooks continuous integration\"</li> <li>[ ] \"Git hook scripts bash Python\"</li> <li>[ ] \"Git hooks security and validation\"</li> </ul> <p>Hook Examples:</p> <pre><code># Hook locations\nls .git/hooks/\n\n# Pre-commit hook example\n#!/bin/sh\n# .git/hooks/pre-commit\nnpm test\nif [ $? -ne 0 ]; then\n    echo \"Tests must pass before commit!\"\n    exit 1\nfi\n\n# Commit-msg hook\n#!/bin/sh\n# .git/hooks/commit-msg\ngrep -q \"^(feat|fix|docs|style|refactor|test|chore):\" \"$1\"\nif [ $? -ne 0 ]; then\n    echo \"Commit message must follow conventional commits format!\"\n    exit 1\nfi\n\n# Make hooks executable\nchmod +x .git/hooks/pre-commit\n</code></pre>"},{"location":"git/roadmap/#week-15-git-workflows-for-teams","title":"Week 15: Git Workflows for Teams","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git team workflows comparison\"</li> <li>[ ] \"Trunk-based development with Git\"</li> <li>[ ] \"Release management with Git tags\"</li> <li>[ ] \"Semantic versioning with Git\"</li> <li>[ ] \"Git monorepo vs multiple repositories\"</li> <li>[ ] \"Git strategies for microservices\"</li> <li>[ ] \"Git branching policies enforcement\"</li> <li>[ ] \"Code review best practices Git\"</li> </ul> <p>Team Workflow Commands:</p> <pre><code># Release management\ngit tag -a v1.0.0 -m \"Release version 1.0.0\"\ngit tag -l \"v*\"\ngit push origin --tags\ngit checkout v1.0.0\n\n# Semantic versioning\ngit describe --tags\ngit describe --tags --abbrev=0\n\n# Protected branch workflow\ngit checkout -b feature/JIRA-123\ngit push -u origin feature/JIRA-123\n# ... create pull request with required reviews ...\n\n# Squash merge workflow\ngit checkout main\ngit merge --squash feature/JIRA-123\ngit commit -m \"feat: add new feature (JIRA-123)\"\n</code></pre>"},{"location":"git/roadmap/#week-16-git-performance-optimization","title":"Week 16: Git Performance &amp; Optimization","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git large repository optimization\"</li> <li>[ ] \"Git shallow clone for CI/CD\"</li> <li>[ ] \"Git partial clone and sparse checkout\"</li> <li>[ ] \"Git LFS large file storage\"</li> <li>[ ] \"Git bundle for offline transfer\"</li> <li>[ ] \"Git maintenance and housekeeping\"</li> <li>[ ] \"Git alternates share objects\"</li> <li>[ ] \"Git worktree multiple working directories\"</li> </ul> <p>Performance Commands:</p> <pre><code># Shallow clones\ngit clone --depth 1 &lt;url&gt;\ngit clone --shallow-since=\"2 years ago\" &lt;url&gt;\n\n# Sparse checkout\ngit config core.sparseCheckout true\necho \"src/\" &gt; .git/info/sparse-checkout\ngit read-tree -m -u HEAD\n\n# Worktrees\ngit worktree add ../feature-branch feature-branch\ngit worktree list\ngit worktree remove ../feature-branch\n\n# Bundle operations\ngit bundle create repo.bundle HEAD main\ngit clone repo.bundle repo-copy\n</code></pre>"},{"location":"git/roadmap/#giai-oan-5-git-expertise-thang-7-8","title":"\ud83d\ude80 GIAI \u0110O\u1ea0N 5: GIT EXPERTISE (Th\u00e1ng 7-8)","text":""},{"location":"git/roadmap/#week-17-advanced-git-commands","title":"Week 17: Advanced Git Commands","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git blame annotate code changes\"</li> <li>[ ] \"Git grep search in repository history\"</li> <li>[ ] \"Git log advanced filtering options\"</li> <li>[ ] \"Git shortlog contributor statistics\"</li> <li>[ ] \"Git notes add metadata to commits\"</li> <li>[ ] \"Git archive create project snapshots\"</li> <li>[ ] \"Git describe version from tags\"</li> <li>[ ] \"Git bisect automated bug hunting\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Code investigation\ngit blame filename\ngit blame -L 10,20 filename\ngit annotate filename\n\n# Searching\ngit grep \"function_name\"\ngit grep -n \"TODO\"\ngit log -S \"search_term\" --oneline\ngit log --grep=\"bug\" --author=\"john\"\n\n# Statistics\ngit shortlog -s -n\ngit log --pretty=format:\"%an\" | sort | uniq -c | sort -nr\n\n# Automated debugging\ngit bisect start\ngit bisect bad HEAD\ngit bisect good v1.0\ngit bisect run test_script.sh\n</code></pre>"},{"location":"git/roadmap/#week-18-git-integration-tools","title":"Week 18: Git Integration &amp; Tools","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git IDE integration VSCode IntelliJ\"</li> <li>[ ] \"Git GUI tools comparison\"</li> <li>[ ] \"Git aliases and shortcuts\"</li> <li>[ ] \"Git and continuous integration\"</li> <li>[ ] \"Git with Docker containers\"</li> <li>[ ] \"Git server setup GitLab Gitea\"</li> <li>[ ] \"Git migration from SVN Perforce\"</li> <li>[ ] \"Git backup and disaster recovery\"</li> </ul> <p>Integration Setup:</p> <pre><code># Git aliases\ngit config --global alias.st status\ngit config --global alias.co checkout\ngit config --global alias.br branch\ngit config --global alias.ci commit\ngit config --global alias.unstage 'reset HEAD --'\ngit config --global alias.last 'log -1 HEAD'\ngit config --global alias.visual '!gitk'\n\n# Advanced aliases\ngit config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit\"\n\n# Git in CI/CD\n# .github/workflows/main.yml\ngit fetch --prune --unshallow\ngit describe --tags --exact-match 2&gt;/dev/null || git symbolic-ref -q --short HEAD\n</code></pre>"},{"location":"git/roadmap/#week-19-git-security-best-practices","title":"Week 19: Git Security &amp; Best Practices","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git security best practices\"</li> <li>[ ] \"Git commit signing GPG keys\"</li> <li>[ ] \"Git credential security management\"</li> <li>[ ] \"Git secrets detection prevention\"</li> <li>[ ] \"Git repository audit and compliance\"</li> <li>[ ] \"Git access control and permissions\"</li> <li>[ ] \"Git vulnerability assessment\"</li> <li>[ ] \"Git forensics and investigation\"</li> </ul> <p>Security Commands:</p> <pre><code># GPG signing\ngpg --gen-key\ngit config --global user.signingkey &lt;key-id&gt;\ngit config --global commit.gpgsign true\ngit commit -S -m \"signed commit\"\ngit log --show-signature\n\n# Credential security\ngit config --global credential.helper manager\ngit credential-manager-core configure\ngit-secrets --install\ngit-secrets --register-aws\n\n# Repository audit\ngit log --format=fuller\ngit log --all --full-history -- sensitive-file\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch sensitive-file' --prune-empty --tag-name-filter cat -- --all\n</code></pre>"},{"location":"git/roadmap/#week-20-git-mastery-projects","title":"Week 20: Git Mastery Projects","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git workflow automation scripts\"</li> <li>[ ] \"Git repository analysis tools\"</li> <li>[ ] \"Custom Git commands development\"</li> <li>[ ] \"Git extension development\"</li> <li>[ ] \"Git server administration\"</li> <li>[ ] \"Git migration strategies\"</li> <li>[ ] \"Git training and mentoring\"</li> <li>[ ] \"Git troubleshooting complex issues\"</li> </ul> <p>Master-level Projects:</p> <pre><code># Custom Git commands\n# Create script: git-feature\n#!/bin/bash\ngit checkout -b feature/$1\ngit push -u origin feature/$1\n\n# Make executable and add to PATH\nchmod +x git-feature\n# Now can use: git feature new-awesome-feature\n\n# Repository statistics script\n#!/bin/bash\necho \"Repository Statistics:\"\necho \"Total commits: $(git rev-list --all --count)\"\necho \"Contributors: $(git shortlog -s -n | wc -l)\"\necho \"Total files: $(git ls-files | wc -l)\"\necho \"Repository size: $(du -sh .git)\"\n</code></pre>"},{"location":"git/roadmap/#learning-resources-by-category","title":"\ud83d\udcda LEARNING RESOURCES BY CATEGORY","text":""},{"location":"git/roadmap/#video-courses","title":"\ud83c\udfa5 Video Courses","text":"<ul> <li>\"Git Complete: The Definitive Guide\" - Udemy</li> <li>\"Git Going Fast: One Hour Git Crash Course\" - Udemy</li> <li>\"Git and GitHub for Beginners - Crash Course\" - freeCodeCamp</li> <li>\"Advanced Git Tutorials\" - Atlassian</li> <li>\"Pro Git Concepts\" - Pluralsight</li> </ul>"},{"location":"git/roadmap/#books-to-read","title":"\ud83d\udcd6 Books to Read","text":"<ul> <li>\"Pro Git\" - Scott Chacon (Free online)</li> <li>\"Git Pocket Guide\" - Richard E. Silverman</li> <li>\"Version Control with Git\" - Jon Loeliger</li> <li>\"Git Internals\" - Scott Chacon</li> <li>\"Learn Version Control with Git\" - Tower</li> </ul>"},{"location":"git/roadmap/#practice-platforms","title":"\ud83d\udee0\ufe0f Practice Platforms","text":"<ul> <li>\"Learn Git Branching\" - Interactive visual tutorial</li> <li>\"Git-it Desktop App\" - Hands-on Git tutorial</li> <li>\"Katacoda Git Scenarios\" - Browser-based practice</li> <li>\"GitHub Learning Lab\" - Interactive courses</li> <li>\"Oh My Git!\" - Game to learn Git</li> </ul>"},{"location":"git/roadmap/#git-certifications-assessments","title":"\ud83c\udfc5 Git Certifications &amp; Assessments","text":"<ul> <li>GitHub Certified Developer</li> <li>Atlassian Git Skills Assessment</li> <li>GitLab Certified Git Associate</li> <li>Stack Overflow Developer Survey Git Section</li> </ul>"},{"location":"git/roadmap/#daily-practice-checklist","title":"\u2705 DAILY PRACTICE CHECKLIST","text":""},{"location":"git/roadmap/#morning-warm-up-15-mins","title":"Morning Warm-up (15 mins)","text":"<ul> <li>[ ] Practice 5 Git commands from memory</li> <li>[ ] Review Git status of current projects</li> <li>[ ] Read 1 Git tip or best practice</li> <li>[ ] Check Git configuration settings</li> </ul>"},{"location":"git/roadmap/#active-practice-30-45-mins","title":"Active Practice (30-45 mins)","text":"<ul> <li>[ ] Work on Git exercises from tutorial sites</li> <li>[ ] Practice advanced Git scenarios</li> <li>[ ] Experiment with new Git commands</li> <li>[ ] Contribute to open source projects</li> </ul>"},{"location":"git/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document new Git commands learned</li> <li>[ ] Review Git aliases and shortcuts</li> <li>[ ] Plan next day's Git learning topics</li> <li>[ ] Update personal Git cheat sheet</li> </ul>"},{"location":"git/roadmap/#git-mastery-milestones","title":"\ud83c\udfaf GIT MASTERY MILESTONES","text":""},{"location":"git/roadmap/#month-1-2-foundation","title":"Month 1-2: Foundation","text":"<ul> <li>[ ] Understand Git fundamentals</li> <li>[ ] Master basic Git workflow</li> <li>[ ] Comfortable with branching and merging</li> <li>[ ] Can resolve simple conflicts</li> </ul>"},{"location":"git/roadmap/#month-3-4-intermediate","title":"Month 3-4: Intermediate","text":"<ul> <li>[ ] Proficient with rebasing</li> <li>[ ] Understand remote repositories</li> <li>[ ] Can collaborate effectively</li> <li>[ ] Know multiple Git workflows</li> </ul>"},{"location":"git/roadmap/#month-5-6-advanced","title":"Month 5-6: Advanced","text":"<ul> <li>[ ] Understand Git internals</li> <li>[ ] Can write Git hooks</li> <li>[ ] Optimize Git performance</li> <li>[ ] Handle complex scenarios</li> </ul>"},{"location":"git/roadmap/#month-7-8-expert","title":"Month 7-8: Expert","text":"<ul> <li>[ ] Master all Git commands</li> <li>[ ] Can teach Git to others</li> <li>[ ] Automate Git workflows</li> <li>[ ] Contribute to Git ecosystem</li> </ul> <p>Git Mastery Philosophy: \"Version control is not just about code, it's about understanding the evolution of your project!\"</p>"},{"location":"git/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"git/roadmap/#day-1-setup-first-steps","title":"Day 1: Setup &amp; First Steps","text":"<ol> <li>Install Git and configure basic settings</li> <li>Create your first repository</li> <li>Make your first commits</li> <li>Connect to GitHub/GitLab</li> </ol>"},{"location":"git/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic Git tutorial</li> <li>[ ] Set up Git aliases for efficiency</li> <li>[ ] Join Git community forums</li> <li>[ ] Start using Git for personal projects</li> </ul>"},{"location":"git/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Master fundamental Git commands</li> <li>[ ] Complete first collaborative project</li> <li>[ ] Resolve first merge conflict</li> <li>[ ] Write first Git hook</li> </ul> <p>Remember: Git mastery comes from daily practice and real-world application. Break things in a safe environment to learn how to fix them!</p>"},{"location":"iac/roadmap/","title":"Infrastructure as Code Complete Learning Roadmap","text":""},{"location":"iac/roadmap/#muc-tieu-master-infrastructure-as-code-trong-10-12-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master Infrastructure as Code trong 10-12 th\u00e1ng","text":""},{"location":"iac/roadmap/#giai-oan-1-iac-foundation-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: IAC FOUNDATION (Th\u00e1ng 1-2)","text":""},{"location":"iac/roadmap/#week-1-infrastructure-as-code-fundamentals","title":"Week 1: Infrastructure as Code Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"What is Infrastructure as Code IaC\"</li> <li>[ ] \"IaC benefits vs traditional infrastructure\"</li> <li>[ ] \"Declarative vs imperative infrastructure\"</li> <li>[ ] \"IaC tools comparison Terraform Ansible CloudFormation\"</li> <li>[ ] \"Infrastructure automation best practices\"</li> <li>[ ] \"Configuration management vs infrastructure provisioning\"</li> <li>[ ] \"Immutable infrastructure principles\"</li> <li>[ ] \"Infrastructure drift detection prevention\"</li> </ul> <p>Core Concepts:</p> <ul> <li>[ ] Infrastructure versioning</li> <li>[ ] Repeatability and consistency</li> <li>[ ] Disaster recovery automation</li> <li>[ ] Infrastructure testing</li> <li>[ ] Configuration drift management</li> </ul>"},{"location":"iac/roadmap/#week-2-cloud-fundamentals-for-iac","title":"Week 2: Cloud Fundamentals for IaC","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"AWS services overview for IaC\"</li> <li>[ ] \"Azure services for infrastructure automation\"</li> <li>[ ] \"Google Cloud Platform IaC services\"</li> <li>[ ] \"Multi-cloud infrastructure management\"</li> <li>[ ] \"Cloud provider APIs and SDKs\"</li> <li>[ ] \"Cloud resource naming conventions\"</li> <li>[ ] \"Cloud tagging strategies\"</li> <li>[ ] \"Cloud cost optimization with IaC\"</li> </ul> <p>Cloud Provider Setup:</p> <pre><code># AWS CLI setup\naws configure\naws sts get-caller-identity\n\n# Azure CLI setup\naz login\naz account show\n\n# GCP CLI setup\ngcloud auth login\ngcloud config set project PROJECT_ID\n</code></pre>"},{"location":"iac/roadmap/#week-3-version-control-for-infrastructure","title":"Week 3: Version Control for Infrastructure","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git workflow for infrastructure code\"</li> <li>[ ] \"Infrastructure code repository structure\"</li> <li>[ ] \"Branching strategies for IaC\"</li> <li>[ ] \"Code review process for infrastructure\"</li> <li>[ ] \"Gitignore patterns for IaC tools\"</li> <li>[ ] \"Infrastructure documentation standards\"</li> <li>[ ] \"Secrets management in IaC repositories\"</li> <li>[ ] \"Infrastructure change management\"</li> </ul> <p>Repository Structure:</p> <pre><code>infrastructure/\n\u251c\u2500\u2500 environments/\n\u2502   \u251c\u2500\u2500 dev/\n\u2502   \u251c\u2500\u2500 staging/\n\u2502   \u2514\u2500\u2500 prod/\n\u251c\u2500\u2500 modules/\n\u251c\u2500\u2500 policies/\n\u251c\u2500\u2500 scripts/\n\u2514\u2500\u2500 docs/\n</code></pre>"},{"location":"iac/roadmap/#week-4-iac-testing-validation","title":"Week 4: IaC Testing &amp; Validation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure testing strategies\"</li> <li>[ ] \"Terraform testing tools Terratest\"</li> <li>[ ] \"Ansible testing with Molecule\"</li> <li>[ ] \"CloudFormation testing and validation\"</li> <li>[ ] \"Infrastructure compliance testing\"</li> <li>[ ] \"Security testing for IaC\"</li> <li>[ ] \"Performance testing infrastructure\"</li> <li>[ ] \"Infrastructure smoke testing\"</li> </ul>"},{"location":"iac/roadmap/#giai-oan-2-terraform-mastery-thang-3-5","title":"\ud83c\udfd7\ufe0f GIAI \u0110O\u1ea0N 2: TERRAFORM MASTERY (Th\u00e1ng 3-5)","text":""},{"location":"iac/roadmap/#week-5-terraform-fundamentals","title":"Week 5: Terraform Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform installation and setup\"</li> <li>[ ] \"Terraform HCL syntax basics\"</li> <li>[ ] \"Terraform providers and resources\"</li> <li>[ ] \"Terraform state management\"</li> <li>[ ] \"Terraform plan apply destroy workflow\"</li> <li>[ ] \"Terraform variables and outputs\"</li> <li>[ ] \"Terraform data sources\"</li> <li>[ ] \"Terraform workspace management\"</li> </ul> <p>Basic Terraform Commands:</p> <pre><code># Terraform basics\nterraform init\nterraform plan\nterraform apply\nterraform destroy\nterraform show\nterraform state list\nterraform state show\nterraform workspace list\n</code></pre> <p>First Terraform Configuration:</p> <pre><code># main.tf\nterraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~&gt; 5.0\"\n    }\n  }\n}\n\nprovider \"aws\" {\n  region = var.aws_region\n}\n\nresource \"aws_instance\" \"web\" {\n  ami           = var.ami_id\n  instance_type = var.instance_type\n\n  tags = {\n    Name = \"Web Server\"\n  }\n}\n</code></pre>"},{"location":"iac/roadmap/#week-6-terraform-state-management","title":"Week 6: Terraform State Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform state file explained\"</li> <li>[ ] \"Terraform remote state backend\"</li> <li>[ ] \"Terraform state locking mechanisms\"</li> <li>[ ] \"Terraform state import existing resources\"</li> <li>[ ] \"Terraform state file encryption\"</li> <li>[ ] \"Terraform state backup strategies\"</li> <li>[ ] \"Terraform state collaboration\"</li> <li>[ ] \"Terraform state troubleshooting\"</li> </ul> <p>State Backend Configuration:</p> <pre><code># backend.tf\nterraform {\n  backend \"s3\" {\n    bucket         = \"my-terraform-state\"\n    key            = \"terraform.tfstate\"\n    region         = \"us-west-2\"\n    encrypt        = true\n    dynamodb_table = \"terraform-locks\"\n  }\n}\n</code></pre>"},{"location":"iac/roadmap/#week-7-terraform-modules","title":"Week 7: Terraform Modules","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform modules creation tutorial\"</li> <li>[ ] \"Terraform module structure best practices\"</li> <li>[ ] \"Terraform module registry usage\"</li> <li>[ ] \"Terraform module versioning\"</li> <li>[ ] \"Terraform module composition\"</li> <li>[ ] \"Terraform module testing\"</li> <li>[ ] \"Terraform module documentation\"</li> <li>[ ] \"Terraform module dependency management\"</li> </ul> <p>Module Structure:</p> <pre><code>modules/\n\u251c\u2500\u2500 vpc/\n\u2502   \u251c\u2500\u2500 main.tf\n\u2502   \u251c\u2500\u2500 variables.tf\n\u2502   \u251c\u2500\u2500 outputs.tf\n\u2502   \u2514\u2500\u2500 README.md\n\u251c\u2500\u2500 ec2/\n\u2514\u2500\u2500 rds/\n</code></pre> <p>Module Example:</p> <pre><code># modules/vpc/main.tf\nresource \"aws_vpc\" \"main\" {\n  cidr_block           = var.cidr_block\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n\n  tags = merge(\n    var.tags,\n    {\n      Name = var.name\n    }\n  )\n}\n\n# Using module\nmodule \"vpc\" {\n  source = \"./modules/vpc\"\n\n  name       = \"my-vpc\"\n  cidr_block = \"10.0.0.0/16\"\n  tags       = local.common_tags\n}\n</code></pre>"},{"location":"iac/roadmap/#week-8-terraform-advanced-features","title":"Week 8: Terraform Advanced Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform functions and expressions\"</li> <li>[ ] \"Terraform conditional expressions\"</li> <li>[ ] \"Terraform loops for_each count\"</li> <li>[ ] \"Terraform dynamic blocks\"</li> <li>[ ] \"Terraform local values\"</li> <li>[ ] \"Terraform data transformation\"</li> <li>[ ] \"Terraform validation rules\"</li> <li>[ ] \"Terraform lifecycle management\"</li> </ul> <p>Advanced Terraform Patterns:</p> <pre><code># Dynamic blocks\ndynamic \"ingress\" {\n  for_each = var.ingress_rules\n  content {\n    from_port   = ingress.value.from_port\n    to_port     = ingress.value.to_port\n    protocol    = ingress.value.protocol\n    cidr_blocks = ingress.value.cidr_blocks\n  }\n}\n\n# Conditional resources\nresource \"aws_instance\" \"web\" {\n  count = var.create_instance ? 1 : 0\n  # ... other configuration\n}\n\n# For each with map\nresource \"aws_instance\" \"servers\" {\n  for_each = var.servers\n\n  ami           = each.value.ami\n  instance_type = each.value.type\n\n  tags = {\n    Name = each.key\n  }\n}\n</code></pre>"},{"location":"iac/roadmap/#week-9-terraform-enterprise-features","title":"Week 9: Terraform Enterprise Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform Cloud workspace management\"</li> <li>[ ] \"Terraform Enterprise features\"</li> <li>[ ] \"Terraform policy as code Sentinel\"</li> <li>[ ] \"Terraform cost estimation\"</li> <li>[ ] \"Terraform VCS integration\"</li> <li>[ ] \"Terraform team collaboration\"</li> <li>[ ] \"Terraform governance and compliance\"</li> <li>[ ] \"Terraform drift detection\"</li> </ul>"},{"location":"iac/roadmap/#week-10-terraform-multi-cloud","title":"Week 10: Terraform Multi-Cloud","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Terraform multi-cloud deployment\"</li> <li>[ ] \"Terraform AWS provider advanced\"</li> <li>[ ] \"Terraform Azure provider tutorial\"</li> <li>[ ] \"Terraform GCP provider examples\"</li> <li>[ ] \"Terraform provider authentication\"</li> <li>[ ] \"Terraform cross-cloud networking\"</li> <li>[ ] \"Terraform cloud-agnostic modules\"</li> <li>[ ] \"Terraform hybrid cloud management\"</li> </ul>"},{"location":"iac/roadmap/#giai-oan-3-ansible-mastery-thang-6-7","title":"\ud83e\udd16 GIAI \u0110O\u1ea0N 3: ANSIBLE MASTERY (Th\u00e1ng 6-7)","text":""},{"location":"iac/roadmap/#week-11-ansible-fundamentals","title":"Week 11: Ansible Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Ansible installation and setup\"</li> <li>[ ] \"Ansible inventory management\"</li> <li>[ ] \"Ansible playbook syntax YAML\"</li> <li>[ ] \"Ansible modules and tasks\"</li> <li>[ ] \"Ansible ad-hoc commands\"</li> <li>[ ] \"Ansible SSH key management\"</li> <li>[ ] \"Ansible facts gathering\"</li> <li>[ ] \"Ansible idempotency principles\"</li> </ul> <p>Basic Ansible Setup:</p> <pre><code># Ansible installation\npip install ansible\n\n# Inventory file\necho \"[webservers]\" &gt; inventory\necho \"web1.example.com\" &gt;&gt; inventory\necho \"web2.example.com\" &gt;&gt; inventory\n\n# First playbook\nansible-playbook -i inventory playbook.yml\n</code></pre> <p>Simple Playbook:</p> <pre><code># playbook.yml\n---\n- name: Configure web servers\n  hosts: webservers\n  become: yes\n\n  tasks:\n    - name: Install nginx\n      package:\n        name: nginx\n        state: present\n\n    - name: Start nginx service\n      service:\n        name: nginx\n        state: started\n        enabled: yes\n</code></pre>"},{"location":"iac/roadmap/#week-12-ansible-advanced-playbooks","title":"Week 12: Ansible Advanced Playbooks","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Ansible playbook variables and facts\"</li> <li>[ ] \"Ansible conditionals and loops\"</li> <li>[ ] \"Ansible handlers and notifications\"</li> <li>[ ] \"Ansible templates with Jinja2\"</li> <li>[ ] \"Ansible vault for secrets\"</li> <li>[ ] \"Ansible error handling strategies\"</li> <li>[ ] \"Ansible debugging techniques\"</li> <li>[ ] \"Ansible performance optimization\"</li> </ul> <p>Advanced Playbook Features:</p> <pre><code># Advanced playbook example\n---\n- name: Deploy application\n  hosts: webservers\n  vars:\n    app_name: myapp\n    app_version: \"{{ lookup('env', 'APP_VERSION') | default('latest') }}\"\n\n  tasks:\n    - name: Create app directory\n      file:\n        path: \"/opt/{{ app_name }}\"\n        state: directory\n        mode: \"0755\"\n\n    - name: Deploy application\n      template:\n        src: app.conf.j2\n        dest: \"/opt/{{ app_name }}/app.conf\"\n        backup: yes\n      notify: restart application\n\n    - name: Install dependencies\n      package:\n        name: \"{{ item }}\"\n        state: present\n      loop: \"{{ app_dependencies }}\"\n      when: app_dependencies is defined\n\n  handlers:\n    - name: restart application\n      service:\n        name: \"{{ app_name }}\"\n        state: restarted\n</code></pre>"},{"location":"iac/roadmap/#week-13-ansible-roles-galaxy","title":"Week 13: Ansible Roles &amp; Galaxy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Ansible roles structure and creation\"</li> <li>[ ] \"Ansible Galaxy usage and publishing\"</li> <li>[ ] \"Ansible role dependencies\"</li> <li>[ ] \"Ansible role testing with Molecule\"</li> <li>[ ] \"Ansible role best practices\"</li> <li>[ ] \"Ansible role versioning\"</li> <li>[ ] \"Ansible Collections overview\"</li> <li>[ ] \"Custom Ansible modules development\"</li> </ul> <p>Role Structure:</p> <pre><code>roles/\n\u251c\u2500\u2500 webserver/\n\u2502   \u251c\u2500\u2500 tasks/\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 handlers/\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 templates/\n\u2502   \u251c\u2500\u2500 files/\n\u2502   \u251c\u2500\u2500 vars/\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u251c\u2500\u2500 defaults/\n\u2502   \u2502   \u2514\u2500\u2500 main.yml\n\u2502   \u2514\u2500\u2500 meta/\n\u2502       \u2514\u2500\u2500 main.yml\n</code></pre>"},{"location":"iac/roadmap/#week-14-ansible-for-infrastructure","title":"Week 14: Ansible for Infrastructure","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Ansible cloud modules AWS Azure GCP\"</li> <li>[ ] \"Ansible infrastructure provisioning\"</li> <li>[ ] \"Ansible with Terraform integration\"</li> <li>[ ] \"Ansible network automation\"</li> <li>[ ] \"Ansible container management\"</li> <li>[ ] \"Ansible orchestration patterns\"</li> <li>[ ] \"Ansible Tower AWX automation\"</li> <li>[ ] \"Ansible dynamic inventory\"</li> </ul> <p>Infrastructure Playbook:</p> <pre><code># infrastructure.yml\n---\n- name: Provision AWS infrastructure\n  hosts: localhost\n  gather_facts: no\n\n  tasks:\n    - name: Create VPC\n      amazon.aws.ec2_vpc_net:\n        name: \"{{ vpc_name }}\"\n        cidr_block: \"{{ vpc_cidr }}\"\n        state: present\n        tags:\n          Environment: \"{{ env }}\"\n      register: vpc\n\n    - name: Create security group\n      amazon.aws.ec2_group:\n        name: \"{{ sg_name }}\"\n        description: Security group for web servers\n        vpc_id: \"{{ vpc.vpc.id }}\"\n        rules:\n          - proto: tcp\n            ports:\n              - 80\n              - 443\n            cidr_ip: 0.0.0.0/0\n</code></pre>"},{"location":"iac/roadmap/#giai-oan-4-cloud-specific-iac-thang-8-9","title":"\u2601\ufe0f GIAI \u0110O\u1ea0N 4: CLOUD-SPECIFIC IAC (Th\u00e1ng 8-9)","text":""},{"location":"iac/roadmap/#week-15-aws-cloudformation","title":"Week 15: AWS CloudFormation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"AWS CloudFormation tutorial basics\"</li> <li>[ ] \"CloudFormation template syntax JSON YAML\"</li> <li>[ ] \"CloudFormation stacks and nested stacks\"</li> <li>[ ] \"CloudFormation parameters and outputs\"</li> <li>[ ] \"CloudFormation intrinsic functions\"</li> <li>[ ] \"CloudFormation conditions and mappings\"</li> <li>[ ] \"CloudFormation custom resources\"</li> <li>[ ] \"CloudFormation drift detection\"</li> </ul> <p>CloudFormation Template:</p> <pre><code># template.yml\nAWSTemplateFormatVersion: \"2010-09-09\"\nDescription: \"Web server infrastructure\"\n\nParameters:\n  InstanceType:\n    Type: String\n    Default: t3.micro\n    AllowedValues: [t3.micro, t3.small, t3.medium]\n\n  KeyName:\n    Type: AWS::EC2::KeyPair::KeyName\n    Description: EC2 Key Pair\n\nResources:\n  WebServerInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      ImageId: ami-0abcdef1234567890\n      InstanceType: !Ref InstanceType\n      KeyName: !Ref KeyName\n      SecurityGroupIds:\n        - !Ref WebServerSecurityGroup\n      UserData:\n        Fn::Base64: !Sub |\n          #!/bin/bash\n          yum update -y\n          yum install -y httpd\n          systemctl start httpd\n          systemctl enable httpd\n\n  WebServerSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Security group for web server\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: 80\n          ToPort: 80\n          CidrIp: 0.0.0.0/0\n\nOutputs:\n  WebsiteURL:\n    Description: URL of the website\n    Value: !Sub \"http://${WebServerInstance.PublicDnsName}\"\n</code></pre>"},{"location":"iac/roadmap/#week-16-azure-resource-manager-arm","title":"Week 16: Azure Resource Manager (ARM)","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Azure Resource Manager ARM templates\"</li> <li>[ ] \"ARM template syntax and functions\"</li> <li>[ ] \"Azure Bicep language tutorial\"</li> <li>[ ] \"ARM template parameters and variables\"</li> <li>[ ] \"ARM template linked templates\"</li> <li>[ ] \"ARM template deployment modes\"</li> <li>[ ] \"Azure Policy with ARM templates\"</li> <li>[ ] \"ARM template best practices\"</li> </ul> <p>ARM Template Example:</p> <pre><code>{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"vmName\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"myVM\"\n    },\n    \"adminUsername\": {\n      \"type\": \"string\"\n    },\n    \"adminPassword\": {\n      \"type\": \"securestring\"\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Compute/virtualMachines\",\n      \"apiVersion\": \"2021-11-01\",\n      \"name\": \"[parameters('vmName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"properties\": {\n        \"hardwareProfile\": {\n          \"vmSize\": \"Standard_B2s\"\n        },\n        \"osProfile\": {\n          \"computerName\": \"[parameters('vmName')]\",\n          \"adminUsername\": \"[parameters('adminUsername')]\",\n          \"adminPassword\": \"[parameters('adminPassword')]\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"iac/roadmap/#week-17-google-cloud-deployment-manager","title":"Week 17: Google Cloud Deployment Manager","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Google Cloud Deployment Manager tutorial\"</li> <li>[ ] \"GCP Deployment Manager YAML templates\"</li> <li>[ ] \"GCP Deployment Manager Python templates\"</li> <li>[ ] \"GCP Deployment Manager Jinja2 templates\"</li> <li>[ ] \"GCP resource configuration management\"</li> <li>[ ] \"GCP Deployment Manager imports\"</li> <li>[ ] \"GCP infrastructure automation\"</li> <li>[ ] \"GCP Deployment Manager vs Terraform\"</li> </ul>"},{"location":"iac/roadmap/#week-18-pulumi-modern-iac","title":"Week 18: Pulumi Modern IaC","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Pulumi infrastructure as code tutorial\"</li> <li>[ ] \"Pulumi vs Terraform comparison\"</li> <li>[ ] \"Pulumi programming languages support\"</li> <li>[ ] \"Pulumi state management\"</li> <li>[ ] \"Pulumi stacks and configuration\"</li> <li>[ ] \"Pulumi secrets management\"</li> <li>[ ] \"Pulumi testing and validation\"</li> <li>[ ] \"Pulumi CI/CD integration\"</li> </ul> <p>Pulumi Example:</p> <pre><code># __main__.py\nimport pulumi\nimport pulumi_aws as aws\n\n# Create a VPC\nvpc = aws.ec2.Vpc(\"my-vpc\",\n    cidr_block=\"10.0.0.0/16\",\n    enable_dns_hostnames=True,\n    enable_dns_support=True,\n    tags={\"Name\": \"my-vpc\"}\n)\n\n# Create an internet gateway\nigw = aws.ec2.InternetGateway(\"my-igw\",\n    vpc_id=vpc.id,\n    tags={\"Name\": \"my-igw\"}\n)\n\n# Export the VPC ID\npulumi.export(\"vpc_id\", vpc.id)\n</code></pre>"},{"location":"iac/roadmap/#giai-oan-5-advanced-iac-patterns-thang-10-12","title":"\ud83d\udd27 GIAI \u0110O\u1ea0N 5: ADVANCED IAC PATTERNS (Th\u00e1ng 10-12)","text":""},{"location":"iac/roadmap/#week-19-iac-cicd-integration","title":"Week 19: IaC CI/CD Integration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure CI/CD pipelines\"</li> <li>[ ] \"Terraform automation GitHub Actions\"</li> <li>[ ] \"Ansible automation GitLab CI\"</li> <li>[ ] \"Infrastructure testing in CI/CD\"</li> <li>[ ] \"IaC security scanning automation\"</li> <li>[ ] \"Infrastructure drift detection CI/CD\"</li> <li>[ ] \"IaC deployment strategies\"</li> <li>[ ] \"Infrastructure rollback procedures\"</li> </ul> <p>Terraform CI/CD Pipeline:</p> <pre><code># .github/workflows/terraform.yml\nname: Terraform CI/CD\non:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n\njobs:\n  terraform:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Setup Terraform\n        uses: hashicorp/setup-terraform@v2\n        with:\n          terraform_version: 1.5.0\n\n      - name: Terraform Init\n        run: terraform init\n\n      - name: Terraform Plan\n        run: terraform plan\n\n      - name: Terraform Apply\n        if: github.ref == 'refs/heads/main'\n        run: terraform apply -auto-approve\n</code></pre>"},{"location":"iac/roadmap/#week-20-iac-security-compliance","title":"Week 20: IaC Security &amp; Compliance","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure security scanning tools\"</li> <li>[ ] \"Terraform security best practices\"</li> <li>[ ] \"IaC compliance automation\"</li> <li>[ ] \"Infrastructure policy as code\"</li> <li>[ ] \"IaC secrets management\"</li> <li>[ ] \"Infrastructure vulnerability scanning\"</li> <li>[ ] \"IaC governance frameworks\"</li> <li>[ ] \"Infrastructure security testing\"</li> </ul> <p>Security Tools:</p> <pre><code># Terraform security scanning\ntfsec .\ncheckov -f main.tf\nterrascan scan -t terraform\n\n# Ansible security\nansible-lint playbook.yml\n</code></pre>"},{"location":"iac/roadmap/#week-21-multi-environment-management","title":"Week 21: Multi-Environment Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"IaC multi-environment strategies\"</li> <li>[ ] \"Environment-specific configurations\"</li> <li>[ ] \"IaC environment promotion\"</li> <li>[ ] \"Infrastructure environment isolation\"</li> <li>[ ] \"IaC configuration management\"</li> <li>[ ] \"Environment drift prevention\"</li> <li>[ ] \"Blue-green infrastructure deployment\"</li> <li>[ ] \"Infrastructure canary deployments\"</li> </ul>"},{"location":"iac/roadmap/#week-22-iac-monitoring-observability","title":"Week 22: IaC Monitoring &amp; Observability","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure monitoring automation\"</li> <li>[ ] \"IaC deployment monitoring\"</li> <li>[ ] \"Infrastructure cost monitoring\"</li> <li>[ ] \"IaC performance metrics\"</li> <li>[ ] \"Infrastructure alerting automation\"</li> <li>[ ] \"IaC audit and compliance reporting\"</li> <li>[ ] \"Infrastructure dashboard creation\"</li> <li>[ ] \"IaC troubleshooting strategies\"</li> </ul>"},{"location":"iac/roadmap/#week-23-advanced-iac-patterns","title":"Week 23: Advanced IaC Patterns","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure as Code patterns\"</li> <li>[ ] \"Microservices infrastructure automation\"</li> <li>[ ] \"IaC for container orchestration\"</li> <li>[ ] \"Serverless infrastructure automation\"</li> <li>[ ] \"IaC for data infrastructure\"</li> <li>[ ] \"Infrastructure composition patterns\"</li> <li>[ ] \"IaC for disaster recovery\"</li> <li>[ ] \"Infrastructure scaling automation\"</li> </ul>"},{"location":"iac/roadmap/#week-24-iac-leadership-strategy","title":"Week 24: IaC Leadership &amp; Strategy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"IaC adoption strategies\"</li> <li>[ ] \"Infrastructure automation ROI\"</li> <li>[ ] \"IaC team organization\"</li> <li>[ ] \"Infrastructure governance models\"</li> <li>[ ] \"IaC training and education\"</li> <li>[ ] \"Infrastructure automation culture\"</li> <li>[ ] \"IaC vendor evaluation\"</li> <li>[ ] \"Infrastructure transformation strategy\"</li> </ul>"},{"location":"iac/roadmap/#hands-on-projects-by-tool","title":"\ud83d\udcda HANDS-ON PROJECTS BY TOOL","text":""},{"location":"iac/roadmap/#terraform-projects","title":"\ud83c\udfd7\ufe0f Terraform Projects","text":"<ol> <li> <p>Multi-Tier Web Application</p> </li> <li> <p>VPC with public/private subnets</p> </li> <li>Load balancer and auto-scaling</li> <li>RDS database with read replicas</li> <li> <p>Search: \"Terraform multi-tier architecture AWS\"</p> </li> <li> <p>Kubernetes Cluster Infrastructure</p> </li> <li> <p>EKS cluster with managed node groups</p> </li> <li>Networking and security groups</li> <li>Monitoring and logging setup</li> <li> <p>Search: \"Terraform EKS cluster deployment\"</p> </li> <li> <p>Multi-Cloud Infrastructure</p> </li> <li>Resources across AWS, Azure, GCP</li> <li>Cross-cloud networking</li> <li>Unified monitoring and management</li> <li>Search: \"Terraform multi-cloud deployment\"</li> </ol>"},{"location":"iac/roadmap/#ansible-projects","title":"\ud83e\udd16 Ansible Projects","text":"<ol> <li> <p>Application Deployment Pipeline</p> </li> <li> <p>Multi-stage deployment automation</p> </li> <li>Configuration management</li> <li>Service discovery and load balancing</li> <li> <p>Search: \"Ansible application deployment\"</p> </li> <li> <p>Infrastructure Hardening</p> </li> <li> <p>Security baseline implementation</p> </li> <li>Compliance automation</li> <li>Monitoring and alerting setup</li> <li> <p>Search: \"Ansible security hardening\"</p> </li> <li> <p>Container Orchestration</p> </li> <li>Docker Swarm setup and management</li> <li>Service deployment and scaling</li> <li>Health checks and monitoring</li> <li>Search: \"Ansible Docker Swarm automation\"</li> </ol>"},{"location":"iac/roadmap/#cloud-specific-projects","title":"\u2601\ufe0f Cloud-Specific Projects","text":"<ol> <li> <p>AWS CloudFormation Stack</p> </li> <li> <p>Nested stacks architecture</p> </li> <li>Cross-stack references</li> <li>Custom resources and Lambda functions</li> <li> <p>Search: \"CloudFormation nested stacks\"</p> </li> <li> <p>Azure ARM Template</p> </li> <li> <p>Resource group management</p> </li> <li>Azure Key Vault integration</li> <li>Deployment slots and traffic routing</li> <li> <p>Search: \"ARM template best practices\"</p> </li> <li> <p>GCP Deployment Manager</p> </li> <li>Template hierarchy and imports</li> <li>Python template development</li> <li>Service account management</li> <li>Search: \"GCP Deployment Manager Python\"</li> </ol>"},{"location":"iac/roadmap/#skill-assessment-checklist","title":"\ud83d\udccb SKILL ASSESSMENT CHECKLIST","text":""},{"location":"iac/roadmap/#terraform-mastery","title":"Terraform Mastery","text":"<ul> <li>[ ] Write complex Terraform configurations</li> <li>[ ] Design reusable modules</li> <li>[ ] Implement state management strategies</li> <li>[ ] Automate Terraform workflows</li> <li>[ ] Troubleshoot Terraform issues</li> <li>[ ] Optimize Terraform performance</li> </ul>"},{"location":"iac/roadmap/#ansible-mastery","title":"Ansible Mastery","text":"<ul> <li>[ ] Create comprehensive playbooks</li> <li>[ ] Develop custom Ansible roles</li> <li>[ ] Implement dynamic inventories</li> <li>[ ] Integrate with external systems</li> <li>[ ] Optimize Ansible performance</li> <li>[ ] Troubleshoot Ansible issues</li> </ul>"},{"location":"iac/roadmap/#cloud-platform-expertise","title":"Cloud Platform Expertise","text":"<ul> <li>[ ] Master native IaC tools</li> <li>[ ] Implement cross-cloud solutions</li> <li>[ ] Design scalable architectures</li> <li>[ ] Optimize cloud costs</li> <li>[ ] Implement security best practices</li> <li>[ ] Automate compliance processes</li> </ul>"},{"location":"iac/roadmap/#certifications-learning","title":"\ud83c\udf93 CERTIFICATIONS &amp; LEARNING","text":""},{"location":"iac/roadmap/#terraform-certifications","title":"Terraform Certifications","text":"<ul> <li>[ ] HashiCorp Certified: Terraform Associate</li> <li>[ ] HashiCorp Certified: Terraform Professional</li> </ul>"},{"location":"iac/roadmap/#ansible-certifications","title":"Ansible Certifications","text":"<ul> <li>[ ] Red Hat Certified Specialist in Ansible Automation</li> <li>[ ] Red Hat Certified Engineer (RHCE)</li> </ul>"},{"location":"iac/roadmap/#cloud-certifications","title":"Cloud Certifications","text":"<ul> <li>[ ] AWS Certified DevOps Engineer</li> <li>[ ] Azure DevOps Engineer Expert</li> <li>[ ] Google Cloud Professional DevOps Engineer</li> </ul>"},{"location":"iac/roadmap/#learning-resources","title":"Learning Resources","text":"<ul> <li>\"Terraform: Up &amp; Running\" - Yevgeniy Brikman</li> <li>\"Ansible for DevOps\" - Jeff Geerling</li> <li>\"Infrastructure as Code\" - Kief Morris</li> <li>\"Cloud Native Infrastructure\" - Justin Garrison</li> </ul>"},{"location":"iac/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"iac/roadmap/#morning-setup-20-mins","title":"Morning Setup (20 mins)","text":"<ul> <li>[ ] Review IaC code changes</li> <li>[ ] Check infrastructure status</li> <li>[ ] Read IaC best practices</li> <li>[ ] Plan daily IaC experiments</li> </ul>"},{"location":"iac/roadmap/#active-development-60-90-mins","title":"Active Development (60-90 mins)","text":"<ul> <li>[ ] Work on IaC projects</li> <li>[ ] Refactor existing code</li> <li>[ ] Test new IaC features</li> <li>[ ] Contribute to IaC communities</li> </ul>"},{"location":"iac/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document lessons learned</li> <li>[ ] Update IaC templates</li> <li>[ ] Review infrastructure costs</li> <li>[ ] Plan tomorrow's work</li> </ul>"},{"location":"iac/roadmap/#mastery-milestones","title":"\ud83c\udfaf MASTERY MILESTONES","text":""},{"location":"iac/roadmap/#month-2-foundation","title":"Month 2: Foundation","text":"<ul> <li>[ ] Understand IaC principles</li> <li>[ ] Basic Terraform and Ansible skills</li> <li>[ ] Version control for infrastructure</li> <li>[ ] Simple automation scripts</li> </ul>"},{"location":"iac/roadmap/#month-5-intermediate","title":"Month 5: Intermediate","text":"<ul> <li>[ ] Complex Terraform configurations</li> <li>[ ] Advanced Ansible playbooks</li> <li>[ ] Multi-environment management</li> <li>[ ] Infrastructure testing</li> </ul>"},{"location":"iac/roadmap/#month-7-advanced","title":"Month 7: Advanced","text":"<ul> <li>[ ] Multi-cloud deployments</li> <li>[ ] Custom modules and roles</li> <li>[ ] CI/CD integration</li> <li>[ ] Security and compliance</li> </ul>"},{"location":"iac/roadmap/#month-9-expert","title":"Month 9: Expert","text":"<ul> <li>[ ] Infrastructure architecture design</li> <li>[ ] Performance optimization</li> <li>[ ] Disaster recovery automation</li> <li>[ ] Team leadership</li> </ul>"},{"location":"iac/roadmap/#month-12-master","title":"Month 12: Master","text":"<ul> <li>[ ] Strategic planning</li> <li>[ ] Tool evaluation and selection</li> <li>[ ] Organizational transformation</li> <li>[ ] Innovation and research</li> </ul> <p>IaC Philosophy: \"Infrastructure should be versioned, tested, and deployed like application code!\"</p>"},{"location":"iac/roadmap/#quick-start-checklist","title":"\ud83d\ude80 Quick Start Checklist","text":""},{"location":"iac/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ul> <li>[ ] Install Terraform, Ansible, cloud CLIs</li> <li>[ ] Set up version control repository</li> <li>[ ] Configure cloud provider credentials</li> <li>[ ] Create first \"Hello World\" infrastructure</li> </ul>"},{"location":"iac/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Deploy first infrastructure with Terraform</li> <li>[ ] Configure servers with Ansible</li> <li>[ ] Set up basic CI/CD pipeline</li> <li>[ ] Join IaC communities</li> </ul>"},{"location":"iac/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Build multi-tier application infrastructure</li> <li>[ ] Implement infrastructure testing</li> <li>[ ] Set up monitoring and alerting</li> <li>[ ] Document infrastructure decisions</li> </ul> <p>Remember: Infrastructure as Code mastery requires consistent practice and real-world application. Start with simple projects and gradually increase complexity!</p>"},{"location":"k8s/roadmap/","title":"Roadmap","text":"<p>note cho kh\u00f3a h\u1ecdc tr\u00ean udemy v\u1ec1 k8s</p> <p>https://notes.kodekloud.com/docs/CKA-Certification-Course-Certified-Kubernetes-Administrator/Introduction/Course-Introduction</p> <p>https://github.com/kodekloudhub/certified-kubernetes-administrator-course</p>"},{"location":"k8s/00.k8s-manifests/","title":"Kubernetes Manifests - Complete Project Structure","text":""},{"location":"k8s/00.k8s-manifests/#project-structure","title":"\ud83d\udcc1 Project Structure","text":"<pre><code>k8s-manifests/\n\u251c\u2500\u2500 namespaces/           # Namespace definitions\n\u251c\u2500\u2500 configmaps/          # Configuration data\n\u251c\u2500\u2500 secrets/             # Sensitive data\n\u251c\u2500\u2500 deployments/         # Application deployments\n\u251c\u2500\u2500 services/            # Service definitions\n\u251c\u2500\u2500 ingress/             # Ingress controllers and rules\n\u251c\u2500\u2500 volumes/             # PersistentVolumes and Claims\n\u251c\u2500\u2500 rbac/                # Role-based access control\n\u251c\u2500\u2500 monitoring/          # Monitoring stack (Prometheus, Grafana)\n\u251c\u2500\u2500 logging/             # Logging stack (ELK)\n\u251c\u2500\u2500 networking/          # Network policies\n\u251c\u2500\u2500 security/            # Security policies\n\u251c\u2500\u2500 autoscaling/         # HPA and VPA\n\u251c\u2500\u2500 jobs/                # Jobs and CronJobs\n\u251c\u2500\u2500 operators/           # Custom operators\n\u251c\u2500\u2500 helm-charts/         # Helm chart templates\n\u2514\u2500\u2500 environments/        # Environment-specific configs\n    \u251c\u2500\u2500 development/\n    \u251c\u2500\u2500 staging/\n    \u2514\u2500\u2500 production/\n</code></pre>"},{"location":"k8s/00.k8s-manifests/#quick-start","title":"\ud83d\ude80 Quick Start","text":"<ol> <li>Apply namespaces first:</li> </ol> <pre><code>kubectl apply -f namespaces/\n</code></pre> <ol> <li>Apply configurations:</li> </ol> <pre><code>kubectl apply -f configmaps/\nkubectl apply -f secrets/\n</code></pre> <ol> <li>Apply core resources:</li> </ol> <pre><code>kubectl apply -f deployments/\nkubectl apply -f services/\nkubectl apply -f ingress/\n</code></pre> <ol> <li>Apply monitoring and logging:    <pre><code>kubectl apply -f monitoring/\nkubectl apply -f logging/\n</code></pre></li> </ol>"},{"location":"k8s/00.k8s-manifests/#components-included","title":"\ud83d\udccb Components Included","text":"<ul> <li>Applications: Frontend, Backend, Database</li> <li>Monitoring: Prometheus, Grafana, AlertManager</li> <li>Logging: Elasticsearch, Logstash, Kibana</li> <li>Ingress: Nginx Ingress Controller</li> <li>Security: Network Policies, Pod Security Policies</li> <li>Autoscaling: Horizontal Pod Autoscaler</li> <li>Storage: Persistent Volumes and Claims</li> <li>RBAC: Role-based Access Control</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/","title":"01.cluster architecture","text":""},{"location":"k8s/01.core/01.cluster-architecture/#kien-truc-kubernetes-qua-phep-so-sanh-tau-thuyen","title":"Ki\u1ebfn tr\u00fac Kubernetes qua ph\u00e9p so s\u00e1nh T\u00e0u Thuy\u1ec1n","text":"<p>M\u1ee5c \u0111\u00edch c\u1ee7a Kubernetes l\u00e0 t\u1ef1 \u0111\u1ed9ng h\u00f3a vi\u1ec7c tri\u1ec3n khai v\u00e0 qu\u1ea3n l\u00fd c\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n d\u01b0\u1edbi d\u1ea1ng container. H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng b\u1ea1n \u0111ang qu\u1ea3n l\u00fd m\u1ed9t h\u1ea1m \u0111\u1ed9i t\u00e0u bi\u1ec3n kh\u1ed5ng l\u1ed3:</p> <ul> <li>T\u00e0u H\u00e0ng (Cargo Ships) \ud83d\udea2: \u0110\u00e2y l\u00e0 nh\u1eefng con t\u00e0u l\u00e0m c\u00f4ng vi\u1ec7c th\u1ef1c t\u1ebf - chuy\u00ean ch\u1edf c\u00e1c container (\u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n). Trong Kubernetes, ch\u00fang ch\u00ednh l\u00e0 c\u00e1c Worker Node.</li> <li>T\u00e0u Ch\u1ec9 Huy (Control Ships) \u0110\u00e2y l\u00e0 nh\u1eefng con t\u00e0u \u0111\u1ea7u n\u00e3o, kh\u00f4ng ch\u1edf h\u00e0ng m\u00e0 l\u00e0m nhi\u1ec7m v\u1ee5 qu\u1ea3n l\u00fd, gi\u00e1m s\u00e1t, v\u00e0 \u0111i\u1ec1u ph\u1ed1i to\u00e0n b\u1ed9 h\u1ea1m \u0111\u1ed9i t\u00e0u h\u00e0ng. Trong Kubernetes, \u0111\u00e2y ch\u00ednh l\u00e0 Master Node.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#mot-cum-kubernetes-kubernetes-cluster-bao-gom-mot-hoac-nhieu-master-node-va-nhieu-worker-node","title":"M\u1ed9t c\u1ee5m Kubernetes (Kubernetes cluster) bao g\u1ed3m m\u1ed9t ho\u1eb7c nhi\u1ec1u Master Node v\u00e0 nhi\u1ec1u Worker Node.","text":""},{"location":"k8s/01.core/01.cluster-architecture/#ben-trong-tau-chi-huy-master-node-control-plane","title":"B\u00ean trong \"T\u00e0u Ch\u1ec9 Huy\" (Master Node Control Plane)","text":"<p>Master Node l\u00e0 b\u1ed9 n\u00e3o c\u1ee7a c\u1ea3 c\u1ee5m, n\u00f3 \u0111i\u1ec1u h\u00e0nh m\u1ecdi th\u1ee9 th\u00f4ng qua m\u1ed9t b\u1ed9 c\u00e1c th\u00e0nh ph\u1ea7n g\u1ecdi l\u00e0 Control Plane.</p>"},{"location":"k8s/01.core/01.cluster-architecture/#etcd-kho-du-lieu-cua-ham-oi","title":"<code>etcd</code> - Kho D\u1eef li\u1ec7u c\u1ee7a H\u1ea1m \u0111\u1ed9i","text":"<ul> <li>So s\u00e1nh: Gi\u1ed1ng nh\u01b0 cu\u1ed1n s\u1ed5 nh\u1eadt k\u00fd kh\u1ed5ng l\u1ed3 c\u1ee7a h\u1ea1m \u0111\u1ed9i, l\u01b0u tr\u1eef m\u1ecdi th\u00f4ng tin: c\u00f3 bao nhi\u00eau con t\u00e0u, t\u00e0u n\u00e0o \u0111ang ch\u1edf container g\u00ec, container \u0111\u01b0\u1ee3c x\u1ebfp l\u00ean l\u00fac n\u00e0o, v.v.</li> <li>Th\u1ef1c t\u1ebf: <code>etcd</code> l\u00e0 m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u d\u1ea1ng key-value c\u00f3 t\u00ednh s\u1eb5n s\u00e0ng cao (highly available). N\u00f3 l\u01b0u tr\u1eef to\u00e0n b\u1ed9 tr\u1ea1ng th\u00e1i v\u00e0 c\u1ea5u h\u00ecnh c\u1ee7a c\u1ee5m Kubernetes. M\u1ecdi th\u00f4ng tin v\u1ec1 nodes, pods (containers), services,... \u0111\u1ec1u n\u1eb1m trong <code>etcd</code>.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-scheduler-nguoi-ieu-phoi-xep-do","title":"<code>kube-scheduler</code> - Ng\u01b0\u1eddi \u0110i\u1ec1u Ph\u1ed1i X\u1ebfp D\u1ee1","text":"<ul> <li>So s\u00e1nh: Gi\u1ed1ng nh\u01b0 nh\u1eefng chi\u1ebfc c\u1ea7n c\u1ea9u th\u00f4ng minh \u1edf b\u1ebfn c\u1ea3ng. Khi c\u00f3 m\u1ed9t container c\u1ea7n x\u1ebfp l\u00ean t\u00e0u, c\u1ea7n c\u1ea9u s\u1ebd x\u00e1c \u0111\u1ecbnh con t\u00e0u n\u00e0o l\u00e0 ph\u00f9 h\u1ee3p nh\u1ea5t d\u1ef1a tr\u00ean k\u00edch th\u01b0\u1edbc, s\u1ee9c ch\u1ee9a c\u00f2n l\u1ea1i, lo\u1ea1i h\u00e0ng \u0111\u01b0\u1ee3c ph\u00e9p ch\u1edf, v.v.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-scheduler</code> c\u00f3 nhi\u1ec7m v\u1ee5 t\u00ecm m\u1ed9t Worker Node ph\u00f9 h\u1ee3p nh\u1ea5t \u0111\u1ec3 ch\u1ea1y m\u1ed9t Pod (m\u1ed9t ho\u1eb7c nhi\u1ec1u container) m\u1edbi \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u. N\u00f3 xem x\u00e9t c\u00e1c y\u1ebfu t\u1ed1 nh\u01b0 t\u00e0i nguy\u00ean y\u00eau c\u1ea7u c\u1ee7a Pod (CPU, memory) v\u00e0 t\u00e0i nguy\u00ean c\u00f2n tr\u1ed1ng c\u1ee7a c\u00e1c Node.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-controller-manager-ban-quan-ly-cac-phong-ban","title":"<code>kube-controller-manager</code> - Ban Qu\u1ea3n l\u00fd c\u00e1c Ph\u00f2ng ban","text":"<ul> <li>So s\u00e1nh: T\u00e0u ch\u1ec9 huy c\u00f3 nhi\u1ec1u ph\u00f2ng ban chuy\u00ean tr\u00e1ch: ph\u00f2ng \u0111i\u1ec1u h\u00e0nh lo vi\u1ec7c v\u1eadn t\u1ea3i, ph\u00f2ng h\u00e0ng h\u00f3a lo c\u00e1c container, ph\u00f2ng IT lo vi\u1ec7c li\u00ean l\u1ea1c.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-controller-manager</code> qu\u1ea3n l\u00fd nhi\u1ec1u \"b\u1ed9 \u0111i\u1ec1u khi\u1ec3n\" (controllers) kh\u00e1c nhau, m\u1ed7i controller l\u00e0 m\u1ed9t v\u00f2ng l\u1eb7p theo d\u00f5i tr\u1ea1ng th\u00e1i c\u1ee7a c\u1ee5m v\u00e0 c\u1ed1 g\u1eafng \u0111\u01b0a n\u00f3 v\u1ec1 tr\u1ea1ng th\u00e1i mong mu\u1ed1n.</li> <li>Node Controller: Ch\u0103m s\u00f3c c\u00e1c Node. N\u00f3 ch\u1ecbu tr\u00e1ch nhi\u1ec7m khi m\u1ed9t Node m\u1edbi tham gia v\u00e0o c\u1ee5m, ho\u1eb7c khi m\u1ed9t Node \"ch\u1ebft\" ho\u1eb7c kh\u00f4ng th\u1ec3 truy c\u1eadp.</li> <li>Replication Controller: \u0110\u1ea3m b\u1ea3o s\u1ed1 l\u01b0\u1ee3ng b\u1ea3n sao (replicas) c\u1ee7a m\u1ed9t \u1ee9ng d\u1ee5ng lu\u00f4n \u0111\u00fang nh\u01b0 b\u1ea1n \u0111\u00e3 khai b\u00e1o.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-api-server-tong-ai-giao-tiep-trung-tam","title":"<code>kube-api-server</code> - \"T\u1ed5ng \u0110\u00e0i\" Giao ti\u1ebfp Trung t\u00e2m","text":"<ul> <li>So s\u00e1nh: \u0110\u00e2y l\u00e0 trung t\u00e2m ch\u1ec9 huy, n\u01a1i t\u1ea5t c\u1ea3 c\u00e1c ph\u00f2ng ban, c\u00e1c t\u00e0u h\u00e0ng, v\u00e0 c\u1ea3 ng\u01b0\u1eddi qu\u1ea3n l\u00fd t\u1eeb b\u00ean ngo\u00e0i li\u00ean l\u1ea1c v\u1edbi nhau. M\u1ecdi m\u1ec7nh l\u1ec7nh \u0111\u1ec1u \u0111i qua \u0111\u00e2y.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-api-server</code> l\u00e0 th\u00e0nh ph\u1ea7n trung t\u00e2m v\u00e0 quan tr\u1ecdng nh\u1ea5t. N\u00f3 ph\u01a1i b\u00e0y ra Kubernetes API. M\u1ecdi t\u01b0\u01a1ng t\u00e1c v\u1edbi c\u1ee5m Kubernetes \u0111\u1ec1u ph\u1ea3i th\u00f4ng qua API Server.</li> <li>Ng\u01b0\u1eddi d\u00f9ng (d\u00f9ng <code>kubectl</code>), c\u00e1c controller, v\u00e0 c\u1ea3 c\u00e1c worker node \u0111\u1ec1u n\u00f3i chuy\u1ec7n v\u1edbi nhau th\u00f4ng qua <code>kube-api-server</code>.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#tren-tau-hang-worker-node","title":"Tr\u00ean \"T\u00e0u H\u00e0ng\" (Worker Node)","text":"<p>\u0110\u00e2y l\u00e0 n\u01a1i c\u00e1c container \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\u1ef1c s\u1ef1 ch\u1ea1y. M\u1ed7i Worker Node c\u0169ng c\u00f3 c\u00e1c th\u00e0nh ph\u1ea7n quan tr\u1ecdng ri\u00eang.</p>"},{"location":"k8s/01.core/01.cluster-architecture/#container-runtime-engine-vi-du-docker-ong-co-chay-container","title":"Container Runtime Engine (v\u00ed d\u1ee5: Docker) - \u0110\u1ed9ng c\u01a1 Ch\u1ea1y Container","text":"<ul> <li>So s\u00e1nh: \u0110\u1ec3 ch\u1edf \u0111\u01b0\u1ee3c container, con t\u00e0u ph\u1ea3i \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 t\u01b0\u01a1ng th\u00edch v\u1edbi container.</li> <li>Th\u1ef1c t\u1ebf: \u0110\u00e2y l\u00e0 ph\u1ea7n m\u1ec1m ch\u1ecbu tr\u00e1ch nhi\u1ec7m ch\u1ea1y c\u00e1c container. Docker l\u00e0 m\u1ed9t l\u1ef1a ch\u1ecdn ph\u1ed5 bi\u1ebfn, nh\u01b0ng Kubernetes c\u0169ng h\u1ed7 tr\u1ee3 c\u00e1c runtime kh\u00e1c nh\u01b0 ContainerD, Rocket (rkt). N\u00f3 ph\u1ea3i \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c node trong c\u1ee5m.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kubelet-thuyen-truong-cua-tau-hang","title":"<code>kubelet</code> - Thuy\u1ec1n tr\u01b0\u1edfng c\u1ee7a T\u00e0u H\u00e0ng","text":"<ul> <li>So s\u00e1nh: M\u1ed7i t\u00e0u h\u00e0ng c\u00f3 m\u1ed9t thuy\u1ec1n tr\u01b0\u1edfng, ch\u1ecbu tr\u00e1ch nhi\u1ec7m qu\u1ea3n l\u00fd m\u1ecdi ho\u1ea1t \u0111\u1ed9ng tr\u00ean t\u00e0u m\u00ecnh. Thuy\u1ec1n tr\u01b0\u1edfng nh\u1eadn l\u1ec7nh t\u1eeb t\u00e0u ch\u1ec9 huy, x\u1ebfp d\u1ee1 container theo y\u00eau c\u1ea7u, v\u00e0 b\u00e1o c\u00e1o t\u00ecnh tr\u1ea1ng c\u1ee7a t\u00e0u v\u00e0 h\u00e0ng h\u00f3a v\u1ec1 trung t\u00e2m.</li> <li>Th\u1ef1c t\u1ebf: <code>kubelet</code> l\u00e0 m\u1ed9t agent ch\u1ea1y tr\u00ean m\u1ed7i Worker Node. N\u00f3 l\u1eafng nghe ch\u1ec9 th\u1ecb t\u1eeb <code>kube-api-server</code> v\u00e0 \u0111\u1ea3m b\u1ea3o r\u1eb1ng c\u00e1c container \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 trong c\u00e1c Pod \u0111ang ch\u1ea1y v\u00e0 kh\u1ecfe m\u1ea1nh tr\u00ean node c\u1ee7a n\u00f3. N\u00f3 c\u0169ng g\u1eedi b\u00e1o c\u00e1o tr\u1ea1ng th\u00e1i c\u1ee7a node v\u00e0 c\u00e1c container v\u1ec1 cho Master Node.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#kube-proxy-nguoi-dan-loi-mang","title":"<code>kube-proxy</code> - Ng\u01b0\u1eddi D\u1eabn L\u1ed1i M\u1ea1ng","text":"<ul> <li>So s\u00e1nh: C\u00e1c \u1ee9ng d\u1ee5ng tr\u00ean c\u00e1c t\u00e0u h\u00e0ng kh\u00e1c nhau c\u1ea7n n\u00f3i chuy\u1ec7n \u0111\u01b0\u1ee3c v\u1edbi nhau (v\u00ed d\u1ee5: web server tr\u00ean t\u00e0u A c\u1ea7n g\u1ecdi \u0111\u1ebfn database tr\u00ean t\u00e0u B). <code>kube-proxy</code> t\u1ea1o ra c\u00e1c tuy\u1ebfn \u0111\u01b0\u1eddng li\u00ean l\u1ea1c \u0111\u00f3.</li> <li>Th\u1ef1c t\u1ebf: <code>kube-proxy</code> l\u00e0 m\u1ed9t network proxy ch\u1ea1y tr\u00ean m\u1ed7i node. N\u00f3 duy tr\u00ec c\u00e1c quy t\u1eafc m\u1ea1ng (network rules) tr\u00ean c\u00e1c node, cho ph\u00e9p giao ti\u1ebfp m\u1ea1ng \u0111\u1ebfn c\u00e1c Pod t\u1eeb b\u00ean trong ho\u1eb7c b\u00ean ngo\u00e0i c\u1ee5m. N\u00f3 l\u00e0 th\u00e0nh ph\u1ea7n ch\u00ednh gi\u00fap th\u1ef1c hi\u1ec7n c\u01a1 ch\u1ebf Service Discovery trong Kubernetes.</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#tom-tat-kien-truc","title":"T\u00f3m t\u1eaft Ki\u1ebfn tr\u00fac","text":"<ul> <li>Master Node (Control Plane):</li> <li><code>etcd</code> (L\u01b0u tr\u1eef tr\u1ea1ng th\u00e1i)</li> <li><code>kube-scheduler</code> (Ch\u1ecdn Node cho Pod)</li> <li><code>kube-controller-manager</code> (Qu\u1ea3n l\u00fd c\u00e1c controller)</li> <li><code>kube-api-server</code> (C\u1ed5ng giao ti\u1ebfp ch\u00ednh)</li> <li>Worker Node:</li> <li><code>kubelet</code> (Agent qu\u1ea3n l\u00fd container tr\u00ean Node)</li> <li><code>kube-proxy</code> (Qu\u1ea3n l\u00fd m\u1ea1ng cho Node)</li> <li><code>Container Runtime</code> (Ph\u1ea7n m\u1ec1m ch\u1ea1y container)</li> </ul>"},{"location":"k8s/01.core/01.cluster-architecture/#chot-ha-cho-ky-thi","title":"\"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li>N\u1eafm v\u1eefng s\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa Master Node v\u00e0 Worker Node.</li> <li>Hi\u1ec3u r\u00f5 vai tr\u00f2 v\u00e0 tr\u00e1ch nhi\u1ec7m c\u1ee7a t\u1eebng th\u00e0nh ph\u1ea7n c\u1ed1t l\u00f5i: <code>etcd</code>, <code>api-server</code>, <code>scheduler</code>, <code>controller-manager</code>, <code>kubelet</code>, <code>kube-proxy</code>.</li> <li>H\u00e3y nh\u1edb r\u1eb1ng m\u1ecdi giao ti\u1ebfp \u0111\u1ec1u \u0111i qua <code>kube-api-server</code>.</li> <li><code>kubelet</code> l\u00e0 \"tay ch\u00e2n\" c\u1ee7a Master tr\u00ean m\u1ed7i Worker Node.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/","title":"02 03.docker containerd","text":""},{"location":"k8s/01.core/02-03.docker-containerd/#1-cau-chuyen-lich-su-docker-kubernetes-va-su-ra-oi-cua-cri","title":"1. C\u00e2u chuy\u1ec7n L\u1ecbch s\u1eed: Docker, Kubernetes v\u00e0 s\u1ef1 ra \u0111\u1eddi c\u1ee7a CRI","text":"<ul> <li>Thu\u1edf s\u01a1 khai: Docker l\u00e0 \"vua\" c\u1ee7a th\u1ebf gi\u1edbi container. Kubernetes ban \u0111\u1ea7u \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng \u0111\u1ec3 d\u00e0n d\u1ef1ng (orchestrate) chuy\u00ean bi\u1ec7t cho Docker. L\u00fac n\u00e0y, ch\u00fang \"d\u00ednh li\u1ec1n\" v\u1edbi nhau.</li> <li>S\u1ef1 tr\u1ed7i d\u1eady: Kubernetes ng\u00e0y c\u00e0ng ph\u1ed5 bi\u1ebfn, v\u00e0 c\u00e1c container runtime kh\u00e1c (nh\u01b0 <code>rkt</code>) c\u0169ng mu\u1ed1n \u0111\u01b0\u1ee3c Kubernetes h\u1ed7 tr\u1ee3. C\u1ed9ng \u0111\u1ed3ng c\u1ea7n Kubernetes ph\u1ea3i l\u00e0m vi\u1ec7c \u0111\u01b0\u1ee3c v\u1edbi nhi\u1ec1u runtime ch\u1ee9 kh\u00f4ng ch\u1ec9 ri\u00eang Docker.</li> <li> <p>Gi\u1ea3i ph\u00e1p: CRI (Container Runtime Interface): Kubernetes gi\u1edbi thi\u1ec7u CRI - m\u1ed9t giao di\u1ec7n chu\u1ea9n. B\u1ea5t k\u1ef3 container runtime n\u00e0o tu\u00e2n th\u1ee7 ti\u00eau chu\u1ea9n OCI (Open Container Initiative) \u0111\u1ec1u c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c v\u1edbi Kubernetes th\u00f4ng qua CRI.</p> </li> <li> <p>OCI \u0111\u1ecbnh ngh\u0129a ti\u00eau chu\u1ea9n v\u1ec1 c\u00e1ch build m\u1ed9t image (<code>imagespec</code>) v\u00e0 c\u00e1ch m\u1ed9t runtime ho\u1ea1t \u0111\u1ed9ng (<code>runtimespec</code>).</p> </li> <li> <p>V\u1ea5n \u0111\u1ec1 c\u1ee7a Docker: Docker ra \u0111\u1eddi tr\u01b0\u1edbc khi c\u00f3 CRI, n\u00ean n\u00f3 kh\u00f4ng t\u01b0\u01a1ng th\u00edch tr\u1ef1c ti\u1ebfp v\u1edbi chu\u1ea9n n\u00e0y.</p> </li> <li>Mi\u1ebfng v\u00e1 \"t\u1ea1m b\u1ee3\": <code>dockershim</code>: V\u00ec Docker qu\u00e1 ph\u1ed5 bi\u1ebfn, Kubernetes \u0111\u00e3 t\u1ea1o ra m\u1ed9t \"mi\u1ebfng v\u00e1\" t\u00ean l\u00e0 <code>dockershim</code>. \u0110\u00e2y l\u00e0 m\u1ed9t c\u1ea7u n\u1ed1i t\u1ea1m th\u1eddi \u0111\u1ec3 Kubernetes c\u00f3 th\u1ec3 ti\u1ebfp t\u1ee5c h\u1ed7 tr\u1ee3 Docker engine.</li> <li>Cu\u1ed9c chia ly \u0111\u1ecbnh m\u1ec7nh (Kubernetes v1.24): Vi\u1ec7c duy tr\u00ec <code>dockershim</code> ng\u00e0y c\u00e0ng tr\u1edf th\u00e0nh g\u00e1nh n\u1eb7ng. Do \u0111\u00f3, t\u1eeb phi\u00ean b\u1ea3n 1.24, Kubernetes \u0111\u00e3 lo\u1ea1i b\u1ecf ho\u00e0n to\u00e0n <code>dockershim</code>, \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c ch\u1ea5m d\u1ee9t h\u1ed7 tr\u1ee3 tr\u1ef1c ti\u1ebfp Docker engine nh\u01b0 m\u1ed9t container runtime.</li> </ul> <p>L\u01b0u \u00fd c\u1ef1c k\u1ef3 quan tr\u1ecdng: C\u00e1c Docker image m\u00e0 b\u1ea1n \u0111\u00e3 build v\u1eabn ho\u1ea1t \u0111\u1ed9ng b\u00ecnh th\u01b0\u1eddng! V\u00ec Docker build image theo chu\u1ea9n OCI <code>imagespec</code>, n\u00ean c\u00e1c runtime t\u01b0\u01a1ng th\u00edch CRI kh\u00e1c (nh\u01b0 Containerd) v\u1eabn c\u00f3 th\u1ec3 ch\u1ea1y ch\u00fang ngon l\u00e0nh. Ch\u1ec9 c\u00f3 Docker engine l\u00e0 kh\u00f4ng c\u00f2n \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 tr\u1ef1c ti\u1ebfp n\u1eefa th\u00f4i.</p>"},{"location":"k8s/01.core/02-03.docker-containerd/#2-hieu-ve-containerd-trai-tim-cua-docker","title":"2. Hi\u1ec3u v\u1ec1 Containerd - \"Tr\u00e1i tim\" c\u1ee7a Docker","text":"<ul> <li>Docker kh\u00f4ng ch\u1ec9 l\u00e0 m\u1ed9t runtime. N\u00f3 l\u00e0 m\u1ed9t b\u1ed9 c\u00f4ng c\u1ee5 bao g\u1ed3m Docker CLI, API, build tools,... v\u00e0 b\u00ean trong n\u00f3 ch\u00ednh l\u00e0 Containerd - th\u00e0nh ph\u1ea7n c\u1ed1t l\u00f5i ch\u1ecbu tr\u00e1ch nhi\u1ec7m ch\u1ea1y container.</li> <li>Containerd v\u1ed1n d\u0129 \u0111\u00e3 t\u01b0\u01a1ng th\u00edch v\u1edbi CRI. Hi\u1ec7n nay, n\u00f3 \u0111\u00e3 l\u00e0 m\u1ed9t d\u1ef1 \u00e1n \u0111\u1ed9c l\u1eadp, t\u1ed1t nghi\u1ec7p t\u1ea1i CNCF. B\u1ea1n c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t v\u00e0 s\u1eed d\u1ee5ng ri\u00eang Containerd m\u00e0 kh\u00f4ng c\u1ea7n c\u00e0i c\u1ea3 b\u1ed9 Docker engine.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#3-dung-cu-trong-ky-nguyen-moi-ctr-vs-nerdctl-vs-crictl","title":"3. \"D\u1ee5ng c\u1ee5\" trong K\u1ef7 nguy\u00ean m\u1edbi: <code>ctr</code> vs. <code>nerdctl</code> vs. <code>crictl</code>","text":"<p>Khi kh\u00f4ng c\u00f2n <code>docker</code> tr\u00ean c\u00e1c node Kubernetes, ch\u00fang ta s\u1ebd d\u00f9ng g\u00ec \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi container? \u0110\u00e2y l\u00e0 3 c\u00f4ng c\u1ee5 b\u1ea1n c\u1ea7n ph\u00e2n bi\u1ec7t:</p>"},{"location":"k8s/01.core/02-03.docker-containerd/#ctr","title":"<code>ctr</code>","text":"<ul> <li>Ngu\u1ed3n g\u1ed1c: \u0110i k\u00e8m khi b\u1ea1n c\u00e0i \u0111\u1eb7t Containerd.</li> <li>M\u1ee5c \u0111\u00edch: Ch\u1ec9 d\u00f9ng \u0111\u1ec3 debug Containerd. N\u00f3 c\u00f3 r\u1ea5t \u00edt t\u00ednh n\u0103ng v\u00e0 kh\u00f4ng th\u00e2n thi\u1ec7n v\u1edbi ng\u01b0\u1eddi d\u00f9ng.</li> <li>K\u1ebft lu\u1eadn: Trong th\u1ef1c t\u1ebf, b\u1ea1n g\u1ea7n nh\u01b0 s\u1ebd kh\u00f4ng d\u00f9ng \u0111\u1ebfn n\u00f3. C\u00f3 th\u1ec3 b\u1ecf qua.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#nerdctl-nerd-control","title":"<code>nerdctl</code> (Nerd Control)","text":"<ul> <li>Ngu\u1ed3n g\u1ed1c: T\u1eeb c\u1ed9ng \u0111\u1ed3ng Containerd.</li> <li>M\u1ee5c \u0111\u00edch: L\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 d\u00f2ng l\u1ec7nh gi\u1ed1ng h\u1ec7t Docker (Docker-like CLI) d\u00e0nh ri\u00eang cho Containerd. D\u00f9ng cho m\u1ee5c \u0111\u00edch ph\u1ed5 th\u00f4ng (general purpose).</li> <li>\u0110i\u1ec3m m\u1ea1nh: C\u00fa ph\u00e1p g\u1ea7n nh\u01b0 y h\u1ec7t <code>docker</code>. B\u1ea1n ch\u1ec9 c\u1ea7n thay <code>docker</code> b\u1eb1ng <code>nerdctl</code>. V\u00ed d\u1ee5: <code>nerdctl run</code>, <code>nerdctl ps</code>, <code>nerdctl images</code>. N\u00f3 c\u00f2n h\u1ed7 tr\u1ee3 c\u00e1c t\u00ednh n\u0103ng m\u1edbi h\u01a1n c\u1ee7a Containerd m\u00e0 Docker ch\u01b0a c\u00f3.</li> <li>K\u1ebft lu\u1eadn: \u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 b\u1ea1n n\u00ean d\u00f9ng n\u1ebfu mu\u1ed1n c\u00f3 tr\u1ea3i nghi\u1ec7m t\u01b0\u01a1ng t\u1ef1 Docker \u0111\u1ec3 qu\u1ea3n l\u00fd container khi ch\u1ec9 c\u00f3 Containerd.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#crictl-cri-control","title":"<code>crictl</code> (CRI Control)","text":"<ul> <li>Ngu\u1ed3n g\u1ed1c: T\u1eeb c\u1ed9ng \u0111\u1ed3ng Kubernetes.</li> <li>M\u1ee5c \u0111\u00edch: L\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 d\u00f2ng l\u1ec7nh \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u00e0 debug B\u1ea4T K\u1ef2 CRI-compatible runtime n\u00e0o (kh\u00f4ng ch\u1ec9 ri\u00eang Containerd). \u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 nh\u00ecn t\u1eeb \"g\u00f3c \u0111\u1ed9 c\u1ee7a Kubernetes\".</li> <li>\u0110i\u1ec3m m\u1ea1nh:</li> <li>Ho\u1ea1t \u0111\u1ed9ng tr\u00ean nhi\u1ec1u runtime kh\u00e1c nhau.</li> <li>C\u00fa ph\u00e1p c\u0169ng r\u1ea5t gi\u1ed1ng <code>docker</code> cho c\u00e1c l\u1ec7nh c\u01a1 b\u1ea3n (<code>ps</code>, <code>logs</code>, <code>exec</code>, <code>images</code>...).</li> <li>N\u00f3 \"hi\u1ec3u\" v\u1ec1 Pod (<code>crictl pods</code>), \u0111i\u1ec1u m\u00e0 Docker kh\u00f4ng c\u00f3.</li> <li>S\u1eed d\u1ee5ng:</li> <li>\u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 thay th\u1ebf cho <code>docker</code> khi b\u1ea1n c\u1ea7n troubleshoot container tr\u00ean m\u1ed9t Kubernetes node. V\u00ed d\u1ee5, ng\u00e0y x\u01b0a b\u1ea1n <code>ssh</code> v\u00e0o worker node v\u00e0 g\u00f5 <code>docker ps</code>, th\u00ec b\u00e2y gi\u1edd b\u1ea1n s\u1ebd g\u00f5 <code>crictl ps</code>.</li> <li>L\u01b0u \u00fd: <code>crictl</code> ch\u1ee7 y\u1ebfu d\u00f9ng \u0111\u1ec3 debug. B\u1ea1n kh\u00f4ng n\u00ean d\u00f9ng n\u00f3 \u0111\u1ec3 t\u1ea1o container th\u1ee7 c\u00f4ng, v\u00ec <code>kubelet</code> s\u1ebd kh\u00f4ng bi\u1ebft v\u1ec1 container \u0111\u00f3 v\u00e0 c\u00f3 th\u1ec3 s\u1ebd x\u00f3a n\u00f3 \u0111i.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#4-bang-so-sanh-nhanh","title":"4. B\u1ea3ng so s\u00e1nh \"Nhanh\"","text":"C\u00f4ng c\u1ee5 M\u1ee5c \u0111\u00edch C\u1ed9ng \u0111\u1ed3ng Ph\u1ea1m vi <code>ctr</code> Debugging Containerd Ch\u1ec9 Containerd <code>nerdctl</code> Ph\u1ed5 th\u00f4ng (Gi\u1ed1ng Docker) Containerd Ch\u1ec9 Containerd <code>crictl</code> Debugging (Tr\u00ean K8s node) Kubernetes M\u1ecdi CRI-compatible runtime"},{"location":"k8s/01.core/02-03.docker-containerd/#5-chot-ha-cho-ky-thi","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li>Hi\u1ec3u r\u00f5 qu\u00e1 tr\u00ecnh Kubernetes chuy\u1ec3n t\u1eeb ph\u1ee5 thu\u1ed9c <code>dockershim</code> sang th\u1ebf gi\u1edbi CRI thu\u1ea7n t\u00fay.</li> <li>Khi n\u00e0o d\u00f9ng g\u00ec?</li> <li><code>nerdctl</code>: D\u00f9ng khi b\u1ea1n mu\u1ed1n c\u00f3 m\u1ed9t tr\u1ea3i nghi\u1ec7m gi\u1ed1ng Docker \u0111\u1ec3 qu\u1ea3n l\u00fd container n\u00f3i chung v\u1edbi Containerd.</li> <li><code>crictl</code>: D\u00f9ng khi b\u1ea1n \u0111ang \u1edf tr\u00ean m\u1ed9t node Kubernetes v\u00e0 c\u1ea7n troubleshoot/debug c\u00e1c container v\u00e0 pod. \u0110\u00e2y l\u00e0 c\u00f4ng c\u1ee5 ch\u1ea9n \u0111o\u00e1n ch\u00ednh c\u1ee7a b\u1ea1n tr\u00ean K8s node ng\u00e0y nay.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#docker-bi-khai-tu-trong-kubernetes-hieu-sao-cho-ung","title":"\"Docker b\u1ecb khai t\u1eed\" trong Kubernetes - Hi\u1ec3u sao cho \u0111\u00fang? \ud83e\udd14","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t \u0111i\u1ec3m g\u00e2y nhi\u1ec1u nh\u1ea7m l\u1eabn. \"Khai t\u1eed\" \u1edf \u0111\u00e2y kh\u00f4ng c\u00f3 ngh\u0129a l\u00e0 Docker \u0111\u00e3 \"ch\u1ebft\" ho\u00e0n to\u00e0n. N\u00f3 ch\u1ec9 c\u00f3 ngh\u0129a l\u00e0 \u0111\u00e3 c\u00f3 m\u1ed9t s\u1ef1 thay \u0111\u1ed5i l\u1edbn trong c\u00e1ch Kubernetes l\u00e0m vi\u1ec7c v\u1edbi container runtime.</p>"},{"location":"k8s/01.core/02-03.docker-containerd/#1-tom-tat-lai-cuoc-chia-ly","title":"1. T\u00f3m t\u1eaft l\u1ea1i \"Cu\u1ed9c chia ly\"","text":"<ul> <li> <p>Docker kh\u00f4ng ch\u1ec9 l\u00e0 m\u1ed9t runtime: B\u1ea1n c\u1ea7n nh\u1edb r\u1eb1ng, Docker l\u00e0 m\u1ed9t b\u1ed9 c\u00f4ng c\u1ee5 ho\u00e0n ch\u1ec9nh, bao g\u1ed3m:</p> </li> <li> <p>Docker CLI (d\u00f2ng l\u1ec7nh <code>docker</code>)</p> </li> <li>API</li> <li>C\u00f4ng c\u1ee5 build image</li> <li>Qu\u1ea3n l\u00fd volumes, networking, auth...</li> <li> <p>V\u00e0 quan tr\u1ecdng nh\u1ea5t, b\u00ean trong n\u00f3 ch\u1ee9a th\u00e0nh ph\u1ea7n runtime c\u1ed1t l\u00f5i l\u00e0 <code>Containerd</code>.</p> </li> <li> <p><code>Containerd</code> m\u1edbi l\u00e0 th\u1ee9 Kubernetes c\u1ea7n:</p> </li> <li> <p><code>Containerd</code> l\u00e0 ph\u1ea7n ch\u1ecbu tr\u00e1ch nhi\u1ec7m th\u1ef1c thi v\u00e0 qu\u1ea3n l\u00fd v\u00f2ng \u0111\u1eddi c\u1ee7a container.</p> </li> <li>N\u00f3 ho\u00e0n to\u00e0n t\u01b0\u01a1ng th\u00edch v\u1edbi CRI (Container Runtime Interface) - ti\u00eau chu\u1ea9n m\u00e0 Kubernetes d\u00f9ng \u0111\u1ec3 giao ti\u1ebfp v\u1edbi c\u00e1c container runtime.</li> <li> <p>Do \u0111\u00f3, Kubernetes c\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c tr\u1ef1c ti\u1ebfp v\u1edbi <code>Containerd</code> (ho\u1eb7c c\u00e1c CRI-compatible runtime kh\u00e1c).</p> </li> <li> <p>V\u1eady t\u1ea1i sao Kubernetes kh\u00f4ng c\u1ea7n Docker Engine n\u1eefa?</p> </li> <li> <p>Kubernetes \u0111\u00e3 c\u00f3 c\u01a1 ch\u1ebf ri\u00eang \u0111\u1ec3 qu\u1ea3n l\u00fd m\u1ea1ng, volumes, v\u00e0 c\u00e1c t\u00e1c v\u1ee5 kh\u00e1c. N\u00f3 kh\u00f4ng c\u1ea7n \u0111\u1ebfn c\u00e1c c\u00f4ng c\u1ee5 ph\u1ee5 tr\u1ee3 \u0111i k\u00e8m trong b\u1ed9 Docker Engine.</p> </li> <li>Kubernetes ch\u1ec9 c\u1ea7n m\u1ed9t th\u1ee9 duy nh\u1ea5t t\u1eeb b\u1ed9 Docker: th\u00e0nh ph\u1ea7n runtime. V\u00e0 v\u00ec n\u00f3 c\u00f3 th\u1ec3 n\u00f3i chuy\u1ec7n tr\u1ef1c ti\u1ebfp v\u1edbi <code>Containerd</code>, vi\u1ec7c ph\u1ea3i \u0111i qua c\u1ea3 m\u1ed9t Docker Engine c\u1ed3ng k\u1ec1nh tr\u1edf n\u00ean kh\u00f4ng c\u1ea7n thi\u1ebft v\u00e0 ph\u1ee9c t\u1ea1p (ph\u1ea3i th\u00f4ng qua <code>dockershim</code>).</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#2-vay-docker-chet-that-hay-khong","title":"2. V\u1eady Docker \"ch\u1ebft\" th\u1eadt hay kh\u00f4ng? \ud83d\udc7b","text":"<p>C\u00e2u tr\u1ea3 l\u1eddi d\u1ee9t kho\u00e1t l\u00e0: KH\u00d4NG! \ud83d\udeab</p> <ul> <li>Docker v\u1eabn l\u00e0 c\u00f4ng c\u1ee5 container ph\u1ed5 bi\u1ebfn nh\u1ea5t v\u00e0 \u0111\u01b0\u1ee3c h\u00e0ng tri\u1ec7u l\u1eadp tr\u00ecnh vi\u00ean s\u1eed d\u1ee5ng h\u00e0ng ng\u00e0y cho vi\u1ec7c ph\u00e1t tri\u1ec3n c\u1ee5c b\u1ed9 (local development) v\u00e0 build image.</li> <li>S\u1ef1 thay \u0111\u1ed5i n\u00e0y ch\u1ec9 c\u00f3 ngh\u0129a l\u00e0: Kubernetes kh\u00f4ng c\u00f2n y\u00eau c\u1ea7u Docker Engine l\u00e0m container runtime cho n\u00f3 n\u1eefa.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#3-ap-dung-trong-khoa-hoc-nay-va-thuc-te","title":"3. \u00c1p d\u1ee5ng trong kh\u00f3a h\u1ecdc n\u00e0y v\u00e0 th\u1ef1c t\u1ebf","text":"<ul> <li>Trong c\u00e1c b\u00e0i h\u1ecdc, vi\u1ec7c ti\u1ebfp t\u1ee5c d\u00f9ng Docker l\u00e0m v\u00ed d\u1ee5 \u0111\u1ec3 gi\u1ea3ng d\u1ea1y c\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n v\u1ec1 container l\u00e0 ho\u00e0n to\u00e0n \u1ed5n. N\u00f3 gi\u00fap ch\u00fang ta hi\u1ec3u c\u00e1ch container ho\u1ea1t \u0111\u1ed9ng tr\u01b0\u1edbc khi \u0111i v\u00e0o th\u1ebf gi\u1edbi d\u00e0n d\u1ef1ng ph\u1ee9c t\u1ea1p c\u1ee7a Kubernetes.</li> <li>M\u1eb9o th\u1ef1c h\u00e0nh: N\u1ebfu m\u00e1y b\u1ea1n kh\u00f4ng c\u00e0i Docker m\u00e0 ch\u1ec9 c\u00e0i <code>Containerd</code> ri\u00eang l\u1ebb, b\u1ea1n v\u1eabn c\u00f3 th\u1ec3 l\u00e0m theo h\u1ea7u h\u1ebft c\u00e1c v\u00ed d\u1ee5 b\u1eb1ng c\u00e1ch thay th\u1ebf l\u1ec7nh <code>docker</code> b\u1eb1ng l\u1ec7nh <code>nerdctl</code>.</li> </ul>"},{"location":"k8s/01.core/02-03.docker-containerd/#chot-ha-cho-ky-thi","title":"\"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li>\"Docker deprecation\" c\u00f3 ngh\u0129a l\u00e0 Kubernetes \u0111\u00e3 lo\u1ea1i b\u1ecf h\u1ed7 tr\u1ee3 cho Docker Engine nh\u01b0 m\u1ed9t runtime, kh\u00f4ng ph\u1ea3i l\u00e0 khai t\u1eed Docker n\u00f3i chung.</li> <li>Docker images b\u1ea1n build v\u1eabn ho\u1ea1t \u0111\u1ed9ng 100% tr\u00ean Kubernetes v\u00ec ch\u00fang tu\u00e2n theo chu\u1ea9n OCI.</li> <li>K\u1ef9 n\u0103ng l\u00e0m vi\u1ec7c v\u1edbi Docker (build image, ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng trong container) v\u1eabn c\u1ef1c k\u1ef3 quan tr\u1ecdng v\u00e0 c\u1ea7n thi\u1ebft.</li> <li>Trong m\u00f4i tr\u01b0\u1eddng Kubernetes hi\u1ec7n \u0111\u1ea1i, runtime \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng tr\u1ef1c ti\u1ebfp l\u00e0 m\u1ed9t runtime t\u01b0\u01a1ng th\u00edch CRI, ph\u1ed5 bi\u1ebfn nh\u1ea5t ch\u00ednh l\u00e0 <code>Containerd</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/","title":"04.etcd","text":""},{"location":"k8s/01.core/04.etcd/#1-etcd-la-gi","title":"1. <code>etcd</code> l\u00e0 g\u00ec?","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 ngh\u0129 v\u1ec1 <code>etcd</code> nh\u01b0 m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u \u0111\u1eb7c bi\u1ec7t. Theo \u0111\u1ecbnh ngh\u0129a, n\u00f3 l\u00e0 m\u1ed9t kho l\u01b0u tr\u1eef kh\u00f3a-gi\u00e1 tr\u1ecb (key-value store) c\u00f3 c\u00e1c \u0111\u1eb7c t\u00ednh sau:</p> <ul> <li>Ph\u00e2n t\u00e1n (Distributed): D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c tr\u1ea3i r\u1ed9ng tr\u00ean nhi\u1ec1u m\u00e1y ch\u1ee7.</li> <li>\u0110\u00e1ng tin c\u1eady (Reliable): \u0110\u1ea3m b\u1ea3o d\u1eef li\u1ec7u kh\u00f4ng b\u1ecb m\u1ea5t m\u00e1t.</li> <li>\u0110\u01a1n gi\u1ea3n, an to\u00e0n v\u00e0 nhanh ch\u00f3ng.</li> </ul> <p>Trong Kubernetes, <code>etcd</code> ch\u00ednh l\u00e0 \"b\u1ed9 n\u00e3o\" l\u01b0u tr\u1eef to\u00e0n b\u1ed9 tr\u1ea1ng th\u00e1i v\u00e0 c\u1ea5u h\u00ecnh c\u1ee7a c\u1ea3 c\u1ee5m.</p>"},{"location":"k8s/01.core/04.etcd/#2-key-value-store-khac-gi-co-so-du-lieu-truyen-thong-sql","title":"2. Key-Value Store kh\u00e1c g\u00ec C\u01a1 s\u1edf d\u1eef li\u1ec7u truy\u1ec1n th\u1ed1ng (SQL)? \ud83e\udd14","text":"<p>\u0110\u00e2y l\u00e0 \u0111i\u1ec3m kh\u00e1c bi\u1ec7t c\u1ed1t l\u00f5i b\u1ea1n c\u1ea7n n\u1eafm:</p> <ul> <li> <p>C\u01a1 s\u1edf d\u1eef li\u1ec7u truy\u1ec1n th\u1ed1ng (SQL):</p> </li> <li> <p>L\u01b0u d\u1eef li\u1ec7u d\u01b0\u1edbi d\u1ea1ng b\u1ea3ng (table) v\u1edbi c\u00e1c h\u00e0ng (row) v\u00e0 c\u1ed9t (column) \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nghi\u00eam ng\u1eb7t.</p> </li> <li> <p>V\u00ed d\u1ee5: M\u1ed9t b\u1ea3ng th\u00f4ng tin nh\u00e2n vi\u00ean. N\u1ebfu b\u1ea1n mu\u1ed1n th\u00eam m\u1ed9t lo\u1ea1i th\u00f4ng tin m\u1edbi (v\u00ed d\u1ee5: <code>l\u01b0\u01a1ng</code>), b\u1ea1n ph\u1ea3i th\u00eam m\u1ed9t c\u1ed9t m\u1edbi cho to\u00e0n b\u1ed9 b\u1ea3ng, \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn t\u1ea5t c\u1ea3 c\u00e1c h\u00e0ng, k\u1ec3 c\u1ea3 nh\u1eefng ng\u01b0\u1eddi kh\u00f4ng c\u00f3 th\u00f4ng tin l\u01b0\u01a1ng (d\u1eabn \u0111\u1ebfn nhi\u1ec1u \u00f4 tr\u1ed1ng).</p> </li> <li> <p>Kho l\u01b0u tr\u1eef Key-Value (nh\u01b0 <code>etcd</code>):</p> </li> <li> <p>L\u01b0u th\u00f4ng tin d\u01b0\u1edbi d\u1ea1ng c\u00e1c c\u1eb7p Kh\u00f3a (Key) = Gi\u00e1 tr\u1ecb (Value), gi\u1ed1ng nh\u01b0 c\u00e1c t\u00e0i li\u1ec7u (document) ri\u00eang l\u1ebb.</p> </li> <li>V\u00ed d\u1ee5: M\u1ed7i ng\u01b0\u1eddi c\u00f3 m\u1ed9t \"t\u00e0i li\u1ec7u\" ri\u00eang. Ng\u01b0\u1eddi \u0111i l\u00e0m th\u00ec c\u00f3 tr\u01b0\u1eddng <code>l\u01b0\u01a1ng</code> trong t\u00e0i li\u1ec7u c\u1ee7a h\u1ecd. H\u1ecdc sinh th\u00ec c\u00f3 tr\u01b0\u1eddng <code>\u0111i\u1ec3m</code> trong t\u00e0i li\u1ec7u c\u1ee7a h\u1ecd.</li> <li>L\u1ee3i \u00edch: C\u1ea5u tr\u00fac r\u1ea5t linh ho\u1ea1t. B\u1ea1n c\u00f3 th\u1ec3 th\u00eam m\u1ed9t tr\u01b0\u1eddng m\u1edbi v\u00e0o m\u1ed9t t\u00e0i li\u1ec7u m\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng g\u00ec \u0111\u1ebfn c\u00e1c t\u00e0i li\u1ec7u kh\u00e1c. D\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p th\u01b0\u1eddng \u0111\u01b0\u1ee3c l\u01b0u d\u01b0\u1edbi d\u1ea1ng JSON ho\u1eb7c YAML.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#3-bat-au-voi-etcd","title":"3. B\u1eaft \u0111\u1ea7u v\u1edbi <code>etcd</code>","text":"<p>Vi\u1ec7c c\u00e0i \u0111\u1eb7t v\u00e0 ch\u1ea1y <code>etcd</code> r\u1ea5t \u0111\u01a1n gi\u1ea3n:</p> <ol> <li>T\u1ea3i v\u1ec1 (Download): L\u1ea5y file nh\u1ecb ph\u00e2n (binary) ph\u00f9 h\u1ee3p v\u1edbi h\u1ec7 \u0111i\u1ec1u h\u00e0nh c\u1ee7a b\u1ea1n t\u1eeb trang GitHub c\u1ee7a <code>etcd</code>.</li> <li>Gi\u1ea3i n\u00e9n (Unzip): Gi\u1ea3i n\u00e9n file v\u1eeba t\u1ea3i.</li> <li>Ch\u1ea1y (Run): Ch\u1ea1y file th\u1ef1c thi <code>etcd</code>.</li> <li>M\u1eb7c \u0111\u1ecbnh, <code>etcd</code> s\u1ebd kh\u1edfi \u0111\u1ed9ng m\u1ed9t d\u1ecbch v\u1ee5 v\u00e0 l\u1eafng nghe tr\u00ean c\u1ed5ng <code>2379</code>.</li> </ol> <p>Sau khi ch\u1ea1y, b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng m\u1ed9t \"client\" \u0111\u1ec3 giao ti\u1ebfp v\u1edbi n\u00f3. Client m\u1eb7c \u0111\u1ecbnh \u0111i k\u00e8m l\u00e0 <code>etcdctl</code>.</p>"},{"location":"k8s/01.core/04.etcd/#4-cu-lua-ve-phien-ban-etcdctl-v2-vs-v3","title":"4. \"C\u00fa l\u1eeba\" v\u1ec1 phi\u00ean b\u1ea3n: <code>etcdctl</code> v2 vs. v3 \u26a0\ufe0f","text":"<p>\u0110\u00e2y l\u00e0 ph\u1ea7n quan tr\u1ecdng nh\u1ea5t v\u00e0 d\u1ec5 g\u00e2y nh\u1ea7m l\u1eabn nh\u1ea5t cho ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u!</p> <p>Gi\u1eefa phi\u00ean b\u1ea3n <code>etcd</code> v2 v\u00e0 v3 c\u00f3 s\u1ef1 thay \u0111\u1ed5i l\u1edbn v\u1ec1 API, d\u1eabn \u0111\u1ebfn c\u00e1c l\u1ec7nh <code>etcdctl</code> c\u0169ng thay \u0111\u1ed5i theo.</p> <ul> <li> <p>L\u00e0m sao \u0111\u1ec3 bi\u1ebft <code>etcdctl</code> \u0111ang d\u00f9ng API phi\u00ean b\u1ea3n n\u00e0o?</p> </li> <li> <p>Ch\u1ea1y l\u1ec7nh: <code>etcdctl version</code></p> </li> <li> <p>L\u1ec7nh n\u00e0y s\u1ebd hi\u1ec3n th\u1ecb phi\u00ean b\u1ea3n c\u1ee7a c\u00f4ng c\u1ee5 <code>etcdctl</code> v\u00e0 quan tr\u1ecdng h\u01a1n l\u00e0 phi\u00ean b\u1ea3n API m\u00e0 n\u00f3 \u0111ang \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh \u0111\u1ec3 s\u1eed d\u1ee5ng (l\u00e0 <code>2</code> ho\u1eb7c <code>3</code>).</p> </li> <li> <p>L\u00e0m sao \u0111\u1ec3 chuy\u1ec3n sang d\u00f9ng API v3?</p> </li> <li> <p>C\u00e1c phi\u00ean b\u1ea3n <code>etcdctl</code> m\u1edbi h\u01a1n th\u01b0\u1eddng m\u1eb7c \u0111\u1ecbnh d\u00f9ng API v3. Nh\u01b0ng n\u1ebfu b\u1ea1n g\u1eb7p phi\u00ean b\u1ea3n c\u0169 h\u01a1n, b\u1ea1n c\u1ea7n ra l\u1ec7nh cho n\u00f3 d\u00f9ng API v3.</p> </li> <li> <p>C\u00e1ch t\u1ed1t nh\u1ea5t l\u00e0 \u0111\u1eb7t bi\u1ebfn m\u00f4i tr\u01b0\u1eddng cho to\u00e0n b\u1ed9 phi\u00ean l\u00e0m vi\u1ec7c c\u1ee7a b\u1ea1n b\u1eb1ng l\u1ec7nh:     <pre><code>export ETCDCTL_API=3\n</code></pre></p> </li> <li> <p>So s\u00e1nh l\u1ec7nh gi\u1eefa v2 v\u00e0 v3:</p> </li> </ul> T\u00e1c v\u1ee5 L\u1ec7nh API v2 L\u1ec7nh API v3 L\u01b0u gi\u00e1 tr\u1ecb <code>etcdctl set key1 value1</code> <code>etcdctl put key1 value1</code> L\u1ea5y gi\u00e1 tr\u1ecb <code>etcdctl get key1</code> <code>etcdctl get key1</code> Xem phi\u00ean b\u1ea3n <code>etcdctl --version</code> (l\u00e0 m\u1ed9t t\u00f9y ch\u1ecdn) <code>etcdctl version</code> (l\u00e0 m\u1ed9t l\u1ec7nh) <p>Vi\u1ec7c <code>set</code> \u0111\u1ed5i th\u00e0nh <code>put</code> l\u00e0 thay \u0111\u1ed5i d\u1ec5 nh\u1eadn th\u1ea5y nh\u1ea5t.</p>"},{"location":"k8s/01.core/04.etcd/#5-chot-ha-cho-nguoi-moi-bat-au","title":"5. \"Ch\u1ed1t h\u1ea1\" cho ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u \ud83d\udcdd","text":"<ul> <li><code>etcd</code> l\u00e0 m\u1ed9t kho l\u01b0u tr\u1eef key-value linh ho\u1ea1t, l\u00e0 \"b\u1ed9 n\u00e3o\" c\u1ee7a Kubernetes.</li> <li>Vi\u1ec7c c\u00e0i \u0111\u1eb7t v\u00e0 ch\u1ea1y n\u00f3 kh\u00e1 \u0111\u01a1n gi\u1ea3n, m\u1eb7c \u0111\u1ecbnh \u1edf c\u1ed5ng 2379.</li> <li>Khi s\u1eed d\u1ee5ng <code>etcdctl</code>, h\u00e3y lu\u00f4n ch\u1eafc ch\u1eafn r\u1eb1ng b\u1ea1n \u0111ang l\u00e0m vi\u1ec7c v\u1edbi API v3 b\u1eb1ng c\u00e1ch ki\u1ec3m tra (<code>etcdctl version</code>) v\u00e0 thi\u1ebft l\u1eadp bi\u1ebfn m\u00f4i tr\u01b0\u1eddng (<code>export ETCDCTL_API=3</code>). \u0110\u00e2y l\u00e0 m\u1eb9o th\u1ef1c t\u1ebf quan tr\u1ecdng nh\u1ea5t \u0111\u1ec3 tr\u00e1nh l\u1ed7i kh\u00f4ng \u0111\u00e1ng c\u00f3.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#1-vai-tro-cua-etcd-trong-kubernetes-bo-nao-cua-cum","title":"1. Vai tr\u00f2 c\u1ee7a <code>etcd</code> trong Kubernetes - \"B\u1ed9 n\u00e3o\" c\u1ee7a C\u1ee5m \ud83e\udde0","text":"<p>Trong m\u1ed9t c\u1ee5m Kubernetes, <code>etcd</code> ch\u00ednh l\u00e0 ngu\u1ed3n ch\u00e2n l\u00fd duy nh\u1ea5t (single source of truth) .</p> <ul> <li>N\u00f3 l\u01b0u tr\u1eef TO\u00c0N B\u1ed8 th\u00f4ng tin v\u1ec1 c\u1ee5m, bao g\u1ed3m:</li> <li>Nodes, Pods, Configs, Secrets, Accounts, Roles, Role Bindings, v\u00e0 nhi\u1ec1u th\u1ee9 kh\u00e1c.</li> <li>M\u1ecdi th\u00f4ng tin b\u1ea1n th\u1ea5y khi ch\u1ea1y l\u1ec7nh <code>kubectl get ...</code> \u0111\u1ec1u \u0111\u01b0\u1ee3c l\u1ea5y t\u1eeb <code>etcd</code>.</li> <li>M\u1ecdi thay \u0111\u1ed5i b\u1ea1n th\u1ef1c hi\u1ec7n v\u1edbi c\u1ee5m (th\u00eam node, tri\u1ec3n khai pod,...) ch\u1ec9 \u0111\u01b0\u1ee3c coi l\u00e0 ho\u00e0n t\u1ea5t khi n\u00f3 \u0111\u00e3 \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt th\u00e0nh c\u00f4ng v\u00e0o <code>etcd</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#2-cach-etcd-uoc-trien-khai-trong-kubernetes","title":"2. C\u00e1ch <code>etcd</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai trong Kubernetes","text":"<p><code>etcd</code> \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t nh\u01b0 th\u1ebf n\u00e0o c\u00f2n ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1ch b\u1ea1n d\u1ef1ng c\u1ee5m Kubernetes c\u1ee7a m\u00ecnh. C\u00f3 hai c\u00e1ch ch\u00ednh:</p>"},{"location":"k8s/01.core/04.etcd/#a-trien-khai-thu-cong-from-scratch","title":"a. Tri\u1ec3n khai \"Th\u1ee7 c\u00f4ng\" (From Scratch)","text":"<p>\u0110\u00e2y l\u00e0 c\u00e1ch b\u1ea1n t\u1ef1 tay l\u00e0m m\u1ecdi th\u1ee9.</p> <ul> <li>B\u1ea1n s\u1ebd ph\u1ea3i t\u1ef1 t\u1ea3i file nh\u1ecb ph\u00e2n (binary) c\u1ee7a <code>etcd</code> v\u1ec1.</li> <li>T\u1ef1 c\u00e0i \u0111\u1eb7t v\u00e0 c\u1ea5u h\u00ecnh <code>etcd</code> nh\u01b0 m\u1ed9t service ch\u1ea1y tr\u00ean Master Node.</li> <li>Khi c\u1ea5u h\u00ecnh, c\u00f3 m\u1ed9t tham s\u1ed1 r\u1ea5t quan tr\u1ecdng c\u1ea7n l\u01b0u \u00fd:</li> <li><code>--advertise-client-urls</code> : \u0110\u00e2y l\u00e0 \u0111\u1ecba ch\u1ec9 m\u00e0 <code>etcd</code> s\u1ebd l\u1eafng nghe c\u00e1c k\u1ebft n\u1ed1i t\u1eeb client (v\u00ed d\u1ee5: <code>https://&lt;IP-c\u1ee7a-master-node&gt;:2379</code>).</li> <li><code>kube-api-server</code> (th\u00e0nh ph\u1ea7n trung t\u00e2m c\u1ee7a Kubernetes) ph\u1ea3i \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh \u0111\u1ec3 tr\u1ecf \u0111\u1ebfn \u0111\u00fang URL n\u00e0y th\u00ec m\u1edbi c\u00f3 th\u1ec3 n\u00f3i chuy\u1ec7n \u0111\u01b0\u1ee3c v\u1edbi <code>etcd</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#b-trien-khai-bang-kubeadm-cach-de-hon","title":"b. Tri\u1ec3n khai b\u1eb1ng <code>kubeadm</code> (C\u00e1ch d\u1ec5 h\u01a1n)","text":"<p><code>kubeadm</code> l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 gi\u00fap t\u1ef1 \u0111\u1ed9ng h\u00f3a vi\u1ec7c c\u00e0i \u0111\u1eb7t c\u1ee5m Kubernetes.</p> <ul> <li>Khi b\u1ea1n d\u00f9ng <code>kubeadm</code>, n\u00f3 s\u1ebd t\u1ef1 \u0111\u1ed9ng tri\u1ec3n khai <code>etcd</code> cho b\u1ea1n .</li> <li>\u0110i\u1ec1u \u0111\u1eb7c bi\u1ec7t l\u00e0 <code>etcd</code> s\u1ebd \u0111\u01b0\u1ee3c tri\u1ec3n khai d\u01b0\u1edbi d\u1ea1ng m\u1ed9t Pod ch\u1ea1y trong namespace <code>kube-system</code> .</li> <li>N\u1ebfu mu\u1ed1n t\u01b0\u01a1ng t\u00e1c v\u1edbi <code>etcd</code> b\u1eb1ng <code>etcdctl</code>, b\u1ea1n s\u1ebd c\u1ea7n ph\u1ea3i th\u1ef1c hi\u1ec7n l\u1ec7nh b\u00ean trong Pod <code>etcd</code> \u0111\u00f3.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#3-du-lieu-uoc-luu-tru-nhu-the-nao","title":"3. D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef nh\u01b0 th\u1ebf n\u00e0o? \ud83d\udcc2","text":"<p>Kubernetes kh\u00f4ng l\u01b0u d\u1eef li\u1ec7u m\u1ed9t c\u00e1ch l\u1ed9n x\u1ed9n trong <code>etcd</code>. N\u00f3 t\u1ed5 ch\u1ee9c theo m\u1ed9t c\u1ea5u tr\u00fac th\u01b0 m\u1ee5c c\u1ee5 th\u1ec3:</p> <ul> <li>Th\u01b0 m\u1ee5c g\u1ed1c l\u00e0 <code>/registry</code>.</li> <li>B\u00ean d\u01b0\u1edbi l\u00e0 c\u00e1c th\u01b0 m\u1ee5c con cho t\u1eebng lo\u1ea1i t\u00e0i nguy\u00ean, v\u00ed d\u1ee5:</li> <li><code>/registry/nodes</code></li> <li><code>/registry/pods</code></li> <li><code>/registry/deployments</code></li> <li>...</li> </ul>"},{"location":"k8s/01.core/04.etcd/#4-etcd-trong-moi-truong-high-availability-ha","title":"4. <code>etcd</code> trong m\u00f4i tr\u01b0\u1eddng High Availability (HA) \ud83c\udff0","text":"<ul> <li>Trong m\u1ed9t m\u00f4i tr\u01b0\u1eddng HA, b\u1ea1n s\u1ebd c\u00f3 nhi\u1ec1u Master Node \u0111\u1ec3 d\u1ef1 ph\u00f2ng cho nhau.</li> <li>T\u01b0\u01a1ng \u1ee9ng, b\u1ea1n c\u0169ng s\u1ebd c\u00f3 nhi\u1ec1u instance <code>etcd</code> ch\u1ea1y tr\u00ean c\u00e1c Master Node n\u00e0y, t\u1ea1o th\u00e0nh m\u1ed9t c\u1ee5m <code>etcd</code> (etcd cluster).</li> <li>\u0110\u1ec3 c\u00e1c instance <code>etcd</code> n\u00e0y bi\u1ebft v\u1ec1 nhau v\u00e0 ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t c\u1ee5m, b\u1ea1n c\u1ea7n c\u1ea5u h\u00ecnh tham s\u1ed1 <code>--initial-cluster</code> . Tham s\u1ed1 n\u00e0y s\u1ebd li\u1ec7t k\u00ea \u0111\u1ecba ch\u1ec9 c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c th\u00e0nh vi\u00ean trong c\u1ee5m <code>etcd</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#5-chot-ha-cho-ky-thi","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi \ud83d\udcdd","text":"<ul> <li><code>etcd</code> l\u00e0 c\u01a1 s\u1edf d\u1eef li\u1ec7u, l\u00e0 tr\u00e1i tim, l\u00e0 b\u1ed9 n\u00e3o c\u1ee7a Kubernetes , l\u01b0u tr\u1eef m\u1ecdi tr\u1ea1ng th\u00e1i c\u1ee7a c\u1ee5m.</li> <li>Hi\u1ec3u r\u00f5 hai ph\u01b0\u01a1ng ph\u00e1p tri\u1ec3n khai ch\u00ednh:</li> <li>Th\u1ee7 c\u00f4ng (From Scratch): B\u1ea1n t\u1ef1 c\u00e0i, nh\u1edb tham s\u1ed1 <code>--advertise-client-urls</code>.</li> <li>D\u00f9ng <code>kubeadm</code>: <code>etcd</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0 m\u1ed9t Pod trong namespace <code>kube-system</code>.</li> <li>Trong m\u00f4i tr\u01b0\u1eddng HA, <code>etcd</code> ch\u1ea1y d\u01b0\u1edbi d\u1ea1ng m\u1ed9t c\u1ee5m (cluster) v\u00e0 \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh qua tham s\u1ed1 <code>--initial-cluster</code>.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#1-etcdctl-vu-khi-tuong-tac-voi-etcd","title":"1. <code>etcdctl</code> - \"V\u0169 kh\u00ed\" t\u01b0\u01a1ng t\u00e1c v\u1edbi <code>etcd</code>","text":"<p>Nh\u01b0 ch\u00fang ta \u0111\u00e3 bi\u1ebft, <code>etcdctl</code> l\u00e0 c\u00f4ng c\u1ee5 d\u00f2ng l\u1ec7nh (CLI) \u0111\u1ec3 \"n\u00f3i chuy\u1ec7n\" v\u1edbi c\u01a1 s\u1edf d\u1eef li\u1ec7u <code>etcd</code>. Tuy nhi\u00ean, \u0111\u1ec3 \"n\u00f3i chuy\u1ec7n\" th\u00e0nh c\u00f4ng, b\u1ea1n c\u1ea7n bi\u1ebft hai \u0111i\u1ec1u quan tr\u1ecdng: \"ng\u00f4n ng\u1eef\" v\u00e0 \"gi\u1ea5y th\u00f4ng h\u00e0nh\".</p>"},{"location":"k8s/01.core/04.etcd/#2-hai-the-gioi-api-version-2-vs-version-3","title":"2. Hai \"Th\u1ebf gi\u1edbi\" API: Version 2 vs. Version 3","text":"<p><code>etcdctl</code> c\u00f3 th\u1ec3 giao ti\u1ebfp v\u1edbi <code>etcd</code> server b\u1eb1ng 2 phi\u00ean b\u1ea3n API: v2 v\u00e0 v3. \u0110i\u1ec1u quan tr\u1ecdng l\u00e0 b\u1ed9 l\u1ec7nh c\u1ee7a hai phi\u00ean b\u1ea3n n\u00e0y kh\u00e1c nhau .</p> T\u00e1c v\u1ee5 L\u1ec7nh API v2 L\u1ec7nh API v3 L\u01b0u gi\u00e1 tr\u1ecb <code>etcdctl set</code> <code>etcdctl put</code> Backup <code>etcdctl backup</code> <code>etcdctl snapshot save</code> Ki\u1ec3m tra \"s\u1ee9c kh\u1ecfe\" <code>etcdctl cluster-health</code> <code>etcdctl endpoint health</code> <p>M\u1eb7c \u0111\u1ecbnh, <code>etcdctl</code> c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh \u0111\u1ec3 d\u00f9ng API v2. Khi \u0111\u00f3, n\u1ebfu b\u1ea1n g\u00f5 l\u1ec7nh c\u1ee7a v3 (v\u00ed d\u1ee5: <code>put</code>), n\u00f3 s\u1ebd b\u00e1o l\u1ed7i v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.</p> <p>\ud83d\udc49 L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 ch\u1eafc ch\u1eafn d\u00f9ng API v3?</p> <p>C\u00e1ch t\u1ed1t nh\u1ea5t l\u00e0 \u0111\u1eb7t bi\u1ebfn m\u00f4i tr\u01b0\u1eddng sau cho phi\u00ean l\u00e0m vi\u1ec7c c\u1ee7a b\u1ea1n:</p> <p>Bash</p> <pre><code>export ETCDCTL_API=3\n</code></pre>"},{"location":"k8s/01.core/04.etcd/#3-giay-thong-hanh-xac-thuc-bang-certificate","title":"3. \"Gi\u1ea5y th\u00f4ng h\u00e0nh\" - X\u00e1c th\u1ef1c b\u1eb1ng Certificate \ud83d\udd11","text":"<p>Trong m\u1ed9t c\u1ee5m Kubernetes \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t \u0111\u00fang c\u00e1ch, <code>etcd</code> server s\u1ebd y\u00eau c\u1ea7u x\u00e1c th\u1ef1c an to\u00e0n. B\u1ea1n kh\u00f4ng th\u1ec3 \"tay kh\u00f4ng\" v\u00e0o n\u00f3i chuy\u1ec7n \u0111\u01b0\u1ee3c m\u00e0 c\u1ea7n c\u00f3 \"gi\u1ea5y th\u00f4ng h\u00e0nh\" l\u00e0 c\u00e1c file certificate.</p> <p><code>etcdctl</code> c\u1ea7n b\u1ea1n ch\u1ec9 \u0111\u1ecbnh \u0111\u01b0\u1eddng d\u1eabn \u0111\u1ebfn 3 file certificate quan tr\u1ecdng:</p> <ul> <li><code>--cacert</code>: \u0110\u01b0\u1eddng d\u1eabn \u0111\u1ebfn file CA certificate c\u1ee7a <code>etcd</code> (v\u00ed d\u1ee5: <code>/etc/kubernetes/pki/etcd/ca.crt</code>). D\u00f9ng \u0111\u1ec3 x\u00e1c th\u1ef1c <code>etcd</code> server.</li> <li><code>--cert</code>: \u0110\u01b0\u1eddng d\u1eabn \u0111\u1ebfn file certificate c\u1ee7a client (v\u00ed d\u1ee5: <code>/etc/kubernetes/pki/etcd/server.crt</code>). D\u00f9ng \u0111\u1ec3 <code>etcd</code> server x\u00e1c th\u1ef1c b\u1ea1n.</li> <li><code>--key</code>: \u0110\u01b0\u1eddng d\u1eabn \u0111\u1ebfn file key ri\u00eang c\u1ee7a client (v\u00ed d\u1ee5: <code>/etc/kubernetes/pki/etcd/server.key</code>).</li> </ul> <p>L\u01b0u \u00fd: Trong m\u1ed9t c\u1ee5m <code>kubeadm</code>, c\u00e1c file n\u00e0y th\u01b0\u1eddng n\u1eb1m \u1edf \u0111\u01b0\u1eddng d\u1eabn <code>/etc/kubernetes/pki/etcd/</code> tr\u00ean master node.</p>"},{"location":"k8s/01.core/04.etcd/#4-cu-phap-full-option-lenh-etcdctl-hoan-chinh","title":"4. C\u00fa ph\u00e1p \"Full Option\" - L\u1ec7nh <code>etcdctl</code> ho\u00e0n ch\u1ec9nh","text":"<p>K\u1ebft h\u1ee3p t\u1ea5t c\u1ea3 nh\u1eefng \u0111i\u1ec1u tr\u00ean, m\u1ed9t l\u1ec7nh <code>etcdctl</code> ho\u00e0n ch\u1ec9nh \u0111\u1ec3 t\u01b0\u01a1ng t\u00e1c v\u1edbi <code>etcd</code> (\u0111ang ch\u1ea1y d\u01b0\u1edbi d\u1ea1ng Pod trong m\u1ed9t c\u1ee5m <code>kubeadm</code>) s\u1ebd tr\u00f4ng nh\u01b0 th\u1ebf n\u00e0y:</p> <p>Bash</p> <pre><code>kubectl exec etcd-master -n kube-system -- sh -c \"ETCDCTL_API=3 etcdctl get / --prefix --keys-only --limit=10 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key\"\n</code></pre> <p>H\u00e3y \"m\u1ed5 x\u1ebb\" n\u00f3:</p> <ul> <li><code>kubectl exec etcd-master -n kube-system --</code>: Ch\u1ea1y m\u1ed9t l\u1ec7nh b\u00ean trong Pod t\u00ean l\u00e0 <code>etcd-master</code> thu\u1ed9c namespace <code>kube-system</code>.</li> <li><code>sh -c \"...\"</code>: Th\u1ef1c thi chu\u1ed7i l\u1ec7nh b\u00ean trong d\u1ea5u ngo\u1eb7c k\u00e9p.</li> <li><code>ETCDCTL_API=3</code>: \u0110\u1ea3m b\u1ea3o ch\u00fang ta \u0111ang d\u00f9ng API v3.</li> <li><code>etcdctl get / --prefix --keys-only --limit=10</code>: L\u1ec7nh <code>etcdctl</code> th\u1ef1c t\u1ebf \u0111\u1ec3 l\u1ea5y 10 key \u0111\u1ea7u ti\u00ean t\u1eeb th\u01b0 m\u1ee5c g\u1ed1c.</li> <li><code>--cacert ... --cert ... --key ...</code>: Cung c\u1ea5p 3 \"gi\u1ea5y th\u00f4ng h\u00e0nh\" c\u1ea7n thi\u1ebft \u0111\u1ec3 x\u00e1c th\u1ef1c.</li> </ul>"},{"location":"k8s/01.core/04.etcd/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<p>Khi l\u00e0m b\u00e0i thi CKA, n\u1ebfu b\u1ea1n c\u1ea7n t\u01b0\u01a1ng t\u00e1c tr\u1ef1c ti\u1ebfp v\u1edbi <code>etcd</code> b\u1eb1ng <code>etcdctl</code>, h\u00e3y lu\u00f4n nh\u1edb \"th\u1ea7n ch\u00fa\" 3 \u0111i\u1ec1u sau:</p> <ol> <li>Phi\u00ean b\u1ea3n API: Lu\u00f4n \u0111\u1eb7t <code>ETCDCTL_API=3</code>.</li> <li>Certificate: Lu\u00f4n cung c\u1ea5p \u0111\u1ee7 3 tham s\u1ed1 <code>--cacert</code>, <code>--cert</code>, v\u00e0 <code>--key</code> v\u1edbi \u0111\u01b0\u1eddng d\u1eabn ch\u00ednh x\u00e1c.</li> <li>Th\u1ef1c thi trong Pod: N\u1ebfu <code>etcd</code> ch\u1ea1y nh\u01b0 m\u1ed9t Pod, b\u1ea1n ph\u1ea3i d\u00f9ng <code>kubectl exec</code> \u0111\u1ec3 v\u00e0o trong Pod \u0111\u00f3 v\u00e0 th\u1ef1c thi l\u1ec7nh.</li> </ol> <p>Qu\u00ean m\u1ed9t trong nh\u1eefng \u0111i\u1ec1u n\u00e0y g\u1ea7n nh\u01b0 ch\u1eafc ch\u1eafn s\u1ebd khi\u1ebfn l\u1ec7nh c\u1ee7a b\u1ea1n th\u1ea5t b\u1ea1i. Hy v\u1ecdng ph\u1ea7n gi\u1ea3i th\u00edch chi ti\u1ebft n\u00e0y s\u1ebd gi\u00fap b\u1ea1n t\u1ef1 tin h\u01a1n khi l\u00e0m vi\u1ec7c v\u1edbi <code>etcd</code>! Ch\u00fac b\u1ea1n bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/05.kube-api-server/","title":"05.kube api server","text":""},{"location":"k8s/01.core/05.kube-api-server/#1-kube-api-server-cong-giao-tiep-chinh-cua-kubernetes","title":"1. <code>kube-api-server</code> - \"C\u1ed5ng Giao ti\u1ebfp\" Ch\u00ednh c\u1ee7a Kubernetes \ud83d\udeaa","text":"<p><code>kube-api-server</code> l\u00e0 th\u00e0nh ph\u1ea7n qu\u1ea3n l\u00fd ch\u00ednh v\u00e0 l\u00e0 \"c\u1ed5ng v\u00e0o\" duy nh\u1ea5t c\u1ee7a c\u1ee5m Kubernetes. M\u1ecdi t\u01b0\u01a1ng t\u00e1c, t\u1eeb ng\u01b0\u1eddi d\u00f9ng cho \u0111\u1ebfn c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c trong c\u1ee5m, \u0111\u1ec1u ph\u1ea3i \u0111i qua n\u00f3.</p> <ul> <li>Khi b\u1ea1n ch\u1ea1y m\u1ed9t l\u1ec7nh <code>kubectl</code>, th\u1ef1c ch\u1ea5t <code>kubectl</code> \u0111ang g\u1eedi m\u1ed9t y\u00eau c\u1ea7u \u0111\u1ebfn <code>kube-api-server</code>.</li> <li>B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 g\u1ecdi tr\u1ef1c ti\u1ebfp API c\u1ee7a n\u00f3 m\u00e0 kh\u00f4ng c\u1ea7n <code>kubectl</code>. d\u00f9ng curl post</li> </ul>"},{"location":"k8s/01.core/05.kube-api-server/#2-luong-hoat-ong-cua-kube-api-server","title":"2. Lu\u1ed3ng Ho\u1ea1t \u0111\u1ed9ng c\u1ee7a <code>kube-api-server</code>","text":"<p>\u0110\u1ec3 hi\u1ec3u r\u00f5 vai tr\u00f2 trung t\u00e2m c\u1ee7a n\u00f3, h\u00e3y xem qua hai lu\u1ed3ng ho\u1ea1t \u0111\u1ed9ng ch\u00ednh:</p>"},{"location":"k8s/01.core/05.kube-api-server/#a-khi-ban-oc-du-lieu-vi-du-kubectl-get-pods","title":"a. Khi b\u1ea1n \u0111\u1ecdc d\u1eef li\u1ec7u (v\u00ed d\u1ee5: <code>kubectl get pods</code>)","text":"<ol> <li>L\u1ec7nh <code>kubectl</code> \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn <code>kube-api-server</code>.</li> <li><code>api-server</code> x\u00e1c th\u1ef1c (authenticates) v\u00e0 ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7 (validates) c\u1ee7a y\u00eau c\u1ea7u.</li> <li><code>api-server</code> truy xu\u1ea5t d\u1eef li\u1ec7u t\u1eeb kho l\u01b0u tr\u1eef <code>etcd</code>.</li> <li><code>api-server</code> tr\u1ea3 k\u1ebft qu\u1ea3 v\u1ec1 cho <code>kubectl</code>.</li> </ol>"},{"location":"k8s/01.core/05.kube-api-server/#b-khi-ban-thay-oi-cum-vi-du-tao-mot-pod-moi","title":"b. Khi b\u1ea1n thay \u0111\u1ed5i c\u1ee5m (v\u00ed d\u1ee5: t\u1ea1o m\u1ed9t Pod m\u1edbi)","text":"<p>\u0110\u00e2y l\u00e0 l\u00fac vai tr\u00f2 \"nh\u1ea1c tr\u01b0\u1edfng\" c\u1ee7a <code>api-server</code> th\u1ec3 hi\u1ec7n r\u00f5 nh\u1ea5t:</p> <ol> <li>Y\u00eau c\u1ea7u t\u1ea1o Pod \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn <code>api-server</code>.</li> <li><code>api-server</code> x\u00e1c th\u1ef1c v\u00e0 ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7.</li> <li><code>api-server</code> t\u1ea1o m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Pod (ch\u01b0a \u0111\u01b0\u1ee3c g\u00e1n cho Node n\u00e0o) v\u00e0 c\u1eadp nh\u1eadt th\u00f4ng tin n\u00e0y v\u00e0o <code>etcd</code>. N\u00f3 b\u00e1o l\u1ea1i cho ng\u01b0\u1eddi d\u00f9ng r\u1eb1ng Pod \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ea1o.</li> <li><code>kube-scheduler</code>, v\u1ed1n lu\u00f4n \"l\u1eafng nghe\" <code>api-server</code>, ph\u00e1t hi\u1ec7n ra c\u00f3 Pod m\u1edbi ch\u01b0a \u0111\u01b0\u1ee3c \u0111i\u1ec1u ph\u1ed1i.</li> <li><code>scheduler</code> t\u00ecm m\u1ed9t Node ph\u00f9 h\u1ee3p v\u00e0 b\u00e1o l\u1ea1i cho <code>api-server</code>.</li> <li><code>api-server</code> c\u1eadp nh\u1eadt th\u00f4ng tin Node \u0111\u01b0\u1ee3c g\u00e1n v\u00e0o <code>etcd</code>.</li> <li><code>api-server</code> truy\u1ec1n th\u00f4ng tin n\u00e0y \u0111\u1ebfn <code>kubelet</code> tr\u00ean Worker Node t\u01b0\u01a1ng \u1ee9ng.</li> <li><code>kubelet</code> nh\u1eadn l\u1ec7nh, t\u1ea1o Pod tr\u00ean Node c\u1ee7a m\u00ecnh (b\u1eb1ng c\u00e1ch ra l\u1ec7nh cho Container Runtime Engine) v\u00e0 c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i c\u1ee7a Pod v\u1ec1 l\u1ea1i cho <code>api-server</code>.</li> <li><code>api-server</code> m\u1ed9t l\u1ea7n n\u1eefa c\u1eadp nh\u1eadt tr\u1ea1ng th\u00e1i cu\u1ed1i c\u00f9ng n\u00e0y v\u00e0o <code>etcd</code>.</li> </ol> <p>Qua lu\u1ed3ng tr\u00ean, b\u1ea1n c\u00f3 th\u1ec3 th\u1ea5y <code>api-server</code> \u0111\u1ee9ng \u1edf trung t\u00e2m c\u1ee7a m\u1ecdi ho\u1ea1t \u0111\u1ed9ng, \u0111i\u1ec1u ph\u1ed1i t\u1ea5t c\u1ea3 c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c.</p>"},{"location":"k8s/01.core/05.kube-api-server/#3-trach-nhiem-cot-loi","title":"3. Tr\u00e1ch nhi\u1ec7m C\u1ed1t l\u00f5i","text":"<ul> <li>X\u00e1c th\u1ef1c v\u00e0 ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a m\u1ecdi y\u00eau c\u1ea7u.</li> <li>Truy xu\u1ea5t v\u00e0 c\u1eadp nh\u1eadt d\u1eef li\u1ec7u trong <code>etcd</code>.</li> <li>\u0110i\u1ec3m quan tr\u1ecdng nh\u1ea5t: <code>kube-api-server</code> l\u00e0 th\u00e0nh ph\u1ea7n DUY NH\u1ea4T \u0111\u01b0\u1ee3c ph\u00e9p t\u01b0\u01a1ng t\u00e1c tr\u1ef1c ti\u1ebfp v\u1edbi kho d\u1eef li\u1ec7u <code>etcd</code>. T\u1ea5t c\u1ea3 c\u00e1c th\u00e0nh ph\u1ea7n kh\u00e1c (<code>scheduler</code>, <code>controller-manager</code>, <code>kubelet</code>) \u0111\u1ec1u ph\u1ea3i th\u00f4ng qua <code>api-server</code>.</li> </ul>"},{"location":"k8s/01.core/05.kube-api-server/#4-cach-kube-api-server-uoc-trien-khai","title":"4. C\u00e1ch <code>kube-api-server</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai","text":"<ul> <li>\"Th\u1ee7 c\u00f4ng\" (From Scratch): B\u1ea1n s\u1ebd t\u1ea3i file binary c\u1ee7a <code>kube-api-server</code> v\u00e0 c\u1ea5u h\u00ecnh n\u00f3 ch\u1ea1y nh\u01b0 m\u1ed9t service tr\u00ean Master Node (v\u00ed d\u1ee5: file service t\u1ea1i <code>/etc/systemd/system/kube-apiserver.service</code>).</li> <li>D\u00f9ng <code>kubeadm</code>: <code>kubeadm</code> s\u1ebd tri\u1ec3n khai <code>kube-api-server</code> d\u01b0\u1edbi d\u1ea1ng m\u1ed9t static Pod trong namespace <code>kube-system</code>. File \u0111\u1ecbnh ngh\u0129a c\u1ee7a Pod n\u00e0y n\u1eb1m t\u1ea1i <code>/etc/kubernetes/manifests/</code>.</li> </ul>"},{"location":"k8s/01.core/05.kube-api-server/#5-xem-cac-tuy-chon-cau-hinh","title":"5. Xem c\u00e1c T\u00f9y ch\u1ecdn C\u1ea5u h\u00ecnh","text":"<p><code>kube-api-server</code> c\u00f3 r\u1ea5t nhi\u1ec1u t\u00f9y ch\u1ecdn (flag) khi kh\u1edfi ch\u1ea1y.</p> <ul> <li>M\u1ed9t t\u00f9y ch\u1ecdn c\u1ef1c k\u1ef3 quan tr\u1ecdng l\u00e0 <code>--etcd-servers</code>. N\u00f3 ch\u1ec9 cho <code>api-server</code> bi\u1ebft \u0111\u1ecba ch\u1ec9 c\u1ee7a <code>etcd</code> cluster \u0111\u1ec3 k\u1ebft n\u1ed1i.</li> <li>C\u00e1ch xem c\u00e1c t\u00f9y ch\u1ecdn \u0111ang ch\u1ea1y:</li> <li>V\u1edbi c\u1ee5m <code>kubeadm</code>: Xem file manifest c\u1ee7a Pod <code>kube-api-server</code> t\u1ea1i <code>/etc/kubernetes/manifests/</code>.</li> <li>V\u1edbi c\u1ee5m c\u00e0i th\u1ee7 c\u00f4ng: Xem file service t\u1ea1i <code>/etc/systemd/system/</code>.</li> <li>C\u00e1ch chung: Li\u1ec7t k\u00ea c\u00e1c ti\u1ebfn tr\u00ecnh \u0111ang ch\u1ea1y tr\u00ean Master Node v\u00e0 t\u00ecm <code>kube-api-server</code> (v\u00ed d\u1ee5: <code>ps aux | grep kube-apiserver</code>).</li> </ul>"},{"location":"k8s/01.core/05.kube-api-server/#6-chot-ha-cho-ky-thi-cka","title":"6. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>kube-api-server</code> l\u00e0 trung t\u00e2m \u0111i\u1ec1u ph\u1ed1i, l\u00e0 c\u1ed5ng v\u00e0o c\u1ee7a c\u1ee5m Kubernetes.</li> <li>N\u00f3 l\u00e0 th\u00e0nh ph\u1ea7n duy nh\u1ea5t \u0111\u01b0\u1ee3c n\u00f3i chuy\u1ec7n tr\u1ef1c ti\u1ebfp v\u1edbi <code>etcd</code>.</li> <li>Hi\u1ec3u r\u00f5 vai tr\u00f2 c\u1ee7a n\u00f3 trong v\u00f2ng \u0111\u1eddi t\u1ea1o Pod l\u00e0 r\u1ea5t quan tr\u1ecdng.</li> <li>Bi\u1ebft c\u00e1ch t\u00ecm file c\u1ea5u h\u00ecnh c\u1ee7a <code>api-server</code> trong m\u1ed9t c\u1ee5m \u0111\u01b0\u1ee3c d\u1ef1ng b\u1eb1ng <code>kubeadm</code> (n\u00f3 l\u00e0 m\u1ed9t static Pod).</li> </ul>"},{"location":"k8s/01.core/06.kube-controller-manager/","title":"06.kube controller manager","text":""},{"location":"k8s/01.core/06.kube-controller-manager/#1-kube-controller-manager-bo-nao-ieu-hanh-cua-kubernetes","title":"1. <code>kube-controller-manager</code> - \"B\u1ed9 n\u00e3o\" \u0110i\u1ec1u h\u00e0nh c\u1ee7a Kubernetes \ud83e\udde0","text":"<p>H\u00e3y ti\u1ebfp t\u1ee5c v\u1edbi ph\u00e9p so s\u00e1nh v\u1ec1 h\u1ea1m \u0111\u1ed9i t\u00e0u. N\u1ebfu <code>kube-api-server</code> l\u00e0 \"t\u1ed5ng \u0111\u00e0i\" trung t\u00e2m, th\u00ec <code>kube-controller-manager</code> gi\u1ed1ng nh\u01b0 l\u00e0 t\u1eadp h\u1ee3p c\u00e1c ph\u00f2ng ban chuy\u00ean tr\u00e1ch tr\u00ean t\u00e0u ch\u1ec9 huy. M\u1ed7i ph\u00f2ng ban (m\u1ed7i \"controller\") c\u00f3 m\u1ed9t nhi\u1ec7m v\u1ee5 ri\u00eang v\u00e0 l\u00e0m vi\u1ec7c kh\u00f4ng ng\u1eebng ngh\u1ec9.</p> <p>V\u1ec1 c\u01a1 b\u1ea3n, <code>kube-controller-manager</code> l\u00e0 m\u1ed9t ti\u1ebfn tr\u00ecnh (process) duy nh\u1ea5t, nh\u01b0ng b\u00ean trong n\u00f3 l\u1ea1i ch\u1ee9a v\u00e0 qu\u1ea3n l\u00fd r\u1ea5t nhi\u1ec1u controller kh\u00e1c nhau.</p>"},{"location":"k8s/01.core/06.kube-controller-manager/#2-controller-la-gi-vong-lap-oi-chieu","title":"2. Controller l\u00e0 g\u00ec? (V\u00f2ng l\u1eb7p \u0110\u1ed1i chi\u1ebfu) \ud83d\udd04","text":"<p>\u0110\u00e2y l\u00e0 kh\u00e1i ni\u1ec7m c\u1ed1t l\u00f5i b\u1ea1n c\u1ea7n n\u1eafm:</p> <p>M\u1ed9t controller trong Kubernetes l\u00e0 m\u1ed9t ti\u1ebfn tr\u00ecnh li\u00ean t\u1ee5c th\u1ef1c hi\u1ec7n m\u1ed9t v\u00f2ng l\u1eb7p \u0111i\u1ec1u khi\u1ec3n (control loop):</p> <ol> <li>Theo d\u00f5i (Watch): N\u00f3 li\u00ean t\u1ee5c theo d\u00f5i tr\u1ea1ng th\u00e1i c\u1ee7a m\u1ed9t lo\u1ea1i t\u00e0i nguy\u00ean n\u00e0o \u0111\u00f3 trong c\u1ee5m (th\u00f4ng qua <code>kube-api-server</code>).</li> <li>\u0110\u1ed1i chi\u1ebfu (Reconcile): N\u00f3 so s\u00e1nh tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i (current state) v\u1edbi tr\u1ea1ng th\u00e1i mong mu\u1ed1n (desired state) m\u00e0 b\u1ea1n \u0111\u00e3 khai b\u00e1o.</li> <li>H\u00e0nh \u0111\u1ed9ng (Act): N\u1ebfu hai tr\u1ea1ng th\u00e1i n\u00e0y kh\u00f4ng kh\u1edbp nhau, controller s\u1ebd th\u1ef1c hi\u1ec7n c\u00e1c h\u00e0nh \u0111\u1ed9ng c\u1ea7n thi\u1ebft \u0111\u1ec3 \u0111\u01b0a tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i v\u1ec1 g\u1ea7n v\u1edbi tr\u1ea1ng th\u00e1i mong mu\u1ed1n.</li> </ol> <p>T\u1ea5t c\u1ea3 \"tr\u00ed th\u00f4ng minh\" c\u1ee7a c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng Kubernetes nh\u01b0 Deployment, Service, Namespace... \u0111\u1ec1u \u0111\u01b0\u1ee3c hi\u1ec7n th\u1ef1c h\u00f3a th\u00f4ng qua c\u00e1c controller n\u00e0y.</p>"},{"location":"k8s/01.core/06.kube-controller-manager/#3-cac-phong-ban-tieu-bieu-vi-du-ve-controller","title":"3. C\u00e1c \"Ph\u00f2ng ban\" ti\u00eau bi\u1ec3u (V\u00ed d\u1ee5 v\u1ec1 Controller)","text":"<p><code>kube-controller-manager</code> qu\u1ea3n l\u00fd r\u1ea5t nhi\u1ec1u controller. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 hai v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh:</p>"},{"location":"k8s/01.core/06.kube-controller-manager/#a-node-controller-phong-quan-ly-node","title":"a. Node Controller - \"Ph\u00f2ng Qu\u1ea3n l\u00fd Node\"","text":"<ul> <li>Nhi\u1ec7m v\u1ee5: Theo d\u00f5i \"s\u1ee9c kh\u1ecfe\" c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c Worker Node trong c\u1ee5m.</li> <li>C\u00e1ch ho\u1ea1t \u0111\u1ed9ng:</li> <li>C\u1ee9 m\u1ed7i 5 gi\u00e2y, n\u00f3 ki\u1ec3m tra tr\u1ea1ng th\u00e1i c\u1ee7a c\u00e1c node.</li> <li>N\u1ebfu m\u1ed9t node kh\u00f4ng g\u1eedi \"t\u00edn hi\u1ec7u s\u1ef1 s\u1ed1ng\" (heartbeat) v\u1ec1, controller s\u1ebd \u0111\u1ee3i 40 gi\u00e2y r\u1ed3i \u0111\u00e1nh d\u1ea5u node \u0111\u00f3 l\u00e0 <code>Unreachable</code>.</li> <li>Sau khi \u0111\u00e1nh d\u1ea5u <code>Unreachable</code>, n\u00f3 cho node \u0111\u00f3 th\u00eam 5 ph\u00fat \u0111\u1ec3 \"h\u1ed3i sinh\".</li> <li>N\u1ebfu sau 5 ph\u00fat m\u00e0 node v\u1eabn kh\u00f4ng quay l\u1ea1i, Node Controller s\u1ebd ti\u1ebfn h\u00e0nh \"tr\u1ee5c xu\u1ea5t\" (evict) c\u00e1c Pod \u0111ang ch\u1ea1y tr\u00ean node h\u1ecfng \u0111\u00f3 v\u00e0 y\u00eau c\u1ea7u <code>kube-scheduler</code> t\u00ecm nh\u00e0 m\u1edbi cho ch\u00fang tr\u00ean c\u00e1c node kh\u1ecfe m\u1ea1nh kh\u00e1c (v\u1edbi \u0111i\u1ec1u ki\u1ec7n c\u00e1c Pod \u0111\u00f3 \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd b\u1edfi m\u1ed9t ReplicaSet ho\u1eb7c Deployment).</li> </ul>"},{"location":"k8s/01.core/06.kube-controller-manager/#b-replication-controller-phong-am-bao-so-luong","title":"b. Replication Controller - \"Ph\u00f2ng \u0110\u1ea3m b\u1ea3o S\u1ed1 l\u01b0\u1ee3ng\"","text":"<ul> <li>Nhi\u1ec7m v\u1ee5: \u0110\u1ea3m b\u1ea3o s\u1ed1 l\u01b0\u1ee3ng b\u1ea3n sao (replicas) c\u1ee7a m\u1ed9t Pod lu\u00f4n \u0111\u00fang nh\u01b0 b\u1ea1n \u0111\u00e3 khai b\u00e1o trong \u0111\u1ed1i t\u01b0\u1ee3ng ReplicaSet.</li> <li>C\u00e1ch ho\u1ea1t \u0111\u1ed9ng:</li> <li>N\u1ebfu n\u00f3 th\u1ea5y s\u1ed1 l\u01b0\u1ee3ng Pod hi\u1ec7n t\u1ea1i \u00edt h\u01a1n s\u1ed1 l\u01b0\u1ee3ng mong mu\u1ed1n (v\u00ed d\u1ee5: m\u1ed9t Pod b\u1ecb ch\u1ebft), n\u00f3 s\u1ebd ngay l\u1eadp t\u1ee9c t\u1ea1o ra m\u1ed9t Pod m\u1edbi \u0111\u1ec3 b\u00f9 v\u00e0o.</li> </ul>"},{"location":"k8s/01.core/06.kube-controller-manager/#4-cai-at-va-xem-cau-hinh","title":"4. C\u00e0i \u0111\u1eb7t v\u00e0 Xem C\u1ea5u h\u00ecnh","text":"<ul> <li><code>kube-controller-manager</code> l\u00e0 m\u1ed9t file th\u1ef1c thi (binary) duy nh\u1ea5t, ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c controller b\u00ean trong n\u00f3.</li> <li>C\u00e1ch xem c\u00e1c t\u00f9y ch\u1ecdn c\u1ea5u h\u00ecnh \u0111ang ch\u1ea1y:</li> <li>V\u1edbi c\u1ee5m <code>kubeadm</code>: N\u00f3 \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0 m\u1ed9t static Pod trong namespace <code>kube-system</code>. B\u1ea1n c\u00f3 th\u1ec3 xem c\u1ea5u h\u00ecnh trong file manifest c\u1ee7a Pod t\u1ea1i <code>/etc/kubernetes/manifests/</code>.</li> <li>V\u1edbi c\u1ee5m c\u00e0i th\u1ee7 c\u00f4ng: Xem trong file service t\u1ea1i <code>/etc/systemd/system/</code>.</li> <li>C\u00e1ch chung: D\u00f9ng l\u1ec7nh <code>ps aux | grep kube-controller-manager</code> tr\u00ean Master Node \u0111\u1ec3 xem ti\u1ebfn tr\u00ecnh \u0111ang ch\u1ea1y v\u00e0 c\u00e1c tham s\u1ed1 c\u1ee7a n\u00f3.</li> <li>T\u00f9y ch\u1ecdn c\u1ea5u h\u00ecnh: B\u1ea1n c\u00f3 th\u1ec3 t\u00f9y ch\u1ec9nh ho\u1ea1t \u0111\u1ed9ng c\u1ee7a c\u00e1c controller. V\u00ed d\u1ee5, v\u1edbi Node Controller, b\u1ea1n c\u00f3 th\u1ec3 thay \u0111\u1ed5i c\u00e1c tham s\u1ed1 th\u1eddi gian nh\u01b0 <code>--pod-eviction-timeout</code>. B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 d\u00f9ng c\u1edd <code>--controllers</code> \u0111\u1ec3 b\u1eadt/t\u1eaft m\u1ed9t s\u1ed1 controller c\u1ee5 th\u1ec3 (m\u1eb7c \u0111\u1ecbnh l\u00e0 b\u1eadt t\u1ea5t c\u1ea3).</li> </ul>"},{"location":"k8s/01.core/06.kube-controller-manager/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>kube-controller-manager</code> l\u00e0 m\u1ed9t t\u1eadp h\u1ee3p c\u1ee7a nhi\u1ec1u v\u00f2ng l\u1eb7p \u0111i\u1ec1u khi\u1ec3n (control loops).</li> <li>Nhi\u1ec7m v\u1ee5 ch\u00ednh c\u1ee7a n\u00f3 l\u00e0 theo d\u00f5i tr\u1ea1ng th\u00e1i c\u1ee7a c\u1ee5m th\u00f4ng qua API Server v\u00e0 th\u1ef1c hi\u1ec7n c\u00e1c h\u00e0nh \u0111\u1ed9ng c\u1ea7n thi\u1ebft \u0111\u1ec3 \u0111\u01b0a tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i v\u1ec1 tr\u1ea1ng th\u00e1i mong mu\u1ed1n.</li> <li>Hi\u1ec3u r\u00f5 ho\u1ea1t \u0111\u1ed9ng c\u1ee7a c\u00e1c controller ti\u00eau bi\u1ec3u nh\u01b0 Node Controller (v\u00e0 c\u00e1c m\u1ed1c th\u1eddi gian c\u1ee7a n\u00f3) v\u00e0 Replication Controller.</li> <li>Bi\u1ebft c\u00e1ch t\u00ecm file c\u1ea5u h\u00ecnh c\u1ee7a n\u00f3 trong m\u1ed9t c\u1ee5m <code>kubeadm</code> (n\u00f3 l\u00e0 m\u1ed9t static Pod).</li> </ul> <p><code>kube-controller-manager</code> ch\u00ednh l\u00e0 ng\u01b0\u1eddi h\u00f9ng th\u1ea7m l\u1eb7ng, \u0111\u1ea3m b\u1ea3o cho c\u1ee5m Kubernetes c\u1ee7a b\u1ea1n lu\u00f4n ho\u1ea1t \u0111\u1ed9ng \u0111\u00fang nh\u01b0 nh\u1eefng g\u00ec b\u1ea1n k\u1ef3 v\u1ecdng. Ch\u00fac b\u1ea1n m\u1ed9t bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/07.KubeScheduler/","title":"07.KubeScheduler","text":""},{"location":"k8s/01.core/07.KubeScheduler/#1-kube-scheduler-nha-ieu-phoi-thong-minh-cua-kubernetes","title":"1. <code>kube-scheduler</code> - \"Nh\u00e0 \u0110i\u1ec1u ph\u1ed1i\" Th\u00f4ng minh c\u1ee7a Kubernetes \ud83e\udde0","text":"<ul> <li>Nhi\u1ec7m v\u1ee5 ch\u00ednh: <code>kube-scheduler</code> ch\u1ecbu tr\u00e1ch nhi\u1ec7m QUY\u1ebeT \u0110\u1ecaNH xem m\u1ed9t Pod m\u1edbi n\u00ean \u0111\u01b0\u1ee3c ch\u1ea1y tr\u00ean Worker Node n\u00e0o.</li> <li> <p>\u0110i\u1ec3m kh\u00e1c bi\u1ec7t quan tr\u1ecdng c\u1ea7n nh\u1edb:</p> </li> <li> <p>Scheduler ch\u1ec9 c\u00f3 vai tr\u00f2 l\u00e0 \"ch\u1ec9 \u0111\u1ecbnh\". N\u00f3 ra quy\u1ebft \u0111\u1ecbnh: \"Pod A s\u1ebd ch\u1ea1y tr\u00ean Node B\".</p> </li> <li>N\u00f3 KH\u00d4NG ph\u1ea3i l\u00e0 ng\u01b0\u1eddi th\u1ef1c s\u1ef1 \u0111\u1eb7t Pod l\u00ean Node \u0111\u00f3. C\u00f4ng vi\u1ec7c \u0111\u00f3 thu\u1ed9c v\u1ec1 <code>kubelet</code> tr\u00ean Node B.</li> </ul>"},{"location":"k8s/01.core/07.KubeScheduler/#2-tai-sao-chung-ta-can-scheduler","title":"2. T\u1ea1i sao ch\u00fang ta c\u1ea7n Scheduler? \ud83e\udd14","text":"<p>H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng b\u1ea1n c\u00f3 r\u1ea5t nhi\u1ec1u container (h\u00e0ng h\u00f3a) v\u00e0 r\u1ea5t nhi\u1ec1u node (t\u00e0u). B\u1ea1n c\u1ea7n m\u1ed9t ng\u01b0\u1eddi \u0111i\u1ec1u ph\u1ed1i th\u00f4ng minh \u0111\u1ec3:</p> <ul> <li>\u0110\u1ea3m b\u1ea3o container kh\u00f4ng b\u1ecb \u0111\u1eb7t l\u00ean con t\u00e0u \u0111\u00e3 qu\u00e1 t\u1ea3i.</li> <li>\u0110\u1ea3m b\u1ea3o container c\u1ea7n nhi\u1ec1u \"kh\u00f4ng gian\" (t\u00e0i nguy\u00ean) \u0111\u01b0\u1ee3c \u0111\u1eb7t l\u00ean con t\u00e0u \u0111\u1ee7 l\u1edbn.</li> <li>\u0110\u1ea3m b\u1ea3o container c\u00f3 y\u00eau c\u1ea7u \u0111\u1eb7c bi\u1ec7t (v\u00ed d\u1ee5: ch\u1ec9 \u0111i \u0111\u1ebfn c\u1ea3ng X) \u0111\u01b0\u1ee3c \u0111\u1eb7t l\u00ean \u0111\u00fang con t\u00e0u c\u00f3 l\u1ed9 tr\u00ecnh \u0111\u00f3.</li> </ul> <p>Trong Kubernetes c\u0169ng v\u1eady, Scheduler \u0111\u1ea3m b\u1ea3o c\u00e1c Pod \u0111\u01b0\u1ee3c \u0111\u1eb7t l\u00ean c\u00e1c Node ph\u00f9 h\u1ee3p nh\u1ea5t d\u1ef1a tr\u00ean nhi\u1ec1u ti\u00eau ch\u00ed kh\u00e1c nhau.</p>"},{"location":"k8s/01.core/07.KubeScheduler/#3-quy-trinh-tuyen-chon-node-cua-scheduler-2-giai-oan","title":"3. Quy tr\u00ecnh \"Tuy\u1ec3n ch\u1ecdn\" Node c\u1ee7a Scheduler (2 Giai \u0111o\u1ea1n) \u2705","text":"<p>Khi c\u00f3 m\u1ed9t Pod m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o v\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c g\u00e1n cho Node n\u00e0o, <code>kube-scheduler</code> s\u1ebd b\u1eaft \u0111\u1ea7u quy tr\u00ecnh \"tuy\u1ec3n ch\u1ecdn\" qua 2 giai \u0111o\u1ea1n:</p>"},{"location":"k8s/01.core/07.KubeScheduler/#a-giai-oan-1-loc-filtering","title":"a. Giai \u0111o\u1ea1n 1: L\u1ecdc (Filtering)","text":"<ul> <li>\u1ede giai \u0111o\u1ea1n n\u00e0y, scheduler s\u1ebd lo\u1ea1i b\u1ecf t\u1ea5t c\u1ea3 c\u00e1c Node KH\u00d4NG PH\u00d9 H\u1ee2P.</li> <li>V\u00ed d\u1ee5: Pod c\u1ee7a b\u1ea1n y\u00eau c\u1ea7u 2 CPU v\u00e0 4GB RAM. Scheduler s\u1ebd l\u1ecdc ra t\u1ea5t c\u1ea3 c\u00e1c Node kh\u00f4ng c\u00f2n \u0111\u1ee7 2 CPU ho\u1eb7c 4GB RAM tr\u1ed1ng.</li> <li>K\u1ebft th\u00fac giai \u0111o\u1ea1n n\u00e0y, ch\u00fang ta s\u1ebd c\u00f3 m\u1ed9t danh s\u00e1ch c\u00e1c Node \"ti\u1ec1m n\u0103ng\" c\u00f3 th\u1ec3 ch\u1ea1y \u0111\u01b0\u1ee3c Pod.</li> </ul>"},{"location":"k8s/01.core/07.KubeScheduler/#b-giai-oan-2-cham-iem-xep-hang-scoring-ranking","title":"b. Giai \u0111o\u1ea1n 2: Ch\u1ea5m \u0111i\u1ec3m &amp; X\u1ebfp h\u1ea1ng (Scoring &amp; Ranking)","text":"<ul> <li>T\u1eeb danh s\u00e1ch c\u00e1c Node ti\u1ec1m n\u0103ng \u1edf tr\u00ean, scheduler s\u1ebd ti\u1ebfn h\u00e0nh ch\u1ea5m \u0111i\u1ec3m cho t\u1eebng Node theo thang \u0111i\u1ec3m t\u1eeb 0 \u0111\u1ebfn 10.</li> <li>N\u00f3 s\u1eed d\u1ee5ng c\u00e1c h\u00e0m \u01b0u ti\u00ean (priority functions) \u0111\u1ec3 t\u00ednh \u0111i\u1ec3m.</li> <li>V\u00ed d\u1ee5: M\u1ed9t h\u00e0m c\u00f3 th\u1ec3 ch\u1ea5m \u0111i\u1ec3m cao h\u01a1n cho Node n\u00e0o m\u00e0 sau khi \u0111\u1eb7t Pod l\u00ean v\u1eabn c\u00f2n d\u01b0 nhi\u1ec1u t\u00e0i nguy\u00ean nh\u1ea5t.</li> <li>Cu\u1ed1i c\u00f9ng, Node c\u00f3 s\u1ed1 \u0111i\u1ec3m cao nh\u1ea5t s\u1ebd \u0111\u01b0\u1ee3c ch\u1ecdn \u0111\u1ec3 ch\u1ea1y Pod.</li> </ul> <p>Quy tr\u00ecnh n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00f9y ch\u1ec9nh v\u00e0 th\u1eadm ch\u00ed b\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 vi\u1ebft scheduler c\u1ee7a ri\u00eang m\u00ecnh. C\u00f3 r\u1ea5t nhi\u1ec1u kh\u00e1i ni\u1ec7m n\u00e2ng cao li\u00ean quan nh\u01b0 Taints &amp; Tolerations, Node Selectors, Affinity,... s\u1ebd \u0111\u01b0\u1ee3c t\u00ecm hi\u1ec3u s\u00e2u h\u01a1n sau n\u00e0y.</p>"},{"location":"k8s/01.core/07.KubeScheduler/#4-cai-at-va-xem-cau-hinh","title":"4. C\u00e0i \u0111\u1eb7t v\u00e0 Xem C\u1ea5u h\u00ecnh","text":"<ul> <li>V\u1edbi c\u1ee5m <code>kubeadm</code>: <code>kube-scheduler</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0 m\u1ed9t static Pod trong namespace <code>kube-system</code>. B\u1ea1n c\u00f3 th\u1ec3 xem c\u1ea5u h\u00ecnh trong file manifest c\u1ee7a Pod t\u1ea1i <code>/etc/kubernetes/manifests/</code>.</li> <li>C\u00e1ch chung: D\u00f9ng l\u1ec7nh <code>ps aux | grep kube-scheduler</code> tr\u00ean Master Node \u0111\u1ec3 xem ti\u1ebfn tr\u00ecnh \u0111ang ch\u1ea1y v\u00e0 c\u00e1c tham s\u1ed1 c\u1ee7a n\u00f3.</li> </ul>"},{"location":"k8s/01.core/07.KubeScheduler/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>Nhi\u1ec7m v\u1ee5 c\u1ee7a <code>kube-scheduler</code> l\u00e0 QUY\u1ebeT \u0110\u1ecaNH, c\u00f2n nhi\u1ec7m v\u1ee5 c\u1ee7a <code>kubelet</code> l\u00e0 TH\u1ef0C THI vi\u1ec7c \u0111\u1eb7t Pod l\u00ean Node. Ph\u1ea3i ph\u00e2n bi\u1ec7t r\u00f5 r\u00e0ng hai vai tr\u00f2 n\u00e0y.</li> <li>N\u1eafm v\u1eefng quy tr\u00ecnh 2 giai \u0111o\u1ea1n: L\u1ecdc (Filtering) \u0111\u1ec3 lo\u1ea1i b\u1ecf c\u00e1c node kh\u00f4ng ph\u00f9 h\u1ee3p v\u00e0 Ch\u1ea5m \u0111i\u1ec3m (Scoring) \u0111\u1ec3 ch\u1ecdn ra node t\u1ed1t nh\u1ea5t.</li> <li>Bi\u1ebft c\u00e1ch t\u00ecm file c\u1ea5u h\u00ecnh c\u1ee7a scheduler trong m\u1ed9t c\u1ee5m <code>kubeadm</code> (n\u00f3 l\u00e0 m\u1ed9t static Pod).</li> </ul> <p>Scheduler \u0111\u00f3ng vai tr\u00f2 then ch\u1ed1t trong vi\u1ec7c \u0111\u1ea3m b\u1ea3o c\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n \u0111\u01b0\u1ee3c ph\u00e2n b\u1ed5 m\u1ed9t c\u00e1ch t\u1ed1i \u01b0u v\u00e0 hi\u1ec7u qu\u1ea3 tr\u00ean to\u00e0n b\u1ed9 c\u1ee5m. Ch\u00fac b\u1ea1n m\u1ed9t bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/08.kubelet/","title":"08.kubelet","text":""},{"location":"k8s/01.core/08.kubelet/#1-kubelet-thuyen-truong-tren-moi-worker-node","title":"1. <code>kubelet</code> - \"Thuy\u1ec1n tr\u01b0\u1edfng\" tr\u00ean m\u1ed7i Worker Node \ud83d\udc68\u200d\u2708\ufe0f","text":"<p>N\u1ebfu <code>Master Node</code> l\u00e0 \"T\u00e0u Ch\u1ec9 Huy\", th\u00ec m\u1ed7i <code>Worker Node</code> l\u00e0 m\u1ed9t \"T\u00e0u H\u00e0ng\", v\u00e0 <code>kubelet</code> ch\u00ednh l\u00e0 thuy\u1ec1n tr\u01b0\u1edfng c\u1ee7a con t\u00e0u \u0111\u00f3. N\u00f3 l\u00e0 agent ch\u00ednh, ch\u1ecbu tr\u00e1ch nhi\u1ec7m cho m\u1ecdi ho\u1ea1t \u0111\u1ed9ng di\u1ec5n ra tr\u00ean node c\u1ee7a m\u00ecnh.</p> <p><code>kubelet</code> l\u00e0 \u0111i\u1ec3m li\u00ean l\u1ea1c duy nh\u1ea5t c\u1ee7a Master Node tr\u00ean m\u1ed7i Worker Node. M\u1ecdi m\u1ec7nh l\u1ec7nh t\u1eeb <code>kube-api-server</code> xu\u1ed1ng Worker Node \u0111\u1ec1u do <code>kubelet</code> ti\u1ebfp nh\u1eadn v\u00e0 th\u1ef1c thi.</p>"},{"location":"k8s/01.core/08.kubelet/#2-cac-nhiem-vu-chinh-cua-thuyen-truong-kubelet","title":"2. C\u00e1c Nhi\u1ec7m v\u1ee5 ch\u00ednh c\u1ee7a \"Thuy\u1ec1n tr\u01b0\u1edfng\" <code>kubelet</code>","text":"<p><code>kubelet</code> c\u00f3 3 nhi\u1ec7m v\u1ee5 c\u1ed1t l\u00f5i:</p> <ol> <li> <p>\u0110\u0103ng k\u00fd Node (Node Registration):</p> </li> <li> <p>Khi m\u1ed9t Worker Node m\u1edbi kh\u1edfi \u0111\u1ed9ng, <code>kubelet</code> s\u1ebd l\u00e0m \"th\u1ee7 t\u1ee5c gi\u1ea5y t\u1edd\" c\u1ea7n thi\u1ebft \u0111\u1ec3 \u0111\u0103ng k\u00fd Node n\u00e0y v\u1edbi c\u1ee5m Kubernetes, b\u00e1o c\u00e1o r\u1eb1ng: \"Thuy\u1ec1n tr\u01b0\u1edfng xin b\u00e1o, t\u00e0u h\u00e0ng s\u1ed1 hi\u1ec7u X \u0111\u00e3 s\u1eb5n s\u00e0ng nh\u1eadn nhi\u1ec7m v\u1ee5!\".</p> </li> <li> <p>T\u1ea1o v\u00e0 Qu\u1ea3n l\u00fd V\u00f2ng \u0111\u1eddi Pod (Pod Lifecycle):</p> </li> <li> <p>Sau khi <code>kube-scheduler</code> \u0111\u00e3 quy\u1ebft \u0111\u1ecbnh m\u1ed9t Pod s\u1ebd ch\u1ea1y tr\u00ean Node n\u00e0y, <code>kube-api-server</code> s\u1ebd g\u1eedi ch\u1ec9 th\u1ecb \u0111\u1ebfn <code>kubelet</code>.</p> </li> <li><code>kubelet</code> nh\u1eadn l\u1ec7nh v\u00e0 ra ch\u1ec9 th\u1ecb cho Container Runtime Engine (v\u00ed d\u1ee5: Docker, ContainerD) \u0111\u1ec3 k\u00e9o image c\u1ea7n thi\u1ebft v\u00e0 kh\u1edfi ch\u1ea1y c\u00e1c container b\u00ean trong Pod.</li> <li> <p>N\u00f3 c\u0169ng ch\u1ecbu tr\u00e1ch nhi\u1ec7m h\u1ee7y Pod khi c\u00f3 l\u1ec7nh.</p> </li> <li> <p>B\u00e1o c\u00e1o Tr\u1ea1ng th\u00e1i (Status Reporting):</p> </li> <li> <p><code>kubelet</code> li\u00ean t\u1ee5c theo d\u00f5i \"s\u1ee9c kh\u1ecfe\" c\u1ee7a c\u00e1c Pod v\u00e0 container \u0111ang ch\u1ea1y tr\u00ean node c\u1ee7a m\u00ecnh.</p> </li> <li>N\u00f3 \u0111\u1ec1u \u0111\u1eb7n g\u1eedi c\u00e1c b\u00e1o c\u00e1o tr\u1ea1ng th\u00e1i n\u00e0y v\u1ec1 cho <code>kube-api-server</code>, th\u00f4ng b\u00e1o t\u00ecnh h\u00ecnh c\u1ee7a \"con t\u00e0u\" v\u00e0 c\u00e1c \"th\u00f9ng h\u00e0ng\" tr\u00ean \u0111\u00f3.</li> </ol>"},{"location":"k8s/01.core/08.kubelet/#3-cai-at-kubelet-mot-iem-ac-biet","title":"3. C\u00e0i \u0111\u1eb7t <code>kubelet</code> - M\u1ed9t \u0111i\u1ec3m \"\u0110\u1eb7c bi\u1ec7t\" \u26a0\ufe0f","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t \u0111i\u1ec3m r\u1ea5t quan tr\u1ecdng b\u1ea1n c\u1ea7n nh\u1edb, kh\u00e1c bi\u1ec7t so v\u1edbi c\u00e1c th\u00e0nh ph\u1ea7n Master Node kh\u00e1c:</p> <ul> <li>Ngay c\u1ea3 khi b\u1ea1n s\u1eed d\u1ee5ng c\u00f4ng c\u1ee5 <code>kubeadm</code> \u0111\u1ec3 d\u1ef1ng c\u1ee5m, <code>kubeadm</code> KH\u00d4NG t\u1ef1 \u0111\u1ed9ng c\u00e0i \u0111\u1eb7t <code>kubelet</code> cho b\u1ea1n.</li> <li>B\u1ea1n ph\u1ea3i lu\u00f4n lu\u00f4n c\u00e0i \u0111\u1eb7t <code>kubelet</code> m\u1ed9t c\u00e1ch th\u1ee7 c\u00f4ng tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c Worker Node (v\u00e0 c\u1ea3 Master Node).</li> <li>Qu\u00e1 tr\u00ecnh c\u00e0i \u0111\u1eb7t th\u01b0\u1eddng bao g\u1ed3m vi\u1ec7c t\u1ea3i file c\u00e0i \u0111\u1eb7t, gi\u1ea3i n\u00e9n v\u00e0 c\u1ea5u h\u00ecnh n\u00f3 ch\u1ea1y nh\u01b0 m\u1ed9t service h\u1ec7 th\u1ed1ng.</li> </ul>"},{"location":"k8s/01.core/08.kubelet/#4-xem-tien-trinh-kubelet-ang-chay","title":"4. Xem ti\u1ebfn tr\u00ecnh <code>kubelet</code> \u0111ang ch\u1ea1y","text":"<p>\u0110\u1ec3 xem <code>kubelet</code> c\u00f3 \u0111ang ch\u1ea1y tr\u00ean m\u1ed9t node hay kh\u00f4ng v\u00e0 v\u1edbi c\u00e1c t\u00f9y ch\u1ecdn n\u00e0o, b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng l\u1ec7nh sau tr\u00ean node \u0111\u00f3:</p> <pre><code>ps -aux | grep kubelet\n</code></pre>"},{"location":"k8s/01.core/08.kubelet/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>kubelet</code> l\u00e0 agent ch\u00ednh, ch\u1ea1y tr\u00ean m\u1ed7i Worker Node (v\u00e0 c\u1ea3 Master Node).</li> <li>N\u00f3 l\u00e0 ng\u01b0\u1eddi th\u1ef1c thi - nh\u1eadn l\u1ec7nh t\u1eeb <code>api-server</code> v\u00e0 ra l\u1ec7nh cho Container Runtime \u0111\u1ec3 ch\u1ea1y/d\u1eebng container.</li> <li>N\u00f3 l\u00e0 ng\u01b0\u1eddi b\u00e1o c\u00e1o - li\u00ean t\u1ee5c g\u1eedi tr\u1ea1ng th\u00e1i c\u1ee7a Node v\u00e0 c\u00e1c Pod v\u1ec1 cho Master.</li> <li>Quan tr\u1ecdng: <code>kubeadm</code> kh\u00f4ng t\u1ef1 c\u00e0i <code>kubelet</code>. B\u1ea1n ph\u1ea3i lu\u00f4n c\u00e0i \u0111\u1eb7t n\u00f3 th\u1ee7 c\u00f4ng.</li> </ul> <p>Hi\u1ec3u r\u00f5 vai tr\u00f2 c\u1ee7a <code>kubelet</code> l\u00e0 b\u1ea1n \u0111\u00e3 hi\u1ec3u \u0111\u01b0\u1ee3c \"c\u00e1nh tay n\u1ed1i d\u00e0i\" c\u1ee7a Master Node ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o tr\u00ean t\u1eebng Worker Node r\u1ed3i \u0111\u00f3. Ch\u00fac b\u1ea1n bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/09.kube-proxy/","title":"09.kube proxy","text":""},{"location":"k8s/01.core/09.kube-proxy/#1-bai-toan-giao-tiep-giua-cac-pod-va-su-ky-dieu-cua-service","title":"1. B\u00e0i to\u00e1n: Giao ti\u1ebfp gi\u1eefa c\u00e1c Pod v\u00e0 s\u1ef1 \"k\u1ef3 di\u1ec7u\" c\u1ee7a Service","text":"<p>Trong m\u1ed9t c\u1ee5m Kubernetes, c\u00e1c Pod c\u00f3 th\u1ec3 giao ti\u1ebfp v\u1edbi nhau. Tuy nhi\u00ean, \u0111\u1ecba ch\u1ec9 IP c\u1ee7a Pod kh\u00f4ng \u1ed5n \u0111\u1ecbnh, ch\u00fang c\u00f3 th\u1ec3 thay \u0111\u1ed5i khi Pod \u0111\u01b0\u1ee3c t\u1ea1o l\u1ea1i. V\u00ec v\u1eady, ch\u00fang ta kh\u00f4ng n\u00ean \u0111\u1ec3 m\u1ed9t Pod g\u1ecdi tr\u1ef1c ti\u1ebfp \u0111\u1ebfn IP c\u1ee7a Pod kh\u00e1c.</p> <p>\ud83d\udc49 Gi\u1ea3i ph\u00e1p l\u00e0 d\u00f9ng <code>Service</code>. Service cung c\u1ea5p m\u1ed9t \"\u0111\u1ecba ch\u1ec9\" \u1ed5n \u0111\u1ecbnh (d\u01b0\u1edbi d\u1ea1ng t\u00ean ho\u1eb7c m\u1ed9t \u0111\u1ecba ch\u1ec9 IP \u1ea3o g\u1ecdi l\u00e0 ClusterIP) \u0111\u1ec3 c\u00e1c Pod kh\u00e1c c\u00f3 th\u1ec3 t\u00ecm \u0111\u1ebfn.</p> <p>C\u00e2u h\u1ecfi \u0111\u1eb7t ra: Service ch\u1ec9 l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng \"\u1ea3o\" trong b\u1ed9 nh\u1edb c\u1ee7a Kubernetes, n\u00f3 kh\u00f4ng ph\u1ea3i l\u00e0 m\u1ed9t Pod hay container th\u1ef1c s\u1ef1. V\u1eady l\u00e0m th\u1ebf n\u00e0o m\u00e0 traffic c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn m\u1ed9t \u0111\u1ecba ch\u1ec9 IP \"\u1ea3o\" v\u00e0 \u0111\u1ebfn \u0111\u01b0\u1ee3c \u0111\u00fang Pod th\u1eadt?</p>"},{"location":"k8s/01.core/09.kube-proxy/#2-kube-proxy-ao-thuat-gia-mang-cua-kubernetes","title":"2. <code>kube-proxy</code> - \"\u1ea2o thu\u1eadt gia\" M\u1ea1ng c\u1ee7a Kubernetes \ud83c\udfa9\u2728","text":"<p><code>kube-proxy</code> ch\u00ednh l\u00e0 c\u00e2u tr\u1ea3 l\u1eddi! N\u00f3 l\u00e0 \"nh\u00e0 \u1ea3o thu\u1eadt\" bi\u1ebfn c\u00e1c Service \"\u1ea3o\" tr\u1edf n\u00ean \"th\u1eadt\".</p> <ul> <li><code>kube-proxy</code> l\u00e0 g\u00ec? N\u00f3 l\u00e0 m\u1ed9t ti\u1ebfn tr\u00ecnh (process) ch\u1ea1y tr\u00ean M\u1ed6I NODE trong c\u1ee5m Kubernetes (c\u1ea3 master v\u00e0 worker).</li> <li>Nhi\u1ec7m v\u1ee5 c\u1ee7a n\u00f3 l\u00e0 g\u00ec?</li> <li>N\u00f3 li\u00ean t\u1ee5c theo d\u00f5i <code>kube-api-server</code> \u0111\u1ec3 xem c\u00f3 Service n\u00e0o m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o, s\u1eeda, hay x\u00f3a kh\u00f4ng.</li> <li>M\u1ed7i khi c\u00f3 m\u1ed9t Service m\u1edbi, <code>kube-proxy</code> s\u1ebd t\u1ea1o ra c\u00e1c quy t\u1eafc m\u1ea1ng (network rules) tr\u00ean ch\u00ednh c\u00e1i Node m\u00e0 n\u00f3 \u0111ang ch\u1ea1y.</li> </ul>"},{"location":"k8s/01.core/09.kube-proxy/#3-man-ao-thuat-hoat-ong-nhu-the-nao","title":"3. \"M\u00e0n \u1ea3o thu\u1eadt\" ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\u00e0o?","text":"<ul> <li>M\u1ed9t trong nh\u1eefng c\u00e1ch <code>kube-proxy</code> th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y l\u00e0 s\u1eed d\u1ee5ng <code>iptables</code> (m\u1ed9t c\u00f4ng c\u1ee5 t\u01b0\u1eddng l\u1eeda/\u0111\u1ecbnh tuy\u1ebfn r\u1ea5t ph\u1ed5 bi\u1ebfn tr\u00ean Linux).</li> <li>V\u00ed d\u1ee5:</li> <li>B\u1ea1n t\u1ea1o m\u1ed9t Service t\u00ean <code>db-service</code> v\u1edbi IP \u1ea3o l\u00e0 <code>10.96.0.12</code>.</li> <li>Service n\u00e0y tr\u1ecf \u0111\u1ebfn m\u1ed9t Pod database c\u00f3 IP th\u1eadt l\u00e0 <code>10.32.0.15</code>.</li> <li><code>kube-proxy</code> tr\u00ean m\u1ed7i node s\u1ebd t\u1ea1o m\u1ed9t rule <code>iptables</code> c\u00f3 n\u1ed9i dung \u0111\u1ea1i lo\u1ea1i nh\u01b0: \"N\u00e0y h\u1ec7 \u0111i\u1ec1u h\u00e0nh, n\u1ebfu c\u00f3 b\u1ea5t k\u1ef3 g\u00f3i tin n\u00e0o g\u1eedi \u0111\u1ebfn \u0111\u1ecba ch\u1ec9 <code>10.96.0.12</code>, h\u00e3y chuy\u1ec3n h\u01b0\u1edbng (redirect) n\u00f3 \u0111\u1ebfn \u0111\u1ecba ch\u1ec9 <code>10.32.0.15</code> nh\u00e9!\"</li> <li>Nh\u1edd v\u1eady, t\u1eeb b\u1ea5t k\u1ef3 node n\u00e0o trong c\u1ee5m, khi m\u1ed9t Pod kh\u00e1c g\u1eedi request \u0111\u1ebfn IP c\u1ee7a <code>db-service</code>, request \u0111\u00f3 s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n h\u01b0\u1edbng m\u1ed9t c\u00e1ch k\u1ef3 di\u1ec7u \u0111\u1ebfn \u0111\u00fang Pod database th\u1eadt s\u1ef1.</li> </ul>"},{"location":"k8s/01.core/09.kube-proxy/#4-cach-kube-proxy-uoc-trien-khai","title":"4. C\u00e1ch <code>kube-proxy</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai","text":"<ul> <li>\"Th\u1ee7 c\u00f4ng\" (From Scratch): B\u1ea1n t\u1ea3i file binary c\u1ee7a <code>kube-proxy</code> v\u00e0 ch\u1ea1y n\u00f3 nh\u01b0 m\u1ed9t service.</li> <li>D\u00f9ng <code>kubeadm</code>: <code>kubeadm</code> s\u1ebd tri\u1ec3n khai <code>kube-proxy</code> d\u01b0\u1edbi d\u1ea1ng c\u00e1c Pod tr\u00ean m\u1ed7i node.</li> <li>C\u1ee5 th\u1ec3 h\u01a1n, n\u00f3 \u0111\u01b0\u1ee3c tri\u1ec3n khai b\u1eb1ng m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Kubernetes g\u1ecdi l\u00e0 <code>DaemonSet</code>.</li> <li><code>DaemonSet</code> \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed9t b\u1ea3n sao c\u1ee7a Pod (trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 Pod <code>kube-proxy</code>) s\u1ebd lu\u00f4n ch\u1ea1y tr\u00ean m\u1ed7i node c\u1ee7a c\u1ee5m. \u0110\u00e2y l\u00e0 c\u00e1ch ho\u00e0n h\u1ea3o \u0111\u1ec3 tri\u1ec3n khai c\u00e1c agent c\u1ea7n c\u00f3 m\u1eb7t \u1edf kh\u1eafp m\u1ecdi n\u01a1i nh\u01b0 <code>kube-proxy</code>.</li> </ul>"},{"location":"k8s/01.core/09.kube-proxy/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li><code>kube-proxy</code> ch\u1ea1y tr\u00ean m\u1ed7i node trong c\u1ee5m.</li> <li>Nhi\u1ec7m v\u1ee5 ch\u00ednh c\u1ee7a n\u00f3 l\u00e0 hi\u1ec7n th\u1ef1c h\u00f3a c\u01a1 ch\u1ebf c\u1ee7a Kubernetes Service.</li> <li>N\u00f3 l\u00e0m \u0111i\u1ec1u n\u00e0y b\u1eb1ng c\u00e1ch theo d\u00f5i API Server v\u00e0 t\u1ea1o ra c\u00e1c quy t\u1eafc m\u1ea1ng (v\u00ed d\u1ee5: <code>iptables</code>) tr\u00ean node \u0111\u1ec3 \u0111\u1ecbnh tuy\u1ebfn traffic t\u1eeb IP \u1ea3o c\u1ee7a Service \u0111\u1ebfn IP th\u1eadt c\u1ee7a c\u00e1c Pod.</li> <li>Trong m\u1ed9t c\u1ee5m <code>kubeadm</code>, <code>kube-proxy</code> \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0 m\u1ed9t <code>DaemonSet</code>.</li> </ul>"},{"location":"k8s/01.core/10.pods/","title":"10.pods","text":""},{"location":"k8s/01.core/10.pods/#1-pod-la-gi-on-vi-co-ban-nhat-trong-kubernetes","title":"1. Pod l\u00e0 g\u00ec? \u0110\u01a1n v\u1ecb c\u01a1 b\u1ea3n nh\u1ea5t trong Kubernetes \ud83c\udf31","text":"<p>\u0110i\u1ec3m \u0111\u1ea7u ti\u00ean v\u00e0 quan tr\u1ecdng nh\u1ea5t b\u1ea1n c\u1ea7n nh\u1edb: Kubernetes kh\u00f4ng tri\u1ec3n khai container m\u1ed9t c\u00e1ch tr\u1ef1c ti\u1ebfp. Thay v\u00e0o \u0111\u00f3, c\u00e1c container \u0111\u01b0\u1ee3c \"\u0111\u00f3ng g\u00f3i\" v\u00e0o b\u00ean trong m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ee7a Kubernetes g\u1ecdi l\u00e0 Pod.</p> <ul> <li>Pod l\u00e0 m\u1ed9t th\u1ef1c th\u1ec3 (instance) duy nh\u1ea5t c\u1ee7a m\u1ed9t \u1ee9ng d\u1ee5ng.</li> <li>Pod l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng nh\u1ecf nh\u1ea5t b\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o v\u00e0 qu\u1ea3n l\u00fd trong Kubernetes.</li> </ul> <p>H\u00e3y coi Pod nh\u01b0 m\u1ed9t c\u00e1i \"v\u1ecf b\u1ecdc\" cho container c\u1ee7a b\u1ea1n. Ngay c\u1ea3 khi b\u1ea1n ch\u1ec9 c\u00f3 m\u1ed9t container, n\u00f3 v\u1eabn ph\u1ea3i n\u1eb1m b\u00ean trong m\u1ed9t Pod.</p>"},{"location":"k8s/01.core/10.pods/#2-mo-rong-quy-mo-scaling-ung-dung","title":"2. M\u1edf r\u1ed9ng quy m\u00f4 (Scaling) \u1ee9ng d\u1ee5ng \ud83d\udcc8","text":"<p>Khi \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n c\u1ea7n x\u1eed l\u00fd nhi\u1ec1u ng\u01b0\u1eddi d\u00f9ng h\u01a1n, b\u1ea1n c\u1ea7n ph\u1ea3i m\u1edf r\u1ed9ng (scale up) n\u00f3. C\u00e1ch Kubernetes th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y l\u00e0:</p> <ul> <li>\u0110\u1ec3 scale up: B\u1ea1n t\u1ea1o ra c\u00e1c Pod m\u1edbi.</li> <li>\u0110\u1ec3 scale down: B\u1ea1n x\u00f3a b\u1edbt c\u00e1c Pod hi\u1ec7n c\u00f3.</li> </ul> <p>Quy t\u1eafc v\u00e0ng: B\u1ea1n KH\u00d4NG th\u00eam container m\u1edbi v\u00e0o m\u1ed9t Pod \u0111ang c\u00f3 s\u1eb5n \u0111\u1ec3 scale \u1ee9ng d\u1ee5ng. Thay v\u00e0o \u0111\u00f3, b\u1ea1n t\u1ea1o ra nhi\u1ec1u Pod h\u01a1n. \u0110i\u1ec1u n\u00e0y d\u1eabn \u0111\u1ebfn m\u1ed9t m\u1ed1i quan h\u1ec7 ph\u1ed5 bi\u1ebfn l\u00e0 1 Pod : 1 Container cho \u1ee9ng d\u1ee5ng ch\u00ednh c\u1ee7a b\u1ea1n.</p>"},{"location":"k8s/01.core/10.pods/#3-truong-hop-ac-biet-pod-a-container-multi-container-pods","title":"3. Tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t: Pod \u0111a Container (Multi-Container Pods) \ud83e\udd13","text":"<p>M\u1eb7c d\u00f9 1 Pod th\u01b0\u1eddng ch\u1ec9 ch\u1ee9a 1 container ch\u00ednh, nh\u01b0ng m\u1ed9t Pod c\u00f3 th\u1ec3 ch\u1ee9a nhi\u1ec1u container. Tr\u01b0\u1eddng h\u1ee3p n\u00e0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng khi b\u1ea1n c\u00f3:</p> <ul> <li>M\u1ed9t container \u1ee9ng d\u1ee5ng ch\u00ednh (main application container).</li> <li>M\u1ed9t ho\u1eb7c nhi\u1ec1u container ph\u1ee5 tr\u1ee3 (helper/sidecar containers) l\u00e0m c\u00e1c t\u00e1c v\u1ee5 h\u1ed7 tr\u1ee3, v\u00ed d\u1ee5 nh\u01b0 x\u1eed l\u00fd file, thu th\u1eadp log, ho\u1eb7c l\u00e0m proxy.</li> </ul> <p>L\u1ee3i \u00edch c\u1ee7a vi\u1ec7c \u0111\u1eb7t nhi\u1ec1u container trong c\u00f9ng m\u1ed9t Pod:</p> <ol> <li>Chung V\u00f2ng \u0111\u1eddi (Shared Lifecycle): T\u1ea5t c\u1ea3 c\u00e1c container trong c\u00f9ng m\u1ed9t Pod s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o ra c\u00f9ng nhau v\u00e0 \"ch\u1ebft\" c\u00f9ng nhau.</li> <li>Chung Kh\u00f4ng gian M\u1ea1ng (Shared Network Namespace): Ch\u00fang c\u00f3 th\u1ec3 giao ti\u1ebfp v\u1edbi nhau qua <code>localhost</code> nh\u01b0 th\u1ec3 ch\u00fang \u0111ang ch\u1ea1y tr\u00ean c\u00f9ng m\u1ed9t m\u00e1y.</li> <li>Chung Kh\u00f4ng gian L\u01b0u tr\u1eef (Shared Storage): Ch\u00fang c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng chia s\u1ebb c\u00f9ng m\u1ed9t v\u00f9ng l\u01b0u tr\u1eef (volume).</li> </ol> <p>Pod gi\u00fap t\u1ef1 \u0111\u1ed9ng h\u00f3a t\u1ea5t c\u1ea3 nh\u1eefng vi\u1ec7c ph\u1ee9c t\u1ea1p n\u00e0y. Tuy nhi\u00ean, h\u00e3y nh\u1edb r\u1eb1ng Pod \u0111a container l\u00e0 m\u1ed9t tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng kh\u00f4ng qu\u00e1 ph\u1ed5 bi\u1ebfn.</p>"},{"location":"k8s/01.core/10.pods/#4-cach-trien-khai-va-xem-pods-lenh-co-ban","title":"4. C\u00e1ch Tri\u1ec3n khai v\u00e0 Xem Pods (L\u1ec7nh c\u01a1 b\u1ea3n) \ud83d\udcbb","text":"<ul> <li> <p>\u0110\u1ec3 t\u1ea1o m\u1ed9t Pod (m\u1ed9t c\u00e1ch nhanh ch\u00f3ng):</p> </li> <li> <p>S\u1eed d\u1ee5ng l\u1ec7nh <code>kubectl run</code>. L\u1ec7nh n\u00e0y th\u1ef1c ch\u1ea5t s\u1ebd t\u1ea1o ra m\u1ed9t Pod v\u00e0 sau \u0111\u00f3 tri\u1ec3n khai container image b\u1ea1n ch\u1ec9 \u0111\u1ecbnh v\u00e0o b\u00ean trong n\u00f3.</p> </li> <li>C\u00fa ph\u00e1p: <code>kubectl run &lt;t\u00ean-pod&gt; --image=&lt;t\u00ean-image&gt;</code></li> <li> <p>V\u00ed d\u1ee5: <code>kubectl run my-nginx-pod --image=nginx</code></p> </li> <li> <p>\u0110\u1ec3 xem danh s\u00e1ch c\u00e1c Pod:</p> </li> <li>S\u1eed d\u1ee5ng l\u1ec7nh <code>kubectl get pods</code>.</li> <li>L\u1ec7nh n\u00e0y s\u1ebd hi\u1ec3n th\u1ecb c\u00e1c Pod \u0111ang c\u00f3 trong cluster v\u00e0 tr\u1ea1ng th\u00e1i c\u1ee7a ch\u00fang (v\u00ed d\u1ee5: <code>ContainerCreating</code>, <code>Running</code>, <code>Completed</code>, <code>Error</code>).</li> </ul>"},{"location":"k8s/01.core/10.pods/#5-mot-luu-y-quan-trong-ve-mang","title":"5. M\u1ed9t l\u01b0u \u00fd quan tr\u1ecdng v\u1ec1 M\u1ea1ng \ud83c\udf10","text":"<p>Vi\u1ec7c t\u1ea1o ra m\u1ed9t Pod kh\u00f4ng t\u1ef1 \u0111\u1ed9ng l\u00e0m cho \u1ee9ng d\u1ee5ng b\u00ean trong n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c truy c\u1eadp t\u1eeb b\u00ean ngo\u00e0i. \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3, ch\u00fang ta c\u1ea7n m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c l\u00e0 Service, ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u v\u1ec1 n\u00f3 sau. Hi\u1ec7n t\u1ea1i, Pod ch\u1ec9 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c truy c\u1eadp t\u1eeb b\u00ean trong node m\u00e0 n\u00f3 \u0111ang ch\u1ea1y.</p>"},{"location":"k8s/01.core/10.pods/#6-chot-ha-cho-ky-thi-cka","title":"6. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>Pod l\u00e0 \u0111\u01a1n v\u1ecb nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3 tri\u1ec3n khai trong Kubernetes. N\u00f3 l\u00e0 m\u1ed9t \"l\u1edbp b\u1ecdc\" cho m\u1ed9t ho\u1eb7c nhi\u1ec1u container.</li> <li>Scaling \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng c\u00e1ch thay \u0111\u1ed5i s\u1ed1 l\u01b0\u1ee3ng Pod, kh\u00f4ng ph\u1ea3i s\u1ed1 l\u01b0\u1ee3ng container trong m\u1ed9t Pod.</li> <li>M\u00f4 h\u00ecnh 1 Pod : 1 Container l\u00e0 ph\u1ed5 bi\u1ebfn nh\u1ea5t.</li> <li>Pod \u0111a container r\u1ea5t h\u1eefu \u00edch cho c\u00e1c m\u1eabu thi\u1ebft k\u1ebf \"sidecar\", v\u00ec ch\u00fang chia s\u1ebb chung m\u1ea1ng v\u00e0 l\u01b0u tr\u1eef.</li> <li>Bi\u1ebft c\u00e1c l\u1ec7nh c\u01a1 b\u1ea3n: <code>kubectl run</code> \u0111\u1ec3 t\u1ea1o Pod v\u00e0 <code>kubectl get pods</code> \u0111\u1ec3 li\u1ec7t k\u00ea ch\u00fang.</li> </ul> <p>Hi\u1ec3u r\u00f5 v\u1ec1 Pod l\u00e0 n\u1ec1n t\u1ea3ng \u0111\u1ec3 b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m ch\u1ee7 \u0111\u01b0\u1ee3c c\u00e1c kh\u00e1i ni\u1ec7m ph\u1ee9c t\u1ea1p h\u01a1n trong Kubernetes. Ch\u00fac b\u1ea1n bu\u1ed5i chi\u1ec1u h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"k8s/01.core/11-12.pods-yml-demo/","title":"11 12.pods yml demo","text":""},{"location":"k8s/01.core/11-12.pods-yml-demo/#1-bon-tru-cot-cua-mot-file-yaml-trong-kubernetes","title":"1. B\u1ed1n \"Tr\u1ee5 c\u1ed9t\" c\u1ee7a m\u1ed9t file YAML trong Kubernetes","text":"<p>M\u1ecdi file \u0111\u1ecbnh ngh\u0129a \u0111\u1ed1i t\u01b0\u1ee3ng trong Kubernetes (d\u00f9 l\u00e0 Pod, Service, hay Deployment,...) \u0111\u1ec1u ph\u1ea3i c\u00f3 4 tr\u01b0\u1eddng (fields) \u1edf c\u1ea5p cao nh\u1ea5t. \u0110\u00e2y l\u00e0 c\u00e1c tr\u01b0\u1eddng b\u1eaft bu\u1ed9c:</p> <ol> <li> <p><code>apiVersion</code>:</p> </li> <li> <p>L\u00e0 g\u00ec? Phi\u00ean b\u1ea3n c\u1ee7a Kubernetes API m\u00e0 b\u1ea1n \u0111ang s\u1eed d\u1ee5ng \u0111\u1ec3 t\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng.</p> </li> <li> <p>V\u00ed d\u1ee5 (cho Pod): <code>v1</code></p> </li> <li> <p><code>kind</code>:</p> </li> <li> <p>L\u00e0 g\u00ec? Lo\u1ea1i \u0111\u1ed1i t\u01b0\u1ee3ng m\u00e0 b\u1ea1n \u0111ang mu\u1ed1n t\u1ea1o.</p> </li> <li> <p>V\u00ed d\u1ee5 (cho Pod): <code>Pod</code></p> </li> <li> <p><code>metadata</code>:</p> </li> <li> <p>L\u00e0 g\u00ec? \"D\u1eef li\u1ec7u v\u1ec1 d\u1eef li\u1ec7u\" - t\u1ee9c l\u00e0 c\u00e1c th\u00f4ng tin m\u00f4 t\u1ea3 v\u1ec1 \u0111\u1ed1i t\u01b0\u1ee3ng, nh\u01b0 t\u00ean, nh\u00e3n,... \u0110\u00e2y l\u00e0 m\u1ed9t dictionary (\u0111\u1ed1i t\u01b0\u1ee3ng).</p> </li> <li><code>name</code>: T\u00ean c\u1ee7a Pod (v\u00ed d\u1ee5: <code>my-app-pod</code>).</li> <li> <p><code>labels</code>: M\u1ed9t dictionary ch\u1ee9a c\u00e1c c\u1eb7p key-value (nh\u00e3n). Labels c\u1ef1c k\u1ef3 quan tr\u1ecdng, gi\u00fap b\u1ea1n l\u1ecdc v\u00e0 nh\u00f3m c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng sau n\u00e0y (v\u00ed d\u1ee5: <code>app: my-app</code>, <code>env: production</code>).</p> </li> <li> <p><code>spec</code> (vi\u1ebft t\u1eaft c\u1ee7a Specification):</p> </li> <li> <p>L\u00e0 g\u00ec? \u0110\u00e2y l\u00e0 ph\u1ea7n quan tr\u1ecdng nh\u1ea5t, n\u01a1i b\u1ea1n \u0111\u1ecbnh ngh\u0129a tr\u1ea1ng th\u00e1i mong mu\u1ed1n c\u1ee7a \u0111\u1ed1i t\u01b0\u1ee3ng.</p> </li> <li>C\u1ea5u tr\u00fac c\u1ee7a <code>spec</code> s\u1ebd kh\u00e1c nhau t\u00f9y thu\u1ed9c v\u00e0o <code>kind</code> c\u1ee7a \u0111\u1ed1i t\u01b0\u1ee3ng.</li> </ol> <p>\u26a0\ufe0f L\u01b0u \u00fd v\u1ec1 th\u1ee5t \u0111\u1ea7u d\u00f2ng (indentation) trong YAML: YAML r\u1ea5t nh\u1ea1y c\u1ea3m v\u1edbi kho\u1ea3ng tr\u1eafng. C\u00e1c thu\u1ed9c t\u00ednh con ph\u1ea3i \u0111\u01b0\u1ee3c th\u1ee5t v\u00e0o so v\u1edbi thu\u1ed9c t\u00ednh cha, v\u00e0 c\u00e1c thu\u1ed9c t\u00ednh ngang h\u00e0ng ph\u1ea3i c\u00f3 c\u00f9ng m\u1ee9c th\u1ee5t l\u1ec1.</p>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#2-mo-xe-phan-spec-cua-mot-pod","title":"2. \"M\u1ed5 x\u1ebb\" ph\u1ea7n <code>spec</code> c\u1ee7a m\u1ed9t Pod","text":"<p>\u0110\u1ed1i v\u1edbi m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 <code>kind: Pod</code>, ph\u1ea7n <code>spec</code> s\u1ebd m\u00f4 t\u1ea3 c\u00e1c container s\u1ebd ch\u1ea1y b\u00ean trong Pod \u0111\u00f3.</p> <ul> <li><code>spec</code> ch\u1ee9a m\u1ed9t thu\u1ed9c t\u00ednh quan tr\u1ecdng l\u00e0 <code>containers</code>.</li> <li><code>containers</code> l\u00e0 m\u1ed9t danh s\u00e1ch (list/array). L\u00fd do n\u00f3 l\u00e0 m\u1ed9t danh s\u00e1ch v\u00ec m\u1ed9t Pod c\u00f3 th\u1ec3 ch\u1ee9a nhi\u1ec1u container.</li> <li>M\u1ed7i m\u1ee5c trong danh s\u00e1ch <code>containers</code> l\u00e0 m\u1ed9t dictionary m\u00f4 t\u1ea3 m\u1ed9t container, v\u1edbi hai thu\u1ed9c t\u00ednh b\u1eaft bu\u1ed9c:</li> <li><code>name</code>: T\u00ean b\u1ea1n \u0111\u1eb7t cho container (v\u00ed d\u1ee5: <code>nginx-container</code>).</li> <li><code>image</code>: T\u00ean c\u1ee7a Docker image s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ch\u1ea1y container (v\u00ed d\u1ee5: <code>nginx</code>).</li> </ul>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#3-vi-du-mot-file-pod-definitionyaml-hoan-chinh","title":"3. V\u00ed d\u1ee5 m\u1ed9t file <code>pod-definition.yaml</code> ho\u00e0n ch\u1ec9nh","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t file YAML \u0111\u1ea7y \u0111\u1ee7 \u0111\u1ec3 t\u1ea1o m\u1ed9t Pod \u0111\u01a1n gi\u1ea3n ch\u1ea1y NGINX:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-app-pod\n  labels:\n    app: my-app\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx\n</code></pre>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#4-thuc-thi-va-kiem-tra","title":"4. Th\u1ef1c thi v\u00e0 Ki\u1ec3m tra","text":"<p>Sau khi b\u1ea1n \u0111\u00e3 t\u1ea1o file <code>pod-definition.yaml</code>, h\u00e3y d\u00f9ng c\u00e1c l\u1ec7nh sau:</p> <ul> <li>T\u1ea1o Pod t\u1eeb file YAML:</li> </ul> <pre><code>kubectl create -f pod-definition.yaml\n</code></pre> <ul> <li>Xem danh s\u00e1ch c\u00e1c Pod \u0111\u1ec3 ki\u1ec3m tra:</li> </ul> <pre><code>kubectl get pods\n</code></pre> <ul> <li>Xem th\u00f4ng tin chi ti\u1ebft v\u1ec1 Pod v\u1eeba t\u1ea1o:</li> </ul> <pre><code>kubectl describe pod my-app-pod\n</code></pre> <p>L\u1ec7nh <code>describe</code> s\u1ebd cho b\u1ea1n th\u1ea5y m\u1ecdi th\u00f4ng tin chi ti\u1ebft: labels, IP, container image, v\u00e0 quan tr\u1ecdng l\u00e0 c\u00e1c s\u1ef1 ki\u1ec7n (Events) li\u00ean quan \u0111\u1ebfn v\u00f2ng \u0111\u1eddi c\u1ee7a Pod.</p>"},{"location":"k8s/01.core/11-12.pods-yml-demo/#5-chot-ha-cho-ky-thi-cka","title":"5. \"Ch\u1ed1t h\u1ea1\" cho K\u1ef3 thi CKA \ud83d\udcdd","text":"<ul> <li>Lu\u00f4n nh\u1edb 4 tr\u01b0\u1eddng b\u1eaft bu\u1ed9c \u1edf c\u1ea5p cao nh\u1ea5t: <code>apiVersion</code>, <code>kind</code>, <code>metadata</code>, v\u00e0 <code>spec</code>.</li> <li>\u0110\u1ed1i v\u1edbi <code>Pod</code>, <code>apiVersion</code> l\u00e0 <code>v1</code>.</li> <li>Trong <code>metadata</code>, hai tr\u01b0\u1eddng quan tr\u1ecdng l\u00e0 <code>name</code> v\u00e0 <code>labels</code>.</li> <li>Trong <code>spec</code> c\u1ee7a Pod, ph\u1ea7n quan tr\u1ecdng nh\u1ea5t l\u00e0 danh s\u00e1ch <code>containers</code>, n\u01a1i b\u1ea1n \u0111\u1ecbnh ngh\u0129a <code>name</code> v\u00e0 <code>image</code> cho m\u1ed7i container.</li> <li>L\u1ec7nh \u0111\u1ec3 t\u1ea1o t\u00e0i nguy\u00ean t\u1eeb file YAML l\u00e0 <code>kubectl create -f &lt;t\u00ean-file.yaml&gt;</code>.</li> </ul>"},{"location":"linux/roadmap/","title":"Linux Complete Learning Roadmap - Chi ti\u1ebft t\u1eebng topic","text":""},{"location":"linux/roadmap/#muc-tieu-master-linux-tu-a-z-trong-10-12-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master Linux t\u1eeb A-Z trong 10-12 th\u00e1ng","text":""},{"location":"linux/roadmap/#giai-oan-1-linux-foundation-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: LINUX FOUNDATION (Th\u00e1ng 1-2)","text":""},{"location":"linux/roadmap/#week-1-linux-fundamentals","title":"Week 1: Linux Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"What is Linux operating system\"</li> <li>[ ] \"Linux vs Windows vs macOS comparison\"</li> <li>[ ] \"Linux distributions comparison Ubuntu CentOS RHEL\"</li> <li>[ ] \"Linux history and philosophy\"</li> <li>[ ] \"Open source vs proprietary software\"</li> <li>[ ] \"GNU/Linux difference explained\"</li> <li>[ ] \"Linux kernel vs Linux distribution\"</li> <li>[ ] \"How to choose Linux distro for beginners\"</li> </ul> <p>Practical Labs:</p> <ul> <li>[ ] Install Ubuntu 22.04 LTS on VirtualBox</li> <li>[ ] Install CentOS Stream 9 dual boot</li> <li>[ ] Try Linux live USB without installation</li> <li>[ ] Compare different desktop environments (GNOME, KDE, XFCE)</li> </ul>"},{"location":"linux/roadmap/#week-2-terminal-shell-basics","title":"Week 2: Terminal &amp; Shell Basics","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux terminal emulator vs shell difference\"</li> <li>[ ] \"Bash shell tutorial for beginners\"</li> <li>[ ] \"Linux command structure syntax\"</li> <li>[ ] \"Terminal shortcuts and hotkeys\"</li> <li>[ ] \"Shell prompt customization PS1\"</li> <li>[ ] \"History command in Linux bash\"</li> <li>[ ] \"Tab completion in Linux terminal\"</li> <li>[ ] \"Command substitution in bash\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Basic navigation\npwd, cd, ls, clear, exit, logout, whoami, id, date, uptime, uname\n\n# Getting help\nman, info, --help, whatis, apropos, which, type, help\n\n# History and shortcuts\nhistory, !!, !n, Ctrl+R, Ctrl+C, Ctrl+Z, Ctrl+D, Ctrl+L\n</code></pre>"},{"location":"linux/roadmap/#week-3-file-system-navigation","title":"Week 3: File System Navigation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux file system hierarchy standard FHS\"</li> <li>[ ] \"Linux directory structure explained /etc /var /usr\"</li> <li>[ ] \"Absolute vs relative path Linux\"</li> <li>[ ] \"Linux file system tree structure\"</li> <li>[ ] \"Important Linux directories purpose\"</li> <li>[ ] \"Linux file naming conventions\"</li> <li>[ ] \"Case sensitivity in Linux file names\"</li> <li>[ ] \"Hidden files in Linux dot files\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Navigation\nls, ls -la, ls -lh, ls -R, cd, cd -, cd ~, pwd\n\n# File operations\ntouch, mkdir, mkdir -p, rmdir, rm, rm -rf, cp, cp -r, mv\n\n# Viewing content\ncat, less, more, head, tail, tail -f, wc, file, stat\n</code></pre>"},{"location":"linux/roadmap/#week-4-file-permissions-ownership","title":"Week 4: File Permissions &amp; Ownership","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux file permissions explained rwx\"</li> <li>[ ] \"chmod command tutorial octal notation\"</li> <li>[ ] \"chown chgrp command examples\"</li> <li>[ ] \"Linux permission bits calculation\"</li> <li>[ ] \"SUID SGID sticky bit Linux\"</li> <li>[ ] \"umask command Linux default permissions\"</li> <li>[ ] \"Access Control Lists ACL Linux\"</li> <li>[ ] \"Linux file attributes lsattr chattr\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Permissions\nchmod, chmod +x, chmod 755, chmod u+r,g-w,o=r\nchown, chown user:group, chgrp\numask, umask 022\n\n# Special permissions\nchmod +s, chmod +t, chmod 4755, chmod 2755, chmod 1755\n\n# ACLs\ngetfacl, setfacl, setfacl -m u:user:rwx\n</code></pre>"},{"location":"linux/roadmap/#giai-oan-2-text-processing-scripting-thang-3","title":"\ud83d\udd27 GIAI \u0110O\u1ea0N 2: TEXT PROCESSING &amp; SCRIPTING (Th\u00e1ng 3)","text":""},{"location":"linux/roadmap/#week-5-text-processing-mastery","title":"Week 5: Text Processing Mastery","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"grep command tutorial regular expressions\"</li> <li>[ ] \"sed command examples find and replace\"</li> <li>[ ] \"awk programming tutorial field processing\"</li> <li>[ ] \"sort command options Linux\"</li> <li>[ ] \"uniq command remove duplicates\"</li> <li>[ ] \"cut command extract columns\"</li> <li>[ ] \"tr command translate characters\"</li> <li>[ ] \"join paste commands Linux\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Text search and filter\ngrep, grep -r, grep -v, grep -i, grep -n, grep -E, grep -F\negrep, fgrep, zgrep\n\n# Text processing\nsed, sed 's/old/new/g', sed -i, sed -n\nawk, awk '{print $1}', awk -F, awk 'BEGIN{} {action} END{}'\nsort, sort -n, sort -r, sort -k, sort -u\nuniq, uniq -c, uniq -d\ncut, cut -d, cut -f, cut -c\ntr, tr '[:lower:]' '[:upper:]', tr -d, tr -s\n</code></pre>"},{"location":"linux/roadmap/#week-6-io-redirection-pipes","title":"Week 6: I/O Redirection &amp; Pipes","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux I/O redirection tutorial stdin stdout stderr\"</li> <li>[ ] \"Pipe command Linux examples\"</li> <li>[ ] \"Tee command split output Linux\"</li> <li>[ ] \"Here document heredoc Linux\"</li> <li>[ ] \"Process substitution bash\"</li> <li>[ ] \"/dev/null black hole Linux\"</li> <li>[ ] \"File descriptors Linux 0 1 2\"</li> <li>[ ] \"Named pipes FIFO Linux\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Redirections\n&gt;, &gt;&gt;, &lt;, 2&gt;, 2&gt;&gt;, &amp;&gt;, &amp;&gt;&gt;, 2&gt;&amp;1, 1&gt;&amp;2\n\n# Pipes and filters\n|, tee, tee -a\ncommand1 | command2 | command3\n\n# Advanced redirection\nexec, exec 3&lt; file, exec 3&gt; file\nmkfifo, named pipes\n</code></pre>"},{"location":"linux/roadmap/#week-7-vim-editor-mastery","title":"Week 7: Vim Editor Mastery","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Vim editor tutorial for beginners\"</li> <li>[ ] \"Vim modes normal insert visual command\"</li> <li>[ ] \"Vim navigation commands hjkl\"</li> <li>[ ] \"Vim search and replace commands\"</li> <li>[ ] \"Vim configuration vimrc file\"</li> <li>[ ] \"Vim plugins installation\"</li> <li>[ ] \"Vim copy paste yank put commands\"</li> <li>[ ] \"Vim macros recording and playback\"</li> </ul> <p>Vim Skills \u0111\u1ec3 practice:</p> <pre><code># Navigation\nh,j,k,l, w,b,e, 0,$, gg,G, Ctrl+f,Ctrl+b, :n\n\n# Editing\ni,a,o,O,I,A, x,dd,yy,p,P, u,Ctrl+r\n:w, :q, :wq, :q!, ZZ\n\n# Search/Replace\n/, ?, n, N, :%s/old/new/g, :g/pattern/d\n\n# Visual mode\nv, V, Ctrl+v, gv\n</code></pre>"},{"location":"linux/roadmap/#week-8-shell-scripting-fundamentals","title":"Week 8: Shell Scripting Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Bash scripting tutorial for beginners\"</li> <li>[ ] \"Shell script shebang line #!/bin/bash\"</li> <li>[ ] \"Bash variables local global environment\"</li> <li>[ ] \"Command line arguments $1 $2 $@ $#\"</li> <li>[ ] \"Bash conditional statements if else\"</li> <li>[ ] \"Bash loops for while until\"</li> <li>[ ] \"Bash functions definition and calling\"</li> <li>[ ] \"Exit codes return values bash script\"</li> </ul> <p>Scripting Concepts:</p> <pre><code># Script structure\n#!/bin/bash, chmod +x script.sh, ./script.sh\n\n# Variables\nvar=value, $var, ${var}, local var, export var\n$0, $1, $2, $@, $#, $?, $$\n\n# Conditionals\nif, elif, else, fi, test, [, [[, case\n\n# Loops\nfor, while, until, break, continue\n\n# Functions\nfunction_name() { commands; }, return, $1 in functions\n</code></pre>"},{"location":"linux/roadmap/#giai-oan-3-system-administration-thang-4-5","title":"\ud83d\udda5\ufe0f GIAI \u0110O\u1ea0N 3: SYSTEM ADMINISTRATION (Th\u00e1ng 4-5)","text":""},{"location":"linux/roadmap/#week-9-process-management","title":"Week 9: Process Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux process management tutorial\"</li> <li>[ ] \"ps command options Linux processes\"</li> <li>[ ] \"top htop command system monitoring\"</li> <li>[ ] \"Linux signals SIGTERM SIGKILL\"</li> <li>[ ] \"Background jobs Linux nohup disown\"</li> <li>[ ] \"Process priority nice renice\"</li> <li>[ ] \"Linux process states running sleeping zombie\"</li> <li>[ ] \"pstree command process hierarchy\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Process viewing\nps, ps aux, ps -ef, pstree, pgrep, pidof\ntop, htop, iotop, atop\n\n# Process control\nkill, killall, pkill, kill -9, kill -TERM\njobs, bg, fg, nohup, disown, screen, tmux\n\n# Process priority\nnice, renice, ionice\n</code></pre>"},{"location":"linux/roadmap/#week-10-system-services-systemd","title":"Week 10: System Services &amp; systemd","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"systemd tutorial Linux service management\"</li> <li>[ ] \"systemctl command examples\"</li> <li>[ ] \"Linux boot process systemd\"</li> <li>[ ] \"systemd unit files service timer\"</li> <li>[ ] \"journalctl log management systemd\"</li> <li>[ ] \"systemd targets vs runlevels\"</li> <li>[ ] \"Create custom systemd service\"</li> <li>[ ] \"systemd socket activation\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Service management\nsystemctl start/stop/restart/reload service\nsystemctl enable/disable service\nsystemctl status service\nsystemctl list-units, systemctl list-unit-files\n\n# System control\nsystemctl poweroff, systemctl reboot\nsystemctl isolate target\n\n# Logging\njournalctl, journalctl -u service, journalctl -f\njournalctl --since \"1 hour ago\"\n</code></pre>"},{"location":"linux/roadmap/#week-11-user-group-management","title":"Week 11: User &amp; Group Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux user management commands\"</li> <li>[ ] \"useradd usermod userdel commands\"</li> <li>[ ] \"Linux group management groupadd\"</li> <li>[ ] \"passwd command change password Linux\"</li> <li>[ ] \"sudo configuration sudoers file\"</li> <li>[ ] \"su vs sudo difference Linux\"</li> <li>[ ] \"Linux user home directory structure\"</li> <li>[ ] \"Password aging chage command\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># User management\nuseradd, useradd -m -s /bin/bash username\nusermod, usermod -aG group user\nuserdel, userdel -r username\npasswd, passwd username\n\n# Group management\ngroupadd, groupmod, groupdel\ngroups, id, whoami, who, w, last\n\n# Sudo configuration\nvisudo, sudo -l, sudo -u user command\n</code></pre>"},{"location":"linux/roadmap/#week-12-file-system-management","title":"Week 12: File System Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux file systems ext4 xfs btrfs\"</li> <li>[ ] \"Linux disk partitioning fdisk parted\"</li> <li>[ ] \"mount umount command Linux\"</li> <li>[ ] \"fstab file automatic mounting\"</li> <li>[ ] \"df du commands disk usage\"</li> <li>[ ] \"fsck file system check repair\"</li> <li>[ ] \"LVM logical volume management Linux\"</li> <li>[ ] \"Linux swap partition management\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Disk management\nfdisk, fdisk -l, parted, lsblk, blkid\nmkfs.ext4, mkfs.xfs, mkswap\nmount, umount, mount -a\ndf, df -h, du, du -h, du -s\n\n# File system maintenance\nfsck, fsck.ext4, e2fsck\ntune2fs, dumpe2fs, debugfs\n</code></pre>"},{"location":"linux/roadmap/#giai-oan-4-storage-networking-thang-6-7","title":"\ud83d\udcbe GIAI \u0110O\u1ea0N 4: STORAGE &amp; NETWORKING (Th\u00e1ng 6-7)","text":""},{"location":"linux/roadmap/#week-13-advanced-storage-lvm-raid","title":"Week 13: Advanced Storage (LVM &amp; RAID)","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"LVM tutorial Linux logical volume manager\"</li> <li>[ ] \"Linux LVM commands pvcreate vgcreate lvcreate\"</li> <li>[ ] \"LVM snapshot backup restore\"</li> <li>[ ] \"Linux software RAID mdadm\"</li> <li>[ ] \"RAID levels 0 1 5 6 10 comparison\"</li> <li>[ ] \"Linux encrypted file system LUKS\"</li> <li>[ ] \"Linux quota management disk limits\"</li> <li>[ ] \"NFS network file system Linux\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># LVM\npvcreate, pvdisplay, pvscan\nvgcreate, vgdisplay, vgextend\nlvcreate, lvdisplay, lvextend, lvresize\n\n# RAID\nmdadm, mdadm --create, mdadm --detail\ncat /proc/mdstat\n\n# Encryption\ncryptsetup, cryptsetup luksFormat\n</code></pre>"},{"location":"linux/roadmap/#week-14-network-configuration","title":"Week 14: Network Configuration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux network configuration tutorial\"</li> <li>[ ] \"ip command Linux networking\"</li> <li>[ ] \"Linux network interfaces configuration\"</li> <li>[ ] \"netstat ss command network connections\"</li> <li>[ ] \"iptables firewall rules Linux\"</li> <li>[ ] \"Linux DNS configuration resolv.conf\"</li> <li>[ ] \"Linux network troubleshooting commands\"</li> <li>[ ] \"tcpdump wireshark packet capture\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Network info\nip addr, ip route, ip link\nifconfig, route, netstat, ss\nping, traceroute, nslookup, dig\n\n# Network tools\ntcpdump, wireshark, nmap, telnet, nc\nwget, curl, rsync, scp, sftp\n\n# Firewall\niptables, iptables -L, iptables -A\nfirewalld, firewall-cmd\n</code></pre>"},{"location":"linux/roadmap/#week-15-security-fundamentals","title":"Week 15: Security Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux security best practices\"</li> <li>[ ] \"SSH secure shell configuration\"</li> <li>[ ] \"Linux file permissions security\"</li> <li>[ ] \"SELinux AppArmor security modules\"</li> <li>[ ] \"Linux firewall configuration\"</li> <li>[ ] \"Fail2ban intrusion prevention\"</li> <li>[ ] \"Linux log analysis security\"</li> <li>[ ] \"OpenSSL certificate management\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># SSH security\nssh, ssh-keygen, ssh-copy-id\nsshd_config configuration\n\n# Security tools\nchkrootkit, rkhunter, lynis\naide, tripwire, fail2ban\n\n# SSL/TLS\nopenssl, openssl req, openssl x509\n</code></pre>"},{"location":"linux/roadmap/#week-16-system-monitoring","title":"Week 16: System Monitoring","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux system monitoring tools\"</li> <li>[ ] \"sar system activity reporter\"</li> <li>[ ] \"Linux performance monitoring\"</li> <li>[ ] \"iostat vmstat mpstat commands\"</li> <li>[ ] \"Linux log files analysis\"</li> <li>[ ] \"Nagios Zabbix system monitoring\"</li> <li>[ ] \"Linux system metrics collection\"</li> <li>[ ] \"Performance tuning Linux\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># System monitoring\nsar, iostat, vmstat, mpstat, pidstat\ndstat, nmon, glances\n\n# Log analysis\ntail -f /var/log/messages\ngrep ERROR /var/log/*\nlogrotate configuration\n\n# Performance\nperf, strace, ltrace, lsof\n</code></pre>"},{"location":"linux/roadmap/#giai-oan-5-advanced-topics-thang-8-9","title":"\ud83d\ude80 GIAI \u0110O\u1ea0N 5: ADVANCED TOPICS (Th\u00e1ng 8-9)","text":""},{"location":"linux/roadmap/#week-17-package-management","title":"Week 17: Package Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux package management systems\"</li> <li>[ ] \"APT package manager Ubuntu Debian\"</li> <li>[ ] \"YUM DNF package manager RHEL CentOS\"</li> <li>[ ] \"RPM package format commands\"</li> <li>[ ] \"DEB package format dpkg\"</li> <li>[ ] \"Compile software from source Linux\"</li> <li>[ ] \"Package repository management\"</li> <li>[ ] \"Snap flatpak AppImage packages\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># APT (Ubuntu/Debian)\napt update, apt upgrade, apt install, apt remove\napt search, apt show, apt list\ndpkg -i, dpkg -l, dpkg -r\n\n# YUM/DNF (RHEL/CentOS)\nyum install, yum update, yum remove, yum search\ndnf install, dnf update, dnf remove\nrpm -ivh, rpm -qa, rpm -e\n\n# Source compilation\n./configure, make, make install\ncheckinstall, alien\n</code></pre>"},{"location":"linux/roadmap/#week-18-backup-recovery","title":"Week 18: Backup &amp; Recovery","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux backup strategies\"</li> <li>[ ] \"rsync command synchronization backup\"</li> <li>[ ] \"tar command archive backup\"</li> <li>[ ] \"dd command disk cloning backup\"</li> <li>[ ] \"Linux automated backup scripts\"</li> <li>[ ] \"Bacula Amanda backup software\"</li> <li>[ ] \"Linux disaster recovery planning\"</li> <li>[ ] \"Database backup MySQL PostgreSQL\"</li> </ul> <p>Commands \u0111\u1ec3 practice:</p> <pre><code># Backup tools\ntar czf backup.tar.gz directory/\nrsync -av source/ destination/\ndd if=/dev/sda of=backup.img\n\n# Incremental backups\nrsync --link-dest, rdiff-backup\nduplicity, borgbackup\n\n# Recovery\ntar xzf backup.tar.gz\nrsync restore procedures\n</code></pre>"},{"location":"linux/roadmap/#week-19-automation-scripting-advanced","title":"Week 19: Automation &amp; Scripting Advanced","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Advanced bash scripting techniques\"</li> <li>[ ] \"Linux cron job scheduling\"</li> <li>[ ] \"at command one-time scheduling\"</li> <li>[ ] \"Linux automation with Python\"</li> <li>[ ] \"Ansible automation Linux\"</li> <li>[ ] \"Linux system administration automation\"</li> <li>[ ] \"Bash scripting best practices\"</li> <li>[ ] \"Error handling bash scripts\"</li> </ul> <p>Advanced Scripting:</p> <pre><code># Cron jobs\ncrontab -e, crontab -l\n@reboot, @daily, @weekly, @monthly\n\n# Advanced bash\ntrap, exec, getopts\nassociative arrays, regex matching\nerror handling, logging\n\n# Automation tools\nansible, ansible-playbook\npuppet, chef basics\n</code></pre>"},{"location":"linux/roadmap/#week-20-performance-tuning","title":"Week 20: Performance Tuning","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux performance tuning guide\"</li> <li>[ ] \"Linux kernel parameters tuning\"</li> <li>[ ] \"CPU performance optimization Linux\"</li> <li>[ ] \"Memory management Linux tuning\"</li> <li>[ ] \"Disk I/O optimization Linux\"</li> <li>[ ] \"Network performance tuning Linux\"</li> <li>[ ] \"Linux system benchmarking tools\"</li> <li>[ ] \"Application performance profiling\"</li> </ul> <p>Performance Tools:</p> <pre><code># Benchmarking\nsysbench, stress, stress-ng\nbonnie++, iozone, fio\n\n# Profiling\nperf record, perf report, perf top\nvalgrind, gprof, callgrind\n\n# Tuning\nsysctl, /proc/sys tuning\nCPU governors, I/O schedulers\n</code></pre>"},{"location":"linux/roadmap/#giai-oan-6-expert-level-thang-10-12","title":"\ud83c\udfc6 GIAI \u0110O\u1ea0N 6: EXPERT LEVEL (Th\u00e1ng 10-12)","text":""},{"location":"linux/roadmap/#week-21-22-kernel-low-level","title":"Week 21-22: Kernel &amp; Low-level","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux kernel compilation tutorial\"</li> <li>[ ] \"Linux kernel modules development\"</li> <li>[ ] \"Linux device drivers basics\"</li> <li>[ ] \"Linux kernel debugging techniques\"</li> <li>[ ] \"Linux system calls programming\"</li> <li>[ ] \"Linux kernel parameters boot\"</li> <li>[ ] \"Linux real-time kernel RT\"</li> <li>[ ] \"eBPF extended Berkeley Packet Filter\"</li> </ul>"},{"location":"linux/roadmap/#week-23-24-containerization-virtualization","title":"Week 23-24: Containerization &amp; Virtualization","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux containers LXC Docker\"</li> <li>[ ] \"Linux namespaces cgroups\"</li> <li>[ ] \"KVM QEMU virtualization Linux\"</li> <li>[ ] \"libvirt virtual machine management\"</li> <li>[ ] \"Linux container security\"</li> <li>[ ] \"Linux virtualization performance\"</li> <li>[ ] \"Xen hypervisor Linux\"</li> <li>[ ] \"Linux container orchestration\"</li> </ul>"},{"location":"linux/roadmap/#week-25-26-high-availability-clustering","title":"Week 25-26: High Availability &amp; Clustering","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux high availability clustering\"</li> <li>[ ] \"Pacemaker Corosync cluster Linux\"</li> <li>[ ] \"Linux load balancing HAProxy\"</li> <li>[ ] \"Linux failover clustering\"</li> <li>[ ] \"DRBD distributed storage Linux\"</li> <li>[ ] \"Linux cluster file systems\"</li> <li>[ ] \"Linux service redundancy\"</li> <li>[ ] \"Linux disaster recovery cluster\"</li> </ul>"},{"location":"linux/roadmap/#week-27-28-security-advanced","title":"Week 27-28: Security Advanced","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux security hardening guide\"</li> <li>[ ] \"Linux intrusion detection systems\"</li> <li>[ ] \"Linux vulnerability assessment\"</li> <li>[ ] \"Linux forensics investigation\"</li> <li>[ ] \"Linux malware analysis\"</li> <li>[ ] \"Linux network security monitoring\"</li> <li>[ ] \"Linux security compliance\"</li> <li>[ ] \"Linux penetration testing\"</li> </ul>"},{"location":"linux/roadmap/#learning-resources-by-category","title":"\ud83d\udcda LEARNING RESOURCES BY CATEGORY","text":""},{"location":"linux/roadmap/#video-courses","title":"\ud83c\udfa5 Video Courses","text":"<ul> <li>\"Linux Command Line Basics\" - Search on YouTube/Udemy</li> <li>\"Linux System Administration\" - Linux Academy</li> <li>\"Red Hat Certified Engineer\" - Pluralsight</li> <li>\"Linux Security\" - Cybrary</li> <li>\"Linux Networking\" - CBT Nuggets</li> </ul>"},{"location":"linux/roadmap/#books-to-read","title":"\ud83d\udcd6 Books to Read","text":"<ul> <li>\"The Linux Command Line\" - William Shotts</li> <li>\"Linux Bible\" - Christopher Negus</li> <li>\"UNIX and Linux System Administration Handbook\"</li> <li>\"Linux Kernel Development\" - Robert Love</li> <li>\"Linux Security Cookbook\"</li> </ul>"},{"location":"linux/roadmap/#practice-platforms","title":"\ud83d\udee0\ufe0f Practice Platforms","text":"<ul> <li>\"VirtualBox Linux labs\"</li> <li>\"AWS EC2 free tier Linux\"</li> <li>\"Google Cloud Platform Linux instances\"</li> <li>\"Linux Academy hands-on labs\"</li> <li>\"Katacoda Linux scenarios\"</li> </ul>"},{"location":"linux/roadmap/#certifications-path","title":"\ud83c\udfc5 Certifications Path","text":"<ol> <li>CompTIA Linux+ (Month 4)</li> <li>LPIC-1 (Month 6)</li> <li>RHCSA (Month 8)</li> <li>LPIC-2 (Month 10)</li> <li>RHCE (Month 12)</li> </ol>"},{"location":"linux/roadmap/#daily-practice-checklist","title":"\u2705 DAILY PRACTICE CHECKLIST","text":""},{"location":"linux/roadmap/#morning-30-mins","title":"Morning (30 mins)","text":"<ul> <li>[ ] Practice 10 Linux commands</li> <li>[ ] Read 1 man page thoroughly</li> <li>[ ] Try 1 new command option</li> <li>[ ] Review previous day notes</li> </ul>"},{"location":"linux/roadmap/#evening-30-mins","title":"Evening (30 mins)","text":"<ul> <li>[ ] Complete 1 hands-on lab</li> <li>[ ] Write command examples in notes</li> <li>[ ] Search and bookmark 1 new resource</li> <li>[ ] Plan tomorrow's learning topics</li> </ul>"},{"location":"linux/roadmap/#weekly-goals","title":"Weekly Goals","text":"<ul> <li>[ ] Complete 1 major project</li> <li>[ ] Write 1 blog post about learning</li> <li>[ ] Join 1 Linux discussion forum</li> <li>[ ] Practice troubleshooting scenarios</li> </ul> <p>Linux Learning Philosophy: \"Practice daily, document everything, break things safely!\"</p>"},{"location":"observability/roadmap/","title":"Observability Complete Learning Roadmap - Metrics, Logging &amp; Tracing","text":""},{"location":"observability/roadmap/#muc-tieu-master-observability-voi-cong-cu-pho-bien-trong-10-12-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master Observability v\u1edbi c\u00f4ng c\u1ee5 ph\u1ed5 bi\u1ebfn trong 10-12 th\u00e1ng","text":"<p>C\u00f4ng c\u1ee5 t\u1eadp trung:</p> <ul> <li>Metrics &amp; Alerting: Prometheus + Grafana</li> <li>Logging: ELK Stack (Elasticsearch + Logstash + Kibana)</li> <li>Tracing &amp; APM: Jaeger + OpenTelemetry</li> </ul>"},{"location":"observability/roadmap/#giai-oan-1-observability-foundation-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: OBSERVABILITY FOUNDATION (Th\u00e1ng 1-2)","text":""},{"location":"observability/roadmap/#week-1-observability-fundamentals","title":"Week 1: Observability Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"What is observability in DevOps\"</li> <li>[ ] \"Three pillars of observability metrics logs traces\"</li> <li>[ ] \"Monitoring vs observability difference\"</li> <li>[ ] \"SRE monitoring best practices\"</li> <li>[ ] \"Observability strategy for microservices\"</li> <li>[ ] \"Golden signals SLI SLO SLA explained\"</li> <li>[ ] \"Observability tools comparison 2024\"</li> <li>[ ] \"Observability implementation roadmap\"</li> </ul> <p>Core Concepts:</p> <ul> <li>[ ] Four Golden Signals: Latency, Traffic, Errors, Saturation</li> <li>[ ] RED Method: Rate, Errors, Duration</li> <li>[ ] USE Method: Utilization, Saturation, Errors</li> <li>[ ] Service Level Indicators (SLI)</li> <li>[ ] Service Level Objectives (SLO)</li> <li>[ ] Error budgets v\u00e0 alerting</li> </ul>"},{"location":"observability/roadmap/#week-2-metrics-fundamentals","title":"Week 2: Metrics Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Application metrics types counter gauge histogram\"</li> <li>[ ] \"Infrastructure metrics CPU memory disk network\"</li> <li>[ ] \"Business metrics KPI monitoring\"</li> <li>[ ] \"Metrics collection strategies\"</li> <li>[ ] \"Time series data explained\"</li> <li>[ ] \"Metrics cardinality problems\"</li> <li>[ ] \"Metrics aggregation and downsampling\"</li> <li>[ ] \"Metrics retention policies\"</li> </ul> <p>Metrics Types Practice:</p> <pre><code># Counter - monotonically increasing\nhttp_requests_total\ndatabase_connections_created_total\n\n# Gauge - can go up and down\ncpu_usage_percent\nmemory_usage_bytes\nactive_connections\n\n# Histogram - distribution of values\nhttp_request_duration_seconds\ndatabase_query_duration_seconds\n\n# Summary - similar to histogram\nresponse_time_summary\nrequest_size_summary\n</code></pre>"},{"location":"observability/roadmap/#week-3-logging-fundamentals","title":"Week 3: Logging Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Structured logging vs unstructured logging\"</li> <li>[ ] \"Log levels ERROR WARN INFO DEBUG TRACE\"</li> <li>[ ] \"Centralized logging architecture\"</li> <li>[ ] \"Log aggregation strategies\"</li> <li>[ ] \"Log parsing and enrichment\"</li> <li>[ ] \"Log retention and archiving\"</li> <li>[ ] \"Logging best practices security\"</li> <li>[ ] \"Log correlation and context\"</li> </ul> <p>Logging Best Practices:</p> <pre><code>// Structured logging example\n{\n  \"timestamp\": \"2024-01-15T10:30:00Z\",\n  \"level\": \"ERROR\",\n  \"service\": \"user-service\",\n  \"trace_id\": \"abc123\",\n  \"span_id\": \"def456\",\n  \"user_id\": \"user123\",\n  \"message\": \"Failed to authenticate user\",\n  \"error\": \"invalid_credentials\",\n  \"duration_ms\": 145\n}\n</code></pre>"},{"location":"observability/roadmap/#week-4-tracing-fundamentals","title":"Week 4: Tracing Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Distributed tracing explained\"</li> <li>[ ] \"OpenTelemetry tracing concepts\"</li> <li>[ ] \"Trace spans and context propagation\"</li> <li>[ ] \"Tracing in microservices architecture\"</li> <li>[ ] \"Trace sampling strategies\"</li> <li>[ ] \"Trace correlation with logs and metrics\"</li> <li>[ ] \"Application performance monitoring APM\"</li> <li>[ ] \"Tracing overhead and performance impact\"</li> </ul> <p>Tracing Concepts:</p> <pre><code>Trace: Complete request journey\n\u251c\u2500\u2500 Span: Individual operation\n\u2502   \u251c\u2500\u2500 Tags: Key-value metadata\n\u2502   \u251c\u2500\u2500 Logs: Timestamped events\n\u2502   \u2514\u2500\u2500 Context: Propagation info\n\u2514\u2500\u2500 Span: Next operation\n    \u2514\u2500\u2500 Child Span: Nested operation\n</code></pre>"},{"location":"observability/roadmap/#giai-oan-2-prometheus-grafana-mastery-thang-3-4","title":"\ud83d\udcca GIAI \u0110O\u1ea0N 2: PROMETHEUS &amp; GRAFANA MASTERY (Th\u00e1ng 3-4)","text":""},{"location":"observability/roadmap/#week-5-prometheus-fundamentals","title":"Week 5: Prometheus Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Prometheus installation setup tutorial\"</li> <li>[ ] \"Prometheus configuration prometheus.yml\"</li> <li>[ ] \"Prometheus data model time series\"</li> <li>[ ] \"Prometheus metrics types counter gauge histogram\"</li> <li>[ ] \"Prometheus scraping targets discovery\"</li> <li>[ ] \"Prometheus exporters node_exporter blackbox\"</li> <li>[ ] \"Prometheus recording rules and alerts\"</li> <li>[ ] \"Prometheus federation and high availability\"</li> </ul> <p>Prometheus Setup:</p> <pre><code># prometheus.yml\nglobal:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n\nrule_files:\n  - \"rules/*.yml\"\n\nalerting:\n  alertmanagers:\n    - static_configs:\n        - targets:\n            - \"alertmanager:9093\"\n\nscrape_configs:\n  - job_name: \"prometheus\"\n    static_configs:\n      - targets: [\"localhost:9090\"]\n\n  - job_name: \"node-exporter\"\n    static_configs:\n      - targets: [\"node-exporter:9100\"]\n\n  - job_name: \"my-app\"\n    static_configs:\n      - targets: [\"app:8080\"]\n</code></pre>"},{"location":"observability/roadmap/#week-6-promql-query-language","title":"Week 6: PromQL Query Language","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"PromQL tutorial Prometheus query language\"</li> <li>[ ] \"PromQL selectors and matchers\"</li> <li>[ ] \"PromQL aggregation operators sum avg max\"</li> <li>[ ] \"PromQL functions rate increase irate\"</li> <li>[ ] \"PromQL range queries and instant queries\"</li> <li>[ ] \"PromQL histogram quantile calculations\"</li> <li>[ ] \"PromQL troubleshooting common errors\"</li> <li>[ ] \"PromQL performance optimization\"</li> </ul> <p>PromQL Examples:</p> <pre><code># Basic queries\nup\nhttp_requests_total\ncpu_usage{instance=\"server1\"}\n\n# Rate calculations\nrate(http_requests_total[5m])\nincrease(http_requests_total[1h])\n\n# Aggregations\nsum by (instance) (cpu_usage)\navg_over_time(cpu_usage[1h])\n\n# Advanced queries\nhistogram_quantile(0.95,\n  rate(http_request_duration_seconds_bucket[5m])\n)\n\n# Alerting queries\nrate(http_requests_total{status=\"500\"}[5m]) &gt; 0.1\n</code></pre>"},{"location":"observability/roadmap/#week-7-grafana-fundamentals","title":"Week 7: Grafana Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Grafana installation and setup\"</li> <li>[ ] \"Grafana data sources configuration\"</li> <li>[ ] \"Grafana dashboard creation tutorial\"</li> <li>[ ] \"Grafana panel types graph stat table\"</li> <li>[ ] \"Grafana templating and variables\"</li> <li>[ ] \"Grafana alerting rules setup\"</li> <li>[ ] \"Grafana plugins and extensions\"</li> <li>[ ] \"Grafana user management and permissions\"</li> </ul> <p>Grafana Dashboard JSON:</p> <pre><code>{\n  \"dashboard\": {\n    \"title\": \"Application Metrics\",\n    \"panels\": [\n      {\n        \"title\": \"Request Rate\",\n        \"type\": \"graph\",\n        \"targets\": [\n          {\n            \"expr\": \"rate(http_requests_total[5m])\",\n            \"legendFormat\": \"{{instance}}\"\n          }\n        ]\n      }\n    ],\n    \"templating\": {\n      \"list\": [\n        {\n          \"name\": \"instance\",\n          \"type\": \"query\",\n          \"query\": \"label_values(up, instance)\"\n        }\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"observability/roadmap/#week-8-alertmanager-alerting","title":"Week 8: Alertmanager &amp; Alerting","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Prometheus Alertmanager configuration\"</li> <li>[ ] \"AlertManager routing and grouping\"</li> <li>[ ] \"AlertManager notification channels email slack\"</li> <li>[ ] \"AlertManager silence and inhibition rules\"</li> <li>[ ] \"Prometheus alerting rules best practices\"</li> <li>[ ] \"Alert fatigue prevention strategies\"</li> <li>[ ] \"SRE alerting philosophy\"</li> <li>[ ] \"On-call management with AlertManager\"</li> </ul> <p>Alerting Rules:</p> <pre><code># alerts.yml\ngroups:\n  - name: application\n    rules:\n      - alert: HighErrorRate\n        expr: rate(http_requests_total{status=~\"5..\"}[5m]) &gt; 0.1\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: \"High error rate on {{ $labels.instance }}\"\n          description: \"Error rate is {{ $value }} requests per second\"\n\n      - alert: HighLatency\n        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) &gt; 0.5\n        for: 2m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"High latency on {{ $labels.instance }}\"\n</code></pre>"},{"location":"observability/roadmap/#giai-oan-3-elk-stack-mastery-thang-5-6","title":"\ud83d\udccb GIAI \u0110O\u1ea0N 3: ELK STACK MASTERY (Th\u00e1ng 5-6)","text":""},{"location":"observability/roadmap/#week-9-elasticsearch-fundamentals","title":"Week 9: Elasticsearch Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Elasticsearch installation and configuration\"</li> <li>[ ] \"Elasticsearch cluster setup nodes shards\"</li> <li>[ ] \"Elasticsearch indices and mappings\"</li> <li>[ ] \"Elasticsearch query DSL tutorial\"</li> <li>[ ] \"Elasticsearch aggregations and analytics\"</li> <li>[ ] \"Elasticsearch index lifecycle management\"</li> <li>[ ] \"Elasticsearch security X-Pack authentication\"</li> <li>[ ] \"Elasticsearch performance tuning optimization\"</li> </ul> <p>Elasticsearch Setup:</p> <pre><code># Elasticsearch installation\ndocker run -d --name elasticsearch \\\n  -p 9200:9200 -p 9300:9300 \\\n  -e \"discovery.type=single-node\" \\\n  -e \"ES_JAVA_OPTS=-Xms512m -Xmx512m\" \\\n  elasticsearch:8.11.0\n\n# Create index with mapping\ncurl -X PUT \"localhost:9200/logs\" -H 'Content-Type: application/json' -d'\n{\n  \"mappings\": {\n    \"properties\": {\n      \"timestamp\": { \"type\": \"date\" },\n      \"level\": { \"type\": \"keyword\" },\n      \"message\": { \"type\": \"text\" },\n      \"service\": { \"type\": \"keyword\" },\n      \"trace_id\": { \"type\": \"keyword\" }\n    }\n  }\n}'\n</code></pre>"},{"location":"observability/roadmap/#week-10-logstash-configuration","title":"Week 10: Logstash Configuration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Logstash installation and configuration\"</li> <li>[ ] \"Logstash input plugins file beats http\"</li> <li>[ ] \"Logstash filter plugins grok mutate date\"</li> <li>[ ] \"Logstash output plugins elasticsearch stdout\"</li> <li>[ ] \"Logstash grok patterns for log parsing\"</li> <li>[ ] \"Logstash performance tuning pipeline\"</li> <li>[ ] \"Logstash monitoring and troubleshooting\"</li> <li>[ ] \"Logstash alternatives Fluentd Vector\"</li> </ul> <p>Logstash Configuration:</p> <pre><code># logstash.conf\ninput {\n  beats {\n    port =&gt; 5044\n  }\n\n  file {\n    path =&gt; \"/var/log/app/*.log\"\n    start_position =&gt; \"beginning\"\n  }\n}\n\nfilter {\n  if [fields][service] == \"nginx\" {\n    grok {\n      match =&gt; {\n        \"message\" =&gt; \"%{NGINXACCESS}\"\n      }\n    }\n\n    date {\n      match =&gt; [ \"timestamp\", \"dd/MMM/yyyy:HH:mm:ss Z\" ]\n    }\n\n    mutate {\n      convert =&gt; { \"response_code\" =&gt; \"integer\" }\n      convert =&gt; { \"bytes\" =&gt; \"integer\" }\n    }\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts =&gt; [\"elasticsearch:9200\"]\n    index =&gt; \"logs-%{+YYYY.MM.dd}\"\n  }\n\n  stdout { codec =&gt; rubydebug }\n}\n</code></pre>"},{"location":"observability/roadmap/#week-11-kibana-analytics-visualization","title":"Week 11: Kibana Analytics &amp; Visualization","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Kibana installation and setup\"</li> <li>[ ] \"Kibana index patterns and field mapping\"</li> <li>[ ] \"Kibana Discover log searching and filtering\"</li> <li>[ ] \"Kibana Visualize charts graphs and tables\"</li> <li>[ ] \"Kibana Dashboard creation and sharing\"</li> <li>[ ] \"Kibana Canvas for custom presentations\"</li> <li>[ ] \"Kibana alerting and notifications\"</li> <li>[ ] \"Kibana security and user management\"</li> </ul> <p>Kibana Query Examples:</p> <pre><code>// Kibana Query DSL\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match\": {\n            \"service\": \"user-service\"\n          }\n        },\n        {\n          \"range\": {\n            \"timestamp\": {\n              \"gte\": \"now-1h\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"term\": {\n            \"level\": \"ERROR\"\n          }\n        }\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"observability/roadmap/#week-12-beats-log-shipping","title":"Week 12: Beats &amp; Log Shipping","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Elastic Beats overview Filebeat Metricbeat\"</li> <li>[ ] \"Filebeat configuration log shipping\"</li> <li>[ ] \"Metricbeat system metrics collection\"</li> <li>[ ] \"Heartbeat uptime monitoring\"</li> <li>[ ] \"Packetbeat network monitoring\"</li> <li>[ ] \"Beats modules and processors\"</li> <li>[ ] \"Beats output configuration Elasticsearch Logstash\"</li> <li>[ ] \"Beats monitoring and troubleshooting\"</li> </ul> <p>Filebeat Configuration:</p> <pre><code># filebeat.yml\nfilebeat.inputs:\n  - type: log\n    enabled: true\n    paths:\n      - /var/log/app/*.log\n    fields:\n      service: myapp\n      environment: production\n    fields_under_root: true\n\nprocessors:\n  - add_host_metadata:\n      when.not.contains.tags: forwarded\n  - add_docker_metadata: ~\n\noutput.logstash:\n  hosts: [\"logstash:5044\"]\n\n# Alternative direct to Elasticsearch\noutput.elasticsearch:\n  hosts: [\"elasticsearch:9200\"]\n  index: \"logs-%{+yyyy.MM.dd}\"\n\nlogging.level: info\nlogging.to_files: true\n</code></pre>"},{"location":"observability/roadmap/#giai-oan-4-tracing-apm-mastery-thang-7-8","title":"\ud83d\udd0d GIAI \u0110O\u1ea0N 4: TRACING &amp; APM MASTERY (Th\u00e1ng 7-8)","text":""},{"location":"observability/roadmap/#week-13-opentelemetry-fundamentals","title":"Week 13: OpenTelemetry Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"OpenTelemetry overview and architecture\"</li> <li>[ ] \"OpenTelemetry SDK installation setup\"</li> <li>[ ] \"OpenTelemetry auto-instrumentation\"</li> <li>[ ] \"OpenTelemetry manual instrumentation\"</li> <li>[ ] \"OpenTelemetry collector configuration\"</li> <li>[ ] \"OpenTelemetry exporters Jaeger Zipkin\"</li> <li>[ ] \"OpenTelemetry sampling strategies\"</li> <li>[ ] \"OpenTelemetry context propagation\"</li> </ul> <p>OpenTelemetry Auto-Instrumentation:</p> <pre><code># Python application\nfrom opentelemetry import trace\nfrom opentelemetry.auto_instrumentation import sitecustomize\nfrom opentelemetry.exporter.jaeger.thrift import JaegerExporter\nfrom opentelemetry.sdk.trace import TracerProvider\nfrom opentelemetry.sdk.trace.export import BatchSpanProcessor\n\n# Configure tracing\ntrace.set_tracer_provider(TracerProvider())\ntracer = trace.get_tracer(__name__)\n\njaeger_exporter = JaegerExporter(\n    agent_host_name=\"jaeger\",\n    agent_port=6831,\n)\n\nspan_processor = BatchSpanProcessor(jaeger_exporter)\ntrace.get_tracer_provider().add_span_processor(span_processor)\n\n# Manual instrumentation\n@tracer.start_as_current_span(\"process_request\")\ndef process_request(user_id):\n    span = trace.get_current_span()\n    span.set_attribute(\"user.id\", user_id)\n\n    # Your business logic here\n    result = database_call(user_id)\n\n    span.set_attribute(\"result.count\", len(result))\n    return result\n</code></pre>"},{"location":"observability/roadmap/#week-14-jaeger-distributed-tracing","title":"Week 14: Jaeger Distributed Tracing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jaeger installation and deployment\"</li> <li>[ ] \"Jaeger architecture collector agent query\"</li> <li>[ ] \"Jaeger UI trace analysis and debugging\"</li> <li>[ ] \"Jaeger sampling strategies configuration\"</li> <li>[ ] \"Jaeger storage backends Elasticsearch Cassandra\"</li> <li>[ ] \"Jaeger performance tuning and scaling\"</li> <li>[ ] \"Jaeger integration with Kubernetes\"</li> <li>[ ] \"Jaeger vs Zipkin comparison\"</li> </ul> <p>Jaeger Docker Setup:</p> <pre><code># Jaeger all-in-one\ndocker run -d --name jaeger \\\n  -p 16686:16686 \\\n  -p 14268:14268 \\\n  -p 6831:6831/udp \\\n  -p 6832:6832/udp \\\n  jaegertracing/all-in-one:latest\n\n# Production setup with Elasticsearch\ndocker run -d --name jaeger-collector \\\n  -p 14267:14267 \\\n  -p 14268:14268 \\\n  -p 9411:9411 \\\n  -e SPAN_STORAGE_TYPE=elasticsearch \\\n  -e ES_SERVER_URLS=http://elasticsearch:9200 \\\n  jaegertracing/jaeger-collector:latest\n</code></pre>"},{"location":"observability/roadmap/#week-15-application-performance-monitoring","title":"Week 15: Application Performance Monitoring","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"APM implementation strategies\"</li> <li>[ ] \"Application tracing best practices\"</li> <li>[ ] \"Performance bottleneck identification\"</li> <li>[ ] \"Database query tracing and optimization\"</li> <li>[ ] \"API performance monitoring\"</li> <li>[ ] \"Error tracking and debugging\"</li> <li>[ ] \"User experience monitoring RUM\"</li> <li>[ ] \"Mobile application performance monitoring\"</li> </ul> <p>APM Instrumentation Examples:</p> <pre><code>// Node.js Express application\nconst express = require(\"express\");\nconst { trace, context } = require(\"@opentelemetry/api\");\n\nconst app = express();\nconst tracer = trace.getTracer(\"my-app\");\n\napp.get(\"/api/users/:id\", async (req, res) =&gt; {\n  const span = tracer.startSpan(\"get_user\");\n\n  try {\n    span.setAttributes({\n      \"user.id\": req.params.id,\n      \"http.method\": req.method,\n      \"http.url\": req.url,\n    });\n\n    const user = await getUserFromDatabase(req.params.id);\n\n    span.setAttributes({\n      \"user.found\": !!user,\n      \"db.query.duration\": 150, // ms\n    });\n\n    res.json(user);\n  } catch (error) {\n    span.setStatus({\n      code: trace.SpanStatusCode.ERROR,\n      message: error.message,\n    });\n\n    span.setAttributes({\n      \"error.type\": error.constructor.name,\n      \"error.message\": error.message,\n    });\n\n    res.status(500).json({ error: \"Internal Server Error\" });\n  } finally {\n    span.end();\n  }\n});\n</code></pre>"},{"location":"observability/roadmap/#week-16-advanced-observability-patterns","title":"Week 16: Advanced Observability Patterns","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Observability correlation metrics logs traces\"</li> <li>[ ] \"Distributed tracing sampling optimization\"</li> <li>[ ] \"Observability data pipeline architecture\"</li> <li>[ ] \"Cost optimization observability data\"</li> <li>[ ] \"Observability as Code GitOps monitoring\"</li> <li>[ ] \"Service mesh observability Istio Linkerd\"</li> <li>[ ] \"Chaos engineering with observability\"</li> <li>[ ] \"Observability security and privacy\"</li> </ul>"},{"location":"observability/roadmap/#giai-oan-5-advanced-observability-thang-9-12","title":"\ud83d\ude80 GIAI \u0110O\u1ea0N 5: ADVANCED OBSERVABILITY (Th\u00e1ng 9-12)","text":""},{"location":"observability/roadmap/#week-17-18-production-observability-setup","title":"Week 17-18: Production Observability Setup","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Production monitoring architecture design\"</li> <li>[ ] \"Multi-cluster observability setup\"</li> <li>[ ] \"Observability high availability and disaster recovery\"</li> <li>[ ] \"Cross-region monitoring and alerting\"</li> <li>[ ] \"Observability infrastructure scaling\"</li> <li>[ ] \"Monitoring infrastructure costs optimization\"</li> <li>[ ] \"Compliance and audit logging\"</li> <li>[ ] \"Zero-downtime observability upgrades\"</li> </ul>"},{"location":"observability/roadmap/#week-19-20-advanced-analytics-ml","title":"Week 19-20: Advanced Analytics &amp; ML","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Machine learning for anomaly detection\"</li> <li>[ ] \"Predictive alerting and forecasting\"</li> <li>[ ] \"Log analysis with machine learning\"</li> <li>[ ] \"Automated root cause analysis\"</li> <li>[ ] \"Behavioral monitoring and profiling\"</li> <li>[ ] \"Pattern recognition in observability data\"</li> <li>[ ] \"AI-powered incident response\"</li> <li>[ ] \"Observability data science applications\"</li> </ul>"},{"location":"observability/roadmap/#week-21-22-observability-automation","title":"Week 21-22: Observability Automation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Infrastructure as Code for monitoring\"</li> <li>[ ] \"Automated dashboard generation\"</li> <li>[ ] \"Dynamic alerting rule management\"</li> <li>[ ] \"Self-healing systems with observability\"</li> <li>[ ] \"Automated incident escalation\"</li> <li>[ ] \"GitOps for observability configuration\"</li> <li>[ ] \"Policy-driven monitoring deployment\"</li> <li>[ ] \"Observability testing automation\"</li> </ul>"},{"location":"observability/roadmap/#week-23-24-observability-leadership","title":"Week 23-24: Observability Leadership","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Observability strategy and governance\"</li> <li>[ ] \"Building observability culture in teams\"</li> <li>[ ] \"Observability ROI measurement\"</li> <li>[ ] \"Vendor evaluation and tool selection\"</li> <li>[ ] \"Observability training and education\"</li> <li>[ ] \"Industry observability best practices\"</li> <li>[ ] \"Future trends in observability\"</li> <li>[ ] \"Observability conference talks and papers\"</li> </ul>"},{"location":"observability/roadmap/#hands-on-projects","title":"\ud83d\udcda HANDS-ON PROJECTS","text":""},{"location":"observability/roadmap/#prometheus-grafana-projects","title":"\ud83d\udcca Prometheus + Grafana Projects","text":"<ol> <li> <p>Complete Monitoring Stack</p> </li> <li> <p>Multi-service application monitoring</p> </li> <li>Custom metrics and dashboards</li> <li>Comprehensive alerting setup</li> <li> <p>Search: \"Prometheus Grafana monitoring stack\"</p> </li> <li> <p>Kubernetes Monitoring</p> </li> <li> <p>Cluster and pod monitoring</p> </li> <li>Resource usage tracking</li> <li>Application performance monitoring</li> <li> <p>Search: \"Kubernetes Prometheus monitoring\"</p> </li> <li> <p>Business Metrics Dashboard</p> </li> <li>KPI and business metrics</li> <li>Real-time analytics</li> <li>Executive dashboards</li> <li>Search: \"Business metrics monitoring Grafana\"</li> </ol>"},{"location":"observability/roadmap/#elk-stack-projects","title":"\ud83d\udccb ELK Stack Projects","text":"<ol> <li> <p>Centralized Logging Platform</p> </li> <li> <p>Multi-application log aggregation</p> </li> <li>Log parsing and enrichment</li> <li>Security and audit logging</li> <li> <p>Search: \"ELK stack centralized logging\"</p> </li> <li> <p>Log Analytics and Investigation</p> </li> <li> <p>Error pattern analysis</p> </li> <li>Performance troubleshooting</li> <li>Security incident investigation</li> <li> <p>Search: \"ELK stack log analysis\"</p> </li> <li> <p>Compliance and Audit Logging</p> </li> <li>Regulatory compliance logging</li> <li>Audit trail management</li> <li>Data retention policies</li> <li>Search: \"ELK compliance audit logging\"</li> </ol>"},{"location":"observability/roadmap/#tracing-projects","title":"\ud83d\udd0d Tracing Projects","text":"<ol> <li> <p>Microservices Tracing</p> </li> <li> <p>End-to-end request tracing</p> </li> <li>Performance bottleneck identification</li> <li>Error propagation analysis</li> <li> <p>Search: \"Jaeger microservices tracing\"</p> </li> <li> <p>Database Performance Monitoring</p> </li> <li> <p>Query performance tracing</p> </li> <li>Connection pool monitoring</li> <li>Database bottleneck analysis</li> <li> <p>Search: \"Database tracing OpenTelemetry\"</p> </li> <li> <p>API Performance Optimization</p> </li> <li>API response time analysis</li> <li>Third-party service monitoring</li> <li>Performance optimization</li> <li>Search: \"API performance monitoring tracing\"</li> </ol>"},{"location":"observability/roadmap/#skill-mastery-checklist","title":"\ud83d\udccb SKILL MASTERY CHECKLIST","text":""},{"location":"observability/roadmap/#prometheus-grafana-expertise","title":"Prometheus &amp; Grafana Expertise","text":"<ul> <li>[ ] Design and implement monitoring strategy</li> <li>[ ] Create complex PromQL queries</li> <li>[ ] Build comprehensive dashboards</li> <li>[ ] Configure multi-tier alerting</li> <li>[ ] Optimize Prometheus performance</li> <li>[ ] Implement high availability setup</li> </ul>"},{"location":"observability/roadmap/#elk-stack-mastery","title":"ELK Stack Mastery","text":"<ul> <li>[ ] Design scalable logging architecture</li> <li>[ ] Configure complex log processing pipelines</li> <li>[ ] Create effective log analysis workflows</li> <li>[ ] Implement security and compliance logging</li> <li>[ ] Optimize Elasticsearch performance</li> <li>[ ] Troubleshoot ELK stack issues</li> </ul>"},{"location":"observability/roadmap/#tracing-apm-skills","title":"Tracing &amp; APM Skills","text":"<ul> <li>[ ] Implement distributed tracing strategy</li> <li>[ ] Configure auto and manual instrumentation</li> <li>[ ] Analyze complex trace data</li> <li>[ ] Optimize application performance</li> <li>[ ] Implement sampling strategies</li> <li>[ ] Correlate traces with metrics and logs</li> </ul>"},{"location":"observability/roadmap/#certifications-resources","title":"\ud83c\udf93 CERTIFICATIONS &amp; RESOURCES","text":""},{"location":"observability/roadmap/#recommended-certifications","title":"Recommended Certifications","text":"<ul> <li>[ ] Prometheus Certified Associate (If available)</li> <li>[ ] Elastic Certified Engineer</li> <li>[ ] Grafana Certified Professional</li> <li>[ ] AWS/Azure/GCP Monitoring Certifications</li> </ul>"},{"location":"observability/roadmap/#essential-books","title":"Essential Books","text":"<ul> <li>\"Observability Engineering\" - Honeycomb Team</li> <li>\"Site Reliability Engineering\" - Google SRE Team</li> <li>\"Monitoring with Prometheus\" - James Turnbull</li> <li>\"Learning Elastic Stack\" - Pranav Shukla</li> </ul>"},{"location":"observability/roadmap/#online-learning","title":"Online Learning","text":"<ul> <li>\"Complete Guide to Elasticsearch\" - Udemy</li> <li>\"Prometheus Monitoring\" - Linux Academy</li> <li>\"Grafana Fundamentals\" - Official Training</li> <li>\"OpenTelemetry Workshop\" - Cloud Native Computing Foundation</li> </ul>"},{"location":"observability/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"observability/roadmap/#morning-check-15-mins","title":"Morning Check (15 mins)","text":"<ul> <li>[ ] Review overnight alerts and incidents</li> <li>[ ] Check system health dashboards</li> <li>[ ] Validate monitoring pipeline status</li> <li>[ ] Plan daily observability tasks</li> </ul>"},{"location":"observability/roadmap/#active-development-60-90-mins","title":"Active Development (60-90 mins)","text":"<ul> <li>[ ] Work on monitoring improvements</li> <li>[ ] Analyze observability data</li> <li>[ ] Optimize queries and dashboards</li> <li>[ ] Contribute to observability tools</li> </ul>"},{"location":"observability/roadmap/#evening-review-20-mins","title":"Evening Review (20 mins)","text":"<ul> <li>[ ] Document findings and learnings</li> <li>[ ] Update monitoring runbooks</li> <li>[ ] Plan next day's priorities</li> <li>[ ] Review observability metrics</li> </ul>"},{"location":"observability/roadmap/#mastery-milestones","title":"\ud83c\udfaf MASTERY MILESTONES","text":""},{"location":"observability/roadmap/#month-2-foundation-complete","title":"Month 2: Foundation Complete","text":"<ul> <li>[ ] Understand observability principles</li> <li>[ ] Basic Prometheus and Grafana setup</li> <li>[ ] Simple ELK stack deployment</li> <li>[ ] First distributed traces</li> </ul>"},{"location":"observability/roadmap/#month-4-intermediate-skills","title":"Month 4: Intermediate Skills","text":"<ul> <li>[ ] Complex monitoring setups</li> <li>[ ] Advanced dashboard creation</li> <li>[ ] Log analysis and troubleshooting</li> <li>[ ] Application instrumentation</li> </ul>"},{"location":"observability/roadmap/#month-6-advanced-implementation","title":"Month 6: Advanced Implementation","text":"<ul> <li>[ ] Production-ready observability stack</li> <li>[ ] Performance optimization</li> <li>[ ] Advanced analytics and correlation</li> <li>[ ] Automated alerting and response</li> </ul>"},{"location":"observability/roadmap/#month-8-expert-level","title":"Month 8: Expert Level","text":"<ul> <li>[ ] Multi-cluster observability</li> <li>[ ] Custom tooling development</li> <li>[ ] Advanced troubleshooting</li> <li>[ ] Team mentoring and training</li> </ul>"},{"location":"observability/roadmap/#month-12-leadership","title":"Month 12: Leadership","text":"<ul> <li>[ ] Strategic observability planning</li> <li>[ ] Tool evaluation and selection</li> <li>[ ] Industry contributions</li> <li>[ ] Thought leadership</li> </ul> <p>Observability Philosophy: \"You can't improve what you can't measure, and you can't troubleshoot what you can't observe!\"</p>"},{"location":"observability/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"observability/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ul> <li>[ ] Install Prometheus, Grafana, and ELK stack locally</li> <li>[ ] Create sample application with basic metrics</li> <li>[ ] Set up first dashboard and alert</li> <li>[ ] Generate sample logs and traces</li> </ul>"},{"location":"observability/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic tutorials for each tool</li> <li>[ ] Monitor first real application</li> <li>[ ] Create comprehensive dashboard</li> <li>[ ] Set up basic alerting</li> </ul>"},{"location":"observability/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Production-ready monitoring stack</li> <li>[ ] End-to-end observability implementation</li> <li>[ ] Performance optimization baseline</li> <li>[ ] Team knowledge sharing</li> </ul> <p>Remember: Observability mastery comes from understanding your systems deeply and building the right instrumentation to gain insights into their behavior!</p>"},{"location":"security/roadmap/","title":"Security Complete Learning Roadmap - Secret Management &amp; Scanning/Hardening","text":""},{"location":"security/roadmap/#muc-tieu-master-devsecops-security-trong-10-12-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master DevSecOps Security trong 10-12 th\u00e1ng","text":"<p>T\u1eadp trung ch\u00ednh:</p> <ul> <li>Secret Management: HashiCorp Vault, AWS Secrets Manager, Azure Key Vault</li> <li>Security Scanning: Trivy, Snyk, SonarQube, OWASP ZAP</li> <li>Hardening: CIS Benchmarks, Security Baselines, Compliance</li> </ul>"},{"location":"security/roadmap/#giai-oan-1-security-fundamentals-thang-1-2","title":"\ud83d\udd10 GIAI \u0110O\u1ea0N 1: SECURITY FUNDAMENTALS (Th\u00e1ng 1-2)","text":""},{"location":"security/roadmap/#week-1-security-fundamentals","title":"Week 1: Security Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"DevSecOps principles and practices\"</li> <li>[ ] \"Security by design software development\"</li> <li>[ ] \"CIA triad confidentiality integrity availability\"</li> <li>[ ] \"Zero trust security model\"</li> <li>[ ] \"Defense in depth strategy\"</li> <li>[ ] \"Security threat modeling\"</li> <li>[ ] \"OWASP Top 10 vulnerabilities\"</li> <li>[ ] \"Security compliance frameworks PCI DSS SOC2\"</li> </ul> <p>Core Security Concepts:</p> <ul> <li>[ ] Authentication vs Authorization</li> <li>[ ] Encryption at rest vs in transit</li> <li>[ ] Public key infrastructure (PKI)</li> <li>[ ] Certificate management</li> <li>[ ] Security policies and procedures</li> <li>[ ] Incident response planning</li> </ul>"},{"location":"security/roadmap/#week-2-cryptography-basics","title":"Week 2: Cryptography Basics","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Symmetric vs asymmetric encryption\"</li> <li>[ ] \"RSA AES encryption algorithms\"</li> <li>[ ] \"Digital signatures and certificates\"</li> <li>[ ] \"Hash functions SHA-256 MD5\"</li> <li>[ ] \"Key exchange protocols Diffie-Hellman\"</li> <li>[ ] \"TLS SSL certificate management\"</li> <li>[ ] \"Password hashing bcrypt scrypt\"</li> <li>[ ] \"Cryptographic key rotation\"</li> </ul> <p>Cryptography Practice:</p> <pre><code># OpenSSL examples\nopenssl genrsa -out private.key 2048\nopenssl rsa -in private.key -pubout -out public.key\nopenssl dgst -sha256 -sign private.key -out signature.bin file.txt\nopenssl dgst -sha256 -verify public.key -signature signature.bin file.txt\n\n# Generate certificates\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365\n</code></pre>"},{"location":"security/roadmap/#week-3-identity-access-management","title":"Week 3: Identity &amp; Access Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Identity and Access Management IAM\"</li> <li>[ ] \"Role-based access control RBAC\"</li> <li>[ ] \"Attribute-based access control ABAC\"</li> <li>[ ] \"Single sign-on SSO implementation\"</li> <li>[ ] \"Multi-factor authentication MFA\"</li> <li>[ ] \"OAuth 2.0 OpenID Connect\"</li> <li>[ ] \"SAML authentication protocol\"</li> <li>[ ] \"Privileged access management PAM\"</li> </ul> <p>IAM Implementation:</p> <pre><code># AWS IAM Policy example\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\":\n    [\n      {\n        \"Effect\": \"Allow\",\n        \"Action\": [\"s3:GetObject\", \"s3:PutObject\"],\n        \"Resource\": \"arn:aws:s3:::my-bucket/*\",\n        \"Condition\":\n          {\n            \"StringEquals\":\n              { \"s3:ExistingObjectTag/Environment\": \"Production\" },\n          },\n      },\n    ],\n}\n</code></pre>"},{"location":"security/roadmap/#week-4-network-security-basics","title":"Week 4: Network Security Basics","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Network security fundamentals\"</li> <li>[ ] \"Firewall configuration iptables\"</li> <li>[ ] \"VPN setup and management\"</li> <li>[ ] \"Network segmentation strategies\"</li> <li>[ ] \"Intrusion detection systems IDS\"</li> <li>[ ] \"Network monitoring and logging\"</li> <li>[ ] \"DDoS protection strategies\"</li> <li>[ ] \"Web application firewall WAF\"</li> </ul>"},{"location":"security/roadmap/#giai-oan-2-secret-management-mastery-thang-3-5","title":"\ud83d\udd11 GIAI \u0110O\u1ea0N 2: SECRET MANAGEMENT MASTERY (Th\u00e1ng 3-5)","text":""},{"location":"security/roadmap/#week-5-secret-management-fundamentals","title":"Week 5: Secret Management Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Secret management best practices\"</li> <li>[ ] \"Secrets vs configuration management\"</li> <li>[ ] \"Secret rotation strategies\"</li> <li>[ ] \"Secret scanning in source code\"</li> <li>[ ] \"Environment variable security\"</li> <li>[ ] \"Secret injection into containers\"</li> <li>[ ] \"Secret lifecycle management\"</li> <li>[ ] \"Secret sprawl prevention\"</li> </ul> <p>Secret Management Concepts:</p> <pre><code># Bad practices to avoid\nexport DB_PASSWORD=\"plaintext123\"  # Never do this\necho \"password123\" &gt; config.txt    # Never do this\n\n# Better approaches\nexport DB_PASSWORD_FILE=\"/run/secrets/db_password\"\nvault kv get -field=password secret/myapp/db\n</code></pre>"},{"location":"security/roadmap/#week-6-hashicorp-vault-fundamentals","title":"Week 6: HashiCorp Vault Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"HashiCorp Vault installation setup\"</li> <li>[ ] \"Vault authentication methods\"</li> <li>[ ] \"Vault secret engines KV database\"</li> <li>[ ] \"Vault policies and access control\"</li> <li>[ ] \"Vault token management\"</li> <li>[ ] \"Vault seal and unseal process\"</li> <li>[ ] \"Vault high availability clustering\"</li> <li>[ ] \"Vault auto-unseal with cloud KMS\"</li> </ul> <p>Vault Basic Commands:</p> <pre><code># Vault setup and basic operations\nvault server -dev\nexport VAULT_ADDR='http://127.0.0.1:8200'\nvault auth -method=userpass username=myuser\n\n# Secret operations\nvault kv put secret/myapp username=admin password=secret\nvault kv get secret/myapp\nvault kv get -field=password secret/myapp\n\n# Policy creation\nvault policy write myapp-policy - &lt;&lt;EOF\npath \"secret/data/myapp/*\" {\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\"]\n}\nEOF\n</code></pre>"},{"location":"security/roadmap/#week-7-vault-advanced-features","title":"Week 7: Vault Advanced Features","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Vault dynamic secrets generation\"</li> <li>[ ] \"Vault database secrets engine\"</li> <li>[ ] \"Vault AWS secrets engine\"</li> <li>[ ] \"Vault PKI certificate authority\"</li> <li>[ ] \"Vault transit encryption as service\"</li> <li>[ ] \"Vault agent auto-auth\"</li> <li>[ ] \"Vault Kubernetes integration\"</li> <li>[ ] \"Vault secret injection Kubernetes\"</li> </ul> <p>Advanced Vault Configuration:</p> <pre><code># Enable database secrets engine\nvault secrets enable database\nvault write database/config/my-mysql-database \\\n    plugin_name=mysql-database-plugin \\\n    connection_url=\"{{username}}:{{password}}@tcp(localhost:3306)/\" \\\n    allowed_roles=\"my-role\" \\\n    username=\"root\" \\\n    password=\"mysql-root-password\"\n\n# Create role for dynamic credentials\nvault write database/roles/my-role \\\n    db_name=my-mysql-database \\\n    creation_statements=\"CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT SELECT ON *.* TO '{{name}}'@'%';\" \\\n    default_ttl=\"1h\" \\\n    max_ttl=\"24h\"\n\n# Generate dynamic credentials\nvault read database/creds/my-role\n</code></pre>"},{"location":"security/roadmap/#week-8-cloud-secret-management","title":"Week 8: Cloud Secret Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"AWS Secrets Manager tutorial\"</li> <li>[ ] \"AWS Systems Manager Parameter Store\"</li> <li>[ ] \"Azure Key Vault configuration\"</li> <li>[ ] \"Google Secret Manager setup\"</li> <li>[ ] \"Cloud secret rotation automation\"</li> <li>[ ] \"Cross-cloud secret management\"</li> <li>[ ] \"Cloud IAM integration secrets\"</li> <li>[ ] \"Secret Manager pricing comparison\"</li> </ul> <p>AWS Secrets Manager:</p> <pre><code># AWS CLI commands\naws secretsmanager create-secret \\\n    --name prod/myapp/db \\\n    --description \"Database credentials for myapp\" \\\n    --secret-string '{\"username\":\"admin\",\"password\":\"mysecretpassword\"}'\n\n# Retrieve secret\naws secretsmanager get-secret-value --secret-id prod/myapp/db\n\n# Python application integration\nimport boto3\nimport json\n\ndef get_secret():\n    client = boto3.client('secretsmanager')\n    response = client.get_secret_value(SecretId='prod/myapp/db')\n    return json.loads(response['SecretString'])\n</code></pre>"},{"location":"security/roadmap/#week-9-kubernetes-secret-management","title":"Week 9: Kubernetes Secret Management","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Kubernetes secrets management\"</li> <li>[ ] \"External Secrets Operator ESO\"</li> <li>[ ] \"Sealed Secrets Bitnami\"</li> <li>[ ] \"Kubernetes Secret Store CSI Driver\"</li> <li>[ ] \"Vault Agent Injector Kubernetes\"</li> <li>[ ] \"SOPS secrets encryption\"</li> <li>[ ] \"Kubernetes RBAC for secrets\"</li> <li>[ ] \"Secret rotation in Kubernetes\"</li> </ul> <p>Kubernetes Secret Examples:</p> <pre><code># Native Kubernetes Secret\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mysecret\ntype: Opaque\ndata:\n  username: YWRtaW4= # base64 encoded\n  password: MWYyZDFlMmU2N2Rm # base64 encoded\n\n---\n# External Secrets Operator\napiVersion: external-secrets.io/v1beta1\nkind: SecretStore\nmetadata:\n  name: vault-backend\nspec:\n  provider:\n    vault:\n      server: \"http://vault.vault:8200\"\n      path: \"secret\"\n      version: \"v2\"\n      auth:\n        kubernetes:\n          mountPath: \"kubernetes\"\n          role: \"myapp\"\n\n---\napiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: vault-secret\nspec:\n  refreshInterval: 30s\n  secretStoreRef:\n    name: vault-backend\n    kind: SecretStore\n  target:\n    name: myapp-secret\n  data:\n    - secretKey: password\n      remoteRef:\n        key: secret/myapp\n        property: password\n</code></pre>"},{"location":"security/roadmap/#week-10-secret-management-in-cicd","title":"Week 10: Secret Management in CI/CD","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"CI/CD pipeline secret management\"</li> <li>[ ] \"GitHub Actions secrets management\"</li> <li>[ ] \"GitLab CI secrets and variables\"</li> <li>[ ] \"Jenkins credential management\"</li> <li>[ ] \"Secret scanning in CI/CD\"</li> <li>[ ] \"Dynamic secrets in pipelines\"</li> <li>[ ] \"Secret injection best practices\"</li> <li>[ ] \"CI/CD secret rotation\"</li> </ul> <p>CI/CD Secret Examples:</p> <pre><code># GitHub Actions with Vault\nname: Deploy with Vault Secrets\non: [push]\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Get secrets from Vault\n        uses: hashicorp/vault-action@v2\n        with:\n          url: ${{ secrets.VAULT_URL }}\n          token: ${{ secrets.VAULT_TOKEN }}\n          secrets: |\n            secret/data/myapp username | DB_USERNAME;\n            secret/data/myapp password | DB_PASSWORD\n      - name: Deploy application\n        env:\n          DB_USERNAME: ${{ env.DB_USERNAME }}\n          DB_PASSWORD: ${{ env.DB_PASSWORD }}\n        run: ./deploy.sh\n</code></pre>"},{"location":"security/roadmap/#giai-oan-3-security-scanning-hardening-thang-6-8","title":"\ud83d\udee1\ufe0f GIAI \u0110O\u1ea0N 3: SECURITY SCANNING &amp; HARDENING (Th\u00e1ng 6-8)","text":""},{"location":"security/roadmap/#week-11-security-scanning-fundamentals","title":"Week 11: Security Scanning Fundamentals","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Security scanning types SAST DAST IAST\"</li> <li>[ ] \"Vulnerability assessment methodology\"</li> <li>[ ] \"Security testing in SDLC\"</li> <li>[ ] \"Automated security scanning tools\"</li> <li>[ ] \"False positive management\"</li> <li>[ ] \"Security scan result analysis\"</li> <li>[ ] \"Vulnerability prioritization CVSS\"</li> <li>[ ] \"Security scanning CI/CD integration\"</li> </ul> <p>Scanning Types:</p> <pre><code># Static Application Security Testing (SAST)\nsonar-scanner \\\n  -Dsonar.projectKey=myproject \\\n  -Dsonar.sources=. \\\n  -Dsonar.host.url=http://localhost:9000\n\n# Dynamic Application Security Testing (DAST)\nzap-baseline.py -t http://example.com\n\n# Container Image Scanning\ntrivy image nginx:latest\ndocker run --rm -v /var/run/docker.sock:/var/run/docker.sock \\\n  aquasec/trivy:latest image nginx:latest\n</code></pre>"},{"location":"security/roadmap/#week-12-container-infrastructure-scanning","title":"Week 12: Container &amp; Infrastructure Scanning","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Container image vulnerability scanning\"</li> <li>[ ] \"Trivy container scanner tutorial\"</li> <li>[ ] \"Docker image security scanning\"</li> <li>[ ] \"Kubernetes security scanning tools\"</li> <li>[ ] \"Infrastructure as Code security scanning\"</li> <li>[ ] \"Terraform security scanning tfsec\"</li> <li>[ ] \"Docker Bench security assessment\"</li> <li>[ ] \"CIS benchmarks container scanning\"</li> </ul> <p>Container Scanning Tools:</p> <pre><code># Trivy comprehensive scanning\ntrivy image --severity HIGH,CRITICAL nginx:latest\ntrivy fs --security-checks vuln,config .\ntrivy k8s --report summary cluster\n\n# Docker Bench Security\ndocker run --rm --net host --pid host --userns host --cap-add audit_control \\\n    -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \\\n    -v /var/lib:/var/lib:ro \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    -v /usr/lib/systemd:/usr/lib/systemd:ro \\\n    -v /etc:/etc:ro --label docker_bench_security \\\n    docker/docker-bench-security\n\n# Grype for vulnerability scanning\ngrype nginx:latest\ngrype dir:.\ngrype sbom:./my-sbom.json\n</code></pre>"},{"location":"security/roadmap/#week-13-application-security-scanning","title":"Week 13: Application Security Scanning","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"SonarQube setup and configuration\"</li> <li>[ ] \"OWASP ZAP automated scanning\"</li> <li>[ ] \"Snyk vulnerability scanning\"</li> <li>[ ] \"Code quality security gates\"</li> <li>[ ] \"Dependency vulnerability scanning\"</li> <li>[ ] \"License compliance scanning\"</li> <li>[ ] \"Secret detection in source code\"</li> <li>[ ] \"API security testing\"</li> </ul> <p>Application Security Tools:</p> <pre><code># SonarQube analysis\nsonar-scanner \\\n  -Dsonar.projectKey=myapp \\\n  -Dsonar.sources=src \\\n  -Dsonar.host.url=http://sonarqube:9000 \\\n  -Dsonar.login=admin \\\n  -Dsonar.password=admin\n\n# OWASP ZAP scanning\nzap-full-scan.py -t http://example.com -r zap-report.html\nzap-api-scan.py -t http://example.com/openapi.json -f openapi\n\n# Snyk scanning\nsnyk test\nsnyk monitor\nsnyk test --docker nginx:latest\nsnyk iac test terraform/\n</code></pre>"},{"location":"security/roadmap/#week-14-compliance-hardening-standards","title":"Week 14: Compliance &amp; Hardening Standards","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"CIS benchmarks security standards\"</li> <li>[ ] \"NIST cybersecurity framework\"</li> <li>[ ] \"PCI DSS compliance requirements\"</li> <li>[ ] \"SOC 2 Type II compliance\"</li> <li>[ ] \"ISO 27001 information security\"</li> <li>[ ] \"GDPR data protection compliance\"</li> <li>[ ] \"Security baseline configuration\"</li> <li>[ ] \"Compliance automation tools\"</li> </ul> <p>CIS Benchmark Implementation:</p> <pre><code># CIS-CAT assessment tool\n./CIS-CAT.sh -a -s -r /path/to/reports\n\n# OpenSCAP security compliance\noscap xccdf eval --profile xccdf_org.ssgproject.content_profile_pci-dss \\\n    --results results.xml --report report.html \\\n    /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml\n\n# Ansible hardening playbooks\nansible-playbook -i inventory hardening.yml\n</code></pre>"},{"location":"security/roadmap/#week-15-infrastructure-hardening","title":"Week 15: Infrastructure Hardening","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Linux server hardening checklist\"</li> <li>[ ] \"Windows server security hardening\"</li> <li>[ ] \"Network infrastructure hardening\"</li> <li>[ ] \"Database security hardening\"</li> <li>[ ] \"Web server hardening Apache Nginx\"</li> <li>[ ] \"SSH hardening configuration\"</li> <li>[ ] \"Firewall configuration best practices\"</li> <li>[ ] \"System monitoring for security\"</li> </ul> <p>System Hardening Examples:</p> <pre><code># SSH hardening\n# /etc/ssh/sshd_config\nProtocol 2\nPermitRootLogin no\nPasswordAuthentication no\nPubkeyAuthentication yes\nAllowUsers myuser\nMaxAuthTries 3\nClientAliveInterval 300\nClientAliveCountMax 2\n\n# Firewall configuration (iptables)\niptables -A INPUT -i lo -j ACCEPT\niptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT\niptables -A INPUT -p tcp --dport 22 -j ACCEPT\niptables -A INPUT -p tcp --dport 80 -j ACCEPT\niptables -A INPUT -p tcp --dport 443 -j ACCEPT\niptables -P INPUT DROP\n\n# System auditing\nauditctl -w /etc/passwd -p wa -k user-modify\nauditctl -w /etc/group -p wa -k group-modify\nauditctl -w /var/log/auth.log -p wa -k auth-logs\n</code></pre>"},{"location":"security/roadmap/#week-16-cloud-security-hardening","title":"Week 16: Cloud Security Hardening","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"AWS security best practices\"</li> <li>[ ] \"Azure security center configuration\"</li> <li>[ ] \"GCP security command center\"</li> <li>[ ] \"Cloud security posture management CSPM\"</li> <li>[ ] \"Cloud workload protection platform CWPP\"</li> <li>[ ] \"Multi-cloud security management\"</li> <li>[ ] \"Cloud compliance automation\"</li> <li>[ ] \"Cloud security monitoring\"</li> </ul> <p>Cloud Security Configuration:</p> <pre><code># AWS Security Hub\naws securityhub enable-security-hub\naws securityhub get-findings\n\n# AWS Config Rules\naws configservice put-config-rule --config-rule file://security-rule.json\n\n# Azure Security Center\naz security assessment list\naz security alert list\n\n# GCP Security Command Center\ngcloud scc assets list --organization=ORGANIZATION_ID\ngcloud scc findings list --organization=ORGANIZATION_ID\n</code></pre>"},{"location":"security/roadmap/#giai-oan-4-advanced-security-automation-thang-9-10","title":"\ud83d\udd12 GIAI \u0110O\u1ea0N 4: ADVANCED SECURITY AUTOMATION (Th\u00e1ng 9-10)","text":""},{"location":"security/roadmap/#week-17-18-security-as-code","title":"Week 17-18: Security as Code","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Security as Code implementation\"</li> <li>[ ] \"Policy as Code with Open Policy Agent\"</li> <li>[ ] \"Compliance as Code automation\"</li> <li>[ ] \"Security testing automation\"</li> <li>[ ] \"Infrastructure security automation\"</li> <li>[ ] \"Security orchestration SOAR\"</li> <li>[ ] \"Automated incident response\"</li> <li>[ ] \"Security pipeline integration\"</li> </ul> <p>Policy as Code Examples:</p> <pre><code># OPA Rego policy\npackage kubernetes.admission\n\ndeny[msg] {\n    input.request.kind.kind == \"Pod\"\n    input.request.object.spec.containers[_].image\n    not starts_with(input.request.object.spec.containers[_].image, \"registry.secure.com/\")\n    msg := \"Container images must come from approved registry\"\n}\n\ndeny[msg] {\n    input.request.kind.kind == \"Pod\"\n    input.request.object.spec.containers[_].securityContext.privileged == true\n    msg := \"Privileged containers are not allowed\"\n}\n</code></pre>"},{"location":"security/roadmap/#week-19-20-advanced-threat-detection","title":"Week 19-20: Advanced Threat Detection","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"SIEM security information event management\"</li> <li>[ ] \"Security analytics and machine learning\"</li> <li>[ ] \"Threat hunting methodologies\"</li> <li>[ ] \"Behavioral analysis security\"</li> <li>[ ] \"Anomaly detection algorithms\"</li> <li>[ ] \"Threat intelligence integration\"</li> <li>[ ] \"Security orchestration automation\"</li> <li>[ ] \"Incident response automation\"</li> </ul>"},{"location":"security/roadmap/#hands-on-projects","title":"\ud83d\udcda HANDS-ON PROJECTS","text":""},{"location":"security/roadmap/#secret-management-projects","title":"\ud83d\udd11 Secret Management Projects","text":"<ol> <li> <p>Enterprise Secret Management Platform</p> </li> <li> <p>Multi-environment Vault cluster</p> </li> <li>Dynamic secret generation</li> <li>Automated secret rotation</li> <li> <p>Search: \"HashiCorp Vault production setup\"</p> </li> <li> <p>Kubernetes Secret Management</p> </li> <li> <p>External Secrets Operator setup</p> </li> <li>Vault integration with K8s</li> <li>Secret rotation automation</li> <li> <p>Search: \"Kubernetes external secrets vault\"</p> </li> <li> <p>CI/CD Secret Pipeline</p> </li> <li>Secure secret injection</li> <li>Dynamic credential generation</li> <li>Secret scanning automation</li> <li>Search: \"CI/CD secret management best practices\"</li> </ol>"},{"location":"security/roadmap/#security-scanning-projects","title":"\ud83d\udee1\ufe0f Security Scanning Projects","text":"<ol> <li> <p>Comprehensive Security Pipeline</p> </li> <li> <p>SAST, DAST, and container scanning</p> </li> <li>Automated vulnerability management</li> <li>Security gates in CI/CD</li> <li> <p>Search: \"DevSecOps security pipeline\"</p> </li> <li> <p>Infrastructure Security Monitoring</p> </li> <li> <p>Continuous compliance scanning</p> </li> <li>CIS benchmark automation</li> <li>Security dashboard creation</li> <li> <p>Search: \"Infrastructure security automation\"</p> </li> <li> <p>Application Security Testing</p> </li> <li>API security testing automation</li> <li>Dependency vulnerability tracking</li> <li>Security code review automation</li> <li>Search: \"Application security testing automation\"</li> </ol>"},{"location":"security/roadmap/#skill-mastery-checklist","title":"\ud83d\udccb SKILL MASTERY CHECKLIST","text":""},{"location":"security/roadmap/#secret-management-expertise","title":"Secret Management Expertise","text":"<ul> <li>[ ] Design enterprise secret architecture</li> <li>[ ] Implement automated secret rotation</li> <li>[ ] Configure multi-cloud secret management</li> <li>[ ] Integrate secrets with CI/CD pipelines</li> <li>[ ] Troubleshoot secret management issues</li> <li>[ ] Optimize secret performance and costs</li> </ul>"},{"location":"security/roadmap/#security-scanning-mastery","title":"Security Scanning Mastery","text":"<ul> <li>[ ] Implement comprehensive scanning strategy</li> <li>[ ] Configure automated vulnerability management</li> <li>[ ] Create security gates and policies</li> <li>[ ] Analyze and remediate security findings</li> <li>[ ] Optimize scanning performance</li> <li>[ ] Build security dashboards and reports</li> </ul>"},{"location":"security/roadmap/#compliance-hardening-skills","title":"Compliance &amp; Hardening Skills","text":"<ul> <li>[ ] Implement compliance automation</li> <li>[ ] Design security baselines</li> <li>[ ] Configure hardening standards</li> <li>[ ] Create security policies as code</li> <li>[ ] Monitor compliance drift</li> <li>[ ] Automate remediation processes</li> </ul>"},{"location":"security/roadmap/#certifications-resources","title":"\ud83c\udf93 CERTIFICATIONS &amp; RESOURCES","text":""},{"location":"security/roadmap/#security-certifications","title":"Security Certifications","text":"<ul> <li>[ ] Certified Information Systems Security Professional (CISSP)</li> <li>[ ] AWS Certified Security - Specialty</li> <li>[ ] Azure Security Engineer Associate</li> <li>[ ] Google Cloud Professional Cloud Security Engineer</li> <li>[ ] HashiCorp Certified: Vault Associate</li> <li>[ ] Certified Kubernetes Security Specialist (CKS)</li> </ul>"},{"location":"security/roadmap/#essential-books","title":"Essential Books","text":"<ul> <li>\"The DevSecOps Handbook\" - Gene Kim</li> <li>\"Security Engineering\" - Ross Anderson</li> <li>\"Secrets of a Strong Security Culture\" - Joe Basirico</li> <li>\"Building Secure and Reliable Systems\" - Google SRE Team</li> </ul>"},{"location":"security/roadmap/#online-learning","title":"Online Learning","text":"<ul> <li>\"HashiCorp Vault Deep Dive\" - A Cloud Guru</li> <li>\"DevSecOps Foundation\" - DevOps Institute</li> <li>\"Security in DevOps\" - Linux Academy</li> <li>\"Cloud Security\" - Cloud Security Alliance</li> </ul>"},{"location":"security/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"security/roadmap/#morning-security-check-20-mins","title":"Morning Security Check (20 mins)","text":"<ul> <li>[ ] Review security alerts and incidents</li> <li>[ ] Check vulnerability scan results</li> <li>[ ] Validate secret rotation status</li> <li>[ ] Monitor compliance dashboards</li> </ul>"},{"location":"security/roadmap/#active-security-work-60-90-mins","title":"Active Security Work (60-90 mins)","text":"<ul> <li>[ ] Work on security automation projects</li> <li>[ ] Analyze security findings</li> <li>[ ] Improve security policies</li> <li>[ ] Contribute to security tools</li> </ul>"},{"location":"security/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document security learnings</li> <li>[ ] Update security runbooks</li> <li>[ ] Plan security improvements</li> <li>[ ] Review security metrics</li> </ul>"},{"location":"security/roadmap/#mastery-milestones","title":"\ud83c\udfaf MASTERY MILESTONES","text":""},{"location":"security/roadmap/#month-2-foundation","title":"Month 2: Foundation","text":"<ul> <li>[ ] Understand security fundamentals</li> <li>[ ] Basic secret management setup</li> <li>[ ] Simple security scanning</li> <li>[ ] Security awareness</li> </ul>"},{"location":"security/roadmap/#month-5-intermediate","title":"Month 5: Intermediate","text":"<ul> <li>[ ] Production secret management</li> <li>[ ] Automated security scanning</li> <li>[ ] Compliance implementation</li> <li>[ ] Security integration</li> </ul>"},{"location":"security/roadmap/#month-8-advanced","title":"Month 8: Advanced","text":"<ul> <li>[ ] Enterprise security architecture</li> <li>[ ] Advanced threat detection</li> <li>[ ] Security automation</li> <li>[ ] Incident response</li> </ul>"},{"location":"security/roadmap/#month-10-expert","title":"Month 10: Expert","text":"<ul> <li>[ ] Security strategy and planning</li> <li>[ ] Tool evaluation and selection</li> <li>[ ] Team mentoring</li> <li>[ ] Industry contributions</li> </ul> <p>Security Philosophy: \"Security is not a product, but a process that must be integrated into every aspect of development and operations!\"</p>"},{"location":"security/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"security/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ul> <li>[ ] Install Vault, security scanning tools</li> <li>[ ] Set up basic secret management</li> <li>[ ] Run first security scans</li> <li>[ ] Join security communities</li> </ul>"},{"location":"security/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic security tutorials</li> <li>[ ] Implement first secret management solution</li> <li>[ ] Set up automated security scanning</li> <li>[ ] Create security dashboard</li> </ul>"},{"location":"security/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Production-ready secret management</li> <li>[ ] Comprehensive security scanning pipeline</li> <li>[ ] Basic compliance automation</li> <li>[ ] Security incident response plan</li> </ul> <p>Remember: Security is a journey, not a destination. Stay updated with latest threats and continuously improve your security posture!</p>"},{"location":"testing/roadmap/","title":"CI/CD Testing &amp; Quality Complete Learning Roadmap","text":""},{"location":"testing/roadmap/#muc-tieu-master-testing-quality-trong-cicd-pipeline-trong-8-10-thang","title":"\ud83c\udfaf M\u1ee5c ti\u00eau: Master Testing &amp; Quality trong CI/CD pipeline trong 8-10 th\u00e1ng","text":"<p>C\u00f4ng c\u1ee5 t\u1eadp trung ph\u1ed5 bi\u1ebfn nh\u1ea5t:</p> <ul> <li>Unit Testing: Jest (JavaScript), PyTest (Python), JUnit (Java), Go Test</li> <li>Integration Testing: Cypress, Selenium, Postman/Newman</li> <li>Static Analysis: ESLint, SonarQube, flake8, golangci-lint</li> <li>Security Testing: OWASP ZAP, Snyk, Trivy</li> </ul>"},{"location":"testing/roadmap/#giai-oan-1-testing-fundamentals-thang-1-2","title":"\ud83d\udd30 GIAI \u0110O\u1ea0N 1: TESTING FUNDAMENTALS (Th\u00e1ng 1-2)","text":""},{"location":"testing/roadmap/#week-1-testing-principles-strategy","title":"Week 1: Testing Principles &amp; Strategy","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Software testing pyramid explained\"</li> <li>[ ] \"Unit vs integration vs e2e testing\"</li> <li>[ ] \"Test-driven development TDD tutorial\"</li> <li>[ ] \"Behavior-driven development BDD\"</li> <li>[ ] \"Testing strategy for microservices\"</li> <li>[ ] \"CI/CD testing best practices\"</li> <li>[ ] \"Test automation frameworks comparison\"</li> <li>[ ] \"Testing metrics code coverage mutation testing\"</li> </ul> <p>Testing Concepts:</p> <pre><code>Testing Pyramid:\n\u251c\u2500\u2500 E2E Tests (Few, Slow, Expensive)\n\u251c\u2500\u2500 Integration Tests (Some, Medium)\n\u2514\u2500\u2500 Unit Tests (Many, Fast, Cheap)\n\nTest Types:\n\u251c\u2500\u2500 Functional Testing\n\u251c\u2500\u2500 Non-functional Testing (Performance, Security)\n\u251c\u2500\u2500 Regression Testing\n\u2514\u2500\u2500 Smoke Testing\n</code></pre>"},{"location":"testing/roadmap/#week-2-test-planning-documentation","title":"Week 2: Test Planning &amp; Documentation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Test plan template software testing\"</li> <li>[ ] \"Test case design techniques\"</li> <li>[ ] \"Testing documentation best practices\"</li> <li>[ ] \"Requirement traceability matrix\"</li> <li>[ ] \"Test data management strategies\"</li> <li>[ ] \"Test environment setup\"</li> <li>[ ] \"Bug tracking and reporting\"</li> <li>[ ] \"Testing workflow in agile scrum\"</li> </ul> <p>Test Documentation Templates:</p> <pre><code># Test Case Template\n\n## TC001: User Login Functionality\n\n**Preconditions**: User exists in system\n**Steps**:\n\n1. Navigate to login page\n2. Enter valid credentials\n3. Click login button\n   **Expected Result**: User redirected to dashboard\n   **Actual Result**:\n   **Status**: Pass/Fail\n</code></pre>"},{"location":"testing/roadmap/#week-3-version-control-for-testing","title":"Week 3: Version Control for Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Git workflow for test automation\"</li> <li>[ ] \"Test code organization best practices\"</li> <li>[ ] \"Branching strategies for testing teams\"</li> <li>[ ] \"Code review process for test code\"</li> <li>[ ] \"Test artifacts version control\"</li> <li>[ ] \"Test data version control\"</li> <li>[ ] \"Shared test libraries management\"</li> <li>[ ] \"Testing in feature branch workflow\"</li> </ul>"},{"location":"testing/roadmap/#week-4-cicd-testing-integration","title":"Week 4: CI/CD Testing Integration","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Testing in CI/CD pipeline design\"</li> <li>[ ] \"Parallel test execution strategies\"</li> <li>[ ] \"Test reporting in CI/CD\"</li> <li>[ ] \"Failed test handling automation\"</li> <li>[ ] \"Test result notifications\"</li> <li>[ ] \"Quality gates in CI/CD\"</li> <li>[ ] \"Test environment provisioning\"</li> <li>[ ] \"Database testing in CI/CD\"</li> </ul>"},{"location":"testing/roadmap/#giai-oan-2-unit-testing-mastery-thang-3-4","title":"\ud83e\uddea GIAI \u0110O\u1ea0N 2: UNIT TESTING MASTERY (Th\u00e1ng 3-4)","text":""},{"location":"testing/roadmap/#week-5-javascript-unit-testing-voi-jest","title":"Week 5: JavaScript Unit Testing v\u1edbi Jest","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Jest testing framework setup tutorial\"</li> <li>[ ] \"Jest unit test examples JavaScript\"</li> <li>[ ] \"Jest mocking functions and modules\"</li> <li>[ ] \"Jest async testing promises callbacks\"</li> <li>[ ] \"Jest snapshot testing React components\"</li> <li>[ ] \"Jest code coverage configuration\"</li> <li>[ ] \"Jest test debugging techniques\"</li> <li>[ ] \"Jest custom matchers and helpers\"</li> </ul> <p>Jest Examples:</p> <pre><code>// Basic Jest test\ndescribe(\"Calculator\", () =&gt; {\n  test(\"should add two numbers correctly\", () =&gt; {\n    expect(add(2, 3)).toBe(5);\n  });\n\n  test(\"should handle async operations\", async () =&gt; {\n    const result = await fetchUserData(123);\n    expect(result).toHaveProperty(\"name\");\n    expect(result.name).toBe(\"John Doe\");\n  });\n\n  test(\"should mock external dependencies\", () =&gt; {\n    const mockCallback = jest.fn();\n    forEach([0, 1], mockCallback);\n    expect(mockCallback.mock.calls.length).toBe(2);\n  });\n});\n\n// React component testing\nimport { render, screen, fireEvent } from \"@testing-library/react\";\nimport Button from \"./Button\";\n\ntest(\"renders button with correct text\", () =&gt; {\n  render(&lt;Button&gt;Click me&lt;/Button&gt;);\n  expect(screen.getByText(\"Click me\")).toBeInTheDocument();\n});\n\ntest(\"calls onClick handler when clicked\", () =&gt; {\n  const handleClick = jest.fn();\n  render(&lt;Button onClick={handleClick}&gt;Click me&lt;/Button&gt;);\n  fireEvent.click(screen.getByText(\"Click me\"));\n  expect(handleClick).toHaveBeenCalledTimes(1);\n});\n</code></pre>"},{"location":"testing/roadmap/#week-6-python-unit-testing-voi-pytest","title":"Week 6: Python Unit Testing v\u1edbi PyTest","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"PyTest tutorial Python unit testing\"</li> <li>[ ] \"PyTest fixtures and setup teardown\"</li> <li>[ ] \"PyTest parametrized testing\"</li> <li>[ ] \"PyTest mocking with unittest.mock\"</li> <li>[ ] \"PyTest plugins and extensions\"</li> <li>[ ] \"PyTest configuration pytest.ini\"</li> <li>[ ] \"PyTest coverage reporting\"</li> <li>[ ] \"PyTest parallel execution xdist\"</li> </ul> <p>PyTest Examples:</p> <pre><code># Basic PyTest tests\nimport pytest\nfrom myapp import Calculator, DatabaseService\n\nclass TestCalculator:\n    def test_add_positive_numbers(self):\n        calc = Calculator()\n        result = calc.add(2, 3)\n        assert result == 5\n\n    def test_divide_by_zero_raises_exception(self):\n        calc = Calculator()\n        with pytest.raises(ZeroDivisionError):\n            calc.divide(10, 0)\n\n    @pytest.mark.parametrize(\"a,b,expected\", [\n        (2, 3, 5),\n        (-1, 1, 0),\n        (0, 0, 0),\n    ])\n    def test_add_multiple_cases(self, a, b, expected):\n        calc = Calculator()\n        assert calc.add(a, b) == expected\n\n# Fixtures for setup/teardown\n@pytest.fixture\ndef database():\n    db = DatabaseService()\n    db.connect()\n    yield db\n    db.disconnect()\n\ndef test_user_creation(database):\n    user = database.create_user(\"john@example.com\")\n    assert user.email == \"john@example.com\"\n    assert user.id is not None\n\n# Mocking external dependencies\nfrom unittest.mock import patch, MagicMock\n\n@patch('myapp.external_api_call')\ndef test_api_integration(mock_api):\n    mock_api.return_value = {\"status\": \"success\"}\n    result = process_api_data()\n    assert result[\"processed\"] is True\n    mock_api.assert_called_once()\n</code></pre>"},{"location":"testing/roadmap/#week-7-java-unit-testing-voi-junit","title":"Week 7: Java Unit Testing v\u1edbi JUnit","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"JUnit 5 tutorial Java unit testing\"</li> <li>[ ] \"JUnit annotations @Test @BeforeEach @AfterEach\"</li> <li>[ ] \"JUnit assertions and assumptions\"</li> <li>[ ] \"JUnit parameterized tests\"</li> <li>[ ] \"Mockito mocking framework Java\"</li> <li>[ ] \"JUnit test lifecycle and extensions\"</li> <li>[ ] \"JUnit integration with Maven Gradle\"</li> <li>[ ] \"JUnit code coverage JaCoCo\"</li> </ul> <p>JUnit Examples:</p> <pre><code>// JUnit 5 test examples\nimport org.junit.jupiter.api.*;\nimport org.mockito.*;\nimport static org.junit.jupiter.api.Assertions.*;\nimport static org.mockito.Mockito.*;\n\nclass CalculatorTest {\n    private Calculator calculator;\n\n    @BeforeEach\n    void setUp() {\n        calculator = new Calculator();\n    }\n\n    @Test\n    @DisplayName(\"Should add two positive numbers\")\n    void shouldAddTwoPositiveNumbers() {\n        int result = calculator.add(2, 3);\n        assertEquals(5, result, \"2 + 3 should equal 5\");\n    }\n\n    @ParameterizedTest\n    @ValueSource(ints = {1, 2, 3, 4, 5})\n    void shouldReturnTrueForPositiveNumbers(int number) {\n        assertTrue(calculator.isPositive(number));\n    }\n\n    @Test\n    void shouldThrowExceptionWhenDividingByZero() {\n        ArithmeticException exception = assertThrows(\n            ArithmeticException.class,\n            () -&gt; calculator.divide(10, 0)\n        );\n        assertEquals(\"Cannot divide by zero\", exception.getMessage());\n    }\n}\n\n// Mockito example\nclass UserServiceTest {\n    @Mock\n    private UserRepository userRepository;\n\n    @InjectMocks\n    private UserService userService;\n\n    @Test\n    void shouldCreateUserSuccessfully() {\n        // Given\n        User user = new User(\"john@example.com\");\n        when(userRepository.save(any(User.class))).thenReturn(user);\n\n        // When\n        User createdUser = userService.createUser(\"john@example.com\");\n\n        // Then\n        assertNotNull(createdUser);\n        assertEquals(\"john@example.com\", createdUser.getEmail());\n        verify(userRepository).save(any(User.class));\n    }\n}\n</code></pre>"},{"location":"testing/roadmap/#week-8-go-unit-testing","title":"Week 8: Go Unit Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Go testing package tutorial\"</li> <li>[ ] \"Go unit test examples table-driven tests\"</li> <li>[ ] \"Go test coverage go test cover\"</li> <li>[ ] \"Go mocking interfaces testify\"</li> <li>[ ] \"Go benchmark testing performance\"</li> <li>[ ] \"Go test fixtures setup teardown\"</li> <li>[ ] \"Go integration testing database\"</li> <li>[ ] \"Go test organization best practices\"</li> </ul> <p>Go Testing Examples:</p> <pre><code>// Basic Go tests\npackage calculator\n\nimport (\n    \"testing\"\n    \"github.com/stretchr/testify/assert\"\n)\n\nfunc TestAdd(t *testing.T) {\n    result := Add(2, 3)\n    assert.Equal(t, 5, result, \"Add(2, 3) should equal 5\")\n}\n\n// Table-driven tests\nfunc TestAddTableDriven(t *testing.T) {\n    tests := []struct {\n        name     string\n        a, b     int\n        expected int\n    }{\n        {\"positive numbers\", 2, 3, 5},\n        {\"negative numbers\", -1, -1, -2},\n        {\"zero values\", 0, 0, 0},\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            result := Add(tt.a, tt.b)\n            assert.Equal(t, tt.expected, result)\n        })\n    }\n}\n\n// Benchmark test\nfunc BenchmarkAdd(b *testing.B) {\n    for i := 0; i &lt; b.N; i++ {\n        Add(2, 3)\n    }\n}\n\n// Mock example with testify\ntype UserRepository interface {\n    GetUser(id int) (*User, error)\n}\n\nfunc TestUserService_GetUser(t *testing.T) {\n    mockRepo := new(MockUserRepository)\n    service := NewUserService(mockRepo)\n\n    expectedUser := &amp;User{ID: 1, Name: \"John\"}\n    mockRepo.On(\"GetUser\", 1).Return(expectedUser, nil)\n\n    user, err := service.GetUser(1)\n\n    assert.NoError(t, err)\n    assert.Equal(t, expectedUser, user)\n    mockRepo.AssertExpectations(t)\n}\n</code></pre>"},{"location":"testing/roadmap/#giai-oan-3-integration-testing-thang-5-6","title":"\ud83d\udd17 GIAI \u0110O\u1ea0N 3: INTEGRATION TESTING (Th\u00e1ng 5-6)","text":""},{"location":"testing/roadmap/#week-9-api-testing-voi-postmannewman","title":"Week 9: API Testing v\u1edbi Postman/Newman","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Postman API testing tutorial\"</li> <li>[ ] \"Newman command line Postman runner\"</li> <li>[ ] \"Postman collection automation\"</li> <li>[ ] \"API testing best practices REST GraphQL\"</li> <li>[ ] \"Postman environment variables\"</li> <li>[ ] \"Postman pre-request scripts tests\"</li> <li>[ ] \"API contract testing Postman\"</li> <li>[ ] \"Postman CI/CD integration\"</li> </ul> <p>Postman/Newman Examples:</p> <pre><code>// Postman test script examples\npm.test(\"Status code is 200\", function () {\n  pm.response.to.have.status(200);\n});\n\npm.test(\"Response has required fields\", function () {\n  const responseJson = pm.response.json();\n  pm.expect(responseJson).to.have.property(\"id\");\n  pm.expect(responseJson).to.have.property(\"name\");\n  pm.expect(responseJson).to.have.property(\"email\");\n});\n\npm.test(\"Response time is less than 200ms\", function () {\n  pm.expect(pm.response.responseTime).to.be.below(200);\n});\n\n// Pre-request script for authentication\nconst loginRequest = {\n  url: pm.environment.get(\"baseUrl\") + \"/auth/login\",\n  method: \"POST\",\n  header: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: {\n    mode: \"raw\",\n    raw: JSON.stringify({\n      username: pm.environment.get(\"username\"),\n      password: pm.environment.get(\"password\"),\n    }),\n  },\n};\n\npm.sendRequest(loginRequest, function (err, response) {\n  if (response.json().token) {\n    pm.environment.set(\"authToken\", response.json().token);\n  }\n});\n</code></pre> <pre><code># Newman CLI commands\nnewman run collection.json -e environment.json\nnewman run collection.json --reporters cli,json --reporter-json-export results.json\nnewman run collection.json --iteration-count 10 --delay-request 1000\n</code></pre>"},{"location":"testing/roadmap/#week-10-e2e-testing-voi-cypress","title":"Week 10: E2E Testing v\u1edbi Cypress","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Cypress end-to-end testing tutorial\"</li> <li>[ ] \"Cypress installation and setup\"</li> <li>[ ] \"Cypress commands and assertions\"</li> <li>[ ] \"Cypress page object model pattern\"</li> <li>[ ] \"Cypress API testing vs UI testing\"</li> <li>[ ] \"Cypress fixtures and test data\"</li> <li>[ ] \"Cypress CI/CD integration\"</li> <li>[ ] \"Cypress best practices anti-patterns\"</li> </ul> <p>Cypress Examples:</p> <pre><code>// Basic Cypress test\ndescribe(\"User Authentication\", () =&gt; {\n  beforeEach(() =&gt; {\n    cy.visit(\"/login\");\n  });\n\n  it(\"should login with valid credentials\", () =&gt; {\n    cy.get(\"[data-cy=username]\").type(\"john@example.com\");\n    cy.get(\"[data-cy=password]\").type(\"password123\");\n    cy.get(\"[data-cy=login-button]\").click();\n\n    cy.url().should(\"include\", \"/dashboard\");\n    cy.get(\"[data-cy=welcome-message]\").should(\"contain\", \"Welcome, John\");\n  });\n\n  it(\"should show error for invalid credentials\", () =&gt; {\n    cy.get(\"[data-cy=username]\").type(\"invalid@example.com\");\n    cy.get(\"[data-cy=password]\").type(\"wrongpassword\");\n    cy.get(\"[data-cy=login-button]\").click();\n\n    cy.get(\"[data-cy=error-message]\")\n      .should(\"be.visible\")\n      .and(\"contain\", \"Invalid credentials\");\n  });\n});\n\n// API testing with Cypress\ndescribe(\"API Tests\", () =&gt; {\n  it(\"should create a new user\", () =&gt; {\n    cy.request({\n      method: \"POST\",\n      url: \"/api/users\",\n      body: {\n        name: \"John Doe\",\n        email: \"john@example.com\",\n      },\n    }).then((response) =&gt; {\n      expect(response.status).to.eq(201);\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body.name).to.eq(\"John Doe\");\n    });\n  });\n});\n\n// Page Object Model\nclass LoginPage {\n  visit() {\n    cy.visit(\"/login\");\n  }\n\n  fillUsername(username) {\n    cy.get(\"[data-cy=username]\").type(username);\n    return this;\n  }\n\n  fillPassword(password) {\n    cy.get(\"[data-cy=password]\").type(password);\n    return this;\n  }\n\n  submit() {\n    cy.get(\"[data-cy=login-button]\").click();\n    return this;\n  }\n}\n\nexport default LoginPage;\n</code></pre>"},{"location":"testing/roadmap/#week-11-database-integration-testing","title":"Week 11: Database Integration Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Database testing strategies unit integration\"</li> <li>[ ] \"Test database setup and teardown\"</li> <li>[ ] \"Database transaction testing\"</li> <li>[ ] \"Test data generation and seeding\"</li> <li>[ ] \"Database migration testing\"</li> <li>[ ] \"SQL query testing techniques\"</li> <li>[ ] \"ORM testing Entity Framework Hibernate\"</li> <li>[ ] \"Database performance testing\"</li> </ul> <p>Database Testing Examples:</p> <pre><code># Python database testing with pytest\nimport pytest\nfrom sqlalchemy import create_engine\nfrom myapp import create_app, db, User\n\n@pytest.fixture(scope=\"session\")\ndef test_database():\n    engine = create_engine(\"sqlite:///:memory:\")\n    db.create_all(bind=engine)\n    yield engine\n    db.drop_all(bind=engine)\n\n@pytest.fixture\ndef app_context(test_database):\n    app = create_app(testing=True)\n    with app.app_context():\n        yield app\n\ndef test_user_creation(app_context):\n    user = User(name=\"John\", email=\"john@example.com\")\n    db.session.add(user)\n    db.session.commit()\n\n    retrieved_user = User.query.filter_by(email=\"john@example.com\").first()\n    assert retrieved_user is not None\n    assert retrieved_user.name == \"John\"\n\ndef test_user_query_performance(app_context):\n    # Create test data\n    users = [User(name=f\"User{i}\", email=f\"user{i}@example.com\")\n             for i in range(1000)]\n    db.session.add_all(users)\n    db.session.commit()\n\n    # Test query performance\n    import time\n    start_time = time.time()\n    result = User.query.filter(User.name.like(\"User%\")).all()\n    end_time = time.time()\n\n    assert len(result) == 1000\n    assert (end_time - start_time) &lt; 1.0  # Should complete in less than 1 second\n</code></pre>"},{"location":"testing/roadmap/#week-12-container-integration-testing","title":"Week 12: Container Integration Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Docker container testing strategies\"</li> <li>[ ] \"Testcontainers library Java Python\"</li> <li>[ ] \"Docker Compose testing environment\"</li> <li>[ ] \"Container health checks testing\"</li> <li>[ ] \"Multi-container integration testing\"</li> <li>[ ] \"Database container testing\"</li> <li>[ ] \"Microservices integration testing\"</li> <li>[ ] \"Container network testing\"</li> </ul> <p>Container Testing Examples:</p> <pre><code># Testcontainers Python example\nfrom testcontainers.postgres import PostgresContainer\nimport psycopg2\n\ndef test_postgres_container():\n    with PostgresContainer(\"postgres:13\") as postgres:\n        connection_url = postgres.get_connection_url()\n        conn = psycopg2.connect(connection_url)\n        cursor = conn.cursor()\n\n        cursor.execute(\"CREATE TABLE users (id SERIAL PRIMARY KEY, name VARCHAR(50))\")\n        cursor.execute(\"INSERT INTO users (name) VALUES ('John')\")\n        cursor.execute(\"SELECT * FROM users\")\n\n        result = cursor.fetchone()\n        assert result[1] == \"John\"\n\n        conn.close()\n</code></pre> <pre><code>// Testcontainers Java example\n@Test\npublic void testRedisContainer() {\n    try (GenericContainer&lt;?&gt; redis = new GenericContainer&lt;&gt;(\"redis:6-alpine\")\n            .withExposedPorts(6379)) {\n\n        redis.start();\n\n        String address = redis.getHost();\n        Integer port = redis.getFirstMappedPort();\n\n        Jedis jedis = new Jedis(address, port);\n        jedis.set(\"key\", \"value\");\n\n        assertEquals(\"value\", jedis.get(\"key\"));\n        jedis.close();\n    }\n}\n</code></pre>"},{"location":"testing/roadmap/#giai-oan-4-static-analysis-code-quality-thang-7-8","title":"\ud83d\udcca GIAI \u0110O\u1ea0N 4: STATIC ANALYSIS &amp; CODE QUALITY (Th\u00e1ng 7-8)","text":""},{"location":"testing/roadmap/#week-13-eslint-cho-javascripttypescript","title":"Week 13: ESLint cho JavaScript/TypeScript","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"ESLint setup configuration tutorial\"</li> <li>[ ] \"ESLint rules and plugins\"</li> <li>[ ] \"ESLint TypeScript integration\"</li> <li>[ ] \"ESLint React Vue.js rules\"</li> <li>[ ] \"ESLint custom rules development\"</li> <li>[ ] \"ESLint CI/CD integration\"</li> <li>[ ] \"ESLint IDE integration VSCode\"</li> <li>[ ] \"ESLint performance optimization\"</li> </ul> <p>ESLint Configuration:</p> <pre><code>// .eslintrc.json\n{\n  \"env\": {\n    \"browser\": true,\n    \"es2021\": true,\n    \"node\": true,\n    \"jest\": true\n  },\n  \"extends\": [\n    \"eslint:recommended\",\n    \"@typescript-eslint/recommended\",\n    \"plugin:react/recommended\",\n    \"plugin:react-hooks/recommended\"\n  ],\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    },\n    \"ecmaVersion\": 12,\n    \"sourceType\": \"module\"\n  },\n  \"plugins\": [\"react\", \"@typescript-eslint\", \"react-hooks\"],\n  \"rules\": {\n    \"indent\": [\"error\", 2],\n    \"quotes\": [\"error\", \"single\"],\n    \"semi\": [\"error\", \"always\"],\n    \"no-unused-vars\": \"error\",\n    \"no-console\": \"warn\",\n    \"react/prop-types\": \"off\",\n    \"@typescript-eslint/explicit-function-return-type\": \"warn\"\n  },\n  \"settings\": {\n    \"react\": {\n      \"version\": \"detect\"\n    }\n  }\n}\n</code></pre> <pre><code># ESLint CLI commands\neslint src/\neslint src/ --fix\neslint src/ --format json --output-file eslint-results.json\neslint src/ --cache --cache-location .eslintcache\n</code></pre>"},{"location":"testing/roadmap/#week-14-sonarqube-quality-analysis","title":"Week 14: SonarQube Quality Analysis","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"SonarQube installation and setup\"</li> <li>[ ] \"SonarQube quality gates configuration\"</li> <li>[ ] \"SonarQube rules and profiles\"</li> <li>[ ] \"SonarQube CI/CD integration\"</li> <li>[ ] \"SonarQube code coverage integration\"</li> <li>[ ] \"SonarQube security hotspots\"</li> <li>[ ] \"SonarQube technical debt measurement\"</li> <li>[ ] \"SonarQube custom rules development\"</li> </ul> <p>SonarQube Configuration:</p> <pre><code># sonar-project.properties\nsonar.projectKey=my-project\nsonar.projectName=My Project\nsonar.projectVersion=1.0\nsonar.sources=src\nsonar.tests=tests\nsonar.language=js\nsonar.sourceEncoding=UTF-8\n\n# Code coverage\nsonar.javascript.lcov.reportPaths=coverage/lcov.info\nsonar.coverage.exclusions=**/*test*/**,**/*spec*/**\n\n# Quality gate conditions\nsonar.qualitygate.wait=true\n</code></pre> <pre><code># SonarScanner commands\nsonar-scanner \\\n  -Dsonar.projectKey=my-project \\\n  -Dsonar.sources=. \\\n  -Dsonar.host.url=http://localhost:9000 \\\n  -Dsonar.login=admin \\\n  -Dsonar.password=admin\n</code></pre>"},{"location":"testing/roadmap/#week-15-multi-language-static-analysis","title":"Week 15: Multi-Language Static Analysis","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"flake8 Python code analysis\"</li> <li>[ ] \"golangci-lint Go static analysis\"</li> <li>[ ] \"Checkstyle Java code analysis\"</li> <li>[ ] \"RuboCop Ruby static analysis\"</li> <li>[ ] \"SwiftLint iOS static analysis\"</li> <li>[ ] \"Multi-language linting strategies\"</li> <li>[ ] \"Static analysis CI/CD integration\"</li> <li>[ ] \"Code quality metrics comparison\"</li> </ul> <p>Multi-Language Examples:</p> <pre><code># Python flake8 configuration (.flake8)\n[flake8]\nmax-line-length = 88\nextend-ignore = E203, E266, E501, W503\nmax-complexity = 10\nselect = B,C,E,F,W,T4\nexclude =\n    .git,\n    __pycache__,\n    .pytest_cache,\n    .venv,\n    venv/,\n    migrations/\n</code></pre> <pre><code># golangci-lint configuration (.golangci.yml)\nrun:\n  timeout: 5m\n\nlinters:\n  enable:\n    - gosec\n    - gocyclo\n    - goconst\n    - goimports\n    - golint\n    - govet\n    - ineffassign\n    - misspell\n    - staticcheck\n\nlinters-settings:\n  gocyclo:\n    min-complexity: 10\n  goconst:\n    min-len: 3\n    min-occurrences: 3\n</code></pre>"},{"location":"testing/roadmap/#week-16-code-quality-automation","title":"Week 16: Code Quality Automation","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"Automated code review tools\"</li> <li>[ ] \"Quality gates CI/CD implementation\"</li> <li>[ ] \"Code quality metrics dashboards\"</li> <li>[ ] \"Technical debt tracking\"</li> <li>[ ] \"Code complexity analysis\"</li> <li>[ ] \"Dependency vulnerability scanning\"</li> <li>[ ] \"License compliance checking\"</li> <li>[ ] \"Code duplication detection\"</li> </ul>"},{"location":"testing/roadmap/#giai-oan-5-security-testing-thang-9-10","title":"\ud83d\udd12 GIAI \u0110O\u1ea0N 5: SECURITY TESTING (Th\u00e1ng 9-10)","text":""},{"location":"testing/roadmap/#week-17-18-owasp-zap-security-testing","title":"Week 17-18: OWASP ZAP Security Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"OWASP ZAP installation tutorial\"</li> <li>[ ] \"OWASP ZAP automated security scanning\"</li> <li>[ ] \"OWASP ZAP API security testing\"</li> <li>[ ] \"OWASP ZAP CI/CD integration\"</li> <li>[ ] \"OWASP ZAP custom rules and scripts\"</li> <li>[ ] \"OWASP ZAP authentication testing\"</li> <li>[ ] \"OWASP ZAP reporting and analysis\"</li> <li>[ ] \"OWASP ZAP vs other security tools\"</li> </ul> <p>OWASP ZAP Examples:</p> <pre><code># ZAP CLI commands\nzap-baseline.py -t http://example.com\nzap-full-scan.py -t http://example.com -r zap-report.html\nzap-api-scan.py -t http://example.com/openapi.json -f openapi\n\n# ZAP with authentication\nzap-baseline.py -t http://example.com \\\n  -z \"-configfile /path/to/config.conf\" \\\n  -r zap-report.html \\\n  -J zap-report.json\n</code></pre> <pre><code># ZAP Python API\nfrom zapv2 import ZAPv2\n\nzap = ZAPv2(proxies={'http': 'http://127.0.0.1:8080',\n                     'https': 'http://127.0.0.1:8080'})\n\n# Spider the target\ntarget = 'http://example.com'\nscanid = zap.spider.scan(target)\n\n# Wait for spider to complete\nwhile int(zap.spider.status(scanid)) &lt; 100:\n    time.sleep(1)\n\n# Run active scan\nscanid = zap.ascan.scan(target)\nwhile int(zap.ascan.status(scanid)) &lt; 100:\n    time.sleep(5)\n\n# Get results\nalerts = zap.core.alerts()\nfor alert in alerts:\n    print(f\"Alert: {alert['alert']}, Risk: {alert['risk']}\")\n</code></pre>"},{"location":"testing/roadmap/#week-19-20-application-security-testing","title":"Week 19-20: Application Security Testing","text":"<p>Search Keywords \u0111\u1ec3 h\u1ecdc:</p> <ul> <li>[ ] \"SAST static application security testing\"</li> <li>[ ] \"DAST dynamic application security testing\"</li> <li>[ ] \"Container security scanning Trivy Snyk\"</li> <li>[ ] \"Dependency vulnerability scanning\"</li> <li>[ ] \"API security testing best practices\"</li> <li>[ ] \"SQL injection testing automation\"</li> <li>[ ] \"XSS cross-site scripting testing\"</li> <li>[ ] \"Authentication and authorization testing\"</li> </ul> <p>Security Testing Examples:</p> <pre><code># Trivy container scanning\ntrivy image nginx:latest\ntrivy fs --security-checks vuln,config .\ntrivy repo https://github.com/example/repo\n\n# Snyk vulnerability scanning\nsnyk test\nsnyk monitor\nsnyk test --docker nginx:latest\nsnyk iac test terraform/\n\n# OWASP Dependency Check\ndependency-check.sh --project \"My Project\" --scan ./src --format ALL\n</code></pre> <pre><code># GitHub Actions security scanning workflow\nname: Security Scan\non: [push, pull_request]\n\njobs:\n  security:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Run Trivy vulnerability scanner\n        uses: aquasecurity/trivy-action@master\n        with:\n          scan-type: \"fs\"\n          scan-ref: \".\"\n          format: \"sarif\"\n          output: \"trivy-results.sarif\"\n\n      - name: Upload Trivy scan results\n        uses: github/codeql-action/upload-sarif@v2\n        with:\n          sarif_file: \"trivy-results.sarif\"\n\n      - name: Run OWASP ZAP Baseline Scan\n        uses: zaproxy/action-baseline@v0.7.0\n        with:\n          target: \"http://testphp.vulnweb.com/\"\n</code></pre>"},{"location":"testing/roadmap/#hands-on-projects","title":"\ud83d\udcda HANDS-ON PROJECTS","text":""},{"location":"testing/roadmap/#unit-testing-projects","title":"\ud83e\uddea Unit Testing Projects","text":"<ol> <li> <p>Test-Driven Development Project</p> </li> <li> <p>Build calculator with TDD approach</p> </li> <li>Complete test coverage</li> <li>Multiple testing frameworks</li> <li> <p>Search: \"TDD calculator project tutorial\"</p> </li> <li> <p>Microservices Testing Suite</p> </li> <li> <p>Unit tests for each service</p> </li> <li>Mock external dependencies</li> <li>Performance benchmarks</li> <li> <p>Search: \"microservices unit testing patterns\"</p> </li> <li> <p>Legacy Code Testing</p> </li> <li>Add tests to existing codebase</li> <li>Refactoring with test coverage</li> <li>Characterization testing</li> <li>Search: \"legacy code testing strategies\"</li> </ol>"},{"location":"testing/roadmap/#integration-testing-projects","title":"\ud83d\udd17 Integration Testing Projects","text":"<ol> <li> <p>E2E Testing Framework</p> </li> <li> <p>Complete user journey testing</p> </li> <li>Cross-browser testing</li> <li>Mobile responsive testing</li> <li> <p>Search: \"e2e testing framework setup\"</p> </li> <li> <p>API Testing Suite</p> </li> <li> <p>REST API comprehensive testing</p> </li> <li>GraphQL API testing</li> <li>Performance and load testing</li> <li> <p>Search: \"API testing automation framework\"</p> </li> <li> <p>Database Integration Testing</p> </li> <li>Multi-database testing</li> <li>Data migration testing</li> <li>Performance optimization</li> <li>Search: \"database integration testing patterns\"</li> </ol>"},{"location":"testing/roadmap/#quality-analysis-projects","title":"\ud83d\udcca Quality Analysis Projects","text":"<ol> <li> <p>Code Quality Dashboard</p> </li> <li> <p>SonarQube integration</p> </li> <li>Quality metrics tracking</li> <li>Technical debt monitoring</li> <li> <p>Search: \"code quality dashboard setup\"</p> </li> <li> <p>Multi-Language Linting</p> </li> <li>Consistent code style</li> <li>Custom rule development</li> <li>CI/CD integration</li> <li>Search: \"multi-language code linting setup\"</li> </ol>"},{"location":"testing/roadmap/#security-testing-projects","title":"\ud83d\udd12 Security Testing Projects","text":"<ol> <li> <p>Security Testing Pipeline</p> </li> <li> <p>SAST and DAST integration</p> </li> <li>Container security scanning</li> <li>Vulnerability management</li> <li> <p>Search: \"DevSecOps security pipeline\"</p> </li> <li> <p>API Security Testing</p> </li> <li>Authentication testing</li> <li>Authorization testing</li> <li>Input validation testing</li> <li>Search: \"API security testing automation\"</li> </ol>"},{"location":"testing/roadmap/#skill-mastery-checklist","title":"\ud83d\udccb SKILL MASTERY CHECKLIST","text":""},{"location":"testing/roadmap/#unit-testing-expertise","title":"Unit Testing Expertise","text":"<ul> <li>[ ] Write comprehensive unit tests</li> <li>[ ] Implement effective mocking strategies</li> <li>[ ] Achieve optimal code coverage</li> <li>[ ] Debug and troubleshoot tests</li> <li>[ ] Optimize test performance</li> <li>[ ] Mentor team on testing practices</li> </ul>"},{"location":"testing/roadmap/#integration-testing-skills","title":"Integration Testing Skills","text":"<ul> <li>[ ] Design integration test strategies</li> <li>[ ] Implement E2E testing frameworks</li> <li>[ ] Configure test environments</li> <li>[ ] Handle test data management</li> <li>[ ] Parallel test execution</li> <li>[ ] Cross-browser and mobile testing</li> </ul>"},{"location":"testing/roadmap/#quality-analysis-mastery","title":"Quality Analysis Mastery","text":"<ul> <li>[ ] Configure static analysis tools</li> <li>[ ] Create custom linting rules</li> <li>[ ] Implement quality gates</li> <li>[ ] Monitor technical debt</li> <li>[ ] Generate quality reports</li> <li>[ ] Optimize analysis performance</li> </ul>"},{"location":"testing/roadmap/#security-testing-skills","title":"Security Testing Skills","text":"<ul> <li>[ ] Implement security testing pipelines</li> <li>[ ] Configure vulnerability scanning</li> <li>[ ] Analyze security reports</li> <li>[ ] Remediate security issues</li> <li>[ ] Create security test cases</li> <li>[ ] Monitor security metrics</li> </ul>"},{"location":"testing/roadmap/#certifications-resources","title":"\ud83c\udf93 CERTIFICATIONS &amp; RESOURCES","text":""},{"location":"testing/roadmap/#testing-certifications","title":"Testing Certifications","text":"<ul> <li>[ ] ISTQB Foundation Level</li> <li>[ ] ISTQB Test Automation Engineer</li> <li>[ ] Certified Secure Software Lifecycle Professional (CSSLP)</li> <li>[ ] AWS Certified DevOps Engineer</li> </ul>"},{"location":"testing/roadmap/#essential-books","title":"Essential Books","text":"<ul> <li>\"Test Driven Development: By Example\" - Kent Beck</li> <li>\"Growing Object-Oriented Software, Guided by Tests\" - Freeman &amp; Pryce</li> <li>\"The Art of Software Testing\" - Glenford Myers</li> <li>\"Continuous Delivery\" - Jez Humble</li> </ul>"},{"location":"testing/roadmap/#online-learning","title":"Online Learning","text":"<ul> <li>\"JavaScript Testing Introduction\" - Kent C. Dodds</li> <li>\"Test Automation University\" - Applitools</li> <li>\"Cypress Testing Framework\" - Udemy</li> <li>\"Security Testing\" - OWASP Learning</li> </ul>"},{"location":"testing/roadmap/#daily-practice-routine","title":"\u2705 DAILY PRACTICE ROUTINE","text":""},{"location":"testing/roadmap/#morning-testing-20-mins","title":"Morning Testing (20 mins)","text":"<ul> <li>[ ] Review test results from overnight builds</li> <li>[ ] Check code coverage reports</li> <li>[ ] Validate quality gate status</li> <li>[ ] Plan testing tasks for the day</li> </ul>"},{"location":"testing/roadmap/#active-testing-work-60-90-mins","title":"Active Testing Work (60-90 mins)","text":"<ul> <li>[ ] Write and refactor tests</li> <li>[ ] Analyze failing tests</li> <li>[ ] Improve test automation</li> <li>[ ] Review security scan results</li> </ul>"},{"location":"testing/roadmap/#evening-review-15-mins","title":"Evening Review (15 mins)","text":"<ul> <li>[ ] Document testing findings</li> <li>[ ] Update test documentation</li> <li>[ ] Plan improvements</li> <li>[ ] Review testing metrics</li> </ul>"},{"location":"testing/roadmap/#mastery-milestones","title":"\ud83c\udfaf MASTERY MILESTONES","text":""},{"location":"testing/roadmap/#month-2-testing-foundation","title":"Month 2: Testing Foundation","text":"<ul> <li>[ ] Understand testing principles</li> <li>[ ] Basic unit test writing</li> <li>[ ] Simple integration tests</li> <li>[ ] Code quality awareness</li> </ul>"},{"location":"testing/roadmap/#month-4-intermediate-testing","title":"Month 4: Intermediate Testing","text":"<ul> <li>[ ] Advanced testing patterns</li> <li>[ ] Test automation frameworks</li> <li>[ ] Quality analysis tools</li> <li>[ ] Basic security testing</li> </ul>"},{"location":"testing/roadmap/#month-6-advanced-testing","title":"Month 6: Advanced Testing","text":"<ul> <li>[ ] Complex testing scenarios</li> <li>[ ] Performance optimization</li> <li>[ ] Custom tooling development</li> <li>[ ] Security testing expertise</li> </ul>"},{"location":"testing/roadmap/#month-8-testing-leadership","title":"Month 8: Testing Leadership","text":"<ul> <li>[ ] Testing strategy design</li> <li>[ ] Team mentoring</li> <li>[ ] Tool evaluation</li> <li>[ ] Process improvement</li> </ul>"},{"location":"testing/roadmap/#month-10-testing-mastery","title":"Month 10: Testing Mastery","text":"<ul> <li>[ ] Industry best practices</li> <li>[ ] Innovation and research</li> <li>[ ] Thought leadership</li> <li>[ ] Community contributions</li> </ul> <p>Testing Philosophy: \"Quality is not an act, it is a habit. Test early, test often, test everything!\"</p>"},{"location":"testing/roadmap/#quick-start-action-plan","title":"\ud83d\ude80 Quick Start Action Plan","text":""},{"location":"testing/roadmap/#day-1-environment-setup","title":"Day 1: Environment Setup","text":"<ul> <li>[ ] Install testing frameworks and tools</li> <li>[ ] Set up basic test project</li> <li>[ ] Configure CI/CD pipeline</li> <li>[ ] Run first automated tests</li> </ul>"},{"location":"testing/roadmap/#week-1-goals","title":"Week 1 Goals","text":"<ul> <li>[ ] Complete basic testing tutorials</li> <li>[ ] Write first comprehensive test suite</li> <li>[ ] Set up quality analysis tools</li> <li>[ ] Implement basic security scanning</li> </ul>"},{"location":"testing/roadmap/#month-1-targets","title":"Month 1 Targets","text":"<ul> <li>[ ] Production-ready testing pipeline</li> <li>[ ] Comprehensive test coverage</li> <li>[ ] Quality gates implementation</li> <li>[ ] Security testing integration</li> </ul> <p>Remember: Good testing is not about finding bugs, it's about preventing them and ensuring quality throughout the development lifecycle!</p>"}]}